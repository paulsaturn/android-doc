<?xml version="1.0" ?><cherrytree><node name="Configure，Makefile.am, Makefile.in, Makefile文件之间关系" prog_lang="custom-colors" readonly="False" tags="" unique_id="84"><rich_text>    
</rich_text><rich_text scale="h3">                        </rich_text><rich_text>
    </rich_text><rich_text justification="left"></rich_text><rich_text>


 
</rich_text><rich_text scale="h3" weight="heavy">1.autoscan (autoconf): </rich_text><rich_text>
   扫描源代码以搜寻普通的可移植性问题，比如检查编译器，库，头文件等，生成文件configure.scan,它是configure.ac的一个雏形。
    your source files --&gt; [autoscan*] --&gt; [configure.scan] --&gt; configure.ac

</rich_text><rich_text scale="h3" weight="heavy">2.aclocal (automake):</rich_text><rich_text>
  根据已经安装的宏，用户定义宏和acinclude.m4文件中的宏将configure.ac文件所需要的宏集中定义到文件 aclocal.m4中。aclocal是一个perl 脚本程序，它的定义是：“aclocal - create aclocal.m4 by scanning configure.ac”
user input files                       optional input                     process                 output files
================   ==============     =======          ============

                                                        acinclude.m4 -----------------.
                                                                                                   V
                                                                                             .----------.
            configure.ac ----------------------------------------------&gt;|aclocal|
                                                    {user macro files} ------&gt;|           |--------------&gt; aclocal.m4
                                                                                              .--------.
</rich_text><rich_text scale="h3" weight="heavy">3.autoheader(autoconf): </rich_text><rich_text>
  根据configure.ac中的某些宏，比如cpp宏定义，运行m4，声称config.h.in
user input files                        optional input                     process                 output files
================    ==============     =======          ============

                                                aclocal.m4 ---------------------------.
                                                                                                    |
                                                                                                   V
                                                                                          .---------------.
configure.ac -----------------------------------------------------&gt;|autoheader|----------&gt; autoconfig.h.in
                                                                                          .--------------.

</rich_text><rich_text scale="h3" weight="heavy">4.automake:</rich_text><rich_text scale="h3">  </rich_text><rich_text>
  automake将Makefile.am中定义的结构建立Makefile.in，然后configure脚本将生成的Makefile.in文件转换   为Makefile。如果在configure.ac中定义了一些特殊的宏，比如AC_PROG_LIBTOOL，它会调用libtoolize，否则它  会自己产生config.guess和config.sub
user input files                        optional input                  processes                   output files
================   ==============   =========          ============
                                                                                         .---------------.
                                                                                          |                 |-------------&gt; COPYING
                                                                                          |                 |-------------&gt; INSTALL
                                                                                          |                 |-------------&gt; install-sh
                                                                                          |                 |-------------&gt; missing
                                                                                          |automake|-------------&gt; mkinstalldirs
configure.ac -----------------------------------------------------&gt;|                 |
Makefile.am  ----------------------------------------------------&gt;|                 |-------------&gt; Makefile.in
                                                                                          |                 |-------------&gt; stamp-h.in
                                                                                    .---+                 |-------------&gt; config.guess
                                                                                    |     |                 |--------------&gt; config.sub
                                                                                    |     .------+------.
                                                                                    |               |--------------------&gt; config.guess
                                                                                    |libtoolize|--------------------&gt; config.sub
                                                                                    |               |--------------------&gt; ltmain.sh
                                                                                    |               |--------------------&gt; ltconfig
                                                                                    .------------.

</rich_text><rich_text scale="h3" weight="heavy">5.autoconf:</rich_text><rich_text scale="h3"> </rich_text><rich_text>
  将configure.ac中的宏展开，生成configure脚本。这个过程可能要用到aclocal.m4中定义的宏。
user input files                        optional input                  processes                   output files
================   ==============   =========          ============
aclocal.m4, autoconfig.h.in -------------------------------------------.
                                                                                                 V
                                                                                           .-----------.
configure.ac ------------------------------------------------------&gt;|autoconf|------------------&gt; configure 

</rich_text><rich_text scale="h3" weight="heavy">6. ./configure的过程</rich_text><rich_text>
                                                                                                .--------------------------&gt; [config.cache]
     configure* ----------------------------------------------------------+-------------------------&gt; config.log
                                                                                                |
              [config.h.in]---.                                                          v                            .--&gt; [autoconfig.h]
                                    +----------------------------------------&gt; config.status* -------+                   
              Makefile.in ---'                                                                                        `--&gt; Makefile 

</rich_text><rich_text scale="h3" weight="heavy">7. make过程</rich_text><rich_text scale="h3"> </rich_text><rich_text>
[autoconfig.h] -.
                            +--&gt; make* ---&gt;  程序
        Makefile   ---' 
        .---------,
                                                config.site -----------------------&gt;|               |
                                                config.cache --------------------&gt;|configure|  ------------&gt; config.cache
                                                                                                 |              +-,
                                                                                                 `-+-------'    |
                                                                                                     |               |-----------&gt; config.status
                                               config.h.in ---------------------------&gt;|config-   |-----------&gt; config.h
                                               Makefile.in --------------------------&gt;|  .status |------------&gt; Makefile
                                                                                                     |              |------------&gt; stamp-h
                                                                                                     |              +--,
                                                                                                  .-+              |   |
                                                                                                  | `------+----'   |
                                              ltmain.sh --------------------------&gt;|ltconfig|----------------&gt; libtool
                                                                                                 |             |         |
                                                                                                 `-+------'          |
                                                                                                     |config.guess|
                                                                                                     | config.sub  |
                                                                                                     `---------------' 
.--------,

                                             Makefile ---------------------------&gt;|              |
                                             config.h ----------------------------&gt;|  make   |
{project sources} ---------------------------------------------------&gt;|              |---------------&gt; {project targets}
                                                                                             .-+            +--,
                                                                                             |  `-----------'   |
                                                                                             |     libtool      |
                                                                                             |     missing    |
                                                                                             |    install-sh  |
                                                                                             |mkinstalldirs|
                                                                                             `-----------------'

</rich_text><rich_text scale="h2" weight="heavy">实例：</rich_text><rich_text>
在/hello/目录下创建一个hello.c文件，并编译运行它：
#cd /hello/
(1) 编写源文件hello.c：
#include&lt;stdio.h&gt; 

int main(int argc, char** argv)
{
    printf(&quot;Hello, GNU!n&quot;);
    return 0;
}
[litao@vm0000131 hello]$ ll
total 4
-rw-rw-r-- 1 litao litao 68 Aug 12 12:02 hello.c

</rich_text><rich_text scale="h3" weight="heavy">一、autoscan</rich_text><rich_text>
[litao@vm0000131 hello]$ autoscan
autom4te: configure.ac: no such file or directory
autoscan: /usr/bin/autom4te failed with exit status: 1
[litao@vm0000131 hello]$ ll
total 8
-rw-rw-r-- 1 litao litao   0 Aug 12 12:03 autoscan.log
-rw-rw-r-- 1 litao litao 457 Aug 12 12:03 configure.scan
-rw-rw-r-- 1 litao litao  68 Aug 12 12:02 hello.c
已经生成了configure.scan，autoscan.log文件
将configure.scan 修改为 configure.in，最后修改的内容如下：
[litao@vm0000131 hello]$ mv configure.scan configure.in    
[litao@vm0000131 hello]$ vim configure.in 

#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ(2.59)
AC_INIT(FULL-PACKAGE-NAME, VERSION, BUG-REPORT-ADDRESS)
AC_CONFIG_SRCDIR([hello.c])
#AC_CONFIG_HEADER([config.h])
AM_INIT_AUTOMAKE(hello, 1.0)
# Checks for programs.
AC_PROG_CC

# Checks for libraries.

# Checks for header files.

# Checks for typedefs, structures, and compiler characteristics.

# Checks for library functions.
AC_OUTPUT(Makefile)

</rich_text><rich_text scale="h3" weight="heavy">二、acloacl</rich_text><rich_text>
[litao@vm0000131 hello]$ aclocal 

生成 aclocal.m4 和 autom4te.cache (生成aclocal.m4的过程中涉及到configure.in)
[litao@vm0000131 hello]$ ll
total 44
-rw-rw-r-- 1 litao litao 31120 Aug 12 12:08 aclocal.m4
drwxr-xr-x 2 litao litao  4096 Aug 12 12:08 autom4te.cache
-rw-rw-r-- 1 litao litao     0 Aug 12 12:03 autoscan.log
-rw-rw-r-- 1 litao litao   496 Aug 12 12:08 configure.in
-rw-rw-r-- 1 litao litao    68 Aug 12 12:02 hello.c

</rich_text><rich_text scale="h3" weight="heavy">三、antoconf</rich_text><rich_text>
[litao@vm0000131 hello]$ autoconf
生成 configure (根据 configure.in, 和 aclocal.m4)
[litao@vm0000131 hello]$ ll
total 168
-rw-rw-r-- 1 litao litao  31120 Aug 12 12:08 aclocal.m4
drwxr-xr-x 2 litao litao   4096 Aug 12 12:11 autom4te.cache
-rw-rw-r-- 1 litao litao      0 Aug 12 12:03 autoscan.log
-rwxrwxr-x 1 litao litao 122297 Aug 12 12:11 configure
-rw-rw-r-- 1 litao litao    496 Aug 12 12:08 configure.in
-rw-rw-r-- 1 litao litao     68 Aug 12 12:02 hello.c

</rich_text><rich_text scale="h3" weight="heavy">四、编写Makefile.am：</rich_text><rich_text>
AUTOMAKE_OPTIONS= foreign
bin_PROGRAMS= hello
hello_SOURCES= hello.c

</rich_text><rich_text scale="h3" weight="heavy">五、automake</rich_text><rich_text>
生成 Makefile.in， depcomp， install-sh， 和 missing (根据 Makefile.am, 和 aclocal.m4)
[litao@vm0000131 hello]$ automake
configure.in: required file `./install-sh' not found
configure.in: required file `./missing' not found
Makefile.am: required file `./depcomp' not found
[litao@vm0000131 hello]$ automake --add-missing
configure.in: installing `./install-sh'
configure.in: installing `./missing'
Makefile.am: installing `./depcomp'
[litao@vm0000131 hello]$ ll
total 192
-rw-rw-r-- 1 litao litao  31120 Aug 12 12:08 aclocal.m4
drwxr-xr-x 2 litao litao   4096 Aug 12 12:14 autom4te.cache
-rw-rw-r-- 1 litao litao      0 Aug 12 12:03 autoscan.log
-rwxrwxr-x 1 litao litao 122297 Aug 12 12:11 configure
-rw-rw-r-- 1 litao litao    496 Aug 12 12:08 configure.in
lrwxrwxrwx 1 litao litao     31 Aug 12 12:16 depcomp -&gt; /usr/share/automake-1.9/depcomp
-rw-rw-r-- 1 litao litao     68 Aug 12 12:02 hello.c
lrwxrwxrwx 1 litao litao     34 Aug 12 12:16 install-sh -&gt; /usr/share/automake-1.9/install-sh
-rw-rw-r-- 1 litao litao     69 Aug 12 12:15 Makefile.am
-rw-rw-r-- 1 litao litao  16561 Aug 12 12:16 Makefile.in
lrwxrwxrwx 1 litao litao     31 Aug 12 12:16 missing -&gt; /usr/share/automake-1.9/missing

</rich_text><rich_text scale="h3" weight="heavy">六、configure</rich_text><rich_text>
生成 Makefile， config.log， 和 config.status
</rich_text><encoded_png char_offset="34"></encoded_png></node><node name="RCU机制详解 " prog_lang="custom-colors" readonly="False" tags="" unique_id="96"><rich_text scale="h2" weight="heavy">一、 引言</rich_text><rich_text>
  众所周知，为了保护共享数据,需要一些同步机制,如自旋锁 (spinlock)，读写锁(rwlock)，它们使用起来非常简单,而且是一种很有效的同步机制，在UNIX系统和Linux系统中得到了广泛的使 用。但是随着计算机硬件的快速发展，获得这种锁的开销相对于CPU的速度在成倍地增加，原因很简单，CPU的速度与访问内存的速度差距越来越大，而这种锁 使用了原子操作指令，它需要原子地访问内存，也就说获得锁的开销与访存速度相关，另外在大部分非x86架构上获取锁使用了内存栅(Memory  Barrier)，这会导致处理器流水线停滞或刷新，因此它的开销相对于CPU速度而言就越来越大。表1数据证明了这一点。
  </rich_text><rich_text justification="left"></rich_text><rich_text>
  表1是在700MHz的奔腾III机器上的基本操作的开销，在该机器上一个时钟周期能够执行两条整数指令。在1.8GHz的奔腾4机器上, 原子加1指令的开销要比700MHz的奔腾III机器慢75纳秒(ns)，尽管CPU速度快两倍多。
  这种锁机制的另一个问题在于其可扩展性，在多处理器系统上，可扩展性非常重要，否则根本无法发挥其性能。图1表明了Linux上各种锁的扩展性。
  </rich_text><rich_text justification="left"></rich_text><rich_text weight="heavy">图 1 Linux的4种锁机制的扩展性</rich_text><rich_text>     

  注：refcnt表示自旋锁与引用记数一起使用。
  读写锁rwlock在两个CPU的情况下性能反倒比一个CPU的差，在四个CPU的情况下，refcnt的性能要高于rwlock，refcnt大约是理论性能的45%，而rwlock是理论性能的39%, 自旋缩spinlock的性能明显好于refcnt和rwlock，但它也只达到了理性性能的57%，brlock（Big Reader Lock）性能可以线性扩展。brlock是由Redhat的Ingo  Molnar实现的一个高性能的rwlock，它适用于读特多而写特少的情况，读者获得brlock的开销很低，但写者获得锁的开销非常大，而且它只预定义了几个锁，用户无法随便定义并使用这种锁，它也需要为每个CPU定义一个锁状态数组，因此这种锁并没有被作为rwlock的替代方案广泛使用，只是在一 些特别的地方使用到。
  正是在这种背景下，一个高性能的锁机制RCU呼之欲出，它克服了以上锁的缺点，具有很好的扩展性，但是这种锁机制的使用范围比较窄，它只适用于读多写少的情况，如网络路由表的查询更新、设备状态表的维护、数据结构的延迟释放以及多径I/O设备的维护等。
  RCU并不是新的锁机制，它只是对Linux内核而言是新的。早在二十世纪八十年代就有了这种机制，而且在生产系统中使用了这种机制，但这种早期的实现并不太好，在二十世纪九十年代出现了一个比较高效的实现，而在linux中是在开发内核2.5.43中引入该技术的并正式包含在2.6内核中。
              
</rich_text><rich_text scale="h2" weight="heavy">二、RCU的原理</rich_text><rich_text>
    RCU(Read-Copy   Update)，顾名思义就是读-拷贝修改，它是基于其原理命名的。对于被RCU保护的共享数据结构，读者不需要获得任何锁就可以访问它，但写者在访问它 时首先拷贝一个副本，然后对副本进行修改，最后使用一个回调（callback）机制在适当的时机把指向原来数据的指针重新指向新的被修改的数据。这个时 机就是所有引用该数据的CPU都退出对共享数据的操作。
    因此RCU实际上是一种改进的rwlock，读者几乎没有什么同步开销，它不需 要锁，不使用原子指令，而且在除alpha的所有架构上也不需要内存栅（Memory  Barrier），因此不会导致锁竞争，内存延迟以及流水线停滞。不需要锁也使得使用更容易，因为死锁问题就不需要考虑了。写者的同步开销比较大，它需要 延迟数据结构的释放，复制被修改的数据结构，它也必须使用某种锁机制同步并行的其它写者的修改操作。读者必须提供一个信号给写者以便写者能够确定数据可以 被安全地释放或修改的时机。有一个专门的垃圾收集器来探测读者的信号，一旦所有的读者都已经发送信号告知它们都不在使用被RCU保护的数据结构，垃圾收集 器就调用回调函数完成最后的数据释放或修改操作。  RCU与rwlock的不同之处是：它既允许多个读者同时访问被保护的数据，又允许多个读者和多个写者同时访问被保护的数据（注意：是否可以有多个写者并 行访问取决于写者之间使用的同步机制），读者没有任何同步开销，而写者的同步开销则取决于使用的写者间同步机制。但RCU不能替代rwlock，因为如果 写比较多时，对读者的性能提高不能弥补写者导致的损失。
    读者在访问被RCU保护的共享数据期间不能被阻塞，这是RCU机制得以实现的一 个基本前提，也就说当读者在引用被RCU保护的共享数据期间，读者所在的CPU不能发生上下文切换，spinlock和rwlock都需要这样的前提。写 者在访问被RCU保护的共享数据时不需要和读者竞争任何锁，只有在有多于一个写者的情况下需要获得某种锁以与其他写者同步。写者修改数据前首先拷贝一个被 修改元素的副本，然后在副本上进行修改，修改完毕后它向垃圾回收器注册一个回调函数以便在适当的时机执行真正的修改操作。等待适当时机的这一时期称为 grace period，而CPU发生了上下文切换称为经历一个quiescent state，grace  period就是所有CPU都经历一次quiescent state所需要的等待的时间。垃圾收集器就是在grace  period之后调用写者注册的回调函数来完成真正的数据修改或数据释放操作的。
    以下以链表元素删除为例详细说明这一过程。
    写者要从链表中删除元素 B，它首先遍历该链表得到指向元素 B 的指针，然后修改元素 B 的前一个元素的 next 指针指向元素 B 的 next  指针指向的元素C，修改元素 B 的 next 指针指向的元素 C 的 prep 指针指向元素 B 的 prep指针指向的元素  A,在这期间可能有读者访问该链表，修改指针指向的操作是原子的，所以不需要同步，而元素 B 的指针并没有去修改，因为读者可能正在使用 B  元素来得到下一个或前一个元素。写者完成这些操作后注册一个回调函数以便在 grace period 之后删除元素  B，然后就认为已经完成删除操作。垃圾收集器在检测到所有的CPU不在引用该链表后，即所有的 CPU 已经经历了 quiescent  state,grace period 已经过去后，就调用刚才写者注册的回调函数删除了元素 B。
  </rich_text><rich_text weight="heavy">图 2 使用 RCU 进行链表删除操作</rich_text><rich_text>     
</rich_text><rich_text justification="left"></rich_text><rich_text>
       

</rich_text><rich_text scale="h2" weight="heavy">三、RCU 实现机制</rich_text><rich_text>
    按照第二节所讲原理，对于读者，RCU 仅需要抢占失效，因此获得读锁和释放读锁分别定义为：
#define rcu_read_lock()         preempt_disable()
#define rcu_read_unlock()       preempt_enable()
它们有一个变种：
#define rcu_read_lock_bh()      local_bh_disable()
#define rcu_read_unlock_bh()    local_bh_enable()
    这个变种只在修改是通过 call_rcu_bh 进行的情况下使用，因为 call_rcu_bh将把 softirq 的执行完毕也认为是一个  quiescent state，因此如果修改是通过 call_rcu_bh 进行的，在进程上下文的读端临界区必须使用这一变种。
    每一个CPU维护两个数据结构rcu_data,rcu_bh_data，它们用于保存回调函数，函数call_rcu和函数call_rcu_bh用户注册回调函数，前者把回调函数注册到rcu_data，而后者则把回调函数注册到rcu_bh_data，在每一个数据结构上，回调函数被组成一个链表，先注册的排 在前头，后注册的排在末尾。
当在CPU上发生进程切换时，函数rcu_qsctr_inc将被调用以标记该CPU已经经历了一个quiescent state。该函数也会被时钟中断触发调用。
时钟中断触发垃圾收集器运行，它会检查：
  1. 否在该CPU上有需要处理的回调函数并且已经经过一个grace period； 
  2. 否没有需要处理的回调函数但有注册的回调函数； 
  3. 否该CPU已经完成回调函数的处理； 
  4. 否该CPU正在等待一个quiescent state的到来； 
如果以上四个条件只要有一个满足，它就调用函数rcu_check_callbacks。
函数rcu_check_callbacks首先检查该CPU是否经历了一个quiescent state，如果：
1． 当前进程运行在用户态；    
或
2． 当前进程为idle且当前不处在运行softirq状态，也不处在运行IRQ处理函数的状态；
那么，该CPU已经经历了一个quiescent  state，因此通过调用函数rcu_qsctr_inc标记该CPU的数据结构rcu_data和rcu_bh_data的标记字段  passed_quiesc，以记录该CPU已经经历一个quiescent state。
否则，如果当前不处在运行softirq状态，那么，只标记该CPU的数据结构rcu_bh_data的标记字段passed_quiesc，以记录该CPU已经经历一个quiescent state。注意，该标记只对rcu_bh_data有效。
然后，函数rcu_check_callbacks将调用tasklet_schedule，它将调度为该CPU设置的tasklet rcu_tasklet，每一个CPU都有一个对应的rcu_tasklet。
在时钟中断返回后，rcu_tasklet将在softirq上下文被运行。
rcu_tasklet将运行函数rcu_process_callbacks，函数rcu_process_callbacks可能做以下事情：
1． 开始一个新的grace period；这通过调用函数rcu_start_batch实现。
2． 运行需要处理的回调函数；这通过调用函数rcu_do_batch实现。
3． 检查该CPU是否经历一个quiescent state；这通过函数rcu_check_quiescent_state实现
如果还没有开始grace period，就调用rcu_start_batch开始新的grace  period。调用函数rcu_check_quiescent_state检查该CPU是否经历了一个quiescent  state,如果是并且是最后一个经历quiescent state的CPU，那么就结束grace period，并开始新的grace  period。如果有完成的grace  period，那么就调用rcu_do_batch运行所有需要处理的回调函数。函数rcu_process_callbacks将对该CPU的两个数据 结构rcu_data和rcu_bh_data执行上述操作。

</rich_text><rich_text scale="h2" weight="heavy">四、RCU API</rich_text><rich_text>
</rich_text><rich_text weight="heavy">rcu_read_lock()</rich_text><rich_text>
读者在读取由RCU保护的共享数据时使用该函数标记它进入读端临界区。

</rich_text><rich_text weight="heavy">rcu_read_unlock()</rich_text><rich_text>
该函数与rcu_read_lock配对使用，用以标记读者退出读端临界区。夹在这两个函数之间的代码区称为&quot;读端临界区&quot;(read-side critical section)。读端临界区可以嵌套，如图3，临界区2被嵌套在临界区1内。
</rich_text><rich_text weight="heavy">图 3 嵌套读端临界区示例</rich_text><rich_text>     
</rich_text><rich_text justification="left"></rich_text><rich_text>

</rich_text><rich_text weight="heavy">synchronize_rcu()</rich_text><rich_text>
该函数由RCU写端调用，它将阻塞写者，直到经过grace  period后，即所有的读者已经完成读端临界区，写者才可以继续下一步操作。如果有多个RCU写端调用该函数，他们将在一个grace  period之后全部被唤醒。注意，该函数在2.6.11及以前的2.6内核版本中为synchronize_kernel，只是在2.6.12才更名为   synchronize_rcu,但在2.6.12中也提供了synchronize_kernel和一个新的函数synchronize_sched， 因为以前有很多内核开发者使用synchronize_kernel用于等待所有CPU都退出不可抢占区，而在RCU设计时该函数只是用于等待所有CPU  都退出读端临界区，它可能会随着RCU实现的修改而发生语意变化，因此为了预先防止这种情况发生，在新的修改中增加了专门的用于其它内核用户的  synchronize_sched函数和只用于RCU使用的synchronize_rcu，现在建议非RCU内核代码部分不使用  synchronize_kernel而使用synchronize_sched，RCU代码部分则使用  synchronize_rcu，synchronize_kernel之所以存在是为了保证代码兼容性。

</rich_text><rich_text weight="heavy">synchronize_kernel()</rich_text><rich_text>
其他非RCU的内核代码使用该函数来等待所有CPU处在可抢占状态，目前功能等同于synchronize_rcu，但现在已经不建议使用，而使用synchronize_sched。

</rich_text><rich_text weight="heavy">synchronize_sched()</rich_text><rich_text>
该函数用于等待所有CPU都处在可抢占状态，它能保证正在运行的中断处理函数处理完毕，但不能保证正在运行的softirq处理完毕。注 意，synchronize_rcu只保证所有CPU都处理完正在运行的读端临界区。注：在2.6.12内核中，synchronize_kernel和 synchronize_sched都实际使用synchronize_rcu，因此当前它们的功能实际是完全等同的，但是将来将可能有大的变化，因此务 必根据需求选择恰当的函数。

</rich_text><rich_text weight="heavy">void fastcall call_rcu(struct rcu_head *head,
                                void (*func)(struct rcu_head *rcu))
</rich_text><rich_text>struct rcu_head {
        struct rcu_head *next;
        void (*func)(struct rcu_head *head);
};
函数 call_rcu 也由 RCU 写端调用，它不会使写者阻塞，因而可以在中断上下文或 softirq 使用，而  synchronize_rcu、synchronize_kernel 和synchronize_shced 只能在进程上下文使用。该函数将把函数  func 挂接到 RCU回调函数链上，然后立即返回。一旦所有的 CPU  都已经完成端临界区操作，该函数将被调用来释放删除的将绝不在被应用的数据。参数 head 用于记录回调函数 func，一般该结构会作为被 RCU  保护的数据结构的一个字段，以便省去单独为该结构分配内存的操作。需要指出的是，函数 synchronize_rcu  的实现实际上使用函数call_rcu。

</rich_text><rich_text weight="heavy">void fastcall call_rcu_bh(struct rcu_head *head,
                                void (*func)(struct rcu_head *rcu))
</rich_text><rich_text>函数call_ruc_bh功能几乎与call_rcu完全相同，唯一差别就是它把softirq的完成也当作经历一个quiescent state，因此如果写端使用了该函数，在进程上下文的读端必须使用rcu_read_lock_bh。

</rich_text><rich_text weight="heavy">#define rcu_dereference(p)     ({ \
                                typeof(p) _________p1 = p; \
                                smp_read_barrier_depends(); \
                                (_________p1); \
                                })
</rich_text><rich_text>该宏用于在RCU读端临界区获得一个RCU保护的指针，该指针可以在以后安全地引用，内存栅只在alpha架构上才使用。
除了这些API，RCU还增加了链表操作的RCU版本，因为对于RCU，对共享数据的操作必须保证能够被没有使用同步机制的读者看到，所以内存栅是非常必要的。

</rich_text><rich_text weight="heavy">static inline void list_add_rcu(struct list_head *new, struct  list_head *head)</rich_text><rich_text>  
该函数把链表项new插入到RCU保护的链表head的开头。使用内存栅保证了在引用这个新插入的链表项之前，新链表项的链接指针的修改对所有读者是可见 的。

</rich_text><rich_text weight="heavy">static inline void list_add_tail_rcu(struct list_head *new,
                                        struct list_head *head)
</rich_text><rich_text>该函数类似于list_add_rcu，它将把新的链表项new添加到被RCU保护的链表的末尾。

</rich_text><rich_text weight="heavy">static inline void list_del_rcu(struct list_head *entry)</rich_text><rich_text>
该函数从RCU保护的链表中移走指定的链表项entry，并且把entry的prev指针设置为LIST_POISON2，但是并没有把entry的next指针设置为LIST_POISON1，因为该指针可能仍然在被读者用于便利该链表。

</rich_text><rich_text weight="heavy">static inline void list_replace_rcu(struct list_head *old, struct list_head *new)</rich_text><rich_text>
该函数是RCU新添加的函数，并不存在非RCU版本。它使用新的链表项new取代旧的链表项old，内存栅保证在引用新的链表项之前，它的链接指针的修正对所有读者可见。

</rich_text><rich_text weight="heavy">list_for_each_rcu(pos, head)</rich_text><rich_text>
该宏用于遍历由RCU保护的链表head，只要在读端临界区使用该函数，它就可以安全地和其它_rcu链表操作函数（如list_add_rcu）并发运行。

</rich_text><rich_text weight="heavy">list_for_each_safe_rcu(pos, n, head)</rich_text><rich_text>
该宏类似于list_for_each_rcu，但不同之处在于它允许安全地删除当前链表项pos。

</rich_text><rich_text weight="heavy">list_for_each_entry_rcu(pos, head, member)</rich_text><rich_text>
该宏类似于list_for_each_rcu，不同之处在于它用于遍历指定类型的数据结构链表，当前链表项pos为一包含struct list_head结构的特定的数据结构。

</rich_text><rich_text weight="heavy">list_for_each_continue_rcu(pos, head)</rich_text><rich_text>
该宏用于在退出点之后继续遍历由RCU保护的链表head。

</rich_text><rich_text weight="heavy">static inline void hlist_del_rcu(struct hlist_node *n)</rich_text><rich_text>
它从由RCU保护的哈希链表中移走链表项n，并设置n的ppre指针为LIST_POISON2，但并没有设置next为LIST_POISON1,因为该指针可能被读者使用用于遍利链表。

</rich_text><rich_text weight="heavy">static inline void hlist_add_head_rcu(struct hlist_node *n,
                                        struct hlist_head *h)</rich_text><rich_text>
该函数用于把链表项n插入到被RCU保护的哈希链表的开头，但同时允许读者对该哈希链表的遍历。内存栅确保在引用新链表项之前，它的指针修正对所有读者可见。

</rich_text><rich_text weight="heavy">hlist_for_each_rcu(pos, head)</rich_text><rich_text>
该宏用于遍历由RCU保护的哈希链表head，只要在读端临界区使用该函数，它就可以安全地和其它_rcu哈希链表操作函数（如hlist_add_rcu）并发运行。

</rich_text><rich_text weight="heavy">hlist_for_each_entry_rcu(tpos, pos, head, member)</rich_text><rich_text>
类似于hlist_for_each_rcu，不同之处在于它用于遍历指定类型的数据结构哈希链表，当前链表项pos为一包含struct list_head结构的特定的数据结构。
     


</rich_text><encoded_png char_offset="311">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</encoded_png><encoded_png char_offset="502"></encoded_png><encoded_png char_offset="2737"></encoded_png><encoded_png char_offset="4853">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</encoded_png></node><node name="request_firmware " prog_lang="custom-colors" readonly="False" tags="" unique_id="42"><rich_text scale="h2">14.8. 处理固件</rich_text><rich_text>
作为一个驱动作者, 你可能发现你面对一个设备必须在它能支持工作前下载固件到它里面. 硬件市场的许多地方的竞争是如此得强烈,  以至于甚至一点用作设备控制固件的 EEPROM 的成本制造商都不愿意花费. 因此固件发布在随硬件一起的一张 CD 上,  并且操作系统负责传送固件到设备自身.
你可能想解决固件问题使用这样的一个声明:
static char my_firmware[] = { 0x34, 0x78, 0xa4, ... }; 

但是, 这个方法几乎肯定是一个错误. 将固件编码到一个驱动扩大了驱动的代码, 使固件升级困难, 并且非常可能产生许可问题.  供应商不可能已经发布固件映象在 GPL 之下, 因此和 GPL-许可的代码混合常常是一个错误. 为此,  包含内嵌固件的驱动不可能被接受到主流内核或者被 Linux 发布者包含.

</rich_text><rich_text scale="h3">  14.8.1. 内核固件接口</rich_text><rich_text>
正确的方法是当你需要它时从用户空间获取它. 但是, 请抵制试图从内核空间直接打开包含固件的文件的诱惑; 那是一个易出错的操作, 并且它安放了策略(以一个文件名的形式)到内核. 相反, 正确的方法时使用固件接口, 它就是为此而创建的:
#include &lt;linux/firmware.h&gt;

int request_firmware(const struct firmware **fw, char *name, 
 struct device *device); 
调用 request_firmware 要求用户空间定位并提供一个固件映象给内核; 我们一会儿看它如何工作的细节. name  应当标识需要的固件; 正常的用法是供应者提供的固件文件名. 某些象 my_firmware.bin 的名子是典型的. 如果固件被成功加载,  返回值是 0(负责常用的错误码被返回), 并且 fw 参数指向一个这些结构:
struct firmware {
 size_t size;
 const u8 *data;
 struct page **pages;
}; 

那个结构包含实际的固件, 它现在可被下载到设备中. 小心这个固件是来自用户空间的未被检查的数据;  你应当在发送它到硬件之前运用任何并且所有的你能够想到的检查来说服你自己它是正确的固件映象. 设备固件常常包含标识串, 校验和, 等等;  在信任数据前全部检查它们.
在你已经发送固件到设备前, 你应当释放 in-kernel 结构, 使用:
void release_firmware(struct firmware *fw); 

因为 request_firmware 请求用户空间来帮忙, 它保证在返回前睡眠. 如果你的驱动当它必须请求固件时不在睡眠的位置, 异步的替代方法可能要使用:
int request_firmware_nowait(struct module *module,
 char *name, struct device *device, void *context,
 void (*cont)(const struct firmware *fw, void *context));
  
这里额外的参数是 moudle( 它将一直是 THIS_MODULE), context (一个固件子系统不使用的私有数据指针), 和  cont. 如果都进行顺利, request_firmware_nowait 开始固件加载过程并且返回 0. 在将来某个时间, cont  将用加载的结果被调用. 如果由于某些原因固件加载失败, fw 是 NULL.

</rich_text><rich_text scale="h3">14.8.2. 它如何工作</rich_text><rich_text>
固件子系统使用 sysfs 和热插拔机制. 当调用 request_firmware, 一个新目录在 /sys/class/firmware 下使用你的驱动的名子被创建. 那个目录包含 3 个属性:
loading  
    这个属性应当被加载固件的用户空间进程设置为 1. 当加载进程完成, 它应当设为 0. 写一个值 -1 到 loading 会中止固件加载进程.
    
data  
    data 是一个二进制的接收固件数据自身的属性. 在设置 loading 后, 用户空间进程应当写固件到这个属性.
    
device  
    这个属性是一个符号连接到 /sys/devices 下面的被关联入口项.
    
    一旦创建了 sysfs 入口项, 内核为你的设备产生一个热插拔事件. 传递给热插拔处理者的环境包括一个变量 FIRMWARE,  它被设置为提供给 request_firmware 的名子. 这个处理者应当定位固件文件, 并且拷贝它到内核使用提供的属性.  如果这个文件无法找到, 处理者应当设置 loading 属性为 -1.
    如果一个固件请求在 10 秒内没有被服务, 内核就放弃并返回一个失败状态给驱动. 超时周期可通过 sysfs 属性 /sys/class/firmware/timeout 属性改变.
    使用 request_firmware 接口允许你随你的驱动发布设备固件. 当正确地集成到热插拔机制, 固件加载子系统允许设备简化工作&quot;在盒子之外&quot; 显然这是处理问题的最好方法.
但是, 请允许我们提出多一条警告: 设备固件没有制造商的许可不应当发布. 许多制造商会同意在合理的条款下许可它们的固件, 如果客气地请求; 一些其他的可能不何在. 无论如何, 在没有许可时拷贝和发布它们的固件是对版权法的破坏并且招致麻烦.

如设备：/sys/devices/pci0000:00/0000:00:1d.7/usb2/2-1
调用request_firmware生成firmware目录/sys/devices/pci0000:00/0000:00:1d.7/usb2/2-1/firmware/2-1， 
目录下面有loading, data两个文件， 发出uevent给用户空间, 并等待完成或超时。
</rich_text><rich_text foreground="#ffff00000000">
	/* Need to pin this module until class device is destroyed */
	__module_get(THIS_MODULE);

	retval = device_add(f_dev);
    ...
    retval = device_create_bin_file(f_dev, &amp;firmware_attr_data);
    ...
    retval = device_create_file(f_dev, &amp;dev_attr_loading);
    ...
    if (uevent) {
        ...
        kobject_uevent(&amp;fw_priv-&gt;dev.kobj, KOBJ_ADD);   </rich_text><rich_text foreground="#00000000ffff">//发出add event，用户层来写数据到data里</rich_text><rich_text foreground="#ffff00000000">
        ...
    } 
    wait_for_completion(&amp;fw_priv-&gt;completion); </rich_text><rich_text>   </rich_text><rich_text foreground="#00000000ffff">//阻塞，等待用户空间程序处理完</rich_text><rich_text foreground="#ffff00000000">
     
	set_bit(FW_STATUS_DONE, &amp;fw_priv-&gt;status);  </rich_text><rich_text foreground="#00000000ffff">//超时时间定义在/sys/class/firmware/timeout</rich_text><rich_text foreground="#ffff00000000">
	del_timer_sync(&amp;fw_priv-&gt;timeout);

	mutex_lock(&amp;fw_lock);
	if (!fw_priv-&gt;fw-&gt;size || test_bit(FW_STATUS_ABORT, &amp;fw_priv-&gt;status))
		retval = -ENOENT;
	fw_priv-&gt;fw = NULL;
	mutex_unlock(&amp;fw_lock);
	
	device_remove_file(f_dev, &amp;dev_attr_loading);
err_del_bin_attr:
	device_remove_bin_file(f_dev, &amp;firmware_attr_data);
err_del_dev:
	device_del(f_dev);
err_put_dev:
	put_device(f_dev);</rich_text><rich_text>

应用层的处理可以参考android-doc.ctd中的&lt;ueventd分析&gt;
</rich_text></node><node name="Linux内核中内存相关的操作函数" prog_lang="custom-colors" readonly="False" tags="" unique_id="75"><rich_text scale="h2" weight="heavy">1.原理说明</rich_text><rich_text>
    Linux内核中采 用了一种同时适用于32位和64位系统的内 存分页模型，对于32位系统来说，两级页表足够用了，而在x86_64系统中，用到了四级页表，如图2-1所示。四级页表分别为：
　　* 页全局目录(Page Global Directory)
　　* 页上级目录(Page Upper Directory)
　　* 页中间目录(Page Middle Directory)
　　* 页表(Page Table)
    页全局目录包含若干页上级目录的地址，页上级目录又依次包含若干页中间目录的地址，而页中间目录又包含若干页表的地址，每一个页表项指向一个页框。Linux中采用4KB大小的 页框作为标准的内存分配单元。
    多级分页目录结构

</rich_text><rich_text scale="h3" weight="heavy">1.1.伙伴系统算法</rich_text><rich_text>
    在实际应用中，经常需要分配一组连续的页框，而频繁地申请和释放不同大小的连续页框，必然导致在已分配页框的内存块中分散了许多小块的空闲页框。这样，即使这些页框是空闲的，其他需要分配连续页框的应用也很难得到满足。
    为了避免出现这种情况，Linux内核中引入了伙伴系统算法(buddy system)。把所有的空闲页框分组为11个块链表，每个块链表分别包含大小为1，2，4，8，16，32，64，128，256，512和1024个连续页框的页框块。最大可以申请1024个连续页框，对应4MB大小的连续内存。每个页框块的第一个页框的物理地址是该块大小的整数倍。
    假设要申请一个256个页框的块，先从256个页框的链表中查找空闲块，如果没有，就去512个页框的链表中找，找到了则将页框块分为2个256个页框的块，一个分配给应用，另外一个移到256个页框的链表中。如果512个页框的链表中仍没有空闲块，继续向1024个页框的链表查找，如果仍然没有，则返回错误。
    页框块在释放时，会主动将两个连续的页框块合并为一个较大的页框块。

</rich_text><rich_text scale="h3" weight="heavy">1.2.slab分 配器</rich_text><rich_text>
    slab分配器源于 Solaris 2.4 的分配算法，工作于物理内存页框分配器之上，管理特定大小对象的缓存，进行快速而高效的内存分配。
    slab分配器为每种使用的内核对象建立单独的缓冲区。Linux内核已经采用了伙伴系统管理物理内存页框，因此 slab分配器直接工作于伙伴系统之上。每种缓冲区由多个slab组成，每个slab就是一组连续的物理内存页框，被划分成了固定数目的对象。根据对象大小的不同，缺省情况下一个slab最多可以由 1024个页框构成。出于对齐等其它方面的要求，slab 中分配给对象的内存可能大于用户要求的对象实际大小，这会造成一定的内存浪费。

</rich_text><rich_text scale="h2" weight="heavy">2.常用内存分配函数</rich_text><rich_text>
</rich_text><rich_text scale="h3" weight="heavy">2.1.__get_free_pages</rich_text><rich_text>
　unsigned long __get_free_pages(gfp_t gfp_mask, unsigned int order)
　__get_free_pages函数是最原始的内存分配方式，直接从伙伴系统中获取原始页框，返回值为第一个页框的起始地址。
    __get_free_pages在实现上只是封装了alloc_pages函 数，从代码分析，alloc_pages函数会分配长度为1&lt;

</rich_text><rich_text scale="h3" weight="heavy">2.2.kmem_cache_alloc</rich_text><rich_text>
　struct kmem_cache *kmem_cache_create(const char *name, size_t size,
    　size_t align, unsigned long flags,
    　void (*ctor)(void*, struct kmem_cache *, unsigned long),
    　void (*dtor)(void*, struct kmem_cache *, unsigned long))
   void *kmem_cache_alloc(struct kmem_cache *c, gfp_t flags)
　kmem_cache_create/ kmem_cache_alloc是基于slab分配器的一种内存分配方式，适用于反复分配释放同一大小内存块的场合。首先用kmem_cache_create创建一个高速缓存区域，然后用kmem_cache_alloc从该高速缓存区域中获取新的内存块。kmem_cache_alloc一次能分配的最大内存由mm/slab.c文件中的MAX_OBJ_ORDER宏 定义，在默认的2.6.18内核版本中，该宏定义为5， 于是一次最多能申请1&lt;&lt;5 * 4KB也就是128KB的连续物理内存。分析内核源码发现，kmem_cache_create函数的size参数大于128KB时会调用BUG()。测试结果验证了分析结果，用kmem_cache_create分 配超过128KB的内存时使内核崩溃。

</rich_text><rich_text scale="h3" weight="heavy">2.3.kmalloc</rich_text><rich_text>
    void *kmalloc(size_t size, gfp_t flags)
    kmalloc是内核中最常用的一种内存分配方式，它通过调用kmem_cache_alloc函数来实现。kmalloc一次最多能申请的内存大小由include/Linux/Kmalloc_size.h的内容来决定，在默认的2.6.18内核版本中，kmalloc一次最多能申请大小为131702B也就是128KB字节的连续物理内存。测试结果表明，如果试图用kmalloc函数分配大于128KB的内存，编译不能通过。

</rich_text><rich_text scale="h3" weight="heavy">2.4.vmalloc</rich_text><rich_text>
    void *vmalloc(unsigned long size)
    前面几种内存分配方式都是物理连续的，能保证较低的平均访问时间。但是在某些场合中，对内存区的请求不是很频繁，较高的内存访问时间也可以接受，这是就可以分配一段线性连续，物理不连续的地址，带来的好处是一次可以分配较大块的内存。图3-1表示的是vmalloc分配的内存使用的地址范围。vmalloc对 一次能分配的内存大小没有明确限制。出于性能考虑，应谨慎使用vmalloc函数。在测试过程中， 最大能一次分配1GB的空间。
    Linux内核部分内存分布

</rich_text><rich_text scale="h3" weight="heavy">2.5.dma_alloc_coherent</rich_text><rich_text>
    void *dma_alloc_coherent(struct device *dev, size_t size,
    ma_addr_t *dma_handle, gfp_t gfp)
    DMA是一种硬件机制，允许外围设备和主存之间直接传输IO数据，而不需要CPU的参与，使用DMA机制能大幅提高与设备通信的吞吐量。DMA操作中，涉及到CPU高速缓存和对应的内存数据一致性的问题，必须保证两者的数据一致，在x86_64体系结构中，硬件已经很好的解决了这个问题， dma_alloc_coherent和__get_free_pages函数实现差别不大，前者实际是调用__alloc_pages函数来分配内存，因此一次分配内存的大小限制和后者一样。__get_free_pages分配的内存同样可以用于DMA操作。测试结果证明，dma_alloc_coherent函数一次能分配的最大内存也为4M。

</rich_text><rich_text scale="h3" weight="heavy">2.6.ioremap</rich_text><rich_text>
    void * ioremap (unsigned long offset, unsigned long size)
    ioremap是一种更直接的内存“分配”方式，使用时直接指定物理起始地址和需要分配内存的大小，然后将该段物理地址映射到内核地址空间。ioremap用到的物理地址空间都是事先确定的，和上面的几种内存分配方式并不太一样，并不是分配一段新的物理内存。ioremap多用于设备驱动，可以让CPU直接访问外部设备的IO空间。ioremap能映射的内存由原有的物理内存空间决定，所以没有进行测试。

</rich_text><rich_text scale="h3" weight="heavy">2.7.Boot Memory</rich_text><rich_text>
    如果要分配大量的连续物理内存，上述的分配函数都不能满足，就只能用比较特殊的方式，在Linux内核引导阶段来预留部分内存。
    </rich_text><rich_text weight="heavy">2.7.1.在内核引导时分配内存</rich_text><rich_text>
        void* alloc_bootmem(unsigned long size)
        可以在Linux内核引导过程中绕过伙伴系统来分配大块内存。使用方法是在Linux内核引导时，调用mem_init函数之前用alloc_bootmem函数申请指定大小的内存。如果需要在其他地方调用这块内存，可以将alloc_bootmem返回的内存首地址通过EXPORT_SYMBOL导 出，然后就可以使用这块内存了。这种内存分配方式的缺点是，申请内存的代码必须在链接到内核中的代码里才能使用，因此必须重新编译内核，而且内存管理系统看不到这部分内存，需要用户自行管理。测试结果表明，重新编译内核后重启，能够访问引导时分配的内存块。

    </rich_text><rich_text weight="heavy">2.7.2.通过内核引导参数预留顶部内存</rich_text><rich_text>
　　</rich_text><rich_text foreground="#ffff00000000">在Linux内核引导时，传入参数“mem=size”保留顶部的内存区间。比如系统有256MB内 存，参数“mem=248M”会预留顶部的8MB内存，进入系统后可以调用ioremap(0xF800000，0x800000)来申请这段内存。</rich_text><rich_text>

</rich_text><rich_text scale="h2" weight="heavy">3.几种分配函数的比较</rich_text><rich_text>
　</rich_text><rich_text justification="left"></rich_text><rich_text>



</rich_text><rich_text weight="heavy">1、kmalloc()/kfree()</rich_text><rich_text>　　
        static __always_inline void *kmalloc(size_t size, gfp_t flags)
　　内核空间申请指定大小的内存区域，返回内核空间虚拟地址。在函数实现中，如果申请的内存空间较大的话，会从buddy系统申请若干内存页面，如果申请的内存空间大小较小的话，会从slab系统中申请内存空间。
　　gfp_t flags 的选项较多。参考内核文件gfp.h.
　　在函数kmalloc()实现中，如果申请的空间较小，会根据申请空间的大小从slab中获取;如果申请的空间较大，如超过一个页面，会直接从buddy系统中获取。

</rich_text><rich_text weight="heavy">2、vmalloc()/vfree()</rich_text><rich_text>
　　void *vmalloc(unsigned long size)
　　函数作用：从高端(如果存在，优先从高端)申请内存页面，并把申请的内存页面映射到内核的动态映射空间。vmalloc()函数的功能和 alloc_pages(_GFP_HIGHMEM)+kmap()  的功能相似，只所以说是相似而不是相同，原因在于用vmalloc()申请的物理内存页面映射到内核的动态映射区(见下图)，并且，用vmalloc() 申请的页面的物理地址可能是不连续的。而alloc_pages(_GFP_HIGHMEM)+kmap()申请的页面的物理地址是连续的，被映射到内核 的KMAP区。
　　vmalloc分配的地址则限于vmalloc_start与vmalloc_end之间。每一块vmalloc分配的内核虚拟内存都对应一个 vm_struct结构体(可别和vm_area_struct搞混，那可是进程虚拟内存区域的结构)，不同的内核虚拟地址被4k大小的空闲区间隔，以防 止越界--见下图)。与进程虚拟地址的特性一样，这些虚拟地址与物理内存没有简单的位移关系，必须通过内核页表才可转换为物理地址或物理页。它们有可能尚 未被映射，在发生缺页时才真正分配物理页面。
　　如果内存紧张，连续区域无法满足，调用vmalloc分配是</rich_text><rich_text link="webs http://www.chinabyte.com/keyword/%E5%BF%85%E9%A1%BB%E7%9A%84/">必须的</rich_text><rich_text>，因为它可以将物理不连续的空间组合后分配，所以更能满足分配要求。vmalloc可以映射高端页框，也可以映射底端页框。vmalloc的作用只是为了提供逻辑上连续的地址…
　　注意：在申请页面时，如果注明_GFP_HIGHMEM,即从高端申请。则实际是优先从高端内存申请，顺序为(分配顺序是HIGH, NORMAL, DMA )。

</rich_text><rich_text weight="heavy">3、alloc_pages()/free_pages()</rich_text><rich_text>
　　内核空间申请指定个数的内存页，内存页数必须是2^order个页。
　　alloc_pages(gfp_mask, order) 中，gfp_mask 是flag标志，其中可以为_ _GFP_DMA、_GFP_HIGHMEM 分别对应DMA和高端内存。
　　注：该函数基于buddy系统申请内存，申请的内存空间大小为2^order个内存页面。
　　参见《</rich_text><rich_text link="webs http://www.chinabyte.com/keyword/Linux/">linux</rich_text><rich_text>内核之内存管理。doc》
　　通过函数alloc_pages()申请的内存，需要使用kmap()函数分配内核的虚拟地址。

</rich_text><rich_text weight="heavy">4、__get_free_pages()/__free_pages()</rich_text><rich_text>
　　unsigned long __get_free_pages(gfp_t gfp_mask, unsigned int order)
　　作用相当于alloc_pages(NORMAL)+kmap()，但不能申请高端内存页面。
　　__get_free_page()只申请一个页面。

</rich_text><rich_text weight="heavy">5、kmap()/kunmap()</rich_text><rich_text>
　　返回指定页面对应内核空间的虚拟地址。
　　#include 
　　void *kmap(struct page *page);
　　void kunmap(struct page *page);
　　kmap 为系统中的任何页返回一个内核虚拟地址。
　　对于低端内存页，它只返回页的逻辑地址;
　　对于高端内存页， kmap在&quot;内核永久映射空间&quot;中创建一个特殊的映射。 这样的映射数目是有限， 因此最好不要持有过长的时间。
　　使用 kmap 创建的映射应当使用 kunmap 来释放;
　　kmap 调用维护一个计数器， 因此若2个或多个函数都在同一个页上调用kmap也是允许的。
　　通常情况下，&quot;内核永久映射空间&quot;是 4M 大小，因此仅仅需要一个页表即可，内核通过来 pkmap_page_table 寻找这个页表。
　　注意：不用时及时释放。
　　kmalloc()和vmalloc()相比，kmalloc()总是从ZONE_NORMAL(下图中的直接映射区)申请内存。 kmalloc()分配的内存空间通常用于linux内核的系统数据结构和链表。因内核需要经常访问其数据结构和链表，使用固定映射的 ZONE_NORMAL空间的内存有利于提高效率。
　　使用vmalloc()可以申请非连续的物理内存页，并组成虚拟连续内存空间。vmalloc()优先从高端内存(下图中的动态映射区)申请。 内核在分配那些不经常使用的内存时，都用高端内存空间(如果有)，所谓不经常使用是相对来说的，比如内核的一些数据结构就属于经常使用的，而用户的一些数 据就属于不经常使用的。
　　alloc_pages(_GFP_HIGHMEM)+kmap()  方式申请的内存使用内核永久映射空间(下图中的KMAP区)，空间较小(通常4M线性空间)，不用时需要及时释放。另外，可以指定 alloc_pages()从直接映射区申请内存，需要使用_GFP_NORMAL属性指定。
　　__get_free_pages()/__free_pages() 不能申请高端内存页面，操作区域和kmalloc()相同(下图中的动态映射区)。
</rich_text><rich_text justification="left"></rich_text><rich_text>

</rich_text><rich_text weight="heavy">6、virt_to_page()</rich_text><rich_text>
　　其作用是由内核空间的虚拟地址得到页结构。见下面的宏定义。
　　#define virt_to_pfn(kaddr) (__pa(kaddr) 》 PAGE_SHIFT)
　　#define pfn_to_virt(pfn) __va((pfn) 《 PAGE_SHIFT)
　　#define virt_to_page(addr) pfn_to_page(virt_to_pfn(addr))
　　#define page_to_virt(page) pfn_to_virt(page_to_pfn(page))
　　#define __pfn_to_page(pfn) (mem_map + ((pfn) - ARCH_PFN_OFFSET))
　　#define __page_to_pfn(page) ((unsigned long)((page) - mem_map) + \
　　ARCH_PFN_OFFSET)

</rich_text><rich_text weight="heavy">7、物理地址和虚拟地址之间转换</rich_text><rich_text>
　　#ifdef CONFIG_BOOKE
　　#define __va(x) ((void *)(unsigned long)((phys_addr_t)(x) + VIRT_PHYS_OFFSET))
　　#define __pa(x) ((unsigned long)(x) - VIRT_PHYS_OFFSET)
　　#else
　　#define __va(x) ((void *)(unsigned long)((phys_addr_t)(x) + PAGE_OFFSET - MEMORY_START))
　　#define __pa(x) ((unsigned long)(x) - PAGE_OFFSET + MEMORY_START)
　　#endif

</rich_text><rich_text weight="heavy">8、ioremap()/iounmap()</rich_text><rich_text>
　　ioremap()的作用是把device寄存器和内存的物理地址区域映射到内核虚拟区域，返回值为内核的虚拟地址。
　　注明：在内核中操作内存空间时使用的都是内核虚拟地址，必须把device的空间映射到内核虚拟空间。
　　#include 
　　void *ioremap(unsigned long phys_addr, unsigned long size);
　　void *ioremap_nocache(unsigned long phys_addr, unsigned long size); 映射非cache的io内存区域
　　void iounmap(void * addr);
　　为了增加可移植性，最好使用下面的接口函数读写io内存区域，
　　unsigned int ioread8(void *addr);
　　unsigned int ioread16(void *addr);
　　unsigned int ioread32(void *addr);
　　void iowrite8(u8 value, void *addr);
　　void iowrite16(u16 value, void *addr);
　　void iowrite32(u32 value, void *addr);
　　如果你必须读和写一系列值到一个给定的 I/O 内存地址， 你可以使用这些函数的重复版本：
　　void ioread8_rep(void *addr, void *buf, unsigned long count);
　　void ioread16_rep(void *addr, void *buf, unsigned long count);
　　void ioread32_rep(void *addr, void *buf, unsigned long count);
　　void iowrite8_rep(void *addr, const void *buf, unsigned long count);
　　void iowrite16_rep(void *addr, const void *buf, unsigned long count);
　　void iowrite32_rep(void *addr, const void *buf, unsigned long count);
　　这些函数读或写 count 值从给定的 buf 到 给定的 addr. 注意 count 表达为在被写入的数据大小; ioread32_rep 读取 count 32-位值从 buf 开始。

</rich_text><rich_text weight="heavy">9、request_mem_region()</rich_text><rich_text>
　　本函数的作用是：外设的io端口映射到io memory  region中。在本函数实现中会检查输入到本函数的参数所描述的空间(下面成为本io空间)是否和io memory  region中已存在的空间冲突等，并设置本io空间的parent字段等(把本io空间插入到io 空间树种)。
　　注明：io memory region 空间中是以树形结构组织的，默认的根为iomem_resource描述的io空间，其name为&quot;PCI mem&quot;.
　　request_mem_region(start,n,name) 输入的参数依次是设备的物理地址，字节长度，设备名字。函数返回类型如下
　　struct resource {
　　resource_size_t start;
　　resource_size_t end;
　　const char *name;
　　unsigned long flags;
　　struct resource *parent, *sibling, *child;
　　};

</rich_text><rich_text weight="heavy">10、SetPageReserved()</rich_text><rich_text>
　　随着linux的长时间运行，空闲页面会越来越少，为了防止linux内核进入请求页面的僵局中，Linux内核采用页面回收算法(PFRA)从用户进程和内核高速缓存中回收内存页框，并根据需要把要回收页框的内容交换到</rich_text><rich_text link="webs http://www.chinabyte.com/keyword/%E7%A3%81%E7%9B%98/">磁盘</rich_text><rich_text>上的交换区。调用该函数可以使页面不被交换。
　　#define SetPageReserved(page) set_bit(PG_reserved, &amp;(page)-&gt;flags)
　　PG_reserved 的标志说明如下。
　　* PG_reserved is set for special pages, which can never be swapped out. Some
　　* of them might not even exist (eg empty_bad_page)…

</rich_text><rich_text weight="heavy">11、do_mmap()/do_ummap()</rich_text><rich_text>
　　内核使用do_mmap()函数为进程创建一个新的线性地址区间。但是说该函数创建了一个新VMA并不非常准确，因为如果创建的地址区间和一个 已经存在的地址区间相邻，并且它们具有相同的访问权限的话，那么两个区间将合并为一个。如果不能合并，那么就确实需要创建一个新的VMA了。但无论哪种情 况， do_mmap()函数都会将一个地址区间加入到进程的地址空间中--无论是扩展已存在的内存区域还是创建一个新的区域。
　　同样，释放一个内存区域应使用函数do_ummap()，它会销毁对应的内存区域。

</rich_text><rich_text weight="heavy">12、get_user_pages()</rich_text><rich_text>
　　作用是在内核空间获取用户空间内存的page 描述，之后可以通过函数kmap() 获取page 对应到内核的虚拟地址。
　　int get_user_pages(struct task_struct *tsk, struct mm_struct *mm,
　　  unsigned long start, int len, int write, int force,
　　  struct page **pages, struct vm_area_struct **vmas)
      参数说明
　　  参数tsk:指示用户空间对应进程的task_struct数据结构。只是为了记录错误信息用，该参数可以为空。
　　  参数mm:从该mm struct中获取start 指示的若干页面。
　　  参数start:参数mm空间的起始地址，即用户空间的虚拟地址。
　　  参数len:需要映射的页数。
　　  参数write:可以写标志。
　　  参数force:强制可以写标志。
　　  参数pages:输出的页数据结构。
　　  参数vmas:对应的需要</rich_text><rich_text link="webs http://storage.chinabyte.com/">存储</rich_text><rich_text>区，(没有看明白对应的代码)

        返回值：数返回实际获取的页数，貌似对每个实际获取的页都是给页计数值增1,如果实际获取的页不等于请求的页，要放弃操作则必须对已获取的页计数值减1.

</rich_text><rich_text weight="heavy">13、copy_from_user()和copy_to_user()</rich_text><rich_text>
　　主要应用于设备驱动中读写函数中，通过系统调用触发，在当前进程上下文内核态运行(即当前进程通过系统调用触发)。
　　copy_from_user的目的是防止用户程序欺骗内核，将一个非法的地址传进去，如果没有它，这一非法地址就检测不到，内和就会访问这个地址指向的数据。因为在内核中访问任何地址都没有保护，如果不幸访问一个错误的内存地址会搞死内核或发生更严重的问题
　　copy_from_user调用了access_ok,所以才有&quot;自己判断功能&quot;
　　access_ok()，可以检查访问的空间是否合法。
            #define access_ok(type, addr, size) __access_ok((unsigned long)(addr),(size))
　　
       注意：中断代码时不能用copy_from_user,因为其调用了might_sleep()函数，会导致睡眠。
　　
       unsigned long copy_to_user(void __user *to, const void *from, unsigned long n)
　　通常用在设备读函数或ioctl 中获取参数的函数中：其中&quot;to&quot;是用户空间的buffer地址，在本函数中将内核buffer&quot;from&quot;除的n个字节拷贝到用户空间的&quot;to&quot;buffer.
　　
       unsigned long copy_from_user(void *to, const void __user *from, unsigned long n)
　　通常用在设备写函数或ioctl中设置参数的函数中：&quot;to&quot;是内核空间的buffer指针，要写入的buffer;&quot;from&quot;是用户空间的指针，数据源buffer.

</rich_text><rich_text weight="heavy">14、get_user(x, ptr)</rich_text><rich_text>
　　本函数的作用是获取用户空间指定地址的数值并保存到内核变量x中，ptr为用户空间的地址。用法举例如下。
　　get_user(val, (int __user *)arg)
　　注明：函数用户进程上下文内核态，即通常在系统调用函数中使用该函数。

</rich_text><rich_text weight="heavy">15、put_user(x, ptr)</rich_text><rich_text>
　　本函数的作用是将内核空间的变量x的数值保存到用户空间指定地址处，prt为用户空间地址。用法举例如下。
　　put_user(val, (int __user *)arg)
　　注明：函数用户进程上下文内核态，即通常在系统调用函数中使用该函数。
</rich_text><encoded_png char_offset="3879">iVBORw0KGgoAAAANSUhEUgAAAtcAAAHACAIAAADm19O0AAAAA3NCSVQICAjb4U/gAAAgAElEQVR4nOy9R5Nc2XH+fcp71xZuABB0IUXMQhHaca/vq5CCG0ZIwZAJrUiKosQhZ4CBaVemy/u6dfNd/Hie96DQVTPANNDD/1QuOqqr7j333GPypHkyM/HLX/7y9PR0MBis1+tCobBcLtPpdCaTWS6Xbk8fn1Kp1GKxcM4lk0nnXBzHzrlcLrder++qP2Y2Ho+r1epqtVqtVqwKlkQ+nx+NRpVKJYoiFoxzrt/vVyqVRCIxHo8zmcx8Pi+VSvl8vtfrZTKZSqUyHA7NLJvNxnFsZvl8fjAYlMvlKIry+Xwikeh2u+l0ulwuz+dzPmQymT/96U+fffZZv98vl8vL5bLRaFxcXGSz2fl8XqvVGKhPT/P5nJ48e/bs7OysWCwyg5lMZtst6XS63+8750qlUqlU6vf7iUQik8kUi8V+v59MJuv1+uXlZblcTqfTcRyPRqNarbZerxeLRTabZTFkMpnJZDKZTE5PT6Mo6na7x8fHrVarXq/ncrnxeDyfzyuVynQ6LRQKyWRyMpmkUqlGozEajZip0Wh0cHAwHo+ZCJ5iZjQ1Ho+dc+VyeTgc5nK5+Xyez+fT6fS2dbharejYdDp99OjRixcvHjx40Ov18vn8Rxr5HyYlk8n5fH5ycnJ+fs7eNLOHDx8uFovJZDKdTpmmRCKxWq2cc1EUscYePHjQbrdLpZKZRVGUzWZns9l6vS6Xy5PJ5OjoqNfrRVGUy+Xu+hV/EAR7/Id/+AczYx6TyeRyucxms3fdtbunxG9+85u//du/TSaTnBOLxSKRSPDvXfftB0Gz2axarU6n04cPHzrnzs/Pi8XicDjkgP/0lEqlksnkYDAoFArZbPb58+c//vGPxb+azebp6el4PC6Xy51O5/DwMJFItNvt4+Pj6XRaLBb5O5/Ps9ks+y38lRujKEqn07PZLI7j6XR6fHzsnFssFpzBiUSi0+mcnJwgljnnms1mPp+v1Wp0hov16ycmpIFSqbRYLOjV+fl5qVTiDHiXEolEOp02s0QiMZ/P1+t1sVhMJBJ8MxgMMplMNptNp9POudlsls1mU6mUBLtkMrlYLKIo4jRqNBrD4dA5V61WNZiLxWK1WtXr9evr68PDQ1jbYrHggFksFqlUKpFIJBIJZBQzi+M4mUym0+lut3twcICUmUgklsvlarUqlUqIg0zHjnF4+PDhYDCYz+e5XI5h2TYOe/owmk6ntVptuVzGcYyE12w20+n0arW6d+/ebDYrFAqTyYRFtVqt2L9xHA+Hw3q9PhqNkskkE5rNZhOJxGKxWK/XSCeSXfb0sSmbzT558uS3v/1to9FwzsVxvFgs7orJf98o8S//8i+/+MUvJJGxNO+2Tz80Qu9k2M2Mf++wP1g7OFScc+PxOJ/PYxRZrVZRFBUKhVevXj158sQ5h66cSqWcc9PpNJ1Ov3jx4uc//3mv1zs4OAjbXK/X9Xqdf1ut1snJCZ8vLy8PDg4ymUwymWw2m4eHh+l0ejAYcNCOx+P79+9HUWRmmUzm6uoqnU4XCgX69ukJIxD2GE0ZAsGN189mM2wVzrnJZHL//v3ZbIaIMB6PMUKUy+Vut1sulyU9jEYjJAxZjzhvdKjMZrNkMik5I5PJsHIYln6/X6/Xu91uqVTK5XJow5lMBpljvV6nUqn1eh3HcSaTefny5dOnT+M4xuKCTFMuly8vL+/fv79tHOi2RmAwGOTz+VQqhTi1p9uldrudz+crlQozyJe9Xg+ptFqtoh445yaTSRzHlUoljmMsmuv1mmlCcIe9jMfjOI6r1eodvtQPirRTlssltsnBYFCr1e66X98LSq9WK4zbk8nEOQdri6Lorjv2QyEOV84Y57VhLFJ30h9Y2Hg8pj/tdjuXy6XT6Ww2+/XXXz958oSOPXnyJI7jdDqNWpbJZFarVTKZPDw8bLVaiUTi9PS01WphQHbO5fP5n/zkJ69fv3bOJRKJo6OjdrvtnKtUKqPRKJvN4gE0s9ls1uv1jo+PYbiNRiOdTjMgmOsKhUK/378rj+F0Oq3X68PhMIqie/fuXV9f05Nt/WEYYffFYnEymeB5SaVSmUyGcZ7NZs65SqXSbDaHw2G5XM7lcnhtnJd7isXi5eVlpVKRaHh8fLxardbrdTKZxFKCtQM1F9uVjC7r9brZbD569IhRHQ6HuGPM7OnTpzBEdj2STbvdRgTZMc5YUA4PD6MoWi6XtVqt3+8Xi8XbHvIfOs3nc7aDcy6XyzHF3W630WggtTvn7t27x6QXi0U+LJfLarWaSCSur6+LxWI+n5/P51jClsulhOa95/3T0OnpabPZdM7FcQxPyGQySJB33bW7p8S///u//+IXv3DOzedzOKNzDoPtXfftB0HYz3HSO+cGg0GlUvk++AtBCKVSqel0mkwm79+/f3197ZyDlznnZrOZmYFCGA6HP/nJT5rNZr/fT6VSpVIJEEkymez1eul0ulQqYfAXfoIDstlsnpycINm8evXq8ePHyMFyKzjnoihKpVL5fP7q6qperycSiR2ego9N4daQfrP7luFwiOiAGophiWHElq7WaApLxnQ6dc4Vi8X1ej2ZTH70ox+dn59zlmAqW61W0+kUfMl6vV6tVnyP62c2m9Xr9fV6PRwOG43GYDD46U9/CiSF8wlfGIao8Xi8XC6Rh8wMM1jY5jbaGIE93/gYhLMylUqNRqPT01PUaNx86/W60Wh0Op1qtYrxg7m4vr5moz1+/LjX6wFKKJfLTDGWxWQy+ebNm6dPn97x6/0wSDsFnQ2Tp5TPHzilF4uF+Jqsqd+HU/AHQtlsFhAApxGIxXq9fofoy+l0enR0hBcZuaHf73e73UQigafAOdfpdI6OjrilWq2ORqNWq+Wcq9frnU4H+OpyuTSzWq2GMAHqeT6fozfjQcCMHEXRaDR68uTJZDJBuS+Xy+PxeL1eSxJaLBY4dE5OTgAi3Mn4oFxWq9VMJpNKpZAdcbrfeP1kMkkkEniskEWiKMLiZWbAP1utFu3gDUE9BV7jnEulUtVqtdvtcsCnUqnJZMKaqdVqmUwGW1oul2Oc6/V6sVhExHHO4eybTqe//e1vj46OGLdcLtdqtbLZbKlUQpSBLXJ0rVYrBBGgrDe+F1LmwcHBYDDgluFweHBwcFfr9v9VMjN8as45/KTYIDE7TafTcrnMNuEaZhMDSSKRuLi4SCQSs9mMbcuKWiwW/X7/4cOHeOLu9P1+KHR4eMh+xBY1nU5zudz+kP0L/eu//isKEAIytF6vbU+fhOI4ZuSZDjMTGuBOiKkfDAbA1nq9Xq/Xoz+lUkkdG41GbCoom80C7IBjTiYTLnPO4T0xM8k0P/vZz5xzqVQKqQL+mM/nr6+v1QHnXLfbNTOO3nQ6HZou72Bc3iGhPvv9/jful16vx2XIajIwIHw8ePAAfmRmDMLXX39tZuv1Ooqifr8/Ho/r9fpkMlmtVmoTiY27+v0+Pw0GA4z2ZsZfDp6wkxrAbrd7cXHBeovjmFlrt9v8+tVXX+14o/V6jWWFEKH3Hr49vQ+x73q9nplp0pvNpvkFA1qcLdPr9SaTSafT4TKgVP1+H4GD1hqNxnw+5/o9fQLCFgL+gW/YQXfbq+8JJf7rv/7r7//+71OpFDh8EGruW9iZ93QrhH8B1LpzjgDLO4xRAjafTqeBsMl5ia6sX4l8EezAzNLpNAI+ABF8TMlkstvt1ut1M+OlQOk75wjKcM6x8Ihec84R/HlycjKbzVarVTabxToihwUxRFgXPj3hlSfkhzcyf67feD1AEMyw3OWc419sHtlsdjAYgHfp9XoESIMujOO4VCpNJhMM6UBQhdkCkYNtBsQiEEUGCnMm31Sr1eFwiI0tiqLT09Orq6tsNsuzoihC4qTxdDo9Go2AAO94L+aO0BtinUC97HEht0toKQpBQuA7ODiYzWbHx8eAq6rV6nw+7/V6gEISiQQ46MVi8erVq3v37rEkhElCHmVb7fn8pyG0KfPavqyPd92v7wWlORKw6cG5cO7uI2U+DcE1QHc65zhp7O4ilYgJLJfLi8ViuVwuFgtg9hg5WBtwwCiKyuWymaVSqTiOEQvIRoCR4/j42MwqlUr4OplMRnvv8PAQbaxarRK7y68AuBKJBAdhCDVYLBaz2ewOAzEQFjckdaJOdlyfTCajKKrVaul0msQeo9EI4UAefS7GIDEejxlwjVsqlZrP55xJmFJ6vR7fgzatVquHh4cysJONgIkAlo98wAIjg4tQ+slkcjweI4I4D4fk6dvWoV6ZQWBA7ipw6f9hEpQKSyThSwjoTBaCJqJ5sVgERMXGTCQS9+7dox02Jl622WxWKpVANO/zu3waIirNeeXB+S2zJ+fcHkq2p7eIAJbpdJpIJHK53OPHj/mAqITyhIiQTqfH4zHxF5x5mE9qtRo62evXr1G5MG+ghKVSqU6ng6T1+9//ngO43W4r4gYwJl7CZrPJs3K5XKFQAOrvnMOv8VdB2H4IYV0ul/P53My++uorMjqY2eXlJaIYucjAhCKoCQ6soUNWc87NZrNGo7FcLsF8VKtVIpKePHnC8QOkI5vNttttTE0AfZ49ewaYkUQUw+EQYwbJr4bDYRzHIH4SicSrV6/udvT2VCgUMHis1+t2u10ul6+urpw3JSaTyR//+McgP+7du0c8fDKZnE6nnU7ns88+4xpQVphDFCnjvEFrT3u6W9oH9+/pLeIAc871+310dyQJFF95N7FPHB4eZjKZwWBgZldXVycnJ0dHR4vFYjqdckA655LJZL/fPzo6Qk1PpVKAw3O5HFmVKpWK8+5q55zcFm/evPnss8+m0ymn9f379//85z8/evTozobmgwg/CEExvClyHqgaPC+Ew3BUoPs+f/780aNHR0dHyHbKo7parRqNRhRF+GUymUw6nSZGhlCjyWQyGo3MjNYGg8Hx8TGCi9xnwFlw/CHVZbNZ0sAAJcHd9j//8z+ff/75XY7dnpxbr9eHh4dsCowfx8fHQI9ZA6Se+7u/+7vJZJLP59lEmUzm6OjozZs3kjZA/xwfHwsmGaYe2dOe7pD2tpA9vUUwLM4855OSYbGfz+f1ev3i4gKQR7fbJdUmYSCnp6fg3dDjs9lst9t9/fo1EBNQDsR3YEAm8ejBwQHuv1wul0wm2+22XBufffZZpVIBMVOr1eSImU6nHKt/FVQoFJrNZiaTwbt0dHRkZufn59Pp9P79+69fvwat1m63FWYZRdGPf/xjEDbOSw9kOSsUCp1OZ7FYSKABfJpIJBqNhpkVi0Um7vz8vFAoFAqF4XBIWl5lyUSOGY1Gy+WSZBIAkHEGIbi02+3PP//88vLyjoZtT3+hOI6z2WyxWBwMBoeHhwKoIkdiETk8PHzz5k2hUEDEv7i4GAwGy+WS7cO8421vt9svX75kRQEuuev329Oe9raQPb1NqVRKcIHlcnl0dETwBXoz9SlevHjx6NGjg4MDYIxhqRHZeEejEWmv1BoIaDNDsSObpwwtKHZkcx+Px41GgwTngoA8fPjw8ePH4DH/isILc7kcQth8PieQQUN0//79QqGAj+ZHP/oR1qBMJtNutzOZDNG5RDKDSSTmtl6vAwTmyEFYaTQab968ISdEJpNZr9e1Wo145l6vhwOL8GBsV+v1Gj0YzGypVIqiiLBPJgtJZUfu1D19GgI9QHA76QSdc2T3T6fTgirXarX79+8rvolocCCr+NfADmez2ePjY8JnSL16d2+2pz39hfZSyJ7eon6/r3zh1WqVMNFGo5HNZmFeoCwxdaDoFwoFcq7XajXOsGw2S8oQSrXhW0HRJ8s46EuyoKLEE3eTz+dBWV5eXiaTScQUOqYYmdVq9VfEQMlSSrCP84eBgJ8IKOVy+fz8vNVqUbrl6OgokUgggvDW3W63WCy2Wi2EMDNT9hSyyo5GI4Sb8XgsPwuZPO7du4ccifeHMjGAZMfj8dHRkbKAY63hAKtUKkAg91mV7paYGjObzWbdbheh5OXLl6Qv02WdTocKAJ1OR1J+rVZT+jvn3Gg0Wq1WrVbr+PiY5C77AJk9fR9o75HZ01tUr9fz+TyW3hcvXuTzecwS6/WauAmkjclkQoZTjrTXr1/XarWrq6vhcLhcLgm0IfO6c+7Ro0ck6eII5AwGaEkQL0fy8fEx2P5Wq9Xv9zOZDGU/wUgeHx+/fv2aSPJtRVu+h0SVWoC9IEkTiQS67OPHj4fDYTKZvL6+bjQaJycnBwcHQEY6nc7BwUEikRgOhwTi5vN5DEUM18HBAeiZRqOhtCXOOVKpUnD1wYMHHDyAi4GpOudAoWaz2YcPH67Xa0r2YLqfTCbUqXHOFQqFfSThnVO1WiVSF3gQNSA///zzQqFwdXWFd8859+TJEy44OTlhYRAtT17jg4ODxWJx79695XJJZjmy7+w9Mnv6PtDeFrKntwjMWiaTIUv6xcUFUAZUcCrbUUmc2DOqDukzcRmcuwgiSBWEh6CZkclRBdUAmiCUEBFwfHx8enpKzgMOUdCs1M9zzinZxvefEomEsq1I9WSQE4nEZ599xjiTmtb56hI/+tGPlEa22+2SXySO43a7TcWQVCpFKm7yc2McItRZtTrxlwH0cc5hmSfJmHOOysnlcplMjogv/X6fpEHn5+cPHz6kIvydjd2enFOSbxxnBKkh5WMze/DggfMpepV7BkPIYrGI4/jk5OT6+prVhX8TN2ilUtmH6e7p+0BJuD+QQJXt2OdO/WTEERJOCefKtut1GRXe+UvuqcViwQyCWARFDzYtvBja1j5wATMbjUbOOcy8mPT5F0VZuSL4iVjTbrdLB7LZLH4Hnl6pVMAoUBEjn8/3er3VakVhWMqd6MDj73Q6RZpZr9ej0YjCKKQaBBVrPsWZQJe4zN8l7AHOOSQh53Gas9lsOByG6qCZ4cXYkQxUnniwKQlfTn3HfJkZpiARTqg4jjFgmBk5+6n3ncvleHGWAfX8zCyZTJ6enqob5jO1cLuZUdVWz2IvK92q5gt/mZmRZTWZTOJTMzMy6yeTyQcPHpiZste8S6lUCveQhoLHbbv+fYmZMp8qdLVasbTCxS9fQ/jTu4SPKUz1u7tap67UZSwtQqn1ULrBv9poRIfpdioPaHXps/LeQsSl30jIDZQiIo6aeRmPxzyRTs7nc7Y/KG9mx3wuQef3+2q1ur6+jqJoMBhQkXFbf7bxE+2y8F73Nm+ZTqfdbpcLtn0fRRE3Kqn8YrHg6MHeE16jPf7uvG9rf9t4bpvH21q3O567p630z//8z2bW6/VAybG4P/aU7EkE4xbn4nzdwc17vR7XmE+2DbMzM6UE4EsMttPplNaEXFsulyDt36v9aAt1u11CQzknuJFvZrPZxcUFyymOY6WLJrKXi/lyOp2qe2ZGhKHGgUzVIsAN1KPRN+Sx5iC/vr5mKGazGYOgXuEwWiwWapNuXF1dkR9dbW4jrmeQEcj0Rj8o4pWdc7jYGJDbTeU+HA6vrq7Q+zmn1+v1tvW2bX02m02OT26ZTqf0fNv1bCXeaDAYqBYBd7Fx4jjudDpa2M1mk/UGgafhYEOdWy6XLGniqJVrHwlbj7iRdu/fZrNJdsHhcMiwbNsX2/b1jv7cyE9uHBwGbbVadTqdMNk8g7bt+6urK15NmfrU7fl8Tp4hfb+Dz2xr/0baNo8fm6S2mRkTsVf1Re7f/u3f+IS6qdoTd9qrHxCh/hIngpMCO+qOW6bT6WQyYQ+vVqvw/Ib6/T7ch7O23W5jLOGsFZ/94PY3CDZBqOdyuVRdVr3F69ev2eq4Y8wM7IgFLBWmo+5NJhO+J8VZq9ViTbbb7el0Smvj8XgymcCFydk1mUzoDH+5bL1eX11dhW+NvmVeBmo2m3QVPktwwY73ZWxDHfcO6/7cFfHKjACnAsNyi8TUYzEys9FoxKlz43r7Rjo/P1fWuB2yZrPZ5FRTPBequap+NJtN1qqMc7Q2m80uLy85WlarFR96vR4OR/XZzK6urugG642zf0fPb9y/LN3ZbBYeZtJG3t0Xtn1ff2N/Qn6CRMiDoijiFKeYNp1Zr9ewHUoXbfteRXA2aqmEW4+BffXqFf/eOO/b2t82mDvm8aPSXgrZQe5Xv/oVmLVkMkn90k9ujvmhE+OvbNm7a6ODG02n08lk8ujoCIMtN6Ka4/6vVquqi+ucS6fTR0dHTDFZUD+g/RtJP52cnKTT6UajgUGYsFLnHKEc1Wo1n8+ryAjvqIDDUqmUyWQqlQo9dM6Vy2XaUSFZskDydvfv3wfvWSwWq9VqrVbjAhovFouk0+DRmUymVqvl83mwlqzwSqUixAPpNPAN8c3uwBBNEKjPH2wCSt5dCNbd6/YDaCNPPzVQtq233e0A7AUGsRsMIdgvK5MvM5kMW4mkeTwO3yIX5HI5viS/rfMRtoQ6K7F9Op3O5XJEX/MirDS+uZF27F88a+oPCNZt+2Lbvt7Rnxv5iViH5qJYLIKepk068+jRI3Aq277PZrNHR0eAZHkEjyOBcvj62WyWYDG+eZfP3Nj+tvHcPY8fj/ZSyA7aSyF3T+8lhTjn8vm8GJBzDnia/uUz2xvmywXOH73fuOVubH8H1et1ccZ0Oq2znPLikJgIkDrJE/B35+EgpGnXlc5X3IWx8n1YL01jxUs9e/YMvg94tl6vc3u1WoWxplKpWq2mHGLFYpHOaAvQ2u7YkL0UAn1UKUSBHhxC/MusbVtvN5IESlrgxPrGkntUanTOlUolLk6lUny4d++eoFGUPWKnFAoFFW3J5XJcUywW4ajJZPL4+JhVqlNWmTx2d+bG/asBQcjmKZJm3t0Xbvu+vrE/O/hJsVjk7Yhr45pMJkMfSqUS48C7b/ueG6vV6saDtJyKxSI90fzeOO/b2t82mNvmcfcUfHfaSyE7KE18lwsQeYVCYV/u75ORmVGYimN4uVxGUaR6szdeb2aLxaLf79+/f1/5zp1zURSRB4JCEmF+dC67vLys1+u7z84d7d9IAEtVei1MCz0ajcrlMjEa0smm0yn5SJzXfsLFxtPFQzGZZrPZy8vLk5OT5XJJ7uqwahrxI8656+trMJ79fh8e9/LlyydPnpDlbDweLxYL0pkXCoWw/pxaUB+oPrrtlXnH5XJJt+nzD00WMR9fDa6Q/DG3mBF8sVig1g8GA+J3WMw71tuNRP1F55OH8u/GEtqgXq9XqVRUu2e9XpNHH2Bv5Gv+4RlcLBYnJyd4TNh9RIqR52M6nVIIaTAYEN6CkY9t9e2Xzbb9Sw8VXJbL5RAX3Dv7gqe/u68ZkBv7cyM/gVMxLCQbHI1GjUZD06QbqUVAuNy734/H40ql0u/3i8UiZYz4FecXhhYz0y7bNu/bnruDv904jyQ6+nh0hwU4v/+UJCgArD45lJjsu+7YD4XI0LwOCF657fpEIkEm73q9Ph6PlX57PB7jdWYS6/U6NTYBphWLxfF4XK/XC4UCJejet/1tlEqlgNZGUdRutw8ODs7Pz6+vrwnTJaFWOp0G6x5FEfyiVCpRUotInPV6TRIt51wymby6utL32Wx2Pp9j4aAKKILafD4fDAZUtDGzL7/88vDwkEE4Pj7udrvOuXv37lEQbrVaVavV4+PjVqtVKBQUcNHr9fr9fhRFFxcXzrnXr1+TBGyHCELGBUJ4dJLR2x8U6ZVLpVI2m51Op0hmt9U+gUKU3IMdVSqVXq+3Y73dSP1+Xyn/iQqhJsC265vNZqPRIOQklUpRZxHFjPKNzjmqLRYKhVqtdnJy8vr160wmg5iCuYL1hhywXC4vLy9rtdpyuSQvy2AwKBaLhGmsVqvLy0vbHkOxbf8SWLdYLMgsRy6yarW6bV9s29fb+rONnxQKhTiOqbSwWCzm83mj0Wg2m7VarVAoKBZpPB6TLmjb9xQBRm3I5/NmBhMjV+F8PidrTi6X++1vf8tc3Djv29rfNp7b5vG21u2ePoT+4z/+Q1gkcN1ETO04ePZ0i2Qe1sd06N8d14M4M59I1LxxDwzacDjErOWci+NYcDnntXZuf9/2dywhQUBQp0C98TjC8DBcO2/s5eLJZEK8qGINpHei7ihQaDQagWwnE7n5mOGNBkGrKajYzPhmw8UjmKpQjVwMB9Qwbhsf2l8ul4xJIpGgw99tFfz1EYMgjZxBWK1Wt9X+ZDI5OTkRVDmc9G3rbdvixCTAFM/nc2WduZFKpRKwaJYHjYNeVPDwfD4HRPnmzZvRaMQZxgrHC0mKHb6kz/DY6+trhAYizM3jSdmqN9K2/RsuYIJOQw/mu/ti277e1p9t/IShYFhoudfrlUolgoA0Ms45DdGN38dx7Hz0MudOGGalTYqhFDvxjfO+o/1t6/bGebytdbuN9h6ZHeR+/etfE6JmfgXc7ugQ9GF+YcVxzLJm+geDAdpJGFKxrR0JSVypoGLdiJZsZlTqCpHes9lMbycYNl3Sip/P50TJ0zEg2ahZPEUjwwagfTQ2tTCdTuM4fvHihQWxZ2Eg3wZpb0gK4Zuwb3EcKwMmFlfB06S14/8mhxjcgUwwNMLxIG6o4LTxeDybzdgVYVAil9EfjSqwfEL7cHNwvQJcaYGQV+cckHUqtdITDB4MY8jvxEE0L9hjFaPIo51znBDcSzutVosPw+FQMwvzVVoRjTaJPQi+QNobDAb5fJ4AsXq9vhFDpJ4LgQ+pZRrfEVn9ASTfaOwjLUejEboBDwrlLQtCfvjLNiERqvmxZVHdYlAiPdEIfGOE8/sS78KxitnfgnXCO7IYyK2ivaMQ4rCpRCJxfX29sc5phBpvFsTMK7w29oeu3hEpFu8AoW2spfl8ztJy3j5BI3EcR1HEqa9IdfUNtkCYsXNO4eXmw0/CAWFH9Hq9MCx/MBiIe/BX2X3UYe2O8Onik3zDB+Vr4Ebz4hcvi7Bifn0qxGZjCx8fHwt4wYszXNRtIJkNu4wUNUxfuIOcc/JQU/MSI1atViN+BwvTBvcOuy1+Kz1iXhMAACAASURBVAYoOAgUKkXyYYVrhv7cYqzoXgrZQR9dComiiG1P1dBwXlnHYgoSFLYR+An0FTJV0NsoirCrWxCgzy1xHL969YqVqqg2roRbaat/9dVX5vma8lVo6yp6LQwtWywWhP/xL5ZM3cXbDQYDRZrdSNukkNiL7bPZjK5+8cUX5EvQcJGrO2TQFshGWvTs6lQqhciCzsRl9Xo9m80SwOKcWy6XX3/9tYYxVNHCM9h5m00cZAGR9MZoh7mz+EAOUDObTqcM0dnZ2enpqcz4pVJJucOFGD0/P1c7LBV4ZbfbVcQgtmVNBH5fPr969SqMjyC7lyiKonK5rGadx99BQGqYWfRIDcLHk0KwEmORZtAmkwkn3Hw+xxf++PFjHcB6NCfQ06dPxViB770rt90KfWwpRKS1SjFhM8PSYGbD4VDLr1wus7rm8/lwOKxUKkxZKE/r9Vutlk4vrc/5fI7MNx6PB4MBka66gOnARcj1emXk4GQyGccxxXp47nq9juO41Wqhu2OxQFtgNeKyoSShju1MJiMxgrw4dKlYLLI37W1TAWNSKBTEAMN1Xq1WZQs5Pz9Hb4GLqo4MiyqVSsFXcUKRBkZoBqCsIbjBfFSzcy7MzwFHLZVKksMYooSvA2VeSkBC4oL1eo1Bwjz/lAQT8jHesVar/fnPfzZvbWIwUcyOjo6AEzkP0cW/ZmYvX76kHcAlBGAzs1KV+ZJS4bebrmIvheygjy6FmNlyuWSZMvqLxYKVynOXyyVefGkhN1K32y2Xy0qrZ14XVDlyCzSh6XTaarVI5ckbIROwvGQDhENNJhO293w+x1RjZm/evOEW0hyhGLF5ZMeDv7daLT00iiKugc2JT22oNSFtk0JWq5WYURzHvEgcx5h8ZaUMPZo8rtls6lCHa8xmM6B2rVYL2yDNYl4aDAbU3uTpyCjQ0dERO5yLY49WCR/KsY1phHGAHQiOWi6XufHg4EAW9evra2WDMH9yADoj6VOtVtP5qgSjTJlsMKQN6Pf75FAyM1Wi5y2id5KeSYcmYcl8Pi8UCvQErpdIJLQIX7x4Edrnws8fTwoJxWgxdOdcs9nceChKubRVMHqvX782z+upJvPkyRNmeXdSivelTyCFkOXTzFB/30WhEjRhb8vc3FIqlZRui5NMJyXjwIbq9XpU1ZEhDWyW+ZO+2+2m0+mLiwvp685bYkgEInzM4eEhgbjhRuaJukW+gMvLSylFIFfMp+uwIEMGBAsCR4V5jFejAzyuWCyy2cO9iTDKNyHnDA08z549Uxo3FwhkdGNDVlO2NCQb4CZ8w5GvEFngHfrGzOAkRMWzXJ1zP/3pTxEamEryjjAUlUrl7OzMzGAalD1SfB8dTqfTWtWw63K5jG3JzLjdORcH2ducc4vFAkGTGxlMJX0JRcBvuVC/De2lkB300aUQWQiYddnxyJ9tfu+VSqWNFJk39NWb/mS0VO6p1Wql5ciXsADei0fgLjG/vAaDQZhnqdPpsMdkZZEsjIwiqwMt8zpYULhd1yOnx3HMmpbP9UbaJoWYGVk+uazX663X6z/+8Y/OKxAyIIeDo0EQx4GkUuTzefE4+Ym5C4yYCK4Ux7HanE6nqBFqgdCA9Xp9eHhIf968ecMgU5TVvBNE+o0Fvi0GBx+WBVpp5JNSW+D85kY60O/3l8slh7QEyjAHZblcBqFGsTfnHNEK4pIsGJXV0NMZ3jC37GQyabfbTKWkjY9tC2k2mzJxh5iAjX6a2Xg8jqLo8PDw4uICNZ0zezwey+fFQM1msx2ewfeljy2FjMfj0MwGHpk9hSU/iiKmHq9EePpKCdY3jx8/Ni/VsRm1fWgNarfb6EVIBtR/lhHUPIdMpVKccOGq5nijNuGjR4+Wy6WON/Lit1otFvZG2kBuf/nyJfWWI5+b3wW2h1KphHyjEHfn3NHRkQwJGiiWrrIC8iIC7qTT6cgX6FC3zfNSCh7RlEzF4iTO24SUzjWOYyXn4OkHBwfqjGzGrEY1QsEQMxuNRvAc5xzhb5p6Pe7rr7/WAtPQ1et1uWjNK0jMrKBdVL7EhsRMUTUCsUmB+s6bguwdXVFW/FuhvRSygz6FLYQ9g4dPjFJ7ybzd7/T0dEdmcefNmCwjIgNpJHxKNpsVq3Uen8U3kofCTHnO1yZQx8L6AnEc4xEAY09r2nUEEyUSCaKdablQKBCbJ9lld67SHbYQTCCLxULGQzOr1WoKzWBAcBwcHBx88cUXxKPGcXx5eUkJXAwJzrtCSX/kvF0U1glQnNcUiMS8VyWOY2WeTiaTSllII4gyzlunxODQdThBGQqVvWC3E5xFvRJynsJlKL2BSVnZmhnDXC7XbDaJr1ECJaYDw2wcx/P5/OrqCmZUr9f7/T6oePMW3SiKQuPwyckJ8oqZvXz5kqMLxhQFRVjsbXDPR8WFoONCVKfLZDJ8SSCABRKbeVO/BSdKWNfm4OAAgYZkkbfVyU9gC9EiD/UKMyMkR+cla4OoUQugrGpH4wO6mV3Dsnn8+LELCPSATjIqPFuQinc2m21AlOAMdKDf71MhiLO20WgoAjx0DPH36uoKwyTZP3kQ0Acz6/V6OhSp6nJwcMALhuzr4uJCOJh0On1wcFCpVDKZzOnpKfv9b/7mb7hSCNNweImhs7f9VmxM5xxuaKJ+lApFUF8pYGZ2cHDAEMkoBevAyM33P/nJTyRPTyYTQfI3/updSEVTrVYpZjSfzw8PD3UBGhofptMpQmHYCO8Lm5J9yzk3mUxevXoV2hqZHUYVF2ev1xsMBt8yJ++3pL0UsoM+uhRCyPhisWBxmxkFPGW9YJXoGNjRFK5KC/Dw/KulH4IcOV/hUIVCQTBsVv/Lly+HwyFJfp4+fariRvZ2BS++ef78OWF45ll8qEygzeuhQuxHvnSF7Tyltkkhof2cVXt2doYuFU6QnEqNRiNEvWw0yHspB/bGZfzFYkQ1LCQPWMkGcAwccRRF1WrVAgQJb4onS1vOOYd8Q2dIsoQ9w3wSdHwx6CVotJwQSFeShPg19qUfUFU10eZBuGLKomKxWKvVSHvANxjhAXU658DNhWjZ0NwF5GgymYTc/+NJIWHueeec4I1mhsNe71utVuM47vV6wCDMrFarSY/UgeECI/wt0seWQr788ksNgj6EL0XKTjxQygFjZiyMRCKBv18oV3kZNh6EGKoYHywHoQHABUnA6vX6T3/6U/3ETqnVakoHwmUnJyd8ViEV8zKQkpjdu3evWCwirNAT58vmycNrwUq4uroCycH3Mv5hu71///7al/1TO+YZkTjhwcGBzIFHR0cq5UgH6vW67KMqSDmZTC4uLkLbKp5Q83qdC6AegtA65373u9+ZX3gkxTfvuEHHcN58i63IeVMHAMGDg4NerzebzQSXCTc1PSGm13zS+kqlgnELszoeVRYGphR4UQhSVlPm5SpiFMxXCHrvhbuF9lLIDvroUkg4zS6QdoHOlUol9LZkMrkDPGFm19fX+Xx+OByGTs3RaEQoBPkkmOmjoyPAYi7IzksjLFbz3mIzy2aziD6j0ahYLALmEHKlUqlwbBeLRQy/4W7EYSnALNczjPQKZXr3EbXDI0NTYFnMxwRR3Vv2Z14cB7CqbAgNzguKfWMwEEs1sy+//DKcFykokqUY7U6nQ9QPrDaMhkW8Q2GF4zMUuVxO+1z1O8jV0e/3x+Px1dXVeDzGYKNDXWECmGpp8+LiguwRjUZDeGHcOvA7boeB6n25jC6RDiSEmzH7g8GA+vXm2Wij0UDP5jSS39DMQqDPR7WFdLvd4XAIa4accxLQhY4kC4uZPX78mFpf4f7Sy04mE0xBL168uEXA3adBpzabzWfPngH92RhqqS5UKNS7h4vTfM22fD4vmDOoIJwv4ZWyWQo9LXOLC8pMvuvrDLFT4dnmvN4vVClUr9dhEcj9zqthof2/2WyC/sY6iOAePpfuIQdIC2JthPJHMpmMfNwfPVciELXGpp7P56T8QtAnPSAYWw2CnJXD4XBjnOfzeWhQITOKutpqtRAjTk5OONpns1mpVEIPAezlvL1Km2symYQr9vDwMPSh6xYNI98PBoPPPvtMlYCIpdeYdDodEitjUk2n05Jvstns0he3Qkux26O9FLKDProUUq1WFSOXTCZZxCij5kNqLdixu/rqzf6dTif05ppfsvp3uVwmk8kwHtiCQovhB+e1THtb61KshL1ta1FkCngxYQlhK1j7nfeSCkq5Axi4TQpZB2XtdIrLm7Dh5ZFZWLXc8BZJxc/n8xofbYbQ6ctwxUE0spB06mG73a5Wq3Jdu8AI4Tz+bsM7oI6ZdwDRwxDOAluUTxfzqfi+vZPYg/rmDAieePMl6Oin0LgM6cnJCfVowsogFthjaVyAfJAB4WmnaMNwgYVTdotSiNAwLqBcLlcsFulDJpNBGdXshMIHH9D5xIidcxtlz747fWwpRDVgdcBr8cQeJ57NZmXjAbUdFk6SnoMIbl5O1XLacFKwU2SZZw1spN4Jra34yKbTaalUgqXQ8vPnz4+OjkgFJl8qFlO9EbIykAXnk36aWbfbZeNzJY8DMc2yR1MK+y+tTCQIp3zH9k6sEIlWaQpRRlxuA+yiIcVZSSUa5xzZWqUOmVlY5YfCCM57semDWAqhs3ypLuF8NLMoikg2yK8EGWid02dEtHK5HAZmh3jBMCkiD3rx4gXm28jXB9avoXdPOSPIXPfeC3cL7aWQHeR+9atfWeCA34HMEEkt29AY+CDdkcsWi0UIbAZzwMlBFOJf+hFsgBvbMbNkMsnMgb8zjwDV7To8oigqFApsafy4ipsVEj58Lm8NrymXy/P5XLEG/LRYLFQ6wYJDyPwphYpvvog2ewxlevdqi+MYISaTybAPUUeE66bItQWiklKGcKaenJxoeGWCNrNMJoPJh8yPmiMJT6HZX68TYrI2to2ZkbRx49dQj9kYWMFHFC+jvOlchvZG9zKZDDxFQI1QehMLE8BZ3R6NRlotk8lkOBymUikOKvoj65Fau7q6YtaYUGUqSyQSaEgwXAmCkrdUntS8eXnH5H4AoU+rzrCOBEWBZTIZlgc7azabETtmgQkkl8vp8BuPx2SRsZ3S8IeRc469HKYXuxWSU1LyKNIYU0PmMaxu4fmq2F1Sl5K6I2xEJg3bsn4UxyctfLlcplIp/ctq1zpHHOS8V1QaYwK/IuVM6CkLu70xcaw3THGS/kmjbn4LaJDhUeZ1j8lkElpiEKTMZ/tQV8O5C/3FgFSE+iI3vwVbA1lWqczMbL1eK58N4YFKrhM+KAzZLRaL8Dfnw3aI6Y3jmJSmoVYm047z6eAkEoX+U0knUoTM+4YmkwkyHGBhRl6xjWaWy+VCGNbHo70UsoPcr3/961arJeQdHoQdwBw0yDBEUKeCjJyqrdzpdMLlKJebC4Dizrnr62sCJpUU7912ZrNZLpdDK5XfV126d++evBjoFqF0LB4UGkWm02mn00Fh4kYkG/1Ltm/zWkIYGKw9wCCQkBg3kMyD4/GYXzVW20jQCkkS5pmULJBLn4Qtn88zBTwo9nkystms3EAaB93LnkfDlkghZgEXSKVSPELMBeb4/Plz82c/WAQzQws5OTnZsO6en5+TL4vECTKk448PT0FCT51XcDWYZG4Gfcya6XQ6PJ1EEQrgfPHihUwvZkY/w/dCNDw+Pt4AdYbcKpPJ0DixmuVymQAc8+4quPlGfjyMMdhXdlcSf1+S9DAYDDqdDj1R+od3D5JSqdRqtTgwsKiHr8n6z2Qy+LxvsZ+salReWaFukRTaGmIS9WipDcxdu93m4BeUJxwlGeSiKCJNIo3fuH50YFtgighdfmQTN7M//OEPaAhqodvtir9tOG4KhYKyEJEEHWMPnIoeyt6p6Cca4aVkWEVs4kuGInQNhzUFyQbkvM1MFpd2uw04zwIOg/tmOp3ST+6SxyeOY9zNmuhOp0M/z8/P0dCOj4/5FRxeqKTR/7Ozs3q9rjHn7XQka44o4qMkxSBPF4uFouiFjMFvu5EwCQSxWNnGfkF0w+CELfx2UajbaC+F7CD329/+NkzjoU0YbSEZRUNngbIvLINs1uYDyp1HbDhfOij2eS80Mc458OHb2lGSUAsiyM3vClY2eMYwgSZFUy0I/CMfkTCA6XS61WppicjiChHtYmYEwjhvabQgnAwQRvhEiSyr1Uri3bbx5MhHr83n84vF4vr6mgX65Zdfxh6MaWZgaPjrArgWAR2MiXBeZobnCDY9Ho/JCUZ/JDii8UigtLdtmCF7VeAfWVxpgdwkMMTJZPKnP/1JepXz+mKhUMAlTyBM6LwQoE8pg/hekSlRFIn107EQPCRnuS6Ti03qEVDikBkRqPXmzZvw+7DbIay43+/jGgedyjhcXl5KDEU+wEt1KxTKiHwgPBskzdHRUaVSSSaTq9Wq1+tFQY4HFgNrQ0lcWLScNIjvt9VPxHEJ8dPp9PLycgffeF/SS0XBO15cXMhocX19LdeqrAUKVXXelkYu0fv379PJUB+4cf2IRbAA0um0cuzWarVQahE55yaTSbPZVLdDWwgoKO5qNpt8lu+gXq9rxoFiRFHU6XRgVqVSSalvea9+v49kpkqKenEBS4X+brfbDBfpMa6vr6vVKmVplZEPF7PkIb0RvNE8o0P8FYaXh4KEPTw8lEJII5E3SIfceCM/MlgZ59ybN28Ig5fUgqBAzzGcoBvj4eIaheYhbQwGA/lM6WS5XIZXZLNZIh8JReaV2+12iJBVYuKPR3spZAe5X/7ylzry1z6F3O6ELf1+v9VqAYOIPPuOfX6OKIpms1mr1WLDU5uNzWP+2DMPSCb4jbMtDkqyvduO4Mq9Xo8s4KPRaD6fY0+ThM6iRJxX1nD5IxRKamZ//OMfsanwrxAeyh1kPnBL8WYbR50ivqQLhikurq6u+DVEVL1LsnyQLVQiPMYDuT+iKKIdDB4SbmRSEvA78toY25KDltJTqHHOh64pH4OikeU4R3YEghNFUYhcefToEb0K60GEvomzszNpWublS0QlwWaz2SyuX8U9hpDbarUqla5SqagPzls4CFBELom88CSGSwRWt9uF6TCPTLTUYrkgQZBcXFyE5W+63a60QFrQAgt5RyhG3xYtg9TUiuFkwHFSsGWUOs/8stRSoYfK5q7LyDB7u73dGIFbZKxywMGLEHeoJKJIKxazFkb49EwmI38oiyQMtMaWcOP60dM5FwXJ4qDVqu73+zAZpAoi9n/2s58xIMfHx6wuxfbbO1FpsQ93koGw2+1SLNfMQE2G6Z5XqxU9jOMYSwMMk/qx9XqdiD/nY/IbjUatVqMDxOyYNzyz1NPpNIzXvJ9XCgksYjqdZrNZrCnVajWbzYJtJ9nGs2fPYI+8F2bvcIfyROYo8nE6GnALZAjdqNMHAQLRJwSQomspTAml64svvqBB0KyhlV1+mdjHCc5mMzFkLd1b3xfv0l4K2UHuP//zP82s3W4LfLBbBCH+zczIxGAe5IjWbr54tHkPt5QSC3IEYevGtC4TNO1va8eCxGIb7u2vvvqKREPmt/raR0BwgTDqHNJgv83XK1EYm0zxSBUvX77Ep2BmuVyOR4fZcizwXgsx1+/3Ly8vkd+V52CHIAK/o8ICyU6kaiyXS/TXMBeZVKIvv/wSOYMSWVyw9OlTZe+xAGGz8W8cx//3f/9nAX/k0Aq9+zNfskR9CKuTYJXV01ut1iqol6EwE3UpfGU+d7tdAThkoQkHxwIm8u678L5YmPkmCmwt/X6/1+shYzGnzWaTF1EnLUAz9Pt9ydPmYW6EwpKIZTqdIqSenZ1NJhPseePx+Nugqb499Xq9yWQir/xwOJT1+90+m9fd6TYZ85QIjo5hhbrdXJAoA1KFMZuHEvytEGdhv9/XsURCWPUhvDjMIy6Trb6JfALDdyOuw/Vjb1cPiYJqDxYck8I6hCvz3TpzURRxHpOeWGWJzOzVq1difTJawEuZdClR2L3UcqhThZmQwpyKZtbtdmE7sCO6p93RbDY3FBicgBvgcVWtm/nafjSFcSWKonAK+HxxcTGdTsPv6XO4c7WYSdCn4YVjyBkX+1xkkTdWqfNyWG9UrpD3So+QsEjIvaw4rCK2vH182kshO8j94z/+o/kU2ovFQiaHbZYl8ymlP//8c3lb0OMZ6EQi8fnnnzsPwprP5+AunUeq8wigTOFMKKD8xnbM+wViH3USRdFwOMRmwMJFNidche/XQcIAxe4qyzJqurIswEnVMZZ1FEVkcCfZF3qA+azqqo2ifKnCkZlPXRB5++S28dwIuJBVgwrdfGZXwwV0Wktemc/n7XY7xMxDUp6QZnBjx0GxBnV1uVzK96G/dEDepTBt4oZcpeI1qqHDRMiyJYOWpJkw7SwfOPIR7M7Ozpi7ma9HJdebDqTZbDYYDOA7YOYZ7fl8Lu+bBTYbZpns/uZ562q1UlrMjUAPzo/wS7ohjA7L3m7VI6MFY94PxVzwFtgU2UFYTV6+fKmDTdYg8yjjDZA/cv+tEExcI0CwG+CDWyHeEawG4ng4EQSymlm32w0L5VxdXfV6PWY/iqLhcHh9fT2dTrlY1aTx+d64fhix8/Nz+XBRhzh9dXJfXV2ByYBXSAPhFpZoWMwScUqzsPapyfgp8izCgiKdqPV8brfbiBrMaRRFSq0hPOl8PiekWXtWpYAZUt5d/GE6nWIBms1moV6nTNP9fl/OVrak9lTsy23yspPJhEj+169fC0G1WCxCFYXFeXl5KQS6shjgOEbK16ARyT+dTqUwkEyM/iN568DChxW/XUxKW1vGktCQ3Ov14DYy6n9U2kshO8j97ne/k/Us1Fa33aARVJJpnSIqL6ksjRuoLi2Rr7/+OvJGCxY9lgN21I3tqO6lBGdCulVlSnoJRR+4BrXSAv1bBcCIl4l81FYURfDQcHGEfW61WuzV8JgPi4BHUSR7oAw5ZnZ+fr4jNoF9QuKpSqXCXr2+vqZNXlZpThTUih86HAoLlvVgMFCofRga8O6/msTIawmaL62KUMU0M1KfScIgepkOwC9CtNdgMIBNhPYPXUOQFEzh/Pw89rWL1RN56DYOIQuMGeK5obKFn5gHCT368uVLBSZIkuOnq6ur0WjEbH799de0qYIjkBpninEZVKvV2w08YRGGDoLQd6YTSx4lCCEgiqJOp6NAs8ibyqMoUrT8LdJoNCJcSzL3LTauVaR1SG2mG1Vqxid0FNrbhhk0E8XKoj/w08b60arWRg7Xdpj+J3TxAP4wL0lwABOXsfKZ9ELwE/Y5Zd0AKWlmoUwJZ0DwpQ+tVot1G/vYQEk/3M5leMxphNEAyQR6T7drvhQBINUCpdQ8oCT2SfzQglQEiuxNG+ZJM1OKvw1RT+IaDYKHi30xCg2s7KPmAyRBrOtBzKyuaTab0qwkZi2DvGpRFJ2dnc3ncyV4VVff7fxHor0UsoPcP/3TP8FKVElZnsUbSUGM8uKrXoM+1Go1XaYbHz16xIdSqRQWWVZiMYVx3tgOlgwVhg1vD9PO6EY+ZDIZmWr4Ru7k0LUMKaI4rElBm4lEgmqlzvsmdUsikdA3qlSiytTOJwzdMpz//xClUil1hhK49IeeKzSRa6rVaq1W0/W4pZk1/MSJRAKTFdfoSv2LHUvhx/pJXU2lUnx+9OhRMplUP3O5HCAPDZcqaSlSkYjKRCLB0srn86lUKlwMemKpVNITtRK0PDKZDD1U5cx0Oh1WJdUrhPNIXhB9Q54358HLTNnGjORyuVKpxJThZwmnlf7rYtYnbnhV7botAlIaNivrIP3nGr7RGuPDyckJfWZ4NUSJRAJLXriwvzupeClDEdZt+e7Ei5RKJTVbr9dVnz2ZTIpradOxMMS7ksmkPqdSqVwuJ6NsoVDYsX5cMMJcr92kl+VZstoyDpqyUqlEOmAtRbak8zPFRChlcLFY1PZXUnl2GS2HL8KNdKBcLvNQ1ga/8hPEpqPcAVfSYLFYVJt6F9hIMpnUuqJ7XInLGFyIbjk4OHiXhRaLRfpTq9U0Ke+eKfl8nlkO/zq/BWiWzQgDJ62zOhzyE5ih+EYymQwhaBsvog8UgAyjij4e7aWQHbRLCjk9PWW+dYorsOX7T9qKVHHUvn1f0hnAOmaUYBlavrBjjrf3bX+bFPK+7UhqKZfLgvLxE32GmwMxUw0qsS3WANxTu13eq2q1um080+k090IbNbWdz+5KUhMtJ0knzo8ePRGvd37A4eMw9HDQuEsHM53kGli8fmJgxePoT7FYDKsHvxfdihQSMmVkSuelh/B7famsa5wEOtWcH7RQsqdLh4eHStQGW2deGIrw+g+jG6UQmtWYEGXmvHCcyWRQNuizVk4+n+cWvuGoCwdWQafhSS/lROtZmbVccNLwqwQFrauNfc2C2Tgss9msRPZMJsPOkr7ELYCptSMymYw2V7g8pFow/tVqlUbYBYQ1VatVBQDyFqHOQ9/K5XLYeX2W1MXYstO5cUOUCSWwRCIhuYrL2Be6BkI62c2XGBya0lBoilV0VyskkUhwoIjvIVRJcOF7uq0144KCYnq0nsLFKv5AU6VSiVtC2bFYLDI1kmthd1zJu/CXy+B7mrvwxZEX3635HNJeCtlBuzwy7XabxF8Y1T+Z8epWSAgGeUY+LC5cCQkwyWoQGBk+D4dDcCofAHTa5pF533Z4OsbPEHomc6u6HftEqFEQ34TzEg+Uhi7yeA4sujeOp5KqQSobYR4Ks16vz87OGD1diQM7vIVn8foAyrhYCJUwMgh/v5ldXFzwLMqdy+lD4Kh5l3zkcQZkH1Hy7A+jW/HIaK9hvtbICJcT+WRTFlQhxrIN2loQLlUttyDUa7VahWjf0WiEe0v+R7W8w/26m270yPBXqEY1DqgLJIT5FbL2Gf8Izry+vmYwV6uVkhjxXmS1Nw/LxZIvxiU3q/lAiRC922q1BJZUSkBl+lIQSmjJVzcufO8z6wAAIABJREFULi4iX9SQMWRs6RVQdG7nJ+ZltVqxX+QFm/skziGoiyeyJYm71u1huXktA6Upk8MlDNClGJYeZAF2XgBwuk3jgCTAfwCJFfuSR8a8n4tHfyPAWbVv6IwFMV8QgBJcQiFM3rx/auULnuMSDReqblF1ntBRi8838hUN+SwcsaBC6uTz58/DE4ElofBgQDD4euTH0UTI4dvv90HkCFS7jfZSyA7aik4Vb5WD8BaTAXwCCo9hgGacxO/bjnnUauRjZQFO2tvgQfPQig9o/0Z06ge0sxGaD75B0UNC1Gu3AFDXZ8H++YZ9q2WwbTzDvQRHPjs7u76+5nYFUoHfHAwGKuexXC6RLRRJxPdwvbOzM+FRwniW5XLJ2RMKHEL/wLl4TRI/WyB4bUgeAsS8F90WOpUkVMITcOBpBoWq5vCmmAj4AMaHidPaU6ZwFWQ3H2UgYGO4QsAV8ZlZeN/+b0OngvWzt8GVAmOaj8NSpma9ggRl8KSaYkXGXV1dRR6/qVXHnG7EdEhwGQwGWu2DwQBsBGe82BqtCXelCG0F1vF0QOvqgAWi4Xg81sCGWUMgwtBevXql9YySgPRArTjzG03BUAL3oBgsl0ulLTGvOahBAnCiKGJvhukco7dDlKlur/BjRjjMLg14QtBXQX0lh622kPSKcLfSJVLHanlL/rNAatGKtbcBN69fv575OsaITdp9FqiI2v4hshBhUSKpJvTi4oLBF9S91WpJ2hAjCpcW4BhG5uXLl0iZYmVM2fX1NWE4N9JeCtlBWyN14Q6wKiIe7ZPEVd8WEdEXeXU/5IPvRWGIo6Cd6/UatJQ0M4WxvC/tiNR9X1oH1X2Vd9nM6vW6ijOxnWTYxIJ9fHyMDRk8R61WE3uK4/jNmzfT6XTHeKrPWB10JOh8dUG2FdFGrCmPI5DH+aTy/X6fFRhF0Wq1ojSX7rq8vCTDDWkDpGUqt5IAy1EUcU5v2NvD+snfkm4xUlfM9M2bN2GmGSWN5Y20/BQPFSYR4dQENrhYLIT13nhWFEXIBJ1OJ8z8JrX7fWl3pC7BDs7noyNbHQN+cHAQWt05ZcXHeamlTxGr0CpptIvFQlgxPlQqFXn3qb9qgVxC0CYGho1hD8chiqI3b96Q3Kjb7QJio315kXSx8349HqpEf5IF2QukJNFd2WxWqze0WFiQO8t87IYF6QDoHk9R9QYXFEZwzjUaDYXvCbnsfEK55XI5HA5PTk4kzylOlYlzvlCOnhja6hCG8NSkthAeNMUMhij41WpVq9U2hDPzEF3C+2EdyuxgPuLXvKSivQyLWAZJhKMgpGCxWCDVyXIWDuPSJ0Emmg+LowuSv1mQxQRxTfeG8RYirsxms98oUuylkB20NWtZqJYJ0nzrMPuPRzp+tPHWbxck+/YUBTEL0+mUs0HRMf1+X7vlA8ZnvSVr2Qf0E44sBGLo2VWmxTiOFSI7mUzCVF0WpFtWmKJq2ewezzDi3wL9FVlNpQe73a6AbwcHB2jPGjQV7CUtesjB1z7JPTKNCyAsqjsooIPyQoZeW5I9u7fL04Qc6lvSbWUtwwsm9xbhQgiLsuLIYkz9DkXeKreKpEALNEjGk+kLYyXCTHcbyQk/bF/YlqxlOs/iOOYgt4DLv3792gV59M1MKZs5Ec/OzlRAJLSUyBqnYSFGNJPJ6NfQ+M+kq+i0ABkCDIEzwKmHPEoFCT2CEjzYSzBzKjd8r9cLpWoABJVKRfV15WnFNTAYDFKpFFODd0MJElUtYTabCfUPVpR+qiAclgCSfoZyhgWll0JBJ/b53EjVVS6XR6MRh3QUWGGRb5gO0vqFcP5Go6HxNC8NvEtSNiyIih++U3oXwwAzFcrKmuhardZutyXEIKnIrRMmeXPOSVLHrBtFUbvdbjQaG5Ap5KdqtSqMVC6XQ71ZrVakml36JK10lcQtPOj58+chVj2RSFxcXKCShbOw3lmpYy+F7KCtGdzNa5O46JRj9H0tt3dIBKxSGcTMMM29byOwDJmvOczMzDn3xz/+kc9aTx9g2V5vyeD+vu1EURTHcVi4h7g1C1jA3KfGj6JI6XpkPhHL+O///m/WA3G8ctDeOJ5Kv6jKEaSZioIqzel0utPpgEtQYXq1Y2akwQWjCp4fjZmuUuZqtVpRLtx5Yw+VaGiBQ1dZ6cher5lST46OjugnKrhz7n0HeXlLGdyVlUHAF6aD8bm6upIyF9YBfvPmjbJbAoimHQU+6L1OTk50kAhI65wjj0632w0d88zve9G2DO7Io81mU3YRZbCNPDoHKdMCoQErDrZ9zuMoipT4XLZ01moY3caZTdlkFwQNcT32IdqkwyrWGpKWrqR2xDsKvqgpM5NwkMvlHjx44AJDCJOYyWQ0qs65n/zkJ6EoDG0Ur0A+Y+8rKHe9XisRO92+vLykWFUikeh2uxslDF1gPlSbbMwvvvgi8vmUae1///d/8WusfXplCmb96U9/iuP46dOnoTalu1yQjv1Gcs7hf8G4G0ppx8fHIHsQWUKHmoRv/Kq8SLfbhbGoxLHibjD5ZLPZk5MTWXOdc+VymZWmwF0zo2aFMu7QsnmOzWrckJJhEXyezWbYGsVzlsuljgA2wnw+v3fvnmyK2/bLXgrZQVur2YXZ7mBw4/H41mtyfmwiis98Vr4PbgcUm3iHjp/lctnpdARW+jCPlRR9ydQf0IiyfTtv+SgUCgqBuTF9KlkKIm+T1DVwQ9mrQzftjeOpAn7sTxnhB4OBQiI5NszvZz0UqYt2nHM0VSgUYJFCzFhgpXe+Qg3VQ/R0oUOWy2UqlSLfEeWXlWjB+Qo7y7erxL0vxbdRzU5jiHp6dXUlS7s0eympYYW2RCLBIR3H8cHBAQOezWZD4EsqlZKLSgNoZvfv39fxANzkA6DQtr2aHT0XHJJSD/SBYBOEoTCMy7wVxPw8hg/SpuA1T05OyEAajgbHm/NWCk6jV69e1Wo1RU5x9h8cHCC48GigygyXniX13QXFBMyMrH3oYywqJVRkTYZzZ75CjV6kXC5HAayk0WiMfRFaGQ9oWb1VLEbYq1wuV61WVZJpuVxiRLTA4+yCwBNGw3nDAMEpDx8+zGaz7XY7jErT/jKPmRiPx/l8HtDrZ599xiK8kdjsPF11dyVwvMvZhAvWatywy5pfsZhDnPfqKktbJpNRHkLzVpxer6enqKlut3t+fh75jFALXzCZv/K1yXis6DkUoYuLCy2AcCQRhiRTplKpHXxgL4XsIPerX/3KAlfiBguQO+a7HJB3QnKxa1PFPj3OexGAL/lNnDfp6+QWQkL76r0Il8RisSCgH132A6SZhc+mL2ODYGJhVSoBuDg5dMzLHrZRoJIjUHe9O56hX0bbLMzmGUVRLpcDEDedTnVo5fP5cLiy2Sxmp7OzMxdgAqIoevjwIQVIC4WCOhb6ztUrdN+w5+Z93rxd6Jext1net6QQVRdWz3lfUl5O/lVx5mq1yjvSf6YjfNnQ9h4FxcM0FIhH5m2Z/X6fNsPiAwgfCoX7sFcwb5LRgDA4yqClt1MBB51J9DnMnuycUyVVzPVS6/W+evfwXfibSqVAyFrArDKZDF1iC8hQxBPpOeOMGFGpVEADsGjlVsjn89gOy+Uyk64SLYlEgssoaq1kcXEcJxIJVH86RnG7UEYJxR0ZmxWrwukYBcBzmcG4Umo60qrQwWrffJiSxo21lEqlZIZksjhu8TopklanMoNJ/7d5ZMyzkdVqxY06nqvVqo5tRMBCocCMCHLLywrGIZmbNRxFUTKZlLjMimXEGBnk+GKxGPkYgiiKjo6OEA1JW0ICgkKhQE457BNh+DFNZTKZyIPb5CLX1uv3+6enp3JA8wFhdDfT3kshO8j9+te/hp2Z54nroBpW5BM1MoIUT2LPrNdrSdlMrQUKvfZDKGWbWblcns/nAlKFt5hZu90WMoj+SEVIp9PoT6jIq9WKNDWVSiUsd6e0Aeah1zSuCtfapbJXW+DJBvYR+1jW8Bo4o8ykrFq2pRLjwGcZTwaqXC7vnoBwD6szHyCFCMuNodh50yWZkQTL0oOU1YDUcJhP4BHE9Cs7qpysFlTym81mSoSgPug8SCaTS1/Jj5bDYY89ZjacOK0T5Q4hUds6KIfrfJEtCwqHZjKZfr/POLNalJGdLBHKe6bzzDlHsECxWJQ7yTzLs2+Bk9gIa/oA6dZ8eRcd1e96+gWy4ZtUKoXjBjCEBUi6+XzON6vVqlKpwBx5RzMrlUobQEgSYFsA/Hxfkujj3kaDmpkKdoTnq5x0gC3s7Vylzgv3yjmhA4yiuLISKSwln88jRofLQ+xiMpm8efPm4ODAArkNh1E6neZsFk8j74gOJIar0WicnZ3ReeQV3NMcxhyiVEczf4qrJzgQyemiRDsk7sOdxJdRFAmjo5XpnCPj30Y+jOl0StIdvJZcn8lkhPhxPjsZA1soFBTZq40JkKJUKoXpgJUcyAKLo/gJiN35fH5wcAA4SSMc7h3z8tDKR+lrLhaLBTOuagzKFYs5kCRj4UxJNKTG3nq9RkwJY3SdF1Nk28jlctHbWA2ul8jFbCrCkbWHb0smGTFhlgqPUApHDpd2ux2OEuKm7UwfvJdCdtBWKcTMLi8vh8MhbrZarSY0tfmJ4dziXuEfAbHb2zbkta/sylbp9Xrz+Zx8O3KxawrlLGfFv3jxgmODJaXtStwUWstGkTnEJileiURiNBrRn1Bb+ssQ+PUU+SzmOCnD88B5Z0EqlRqPx+12mxdHGdU+TKVS9CSbzQ6Hw+VyyXrdoW7elhRib9fODj24iURi5atRRFHEqaZKHFgyGRZ0bjYklXHQ8MIRy2Qyl5eXqJ46ikIZNNQemAgdIYPBIJfLEXGXyWQInrQggzXxq3gcKL6FpZ2A1VwuF/sibahNUVDPk+5FvkSqzmD3tjXVAqSCc04hryG45xuH+rtLIVrtlBkLIfoWZIZg5ZC8XOoy3+uVCchUcmHx3JWv6OF8UixIgZHmJZUPSKWzTQrRsEOTyUQW7zBRLzmg6vU643B5eYnTPXxEmGpCIZ20QEI259zh4aGwIMosLHHE+bRjLvBQFItFJRg0f0TxdBeIy/x6eHiIpUE9QcUP7QSaiKurKzw44U5kxS6XSxyI6Nnj8Vh6NoGmxWIxnLgoSD7Efln7RP6VSkXsDsRMIpEI9ztpF6S2qXusH212JJLVanV4eIiVUcIKo8eWpN4nzDP0HStTXKFQIFuG+L9WArk0hDW2dyCc8/m8UqlcX18rSjaULcz7vsHtsoVBgz169MgC/10cx61WSy4h59yzZ8/YO7LPaRzCWoNyDZtPw396ekraeNoJBdZwYfCBMxFWZjtZx14K2UFbpZAN5xnagLg22yCfz7daLZDbeMUkwzL3pPlj1SIOhzvTOSf8Aftc2SPW6zWuEDjaw4cP+Z6Dk5K8FrBC3IGVSoWyBWEZp3ABHRwcxL7Es1jz06dPCQHXZWF+BSoe0YhOO5plMVUqFfOJy9zbDgJoB3Dabk8Kcc6RS1QhAEpb+eDBA6EXGUYFGPMvigj1d9brtTgaAsp6vQ5rVKqTTNxsNsPNMZvNyuXyarVCiIH1pNNpzkssvdJgOp0OD22328pVxZmRSCQqlQpCLSZW59WjRCKxcV5qnFOpFIV1iO4JB1CBx/iSaRBAjHAhysdg364eyneXQpSgQkZHzBLOG96UriCUn54/fx7+K3fAcrms1Wqcl3FQrZDdWq1WO52OWKROC6ExPoC2SSFCAmrZOy8Fhpsi/EmuQ+SAMBs6fzU1Kq600TiDoHUbRVFYrJGuJhIJVeRWtLMUdw4wSRVffPFFpVIRcBtBarVagRxnhYTuMHlPlj7hlYwKhNGNRiOp+/StXC5Pp1NdjIwCeNY512g0CMpIpVLVajXU1IUIjuNYBQ2UEDYc2w3dTG+HQCNRSabu1WrVbreR0pzPd6zbMQKZN/xowMvlMm9UKpXWQc0jSAqh7ArcRVqzdDqtlcO9JycnWFk25HKYjFadMr7gDQldlvoLH8aMAVeUPQNeJOQyU6m1BxxHjJR3RFG5vr7GpNRsNjW/fAD3vY32UsgO2mULMbNXr15huXI+b7H5asg6dHHG12q1OI6FJCKdl8ad+o0YyfHzAYCH1V5eXrJ/MNABauNG6lg6r0lLveMpKV93xoLVYG+HIOItAgUJ8MICz3Sz2QzTBuBIUjE5yU/ubW/lYDDQhnfO4QJHiceQDvSMkQTUtm0CbtEWMplMLi8vSZ4RjgYnk7xOALXOzs4YAZSYjR4q+xPTxBgyJvl8XvxLxF3JZHLliwATFyOOQNTDYrG4d+8ebnLnXJivybw8h+YBtC00dHc6HaE6kK4KhQLMt16vh5nj7927l0wmmdbQICcQpfOesk6nc3V1pcUW+6Lq3zjUt+KR0YNevXoVwlE1+4TehIq1BcBeMsw2Go3z8/PQvwAKx4JwCd1L3JPzWqlAYNJfvz1tk0JiX/MZkyGTyMJDf5UEIPmVwrlm1mw2T05OzIO+aU0KLpfBdgqFwmeffcbTZRehGgtHlKISVHjFOVcqlbDH5PP5DTuB85YP4Ef6JpPJvHz5MgyLMDNs9c6jQ/g1lNTjtyNXeetGo7ERSMyVSIosfjN7/PjxmzdvxuMx5+vFxQX9QTWq1WrI92BLzazb7SaTSWUMI9ooBA9hzrG344NUKq9arUZRBFvm+1qtFsr6zjlsFTA3jMQIx0TVJZPJMPEGpIyIDA4wMuc1N4UcdrtdOf03bK7hGlB093q9luYgrAwcaTAYPHz40AIYr/k0ObRGgIV6GEb8hilz2IAhE9AO4jKFc6tMqfq2g2/vpZAdtFUKCRPwmbfjsdSEnnMeYMWhIiOK815ePBRIxxJQJCzT5uXl5Xw+LxaLSCoWJP9Rdh01ztHebDaPjo7MZ0FwziFkEFshzYknsmllpNFal1/QfOqwjVwdWjTdbvenP/0pokyhUKBLhUIBvnB0dCSnO3hy80tZ+XZ2TMBtSSFMjQJY5vO5WOfV1RUyk5ymyj/GXJTLZQbt/PxcB5I4BcdGvV5fr9cwHXHYkHGcn5875xgKrKOsk2aziWCE+UEoM4ZIATUwKU2TeS8eaQrD5Aca0o0YkFAgUOZWGuHsMTM8/TiGlPpQOTFDtWz3aN+KFLJer7VyyDrDngqzgIRO7t///vfmfRxITgBRN5yM7XY7l8vhtAp/IkFkHMfValV78IMD33bgQiwIfLi4uDg8PESyD8VWFE356bvdruBBMtuIxYdO9+l0imNuOp1yPPOsBw8ekNTYve0AXa/XhJf3er2pLxNPm/LFOO/EnEwm2WxWgWM4SiwIo1Au4Farlc/nQ88FW49jDwsH0bnKM1GpVDYKv2mv0YfwSNv2QbuAFLQgJCqVymKxUB4g6P79+0j5zpu+0Na0c2Hds9ns1atXx8fHQnIgbQwGg1artVgs9O7FYpEdLSYTdk/DeHZ2tvJ500ejEYnpQiPKixcv4jgOqzRI7VwulwCEhTnVBkG2LpVKBL5ZUF+a515eXtI+IwNcLIz/0jAC/gOegraGMsOgXV1d8Zn8WJiyEI7VThRFrDG5qMK6BDfSXgrZQVulEORBxf6FvCY0A5hHVIgjzGazZ8+e6aThyvV6XSqVUJHNMw5t/vBKTiba5Jvz8/NSqbRhg3UBEi2dToeQEYR0LU2hr4U20ivo+EewkPhFkWtk/HdZQxg5xtFLngPzfiUzkwInp8a2CbhFj4w+5HI5tDQl8lL7ShFtXldGucQRs1wucS1xgcAxgBLgeoVCgVAXXr/VamlU1X991kTLXCkeysHAsUFCa4yxXEObnAHhIuSCP/zhD7QMmzPPE2n86urqxYsXzIJzrlAohHmdkX0RjBaLBQgMMC6SvL8RJ/HdpRCJETSlRzcaDdzw5jEWWj8cNgwL6DnMb2YGUGk0GtHOfD7X4SEZFIVVuX+EurhddCp+dORdQmC0MsMMMawHdrECzVar1f3797lAwTI41HRKmRl4VfY4uapCrz9bbz6fI3WdnZ1RpdbeFumEvgyDnvSr4lycc7wI5g22s/OJSTbiafGqbLgSYp8nUOIU714sFvENIeUL6S90OZTL5XhfNagholg06WIBeHLUdbvddDot46XeCIFV4o6MtbwmjwhNOPyKI+b169d4M9H6nHMJX8Rb1wt4TuOvXr0qlUrT6TSMKNHFZiY4lNLey+ahpIVzX9GGHqp9lvo6KK4UjrAUGBYkEkOj0cCaDj9BW5Z+Ek4ZH9QsrxzW0uN7Zb53zuFNs+20l0J20Dd4ZMzPFqca86EotWfPnjGy4XIMQyrMB2GzkbSvzMx5CZQVo3yX8o+wQBX5Jgza0qfVIxeTHKIoPc6509NT/o3jmDgLwbKUn4CNF4bq4DcJ9cLJZELdzkqlIvtto9GQQqOsgioey7/a/HhYP40txMyomhFi5te+QIZyga98sSjGtlQqLZfLMLe0edOiJE7nk6NY4A0x76Lm3QmKMzNFGZhPc26BzKcpDg0bqVQq1Gl0grq3ZZqrq6tSqYRGq84I84FqZV6ZNrPRaIQsErobnPd/O+fAoJ2cnKgo2mw2Q2v/xqH+7lIIYgTnNHItIcrh3jGzfD5PxguSbZifO4qwA9cfDocKBQo7xtTU63VtzwcPHhDWsfYl3Fa+Psj79n+HLWQ0GsGgmTLzS3HqC93JUgLois8SWNlf7DjeS0qCFrY+mF/bZLQDPBRm5zOv92tsOcBWq9VGSSMLzh62ADgzrRnalDuJwwzMjXk5UuhgucNoEHWFVxYSXA3iqta2El4n8knNVWUNIw3zRbZDqQTyI+BB4JVHoxGxLc5HF5o/0c1biEOUWxRFilx9+vSp5hdmyGTRvX6/Hybs1ywzNb1eT/YDpDfuQnYMQxk2bM+lUkkioMo0drvdRqMhZLr504FCAaVSiVAATpZQxSWTE/xNBY/M7OXLlzQOMAtHvPYdQQ/iP/LIwGSSySTIARD6YmUbFSo2aC+F7KCtUgjzJ44spcHejvJfBYUNSbUpEVLyBOx+7ouviu9IbgXfal663KgIdX19HQeVutbrNatBjhvzaFb6T46K2Ceo4QJuEVaALxWfqfIH8C/lMiJUeOOMkctwuVxiRua90KoxyUa+Ji0DuAOgeltSCMmaXKBLhSEJahweIV1fpogQwoI5Sv5a8zOuwRSCPUQwqBaMmZHwXlqm8xgxDQhsiw5rLa2DWhKxj5iVzJHJZPhSXFLLSYyP3obCpVzL9MECoSTMScrBuQ7Kb+6m7y6FqEAX/8IctcUEnrAgpFAlu5QnjRePfB0NxVxwI0MtqDXmLp6rrWTfhJ7eRtukEM0Xge4WZPzL5/PJZDKbzdZqNRA8lUoFSxVbBpMAvQotCnGQ5t/8AcN24+hl+yt9S3i4usDeztRjQnDOHR0dET+MkKc1c35+zjHJyKudKIqotKAr9fqtVgthke/DpLTyPhSLReVQEW9st9uhMZjIWAuc0YlEolQqrXwpSvm7ZQmm/5qCDd+lJBvz5zePlj5m3n9qbxsU5/O58pG8K/PRlOAmuVxOmY65EjAKcyqvPdheNbV4J0OV85bXkNWEP7F6iQfWConjmPB+/Ws+LJl1DgIpNHbKErbBeymVoKfre/NCxkadJufc6emp3nEH7aWQHZT49a9//Ytf/AIejVrMpLqPTL1er9FoAF9goQMaLxaLg8EA8zKV7qvV6i126a6eu43MGxhkY9A3H/W5e/ouRAYLTRmK0V136pMSr6wRUEqPPX0MkiliuVzm8/nRaJTNZnO5XLvdJtAPXY4ZyWQyyKMAgPL5PELGeDyuVqsKnofb3/Wb/VAonU5LAmOzfJpz9q+C7mwUKPTqnIvj+OLiolwug/8oFAo///nPE4kEjpV79+6F2dP/ep+7pz3taU8fRgAsrq+v8/n88+fPCWXvdDrHx8fge/AOkKbv6uqqUqlks9lWq0XeNhLnb0T8gmK56zfb057uTgrpdDrYMNfr9YMHD6bTKXFWw+HwN7/5jXl7Mm6/W1Sz7uq5e9rTnvb0vgReodPpZDIZzB6g8ZyvkKfEo1hwU6nU8fExkUQnJycgHgQDJ9CXWoZ4x+7uzfa0p7/QnUkhx8fH4A846UEwjUajdDoNzBM5fblcAiP/a3/unva0pz29LxUKhW63e3T0/7F3Jk9yHcmZj9z3yqUqawFAoJvTi+k0ZiPdZPqPddFc5yBrk3SSTKOZVk+LTTaJpbbc9/2953P4KT4LJFDJJgmi0GL6AZbIevlevFg8PNw///xMQKJUKiV6N9jAnHPkLYOqWa1WZFE55+7v78/OzoB2QqoWRdHl5SXYKTBbRznK48pjxqUWiwX4xNevX+fzeUockRS6WCxAb1xfX5Nm8l/guUc5ylGO8p2EJBeKqFGVJpVKZbNZ6PigT3TOQQCfJAnVapxzsNS/ePHi/Pw8lUqdnZ3lcrlGo8F9OIMdcQlH+RQk+1gPXi6XtVoNCqbnz59DXHN2dkZ5BeiT0+n0L37xi/l8/gE9h4/13KMc5ShH+a5CtnAmkyEJjpJ76XRahSeVCtdoNKIownFCmg+5GNTgJIcFBGsURbVaLY5j8Qkd5SiPKI9mC4tTmeIFURSdn5+n0+lerwd3CBWiIZT8gNbAYz33KEc5ylG+q7x586ZUKtVqtZOTk0wmk8lkqERRq9WouLTdblW8t16vf/7559vt9unTp4vFQjTBzpdKWa1WcPxDHURk5yhHeVx5NF8IFJxmVigU2P7JHAP1nUqlKFpbLpepMi/mpT/T5x7lKEc5yneVzz77zMyGwyE8reTfgi1V7STzJSnMTLzysA+DCJlOp+T3otyow6CywEc5yuPKo1khzrMJSeR40AfxSn1YU+CxnnuUoxzlKN9J4Ag5PT3d7XbiV61Wq5Tr4wQlbqFKpTKfz9PpdKFQiKKIOoLOuWKxCAmvcy6fz1PBgCrTi7PaAAAgAElEQVQ5R16iozy6HNFJRznKUY7yiYp8Hrlcbj6fX11dQcAK7/vd3R2+EDNbLpeLxYKCfM65arUKafpms+n3+2LIhfx0MplUKpUjH9JRPgU5WiFHOcpRjvKJyna7pZRJt9utVCp3d3f1er1Wq+Vyuc1mc3l5SVkTaEVarValUslkMtgfFxcXvV4vn8+Xy2WSYt68eZPNZqlS2el05PQ9ylEeUY6z8ChHOcpRPlHBsbHb7c7Pz1erVb1eXy6X0AqQlLvZbBqNBvYEtshsNnv27Bn4+rOzM+eLfQ6Hw88++8w5Vy6X6/V6sVj8CVYeOMonKEdfyFGOcpSjfKLS7/edc9lsdjabZTKZyWRSLpf5crfbDQaDdrs9mUy+/vprTBPn3Gw2W6/XlUoFAgL4QpIkOTs7o9BMKpWKoqher9/f3z/y6x3lKEdfyFGOcpSjfLKCM2M6na7X61qtViwW7+7urq6uxuNxJpOp1WqTyQQ6VCqBj0ajp0+fJkmyWCx2ux31ac/OzrLZ7HQ6BZgvoOvFxcUjv95RjnL0hRzlKEc5yicro9EoSZJ6vX5xcdHtdrPZbLPZdM7V63WYUqFSdc5R4q5YLE6n01QqZWaYKVSZyWazmCBffvllLpc7PT3t9XpHXMhRPgU5zsKjHOUoR/lEpdlsRlGUTqejKDo7O1ssFsVicbvdZrPZTCaz2WyUqUs6TKlUguWdCp25XK5cLsdxnCQJ3NC/+tWvlstlHMck7h7lKI8uWdEDN5vN1WqVz+fjOKY20mO37aciBHH13+VySQmbXC63XC45wcDfDJSMWt6NRkNsRXtAs+Vyud1u4XsmhY/K4NS4SqfT0+k0fOJR/nQxsziOC4UCJTwoMFYqlX5qSY+ZTAYsJASd9Xp9s9mAl2S32+12uVyOz6vVCtZwpt96vZ7NZvAEbjabWq3GllmtVpn2zrkoiig9n81mVbAtSZJqteqco1o9LVmv18x/ijPwX+dcHMepVGq9XmcymUKhEMcx27kYvd77XlyQTqeh4pjP5zxxu93yJ/keRGk4GAxOT0+32y3oUefccDg8OTkxMy1h5gkGwUP9udvtnHO73a5cLuvpemXabGZJkpRKJT5jZ6j3FouFc246nXLPYrGYz+fpyd1uB9GqmZXL5eVy+a2lOpMkmUwm1NWiS3e7HZOfinpxHJdKpdlsBk/JyckJ48sri48E2jRSdbhzHMfpdFqBIefcYrGoVCqbzSaVSvFlkiRwnzAr0un0eDxuNBpqTKfTIaIkhZnNZpmKzIr3tvOhcU+lUv1+//z8/P7+/vLykm7EUOv3+2dnZwx9t9s9Pz9fr9f5fP691//U9MCHkf/1v/5Xv983LyCe7CgfVzR34zgOv9/tdp1OZzKZ8F8ONHyOomixWFAkM4oiLu52u3ymAif/xnG8WCzMbDabYcF8xDf7ryyYfWb2E+xSXtk5l8lk9v6kKWpmm81mMpkwqxeLBZOWKRrH8Xq93u12w+GQb5D5fB5FEbQW0IDudrskSWC8APEAN0aSJG/evGFnDQXjBi5RbsIK4pvNZsNyeEjCVWZm0+l0MBisViszG41GZtbpdMbj8Wq14r1o/Hq95vM333wTvst0OuXd95b2e7uUW7GoeZYk/O9isaA9XM/r8Jle2u128/mcNBmKy5jZZDJRY3a73eHGjEYjLo7jWBerhe82ib9ut1u6Tu8bKqIoirrdLnej/cvlcjwedzodUngY7vF4rC2JLGW+T5Lk/v6eXmWTuru7CzevXq/HpKI0x0PtfK8wi7766ivzQ0kj9dvNZsM1mIYPXf/Q/aUr9KxvnQ8/HXH/9E//JIbQdDp9pNJ7FMnlcvAbchBEODpcXFw0Gg19SVSYy54/f+6cq9Vqiu8Wi0WcWIDa9kiaKT9x9IL8QOGwVSgUCoXCTzzRETcDCoRuIYNUF2i6MkXT6TRM5M65VqvlnMtms8ViMfwJ2aSFQqHVajGZS6WSLshms5SwZ8k4P9Up86aKsoiWCdecn5875/L5/GHy8lQqFZKKViqVer2eSqXEHsYRmYM4DeMbarvwFOeZl4vFIivuWwvY8uI8kafTfhrfbDblS8hms/RetVrV61CPQqs7lUo1m81CoVCv1+XYbjabmUyGkTo8dRmmSqUS9pUUUaPRAIPi/BBzMUQm4X3CMSqVSrobDo9yudxut6vVKkVwstksbwGchcuePHmiHerk5ARCFNUNVpOYANlstlKp4D16qJ3vFf7685//3PlaY6HQAPo8k8lcXFwcvv5dOVohByT1j//4j3/zN3/DVF6v15vNplKpLBaLI3Dp4wh0yxj7zrlUKlWtVjebTZIkURSdnp7i702lUuPxGD8nkWDqUdXr9clk4vwsB7AGZv7+/h4dtF6vp9PpxcUFPEVUyTkWsvp+ks/nCWKenJwMh8N0Op3P5wkcPHbTPqpEUQRAIUmSVqs1nU7xe8dxjHscP4dzrlAoJEkSx/HTp0/fvHnjnHv+/Pnd3d1utzs5OSHOQgFYfr5ardrtdr/fT6fTijPCVk4ogQYUCoXNZlOv1wmFZDKZOI7RXfqrc65Wq81ms6urq7u7O+cNmvl8/tB45fN54tH5fB73PpkmuVxut9t99tln19fXLDFaFcfx2dlZv99vtVqLxYKHnp+f4wRyztFm9lecNO99bpIkSZJQ0Oru7i6Xy1Ea9+TkhAgLttFyuaxWqwA7rq6uOp1OkiTOOV0G1+rz589fvnyZJAlanUdwXCG2u9vtqM07n88fag8aqd1uDwaDcrnMlVha0+mUjs1kMmz/qVSK14yiCFVzcnJSLBYnkwnsavf399lsllgMjyiXy7PZLJ1Oo7XiOG40GuPxuFqt8qznz5/3ej0iWdiv19fXTLBKpUKrGKwkSSqVynA4bLfbvV7vQDuZk+8VzAKmK2blYDC4uLjo9/v5fB6dfHFxMR6PN5sN7/Lu9Q/NK/Nmh3OOYCVhpoca85OSbCaT6fV6p6eny+US52oqlSKM+tht+0kI8dEkSdrttnOu1+ul0+lcLpdKpebzeT6fRy1uNptqtcpSr9VqYEGcj6fKrF6tViy/L7/88vPPP4/jWMxFzrnlcjmfz6E/OpYL/n5iZuAV0un0kydPJpPJarUCM/jYTfuoApgpl8s1m83b21s2PCAI3W43SRKC5ZSSn0wmmCyNRmMymSRJAgqtVCqBrhgOh81mE2SJDtMoa+fcN998w6ETwEEURWzYRFgWi8Xp6elqtWIrAsABikKHVGAWWizsee99r0wm8/LlyxcvXlD1bbvdVqtV3W04HLZaLcEX2MujKBqPx+12G8aOUql0d3fXaDTwQAyHw0qlUigUgDUceC5ICHxLf/zjHz///HPYxnDD9Pv9+Xz+s5/9DGiCgkoYN/l8Xu87m81Wq9X5+flgMMBp5DxKxjmXTqexkOA6e6g96XSaJoHjAWMBfJAxBcGz2Wz41zlXKpW63W61WpXPpt/vg2b7+uuvf/nLX5rZbDYDPIsV65wbDAaNRmOxWJycnGAu4GADdSQvzna7xX4qlUqM42w2q1ar2+12Op22223sV6w0GvDedj6k92gAn6fTaTqdBkU3mUxOT0+BBxENxFsj1Mje9Q/5RY4lyQ7J3/3d35kZEUTFt36Cce5HFCKpDIcFYXUFxRUtNjOCtQhHIj6vVisFyBlHxcXNrNPpmFkURUQuVVTiKN9V0P5gC9Asj92ixxTnXKFQwAdgAV7BAkiEcGbYH+ZBA1EU9fv92WyGFc6kBW+BiyWO49lsBqRjtVqNx+Ptdnt7e2u+GIpE+uru7o4n9no9EAOz2SxJEuwJ/ZebvFe41Xq91j2J/fNEaUiBscxst9ttNpsoivgJby1gR4gVOOCE1+JlqzOzTqeDG2a1WvEu0+mUR9CNs9mMA/pgMBgMBvTY119/bWa3t7c8Cx0yHA5pxjfffIN6AZwhwNm7sl6vYSJhLNRjal4URa9fv9bFqBRgyOYVDsLcUNfhu6I9b968ATJCp3ET/ZZrsJm47Wg0Wq1WNHs6nfJ2ag+PYOweaudD70vDZrMZsI9+v0/DNB+YANgl9N57r39IjhGZA+L+4R/+YbvdMjx72KKjfBwxs9lshhVC/8cezfefg+ScmXW7Xf47GAz4ZjQasTgB5+s4zozXmZIIznK5ZD/44osveMRRvoeYGUU6GBeyFebz+WO362MLGwBHVXqDbonjmD2SCwgH4CFwzj179sw5h1eP5A4zw7ehec7E1mfO2XxG++N5urq6YnrrSPr5558753guwnblnEO/8XPn3ePvFRkfXPbb3/429uDu5XKZTqfxLOZyuXq9jkfdzFh66XS6WCz2ej1ex8y0ebMqD+jVzWbDHsy/3FZdtF6v4zg2M3CRISoz3Fk3m43OMPIqpVKps7MzoBKXl5c6lJtHnr5XQv1DN97f32PDmdn//t//O4qi58+fm5lagmIZDAb4hOR1oBmCoRSLRcLEZqbGAGcBeCG4FUPcbrexYwhJa6qcnZ0BcPlv/+2/MQ1yudx2u6WTH2rnQ/2PyXhxcRECkwWqRc0ShqMxD13/0P2PVsgBcf/zf/5PM4vjmNmPofrYrfoJSZIkTGupBs43/NU5R8wVIALXPH36FPVHBiDHiDdv3pjZYrFgeWu1kFwnhXJzc2NvO1SO8p0EBc2/qrR+OOfiv6Twyti49na3yA5AdwOt4GLt8cA71uv1er1G4TAnnXPkQTjn8JG4IKYe+3wN55ycB9okut0uFw+HQ+0N4QBRcrZSqRw4E+fzeU692jNoXpgnQmqxLiCnhvbw5W63k92DXuXFVf/2vcKD+GGxWDR/OOE+3IE0E/0EBzabH04LNZI0Gf4LzIKbKzmFu6UfkNBuQM/InyonkHOOt5tOpwwf6sX8OZZOkx25Xq8ZCJRVFEXy14a2Fw+S+yrMb9L41uv1brfLrOBwNR6PeSk03kPtfKjzMYVlxQ6HQ56OW4ULlA6Gb+a91z8kRyvkgLjf/OY3GjBG+uP0zrvaB8em9k55aLmetae2xXHMjGeKbDYb7FYFNfggnzATNDRjV6sVE+ibb7751ry1H09ApVlghegbNAt/4sV5HemU1WpFLyVJshdEQ3EoNVEOcwAoXIy21Q+xfuI4Vgri3pHo5cuX5pXCeDymw+fz+W63Cx2qcRwf8PQiMnlpGK+5Xq/5oPVMA6Q79Nar1YptZrlc8ixCilxGqqcF22E47hI4IcwM5cIEm0wmejquYDPD3W3BVqRxoUlhWuCfKPSeLH75IBuNxmazIQwng5KTopnd3d1xGtYxl/7hLIhBYN5J47wUCgVSHnK5HE8cDoe73Y7PuJS/a/t5ZfVAqIJl9a7Xa7Aa0jD4DGgzWzLvSKw93Pn2+IpIG+H+IAYsmP8AAsCdmBkdaGb86uzsjGg9eA7dsFAowFxigRYKz2Aym5gGXMnOHccxTGLMMb0+ZW/5jI3FZ5TVaDRiZW02m/V6TbzDAl2kHNpCoWA+G9+CGCuzNDx/vyuDwUCkJs65J0+eZDKZUqmE40EkqmdnZ+PxOEkS6FmjKJLrRRrG/B4fnmRozGAwAAnEssLsoGHS4dI8qCMJidZ0LFqo0+noDGbBkqejpPZlfbJmB4OBGkYz+v0+SsyCLSY8knGxdo1w5U6n03q9roCgeTXF8m82m3QpqVgwoDBLM5nM5eXlH//4xwODcrRCDsijWSEWrCXpMgQTRBYoe6f5OdHtdvmhAr0yV3WfSqXSarXwc/IneYnRVjzo5uaGMOqfklD+I8kBK6Tf7zMumUzm6dOnzrso2YHQYlwv1Tkej6VPzQxIl3kfSRRFgjLwPRt/HMeDwUDdgkLcO3XR59988412R3s7roxD/lsRJ0mSdDodnqXo/mq1UuyWOwAaQEXyoFwu12q1QjKG0GJQG0JrDAc7GjaOYw7Zy+USuD46l6MeOwchdu4pNAO7QqfTCXkmfrgVQoAZg48t6vr6WjeUFa7tNvzsnMPVj4uYG2rEv/zySwssV5IINC57+zdu6u/R/oesEJnL9DkwXhfk8fITEizt7SiJODmwqunt+Xy+3W7n83kul2NFm1mxWNScVw9MJhOMAJnmzjkNWb1e18WcwsNdAQA4e7/u5nwkNPRNsg8xbfBQMnlms9kf//hHfBiLxYKEWOXNEmsAgY7JiF3IPavVKr3UarXq9Tp3xpJQ4ElOU+2y7xVl2wltRg1eGVjhn/iJ/KyMDqk0ipVcXFwMh0O0x3Q6ZTWxKkOljWh1s7RlZsn01DyM45i5R4KMeyDfVacU/qsoWLVavb6+brfb2LXcQd0yGAyk0nu9HhGZ0E+Dr4gulc8mjmPnfTZ6IzmNZADRGDNLp9PCgrz7wz05WiEH5NGskOl0qoDifD7HtmWf2PMZcg1f6tA8Ho9vb2/3POEgurHKnXMc03XClouPacc2o3P8Y8lDVsh0OmWd9Pt9mChh+LHgLNjtdsX4JLsNubq6kpomMIl6ms1m0Fze3d0tFgt5C/jtZDJBQ/2///f/dCvNB23VZtbr9cbjMYG81Wq12+0UAu90OgeCejqgyGMhBOJmsxmNRnKrmlep4UnI3naW4nYmuUDeXWaRrKWQo4m8QQs0jgVboF6B+19fX+MwEF5K8sOtECw8TU7NZDg3eQV2Xy1P5w+LfLi5uZnP5+12m9niAm+2zBReFi/CYDDAGUC3yCyzbztbv1cO+EJ0KuW/IYSQKW3eAOVPOnnDowqCgfN6oVA4OzvTzsoGTA9gPZs3L0KPvexFhRLIzzSzdrt9f3/PX6F21VrDKoWYS6EErAru0O12ycFRaglPjKJI5rgLQkUhDpR81OFwKDcnAyQtJ+gD/gOpAjpTYZ3lchmeDd4V1oJiB+rbarUqm1X9KWMixOUwhRqNBhrSOYeG1CQplUr64Wq1orVcEzplNW9Xq9XV1VXYQmZguMGH95dCvrq64iARagDUzsXFRQjP4gPY2HK5XCqVyuUydh7mr3Mul8uRryurTj0ZmmjCEnH/2WwGJJY8KfzBzhPUMjRJkkCeeyAye7RCDshj+kIQgppnZ2ea2YK8MRVAtO12O1Kz0CxMWU0p8y7uarWKzcuX6FlOJEwjbXiw3zjn9vD2H1kO+ELkz+RPgLC0rmRzxHGcz+f3uMhOTk7wcocZYlwffsAlwIqK45jTW+zz2jmLQHaJHueUhhLBow53k5ntdjtOb99q1eVyOdw5gsqrtqeumc1mL168cJ6aU6rBzFSgS+L82Vrhf4qbW2BX0Q/o4vl8zhldW2l4sHbOpVKp0P+s+6vPf7gVYm+HrohqS7UJISjmGGbscDgUaSk9KXOt3W7f3t6uVivY5Xl3AtguOKg558SASXwHNfpdG/+QFRJmFvBX0DO5XK5SqeBFIEfUeeIvZRxwZMc9qaiKc242mxHpV7/x4nojGXPqPZzqzgMCzAxOMLWfv4pLlPnPcvs//+f/4KsfDAaht2kwGJRKJRk0uVyOVFjzCCHsJ3KGASxjwgInFzGomd3e3upEYd5SQVmRCkR7mBUwgdKlnATC9Lc9wYZQSKJSqbDrQywk+0asykxvZgu8L+Yt3dADNx6PwVuEasp5t4p5YnuFxekKFGytVturWaMII0heuaCGw6F6+/7+PpxaHL0qlQprX5eNx2PUlA6Zo9EIH7BsIEUqwzQWpVOhLSHYZY/QvAr1jPP2JenZagB9qLzxh+RohRyQx7RCwFWZ2Xg8humIFa6tt9VqZbNZrAT21M1mc319zazSoOpsZH5rBGOPk995hLwFbuparabTmHuHN/1jykNWyHa7xVQn03273QqQYWbpdFppbNovQ1dtPp8fj8dKOOS3BKph2er1eri1wdDg+EXx4Rrl/vCkWQDXhzYNFZPL5WQf8PPBYHB2dnagP51ziqZzRg91jQvOZxaoA94U0giFnGaz2evXr6VieGsRadvbGQrqIqlOaD/MrN1uz+dzaLIsSJy2AGDEdi6t9EGsEJlrr169Ypjgw2Dg5vP5fD5nluJXeHcTtQC3iIHINkl8IYzCuIA7kidyqmMBfo+I5AFfCKG00ERQM2jwZDJhUvV6PYUzuObk5IQdS+VjtAuSAAJYqtVq6XFa+8yQwWAQJpeRj+OcQ8NwZ80xkiOYQmLh/MUvfkEROKjDxOslV3ylUun3+yIhNTPusGfMhX2SSqU4muPjOT095XtWmc7rel8tNw33YrEYjUbyaB4YGnZWFinVW9STrVYrlUrVajXWu3rJeWpXMY3qkCaFHMcxLB3mJyTrBWKxcDIMh8M//OEP/Am/tRZp7LNXeAu28Ewmc3Nzw0zAs8W0LxQKchmaGYS25jHRi8UinU5fXFzk83nmjHkX42AwwLCDv8QCiA888YT5oijC18WfyGQhXmMe+OK8o5RHcHwql8vigpM6OryJHK2QA/KYVgjTkXnDtiflEkaLw61I6kOQiP98Df+Ncw5HYqvV4r0uLy+5BvJE89XIcMaK/uHjvPK7csAXwolBx4hQVV1cXBSLRTSamQ0GgzCh/+bmxgXn+36/v9ls8J0uFourq6skSaCtlKIslUraSrPZrLpFHStFpgKe9KGZLRYLlrp0U5gtuSfn5+fmERuC8W+3W6yuer3OHqwVyzYZnnQtiErYO0hMlIt5Ta24wJ5Fstvt2O/DpFD9yXzBsziOoarkArlwf7gVItCDCoJQTcO9DZBUBQ3na4lBX+G8s1BJbaFJpyb967/+q3nN/m43TqfT7Xb7/chjDlghirlst9uzszNmDmdl/JrsIpwrzO8BGMSCi+bz+eFwSNsYRJqqI8p0Op1MJvl8XhnCejXY+cysUqkofYMpamZU15tOp81mU0f/+XwuZ/v9/T3uIoU+9+w5Pr98+XKz2ahCpKA2ovkh/qLJ/PLlSyBuQmJy2/V6HVqZTFTn3N3d3XA4FDuFBZr5QMRzPp+HJ34CoGozfSUsP6gIcZB0u12YRrkYVxB/ur29bTQab968EWSN2K4FUTbcEniALAgz0YCbmxupa+hM3g2p4Atcr9fdbvf6+hoTIdwLms1mt9tV2UIz0zlEW5hWK6FYcZtqliqVWsoNTajoFcuckF+73WapQrtnHvTDI1h0UAdZoG3elaMVckAezQphGYQ4MnZZgBphlBc6k0qlosyIPSs+n8+/ePFCwRd7G+PtnJtMJjwIRy6OX6WBfL+D7IeSh6wQtWq73cpEkCmmM4d5Ry4SngJxhIgMRn5v5/2lun+/33dBaNb50EMIQZB+D4OpfMCDxW91Rn9InD+5Stnd398LDaARb7fbX331FTB78/Pk5OREeStKD4HR0gJ3KyE5YftDZoJSqdRoNDqdDnOA67lDFEVE/VkO6XRaGZvdbjeEKNqHsEKkK6fTabfblcMAxwyE6IxmOLHxt1cqFT4kSUI/hN3unIPqCqslDGCbT5E1nxpD935YXAh4LPMTQ9+zs3LKJ9Kx2+36/T4IYli6w8IlYDlVNISbYEzn8/kQygBrC2SsQhoy1VWSzfkzPZIkSS6XU36QMvKePn1qZpPJROAJTYnb21vxdjO71us1JYVh0TV/iMfKobdXq1WxWGR/Wq1WYSrfdrsNs/M0LmEYCCElTUDOP3FooI0POcXlYaLH1uu1yvpkMplarRYW4qEgC6d/8/5UkGphgxWsCeeAYPIq3sv3e/ju+/t7homZYGYK61igK4jUCIvT7XbhYtdlo9GI/BcA5rwahKdK2w5VnPllxU0A1YFfwaiKfAlAJg+s8BYcg3lBIqSsqcOJgUcr5IA8pi+EeQBJ39XVFaMOuTIXKLEwiiLl6cnw1KBqlq9WKziP9ddut9tsNrlstVqhd8KnUO3i47zve+UhK0RK0PkDOosQI0B7iYLo2giBsuOx5BtBOO1tTe2CDAItUTIFlE+oGjeUbDAz4UDZCQgD4ZtlBBuNxgHuXXwMNGCPmGG5XBJI0pe6D+ChbDabeEmlUqFyocFS6+JwJEgPNtD8sSw8XUFFFX4Tdu8eLEBv8UEiMqCDtTWGlrcFWV3mD22h509Uuc77SELDVH0idOre3dQA80RY37XxD1khyr3S+V7E4UwS50MYOtBzq3w+T74bX8qjxmZWr9dVKFU7fWh4CZ0dQm3a7bZ5WG6r1VLOpwDs5rOxzOfmaA1yEwop6K2J1PBShDwKhYKMLSwkC0iN9RTGS+gWtRxrkmCEZiavAHgWYFDiE/0UI3hI3n3EniFo3uVAF6FPWHR4iUC0mFk2m2X5vIv0YsoVCgWGO/F57Fhdaq1wWvl8nrSpcMTlYVL4CW8KY9HpdFDd4aksm80y07QFOOeod8G40P86mFGfiP7PZrMaHfN2ZxzHpN2p03RuUWsZDh5NCI+ncx9K+VSrVfrkoXE5WiEH5DGtkJBJxnkMmr1v/Uwmk1qthnNSB3TpC74hE4SJiDYJcXzcWaYMX6LOstns9zgLfig5EJGR/aEDYj6fD4PlzrlmsxkGILbbLf2Zy+UU7DTvXTSzXq+nw6i909VsdayxEJvGB9TxXv+HP+cnuED5L1pV+9x8PqeMhQW24959wncPP9/e3uJW1W/fO76ibdYheLlcQlnBn4Qdcd4fhkdXHqYwAghucS/h0H5MvhCmKIqP2S4bgmd1Op1WqxUeBIGXhv0g40mLInTkYKFqJ9hDM/yJ8pAVssf44vz5Xls1dVV4cZpnQVqsnBB7SxWUJdltGneZHYyvOrZSqeBShV5st9uNRiPM3zBTFLoLUc6Y3w43mw3mrMxr3VzDLdJ6mVYgHsKeB8a4DUhxQjtyz6ZXZ7Kbzufz09PTkMuAEQ95zPiTCGB0c3Ug8we3B13daDSiKGKqy7bQUAq9obUJrwxfhuAhTUjNt4fmSbhIw/A33+85X8lw1AsWCgWcgnK0pFIpTlysSoZPXCD2NlOA80lV4jHSWSvsKB35er0exoTIpUSzZN7SNTPiVlq5HE4qlckp+Y4AACAASURBVMrhLIejFXJAHpO1jA945M7Ozs7Pz/kMfiqVSgGMmE6nIiM3D1Ot1WrMxWKxmE6nlWtO5adischlvJegFYvFYutLUTgvj0gWYgfRqSHXluwzzi6JR//1+31BscgUIGyh5EyWELhRM2u326Kd5omlUkm4CvNo//ACNOB6vWYUwO4QQFHKwN5P8vm8wi43Nzc6dvDKzoNdLAj6Oo+oD0Mh1Eujf4rFIqN8c3OjCuDvjq/5sK4ivkmSgAJpNpsYc6od7wIxb4g4zwamehbu7RiW/ch8Ic6bdNgW6XSaAQpxuOGV5lE7VFYzb546X4iVK5VFRS9hmG48r913bf+BiIygKvwVmKdzrtFokHbOkVedJk+A7tDpdIrFogxK51ySJABi9PoW2HDOuc1mozIruFX4vlAokJNFSEv7K3tS6EXnv9BkcY0sIcYriiISfbXf8yIEd+Qqo7iueWYtC6zwPdPKzIbDIaEoFxDLKoRKWjWw6Ol0KmB+HDDNy0kGG4d2Sj2C94o81ydtwyajsrH5BFQNGWtcPEzmjeb5fI796pzDN/mtlHeVSoXSxIzXXjkehVzNH0Ttgaiu0oZ1sSjgSLULfYoyZaQ8YToxPyV0Hx2TpL7QHqqIJOQA4UL3NtWNvDj5fH4+n4fB8T05WiEH5DF9IdPpVGYp52ZVLXr16hUnGP4a+2Ir5rUnNQsAPez5k/mSWRuqV9Fh2dto9k3AmP7x5YAvBK8DCavaRZScrBRZRESNOi2htZMk6Xa7vHW4GhE6M4zpqseEZg/XzHA4BOjKDYU1sbczdMLMHT0INi3k9evX7xZ/kmLVfcBG4Nqdz+f4zC0wqt4dX0yHxWKh8DB+eGEv9PphC9U/Uuhm1uv19NZ7WJYfjy8EkRt8OBxyHMTu7PV6ISWleTQi5+zt23xrQpbsedRnsxnf393dbbx81/Yf8IXsrSa9GlNXGz+2Yzqdnk6njBpV6PYcgWZG1N+8y6RarYpwQrPo9PQ0l8uxwdAYwM6y2p1zu92OCCZbkXpjNBrhOeCbf/u3f7O345Xc8Msvv3TOnZ+f89bpdDqfz5+dnSn2xP50e3u72WwoUm+BOyGKInG4mSeDoQGhAwkuPrZVItFa5kxjOAvMczCqkYxyiMJW8qr5qUtRXIy20MEjdIhUQaFQQOGkUik216+//jpExQIdDekl3ysaSs1GyBgBp9/c3IjmVcnDdJdSlnaeBZ/cXbkqocTlCNpsNpWvFCpG6QHgxoxUpVJhZxE0+/b2drvdKvFwrzIfXVoulzeeNY53x/rREjhm6n5veTQrBEObxUASmr2N/U58Bk3I0kPAlRaSDIZgF8e+KBHCD7HfCZfGngOH8GcURWIdeCx5yArR/qTXVzvZHUlwMB+YNLPdbseZJvLodJXWNI8DN7P7+3tOMCAu6Tf9d7Vajcdj8W2IuML8sSDxBTZ3QbEMOWNmsxk8ZlEU0RiSqy3wfCorFVMS0DFKijvgBgg3Wv3q9vZWfOrvHd9wNLUfaysKzVl6iRyKyFcbJl1Cva2yYe9auvbDrBB7gC+EkeV7cR7gLaCFr1+/5kVwpZiZLEvwvOZTGOxtDn4FyHk1anmoe7+rHPCFRFH029/+ls/T6ZRjZWhmkSrJRvsuV1W/3xd6gzlA9tDNzU3oxgfYaGZgz/lXoy+O3e12q9AkvfTq1St+eHd3Rz/LnTAYDBju6+trrqf95ncm+fbNV5gT/AgtijlFsyeTSRxAWYE9KmSQJMlyuQyZAKfTaUgfEp7BaEbYV+F70TDRAG63Wx3KuQnONq0O/tW0ef36tbgEzZfEm0wmNFUfIl+sB7NAc/5bWdQ06OFL6V1E65wkCZoNs1gdy2Xy1qx9/d4wAqKn9Pt91dJSWNPeNhGYaVo+YRBntVoxgppIUkSvX78Wc6YsG91/5atePCRHK+SAPJoVosg92WJ8SQwviiII8rSLJEnC5JClz5VxUO5Ee6F2RPOVoPVQTTtFKN/rTfmYcsAXslwueWuOU7hbZXBYwBUh7WlmmFZ7bCLL5RJTICRLjT0EVeOuxayIO09hV4OugDswNNBshJA63UHMVM5XUm232wwuaPa90jMWaAoNWa/X02X6a+jUfXd8FXfIZrM6TvFXoHMWFIi5u7tTHfZ+v49nSNNS4XwoBGSg2I/JFxI6bDA1QqKqTqejNkgL73a7//iP/2AzCMvQg0pG7/OZt47jmPP6brcbDAYrXyr9O8kBK4SZxm1DHAZtIIPXAmQDUFbmAB+YikmShA6zcFNRG1gg8saFCMHZbMZWp8RLgU50gQWsRVEUTSYT+fmV1WJm8/kcMjEL0K+akOPxmIsJ6AwGA/Cw9nYVOp3Fe72eaOVoAIb1yhPYoxtlWGuG4yOhJSITYhatfT2dKIpQkpwl+KGmk/liUnd3d4xgaB0qK1gWgPZ+TJawbyF94ShyYP4vFgtN7/BEtPMlomTc8Ce6KBwmXA684KtXr/iSd8RJJq2ucTS/BJQXxuOozwBHA7NFLx7HsV6WrB9B2bRwQu4l7hAyFB9WAkcr5IA8MnfqmzdvWHI4cmWBdrtdhoqs3TBIYYGTE5NfMTwz06lLIVIyyLWKmJfE8L4fU8KHlYesEFkVKKMwE32z2dzf3zNkOj+ZWRRkly0WC72duku5AFrkk8mEx0m36kFbzwQl7m0LjAyORPxXZ1ZtRfBW0YAkgKbqFRQAlg8MkGC4mSmmKzU3m80Y8c1m89D4xr64qFCHtF970vX1NU3SZql/ZRZ8/fXX2vUt2PnUSz/cCnmIL8R8UOP6+jrsjU3AQhZy2Oscv9vt0LxoRlwdoTuNN3rz5o2eKKKO79p4OxiRMb++uEbVIsPwAdYPpolqjtg7MS/1FaYY3g4s4MFgEEaattutrARZluZLkYWVp+TlMk8va28rvW3AoUIoMAlqUVFBLQxihpuf8oTN+2PCdGvGIvaAXD4IfsTPw+p6Mr6118qtorupYUrMCZnNsPyWyyXuEJ3ipAaTJGFrZ6Gp+oH5BXh3d6eibhCxhGrzP/7jP8wzi7xXQvaOOI57vZ7arNWkla5FikNUHhq66Obmhp6nfAS/lQ6RqNAYHlZsizB4N5/PVYY3PNSpW2Ql7Pmh4VwOSWylYThcHQjKHK2QA/KYdWQYcs0AMsRU6aPf7zPGmj13d3eEtDkqMQ90eL27u+MbjhH8hNkWeqftbW4ZLjjANvNjy0NWCMbZxvMLkZgeLgyZJixdLcvQuYoe3HlCazEaMeKhsW9m8CIoyqu1LZqWTqfT7/fxGZjvVfQFVyqCIEAJloE0ETaNBoWdEo+UbsJeRZN4QfZa3bzT6WjXf3d8dcYyv3uF+k5OF+4c+3pvBOmZeOhrndJUDlAkS/Zj8oUwWOHpCuVrZpw+ZcyF7QmdGZoJIeFVv9/XD/FF8ZOQNeE7yUNWyN6mq25U1LXX67169YrGhCYgLCnmXeWboMyY+X1INopglUmAWiXrngZoX+RPhCaTt+sNCbjNDWleWEFJamGz2WC7h15bHBV0o5SVHJZKAhqNRqo0y9SS15Zr+Kv8NAQmLAheEHO0d3Zu8eJoeuh1wpbrS5mk8vaFaDBpA8yR3W7Hzqoo2J4TaLFY8JQDxVPMqwKZI9rCw3PjxtfQ0eDKALIgfqp7aiYr244wjVprb2Oh9OXNzY1CJ/Irq9vNO5KjKAKAZWb39/cC/KonVWrbgrCvaHLeK0cr5IA8mhXCUzgZaBfkT2H2IH5jYUEsSIgHWRLGDuztuIDmqPm4j04wwjQk34ss4QPKQ1aIesAC5atMd019BUT4qzyQMh3e5V7ci2RJpNa1nELyRAtc0IpkWbB6dUoLYfP6yTootqfn6okM8e3tbfggto2d51c1j++TPnrv+JpXKzhyzSNwFTaSdxr7Vc5evVe4e5EAGb1Nb2A/Jl+IeZ4PDl7vehHY4QSvk0dBnaz7hO4rRcfDW2lefVjWMgt2DnS6QAzmtblcICCO1SQsztAvkng4kaor6ylhiIRBxDKDctQCh5MFnDpyIGnr1RALOqOjjsK10jOhegQaoizZvcRaoniChogYzYL8VQGAzIzgC/EC7jMPqjlGvjqjOAbpQNH9KZGwVCoB1cxkMmBR6/W6AnNCd0qHqNIF/xXkPJ/Ph8FWF6Ssi34NeOZemZhQSAsK0220/LXT2ztTESC2BSiQxHO2CqyKX2fPRgk1m84wmH2hvzZEZAvqKz2A3ghDNsJHazZKk/AIQYwfkqMVckBSv/nNb/76r/+aKcvMS5JEiRhH+bHFPLNTCIZ3D9S5flwZDAZg6THdisXicrksFovT6bTRaJjZer2G1qVSqVAShYXKCpxOp2irxWJRqVR4wVwuBzlSOp3ebrewyWnFfoKdgOx2O7iSnMf/q+jGT0R4ZfUAHfLYjXocwYZmOaRSqVKpBK1FPp/vdDonJyckWsdxnM1mqSoHS+9ut4MMEDq+UqkkW63RaEwmE83/JEmcL957enoqbsZMJsMmCpWOc45CTv+p3FMpaLu2263zaUHkzTrn4KFJpVKs63Q6HccxTySVJqwJsFwuq9Uq1zP06/W6WCzyUuZRnLy7mW02G4jd2Fb+XNb1jydi3XVeexz3WcmxF47yJwnEps45HNHFYrHX61UqlWaz+eTJk1QqVa/Xy+VyHMc/+9nPUqnU1dVVJpOBFrrX65HTWCgUWq0WhW1/9atfQd8ius+jHOXPTqIootB3KpU6Ozu7vLxMpVLkDLdarV/96lfn5+ecMTivE6vqdDqE3nBREAcZDAac8hX+AN4Egw4+4NPT0ziOnXOw/w0GAyrWAk2Ioujs7Oz29pYUVnwA3W6Xs+XTp0+/+eaber1OEMQ512w2N5vN6ekpbKpw1w4Gg2azmclkoiiiCB9F49rtNpY3JfGAgS+XyxcvXoxGIx6XJAlVtTnQPu7QHOXPRY5WyFH+JCkUClSQGo/H1Phtt9tnZ2d/+MMfOMDh/9ztdjh4oX5ZLpcnJyeU4uRMBpwtSZI//OEP2Wy2Wq1ySnjs9zvKUb6PcJxNAt4wEeD+/d///WQywezAK5D44nZQy+M96vf70JzM53MoB2u1GjV0RqMR/oa//uu/JueL9QJVxl/8xV/wwy+++OL58+f5fJ4Cwn/5l39JaaQ4jk9PT9vttsLfP//5z+/v74vFovwi4GEp9XdycsJPdp631Hw+M5AyDCksJOyY3W736tUr4j5RFKXTacyXWq1GIs/jjcxR/mwk++2XHOUozuGDzeVyp6enlIlyzvX7/YuLC5Ts119/DT3lxcUF5abwEnc6nXK5jLIrFovn5+evX7+GxjSfz+PRpdzxUY7yZydRFOVyuVevXpXLZfZ7aLiGw+F//+//3fmQ6263w0lA9jhwimq1mk6noRnEIcFOn8/ne73efD5Xqvm//du/wQBLdCObzU4mE6jZnXO//vWvVXqaMm/FYrHVavV6vcFgQAwFmuPBYHB5eQk49PPPP1+v19lsFrshk8kMBgOeiBuDoAyLt1arxXFMpNU5l8vlQOy2Wi0uc87BiI+bczAYtFotLj7KUQ7L0RdylD9VisXibDZLpVLVajVkNwdl9jd/8zf4b5MkIezinCuXyxz+kiSp1WqAP6rVKm4V5xx4yaurq8d9taMc5fsJRXlevHiB92KxWADvaLVaZMeI6dU8XSzM7qSXU1LYfB4sZsp2u3327BkxTdAV5XI5n88DtshkMq1W6+TkZD6fQ+g+HA4bjcbd3V0YBFmtVu12O5VKYZpMp9NyuVwsFikdShGD6XQKYgNqn9PT00wmAzaTki7Pnz/v9Xqj0WgwGBQKBaUrkouECyQMHoF0gYzk5cuX1DY/ylEOy9EKOcqfKmZWLpe32+3t7e3FxQVeX+fc1dWVmf3zP//zixcvULjQIcP2iGYUZK9SqfziF7+Yz+fn5+cc0ZbL5Zs3bx775Y5ylB8kSZKARaW+XalUqlQqtVoNV4cETGgcx+VyGTOiVCqxWLLZ7JMnTyaTSaFQuL6+hsw+iqJ2uw2hTrFYpGAN2KyTkxMS+Cn7cnl5OZ1O0+k0YRqiQhgxXOycq1QqEJ3NZrP5fH5xcUFaOP6SJEm63S5Y2nQ6HUXR69evy+UyEBCgHng7nHPVavWrr75KkqRYLPJGeESWyyW10Gu12k8Nsn2U7yfHiMxR/iQhsQWT4smTJxBOPHnyhAwRynCMRiOd3pxz2+2Wkr8kRvb7/f/xP/4HFWSq1Wq324XGsdlsnp2dPfb7HeUo30fiOL64uCDCcnFxUSgUqA5xf38P9oJqwM7nwZmvaUcZGtJBi8Xiz3/+8263Wy6Xy+Xyl19+eXZ2ViwWSaaAMIbwjfOxm16vd3l5WavVcGOQUHNyctLv9/GXFItF4b53u51zjvhIq9XiJ+BUnHNJkpyfn9/d3aXTaSIyrFml0vCmqhsqLPkvfvELft7tdvGLiC65Wq1CZvjRBuIof75ytEKO8icJ1dJzuRz/VioVqmWWy2Uwa4VCAaUjJVWr1TabTaFQyGQy8/n87OzszZs36/W61Wrd3t5eXl4C2ctkMlQpO8pR/hwFXDZpMq9fvy4UCngj+v1+LpdTBbuQFojU3Pv7+8vLS9wGnU5ntVrhhyBZxjkHagS3CmUEnHMY/ZeXl+PxGO/IdDrN5/OXl5edTqdarc7nc4AjuVyOkCh1ldPpdKfTubi4WK/XYEpYsMVisdvtEidKpVLKqMeIyefzvEJYEBhHTjabLRaL6/X6s88+i6KIAn6qcI7f5TEG5Ch/ZpJ2zq3X60wmgyfNecP5KB9HVMwznU7jy93tdp9mPj36DmwHqI5Go3FyclIul8/Pz3HY6kiUSqXa7Xa9XidHkRNhOp0uFovb7fbJkydffPGFcw6KhXq9vtvtUNZg5WDlf9z3fa9wfOT15XD+CS4ZvTKdIPTPY7bpMYRJWywWU6nUYrF49uyZqK5OT0/xAnINJkUURdlslu25VqsRu4H6rFQqTadT2DsIkaTT6VqtxkLAEwlHiJnd3t42Gg240U5OTrbbLUTsPGI6nbKmVqtVsVikqUmSXFxcbDabcrmMMQFrRa1WgwGs3W5nMhniL9lsttlsEl3NZDKopiiKVqsVb1osFnVnXhlobS6Xgy55OBxCo8chhHlC6ZlHGKejfMKSxtHHVIOHMZVKfZobwH9JUWI9fKnOuXw+D8vQJyUg6Tgk5fP5bDar6hLmCbZVgIPMwJcvX0KHAM0A3ulms1koFBaLBWxO2rcIjZuvZwGt0yfYD7BhZjIZfYiiSOr4pyMkRIBt3Gw2+vDY7frYInMBlwNkIc45UXOSrZrP54fDIZkm+Ag7nU6lUhkOh6BDQLOenJycnp5CRg5WFO8ImKpUKkUpO+fckydPnHOFQgETZ7VaFQoFEBv6VS6XI/U3bDBmDXWXoEqbz+dXV1dUhCBlBgbhVCp1f3+PRwTWk2w2Wy6XcXjQDLyYUJrC4QtHLSk5mUxGgNxOp4PzBnDJRx2ko3zakn316tWvf/1rZi1WqjbFR27aT0M4jsgTsN1uScn71PpfJM0EUIrFYqPRgCHA+XxFTA3UVki8uFgsarXa6enpbDbr9/sQsH755Zfn5+foo+VyWSqVYDObTqetVgvgPYHzx3vp90ipVCILEX8VjJN3d3dPnz597KZ9VLm5uTk/P+f1AUAMh0MypB67aR9VRH9ZKBSIdygU4jxEFBp4eHEgC4YHbLFYnJ+fq0g16+Lm5ubp06fAQaAlPT09hXG8WCyKpnYymYBsdc7BU0xAB+ae8/NzvCwYNNznl7/8pVYl8dNCocA3KouRSqW4m3NuOp1eXV3FcZzP56G9L5VK6/WaCg/lcrnX6/Eg58ndy+VyvV5PkgRnDB9+//vf/8Vf/AVHDroLu+2RRuwon578wz/8A2tgsVjoMHq4QNFRPqCo+gDDsfflpyORL32sclDmy2EQw6bxKjGIO+3NmzdhIdOw4JxzbjQaLRYLPMzoRBUlD+sBfVLC0uDgKLKpx27U4wh5mIVCod/vq2TdYzfqESSfz9/c3LAWwtpMeBScc+l0WjOZxaIVNJ1Oc7lc5Ovx4koEta26RSpgaYGWUEk2vv/iiy/4oAY457BauKGq9W632/v7e+ccqcVcQOhkOp3KbGo2m6oRQ1qNHuqcw0zh8KBSmuv1erFY6J6wLYscdjAYsFKo8fshOv7PSY51ZA5I9ubmxjnXarVkqBI4PDrNPo7gWlBJKmr71Wq1T63/s9lsrVbjnDSbzTabTbPZhKaMIjJk+l1eXkZRNB6PKWZxdXV1f38/n88rlUqv14PWqVAoCKk3Go1GoxHO3iiKrq6u7u7uoFsdj8elUulTS/Yrl8uj0ahUKolLu1KpvHz58tmzZ4/dtI8q19fXP/vZz5xzsG2u1+vpdEpK1GM37aMKRRPT6bQYuszs+vr62bNnuVyOkmx8v1wuSVA3Myo+sqb6/T7lYGq1WrFYhBJwPp/X6/U3b97UajVgHP1+H1wINgQrCB734XD4q1/9ijuoYTy30+kIrUUtGOfcxcUF5dna7TYRYezpUqm0Wq1ub29rtdrvf/97VcaGo8w5p5LFzjnqyCwWi/V6zW2hUyPBGOuKNBlK6gA3wd4qlUo/tXlylAOS+r//9/9+/vnnAg9iNYuz7yg/ttDtRDSc51j8BAsdxXF8f3//9OlTqmERAwZdD/NHJpOh8YQqcGaIMwD0Is5kcPXvYilWqxX+ahfAZT5BIWl5s9mACrSfcBEcsrKn0ylYH3aan5r0+32SXcfj8Xg8xjjDSwHg1DlXLBYJxICjOjs7w/1QLpf7/f7Z2RmY9Gw2izEBiJWKd6oNqScS/oCDxzlHJAjzBZ/il19++ctf/nKz2YDzcL6W5Hg8lm6HdESpbcxnwjqqPDcajRqNBkhBMtq4Q6/Xg0WeQBIPdc7RhuFw2Gq11NrNZrNer/P5PBheShmHBtNPQY7V7A7J3/7t3wJ0cs4Vi0V4LR+3ST8pYdNlt6b2mwvS7j8d4bgTmg4owWazqRSA8PpCoVCtVkGTNBqNcrmcyWTCsqvsWHJ1EBSvVCo84uLi4pOt0Xp5eemcg0PWOafiuj8pEQyT2iXOd8tPTYBbvnjxwjl3fn7O3pzJZMrlsvoH9AaSy+XOz8+dc+l0mtXBLGL5NBoNfsW/XMmKIHHGOddsNnEtKKcMuh3sABbUr3/963Q63Wq1uI8GC/ysGiMXbKFQYAGGrkfsHv7lynDQuabVauEF5MyAd4cGy2zK5/P1el2HCirtfYi+/3OSY0TmgKT+5V/+5a/+6q9KpRIl2mHZg6j7sQfuJyHQdlGU8t3/fjpCLkAulzMzSl1AkGpmJycnQOUvLy+73S7lv51zZoZpxQFIt4J0JJ1Ol0qlxWKh0xgOYeccHn7IsD+1tAvoEwhZ4qx2zpFQ8NhN+6hiZtjKu92OnCnIPT/BtKYfVZIkYQJDWsoEhjKVhYznjxx1CuSytGu1GhgRloncElCDiHRVeiBJklwuRzkngCYUuoOo1Mzy+TxBEH7L3aTY8/k8kSMmMBwk/X7fOZfJZAqFAm2DCIRxBLBFId/BYAD1CNxrPLTdbvd6Pecc6TlJkhBLMrNms8luouIyzjmyY4jvfGr67ccW9KcdfSHvld/85jfMEjMju+yj2Wg8iFmrCgWIME1mliSJUG/6CfgmpcPd3NyYL+u62Wzm8/lkMiGuSWiWW+12u36/r18RVthut49rlvIuDIf5lwJdoQv2hgZrutvtcs18Pt8DtOL2DL/RlfxX5TFRYeZrjpvZ9fU1TSKqwg/pTNXVJDVXKLPlcglIjRauVqskSWizAHT8BIjcbrej4m7YJEWdNRn0OGD5FuB24zimELl5UORyuQSbovHlt3ocv0U5quWEIPm8Xq9B1242G74cj8e8uD7QUSJqY8h4qQ8iIcBz54X7M1JMdTXYfMdGUcR4LZdLmhrHMZP/9vY2HLUPItxQk1bjwmiq58OJZGaALulbUrLNbDQaCbzMEtbECxfmmzdv+MBLcaWZbTYbStWjNAAt8Wi2Rj2aXBULFv5kMlHLyVzl6SAbaBKIaZ4C7Jrr9eG9whtpCWi+qcQB9ze/vnjT2WymuTSfz+M45rL1ek2nrVYrXlPLyvx64RHoDV6KKzUcoaJbr9dRFK3Xa5YqXar+1P3H4zGvqaLB+q1WmZ7Cc0nW5RvGKJzScRxvt9twaACO2LdB8oGYmC/WzQcq7/CZBqP5w441j701M9KJybHnX92f+2w2G7DAgPH11/C/3Fa9bX66qh/eK0dfyAF5TCtkOp2GE5Qy06vVisYwqJrTaLfJZMIkkFbVvLm7u6Pl2sOY6+aVDshz/rTZbG5ubrSSwwn3kSWKot1ux/mmUqlEUSQ1xPpfLpdSuEmSzGYzOk27EdqZNx0MBhTSZKIvFgsYxsIu7Xa76CPeejwew3fEn77++mu1DbVLei1XMhY8kc/aKlBko9EIKgK+QXXqjTAU9DisAWkN89oWiC5b5mAwYEApm04jwdbxE547m8320mqowWGBdYX9Eaa06NG6iQW7uCantvnpdMrdRqPR7e0tB0r7oPOHnMntdkv+tl5T6UgWVJC3YM2SkSESF1nqbKLb7fb169cfqpH2sBXCpN1sNswZDQeGgi7b7Xb0Ku2n5+fzOaOjPXu73S4WCw0ZG7P2rfF4/PLly7BVs9mMR3Q6HVlCnU4nnGMSLX8pmdFopF9RYCWcLTJw5/O5luRhGY/HaKfVagUihPFVCdzFYsF/mZwyNeg3/mXKyUbntvQYBhOjv9dvupI2y8DCzrZg12Q5U5Oh2+3SyfrGzHq9HiDcd3tPwxfaJQjvq9TLm5sbvkHd8ZpKDgo39Yfk+vpaj6Z4Hu/1u9/9zgL7LNQ5HB7UP7RwOByyTOh23otxYSFvt1uaent7O5vNXr9+nXihhTwdGy7swzBDak+OVsgB37eh2QAAIABJREFUeXxfyGAwYDrqNCArlTnR6XRIHtaR18zm87nsd2m66+tr9IjSKc1sNBrJLzIajcIDDZPmEU0QCb7ZcrlMO1erFcri9evXrNgwBc7MvvrqK72UmXFcHo/Hp6enfBNm99GZ9DCdw61Wq5U+72UDYiBiIXElDl4uWC6X9/f3aPzlcpnJZP793/+dWURnhk01nwe+971zTiO4Wq2Gw2HoD9Mp+erqCoT/6ekpcXQoHck4YD33+32ud578DafIN998gxGG1cXjCPHo4DudTlFezBaiDNVq9eLigi2WELj51fHZZ5+hwna7HX967w73Q4R9VzuKmKMoY2Y+HdrMKGZmgcF0c3MTDiWvLHUvPf7D5SErhAazvvr9PmlE2niIAmBJWOAOgc7c/FwVOQ1INSAF3DydTqPQC4WC6DtrtRqhsXq9DkiCZ81mM/qKwopkXTEfGER2ZUGMeS/se4q9mdlyuRyPx9SJZR/C4DvsC+FuJIwQr6Rh0KHSWl5WR3aZOOEymc/nUmjr9TqXy9EbFHkh21ZgjlwuN5vNdD4JTShZtLIw4jjudrtMrdBAhHBMm4IFtt1isdC2bWatVmswGGATsMS22y1KOFTg5NCx3GTA8UbcVsNxQOQwDi2V2WyGsc5/mec0hliYc+7k5ATYL/OExb5arWSUY/+Fuoh/yXOmnVzsnJPfjhdUlvVh+8mOVshBeTQrZD6fs9WFRgBThIFPkkR+eB19yFyXSUGWmpnNZjMpX7kNzez+/l6hBKn1KIpQPeHjHkvkgwXMZWb39/eNRgMo+2effWZmzteUkrrht3KlyteKVTGZTNgah8MhRwSZ8DiiSaPF7xJaA3JTh3qQY4FzDsIieWi4Z7vd1pWseRrJssePbWbNZpPMwNFoRIAJTAlajJ+jxXhBge+ccwwc4BJ+iJ1hfqy5gN/qQKnvwSvk83kIqtvtNsBYobCB18H4RGtHo5F6gNdEs0PJxfewSGWz2Q87fzAN+awIglz60tcMGRdgC1pwur27u9NWEcdxv9/nvx+wqQd8IZwrzAw2s1//+teageq93W4Hw7eZUZm5WCwS4WLmcD0prND88xStWTYzPPAyvin8Zv7ATd7WbDbTHKMBKA2FOfh+tVrRzyw9oTeePn3KNTqv8whORwe6SJ2DJYQXM5vNsqDM+0IsOFNp6WFPYO5YMHB4i/lMv1ng0pNupBsBt6pUJDTZdC+F67iJKMuYWs1mU+eN4XAolpGQvGc0Gg0GA56OncT3tFMrdy/RoVAonJyc0Kp6vY4zDF+dmW02m2816MlVFjA8RMeT5slldBHNu729VTAXjaT9brlcLpdL9ef19XUURSKRc86xcObz+Xq97vV6mgkuqArEoMg6eUiOVsgBeUxfiPkjuE4qZoazXaaJYoFMDmYMJrB5V7mOVuyp//lizsnRJ+fwdDrV+YAVy4t/wLj+dxUWHhwAZ2dn3W631+tJ0znnptMpvVGr1fABnpyc7HY7gQAEsFDoIbyzRLoALUB6Id/X63VWNfmW5leXc051YYrFYrlcJtvQeaounXRvb29Ro/gqm80mfcvdNC46bvJZdiFOYAV3OYjw1mENLf7kfN2KVCpVqVRCyP3Jycm7GV5mdnNzc3d3l/j6pWgBzFwZstPpFG2iZzG71I18idXF1uicg8vhw7LMcZ5DOxNpInk7jmOBKjSgVHXXa/JlqVQSAzITqdvtEur6gI2091khob0LoZmWJD1mb+N1mLSMe7FYRAmAdWXb0MtSjN78ET+OY21gzpOImx8vphYbLeBZbIsw76Ner5sHXRFZC0Ofy+USXwglGEejEcgSM8NNyH72UP8ALXKBFw1dB6RUdv92u+12uwr9OA8ziqIom82i7l6/fg2hmcrqIkqp038Z98ViAQ2POsc86sX5LN84jm9ubkITR55IrhdOgjZQ5gYXTjabzeVy4F55tKDZ1WqVVxOci7sxHBxjULZRFA0GA5xzm81Ggc6H+lMHAHL4ZTrIPnPO4d2RVeS8RYsFII8aP4Hd1QWs0CLtxGoM561cvFhjqVRqNpuRvcw1lUpFxuV75WiFHJBHs0J46GQyUUUDGsBiEDyCFWVm2+1Whw/tVYvFYjgcat47765n/nFlCN3iV+v1Wga+/QnOtB9bcF2EbmdUcKFQ2G634cksl8uxcrAbZKkg1LmV6eB8NmySJHuue7Yu/ZwzmaCdX3/9tcwy0S6ZP1XoDGrBQqVViBSlUm25slKpCM6JF4HmaWOwAMzBZaPRiNVLok21WsUe4qHOuc1mI687PQZ0Ru13zoUclCD25UDS93tuVefNLOd5KnGoYAOxIVmwB4fHxB8ogtCGnazNidYSVBISyPm0I645Pz9H3ZtZoVDQ63/Yef6QFbLb7ZhvZkYteDn5sHTDDG18GOCE6FvzNiuzCIvZeU+VeUJS8wpk48s4mz+4x3Ec+4ImRBbu7+9F18uVoVuU72mD5rBWEFKr1ag8J/QDB6ED445bkc9hRi4btjJdLZg8ah72CpkUoTZ2zrHVYZoTxmVWpFIpkKHVapUdXauPtUl/Ks747NkzCxxvi8WChyZJQrEbC+C333zzjfljg/AW5h1IZnZ9fS1lgruUy3K5HPEsC6Yfjjr59obDIRPmMAfxer0+OTmxwE+Ju4vhwKTQxThN1TmcN8yMnDtiZIKgEabHNesCi6pSqZBibQHdczhSMl41Pw8YIkcr5IA8pi9EE5GpPBgM2ITYMnGCmd8IdQTEfL69vd1TfP/5Pt6klatcjjL5pRGtisgnFzyWYGZdXFxks9nRaAT0TAfBXq/Hm1KzY7PZoIO0vIVxwaSz4JgYnlBDFz29pEiQbrLdbkOI/p5fJGzzZDIRtREGH2dfCyAmW196V+8S/ovVGH4phKmZtVotpketVuv1enEcl0ol9CzV0ne7nXYm8zuZRn+9XtMDXAPDIzqaVEbnnOibnj9/jo3LraR3eEc4UvX9kydPlNDhPBnRAVTadxURgevUaGYEoWRPOB9W6Ha7cj6z44YjhYHCsgILtYcf/CFyABfCJISty4LxDf3kjItzDhgp4+78uXlP3euDtkw9C77OTqejK5Mk0ZFaPlQzKxQKoa/UvNeEcXz+/LnzPrbQ5mOsmcb8Sj6Db1UaJMKEiFczo+6dIG5oP7oxxMmZB82k02k5DLRw1Mhmsyl/AxPAOUfYWkAubcbhWzgfTMFYqVQqQEzYUGV7cWy4uroyX8vXvEuD9sRxjI1iZtrLZdZr6BEFg8yrl8FgQJ8DrD6w9WBL8ZrYtVhUl5eXOGac91/KX1itViFBqVarIlNhPoQLgc7JZDKK3auLaE+/32dKFwoF7qyqBdJ+Log+v1eOVsgBeTQrhPQN82tDngDnKbzMDO8iOe7Ev5lJFhjjmK4KBrNDw3cSHm01+0nTMH86r1QqHxCy970FfyO7ODpULF7mVyCHSM5V+pW8iOHdlInqnNM1ciavVqtWq6VMVNn1iuxoazGzVCqF3zX0BvOn0BfKAiYiwDfaV5IkWa1WjUZjMplAwsg3SZJAu+k8F4IQppVKBUWDy0RREn0gwadSqazXawHvzSwElJmPBPOZWEyYrskPT09PlQ8M+YGgLfBxoTr1LrlcDj01mUxgQwlzrz6UaCPXRqJsRoqlWXCg18huNpvlclmv17ns3UDDR4jIMBB0cqPR6Ha7YRUVKsIrVOG8R4fJz1rOZrMQS0AYCmpBMAK9iHblcGcllMm+4ryvRe0kNKPDLk1VLrFsoD37OAQDcTF29h65wJ44TyPGf4ml6sX7/b6CMjClWrBbVyoV9CEOGKaiBXQDamomk9GaFQg9hCwIvcEkUQCx3W4rcoGFqh1U46XZwpu6AFJDM5hdCD/J5XKCTjvvzjSfpagvQ5QS4LZvRSzthefMZxJNp9PQhOWNeNlerydAoW5iPl3L3pk5TB5MdkhT9BMUAh4ysHf5fJ5Y8Ha73QMUv1eOVsgBeTQrBGuA6ciyDwPeFqxJM5vP51ACa6MyM6wK82qCo4N2RGocWDDVLPDPu6D09rdOoI8gi8WCDQ9/snkL3TkX2uaJr+zANwLts4pCeFe4zLRNhuh6FrBqQDjnRH+kuIN5pQO7M2c4Jd9/+eWXZgb9vForDSjlrgyUKIqwLZrNps67/X4f+0NN1YlZxiK/ymazYufkHQnKCkLkAqeLUP3pdJokuvCHcuk7f0A3M7QPE0xlvQClMluq1araiV+XbebDmiBhVmqSJJ1OR04momZmVigUlAZpfqoQippMJuou52u6TqfTvVSaHy6HrRCNIwcDXUZZefNdqvU4n8+HwyGvaR7eqNI8WOQWuPQ4xGsDpooNZ2JtOaSMRQHTAyMeoteVkhZubHu7XZgTroOT+fyXh/qHK3HAjMdjncU5S9TrdWqphEhVPgi1wH9D8D5jenV15QK/gixmekltds6hMwWcEoikVCo1m01l+aI06FjOCbCo7T1d3SIVSn8KLgP3PMaWLLCQkElKXinx/Dfx7CwHqtxtt1vY2MbjMcaZhkbtUTsLhYJQLEhYkwSNFyZGoa+A3O2NPvfHZGR+cn/NPTK6XVCh8L1ytEIOyCOjU7HHFfOzwG243W45AYS6howpZbQy/25vb/cwjKHhrIgDEQT+2mw2t9stSYMWpD4+itDtaAozi+NYQUqMAIFCBHE3f5RXZJQqWUKB6aSoeqej0UikAngR37XS7O0IqDzbuLJDNrAQLxKScDiPAAjB/EnAEmh+glFKQwqFClvmY7oc98mQtMDQNK+zmB7EdPfOIi44F0rLzOfzRqPB7FK5k8vLS32G/1FZjs5DQ5iferVMJnN3d4fihm8ebMr3H/63hX7bo6GDE9PMVqvV9fU1FUbMbxJSr/SeVoeZUa+Hz0qF+CDykBWC5cRnbZP8V3ET5wNn2gy0JSipe7vd3tzcoPchhJjP52/evMHsZoGAKiAj13wMiKorIawHtyvRK3BjNJ70EGJ85nnwzOzu7o6A0dXVlaCUokSz4Gx9WDQttRgHgwGJYERFBQ4liKBxLJfLtVpNK908exjDKooUVhBJtqPRKOSDoZ1MZnJW9SWaUEh2pQdDkhGCnYWRR7LZLOpIRpv58K69DRTL5XKDwYBeLRaLWmJCWpyfn1NuRk8PaWMekkwmw2WZTAb3njRPkiSnp6e3t7doRbDYFhgoolmKPEMJ/ZMkic6r3AqtwlNCQPcXX3zhfGwLd9GrV6+oqGXe3DwAbTlaIQfk0awQUVqJfMYFZ9nXr1/P5/NsNguS9ObmRuAjbS3mleDnn3+ulaC1Xa1Wl8vl3d0dJ+b1es2CQUVitXx8q+u9csAKsSCxXto8ZI0MQwlKhWfXzOfzg8GAZSOlI3WPV2M4HDYaDdQNJ2Z4fhqNRhzHqurC4WmvxgT30epyzqVSqbOzszByxBFEfBXO+x4ga7e3rcYwWFsul+V5xgFeKBRgVeICDCPdluAFYbuvvvoKm6zT6ZycnISZFLq/nDeCDYUBJudcvV6v1WoaFP389PRUKTbOF08/nKT3/aTX68GqxOYdhpw1TwS74xuI+AqFAtYJp1IYMva4hn+4HMCFsBNASzoajS4uLuCmC48K9DZTWhExblWv10M/ZYhn0pfk+Ye9AVYRe1fcGJlMZjqdAiCoVCr1ej1MIz89Pa1UKvhg9CLOu16cD6lIOLQwpeUjfKh/IFHkTcPEb8x3+QLn83lo+IbEBFEU1Wo1QB6R56NzQeat8+6NZrOp7BUApPw1m822Wi29hcDgAnzw3Ol0ShtyuZwMLGoUkDoAm9zp6Sk5zzhNOcVp4HDaYQLKalfSmXwhmhvhqmy3298Kzuv3+xxKu91utVoVHD6bzfIuMkwBQmmaaU/BZyOuAcz9crlM8j+nnd/97negwSxYZWb229/+lv5ZrVaKYm+3W5WqQF8dmA9HK+SAPJoVwrbHhICvU3hjluJutzs/P9eOm06nIcOhikdoj9/d3V1cXAyHw8VigU+l1+udnJyw0XIZqwvznHkpuLtU+SPKuxEZaTqpTuBjqVQKR6t5mJhuorSxfr+P0cZq5JA0Ho87nQ4KQigt7fRy2ps/34zHY/LpLWAm0Jaw2+0YNVwsMg5ELqJW6fw9GAxOTk70dowIgy6/FxgdSlpoV5BZkM/n2VH2vKlqdhjUo+V4ZXh6q9XaeLZv82EX0vBwq/JbzpouiIWtVivMODYP2RxUlLUPaoWIftuC6IwAQ6PRCIuT70H7m1noSsQCs8CJqJPfh2qkPWyFLJdLNp4wwznxZejDgQtjH+Y9Gc65OI6xEsrlMgaBsF+73S6bzWqnBBdZrVaJzWtKc/Nut8v92fixU0NtIFYVZbuEDo/wtIPIDsCV+K2ROKq38FnJPopPFQqFXq+nwBCg6Y1ngu71emTv29vkY+rtq6srLcZMJjMYDDabTalU4pTFbfcWozDvrMHlcknKMRuwHgdthguSy9hfw+WmwApBYTxMFoC3QiTsV199peHYeHJ982a0NnLFZd4rw+HwyZMniuDrSsKUMpiUn2XBzOcRiuuZB7PrmiRJqtUqe430VSqVwpSE1kw9wMYUWv/OOdH8P9T+oxVyQB6TtYwPSvRgQrRaLfn9MG/ZmKmRbWZRFHGoYt/aCyuEH2SSg0U3bx0vl8tKpaKAdL1e/4A5Dt9P3muF8CcxGukbqQARiMkzT6+Cn+L1WVrwPlUqFQBW7GrkRfONtCQqWBdY4DYAzw8cJBQOZPl8no0HzatzDz72MNATjtFms8HdFX6JW9j8/qHv+bD1NTL0DXR26KCQoiqM9/d6vWazKa8M3SJokXn6SMFZnj17Jgwd+w1ZoJhNbBV02ofNgDWPP2AaoN32tkN9E2bNbD1HdWgWLBaLEMoa9ucPlIesEJ3jN5sNifSsVkUMWY/r9Xq9XrfbbbjLOMqbz6vae00FI1jspC999dVXvFGj0RDpOKJAviaS+A9hELEAF0JQ+Pb2VsVgzW+iItgwv6OHVhQ8Igf6hy2fAggCX9vbSGpCilgh4QKnG2XELJdLHGMUemSUmcPCn6phL1++3G63wFa0x4cXTKdTsdFo4ywUCvRh6HOihdKxqBdONXjazHOvhUQ7RNBcQAjEHU5OTkhzY7zEC9Vut0OwzkPy7tmm1+uFUBLlFiVJQuez3gEp04Z+vx/axwoIugDgcnd3p+PZng8SIVtC6DFE2fLvlaMVckAeGRcyGAyY04wfZRvNayvciRtfVVXgIOdcLpfj8JRKpZ49eyZWCbyO0CQL7M1fyZpRgIMC3O/q948v743I4JAQeI1gEzuiDHkz63a7Wl18s4cTlPBfwd2hdIuiKJvNgmzY0z7hocfM6vW6qlfAoSTHr1A1e0tXOpT2dzqd09NTWBxwnru3IckhWlkRYrlqOe6LhtLMms2mAva4iPUTmjGZTAjwywYS/vTs7GwwGBSLRRywDAGXURbYeb6TkGw7pE7a7XZhvOZDSUichQPGOQcsl50jpMMPQwl6XzmrtaeGB/0PJQciMtipIvBNpVK9Xg+yn/V6DW+vTG2uEWE/dxgMBgRxSM+2t4vkkf6jX+0NgVLe9kxedqZCoYDCwY2klE4XuL4AkClPxHm+fznJwh54SOI4ljluvs6IkkHYOzXJNT/JvHDOffbZZ/StnhKGOcy7dRHyyJbLZS6X00AwRdUVupvK2QCyMa9sI083Z2YvX74Ua5xzrtFoALA1j4jf+mp819fXu92u0WjI8cbQLBaLfD7PU8x7FjOZDDHTcItx/uRjB7ee7XaLB8L5gFoulyOLzQV0SrIwCPaR5x/OAT4Qtj49PQ2Tg+ztmL7zPjxBdiyY9voJDrlXr17l8/kDuJajFXJAHtMKYTB2ux28y3CGWuAuIxonEXys3++jlUgxF3CPy+RKCe1uzl4WeA5E7/1jBPW/kzyEC5lOp8+ePVP64tXVFekPL1680KoQ8iuTyWjXBAImhiIKQ8ig2SMeCA/3v//9780sm81KLXIrdjvFy8OdT+KcA6uF51/eYOzId0OtaB+yb3Q34DsigAk1Dg8lLFUqlTg7MvrYNBtfCLfX64HIoxs5zMk0URmLfD6vE3Ycx7LPCPw/efJExAPqjWw2W6/XQ3cup+0PW4oI7zqfxanDf+lbjsW6Xps3+n3P+gz17Ads50NWyGw22wuQa3C73W6pVMJLIYIH86E0ftLpdNLpdDqdZo8J59v5+XmYQbper/v9PuOoQob0QHguN8/fJT5ZFlo+n8eHZ0HwiKiBe9vPREo5RjD6ZzQahdx97xUXBD6cT1fRItJ/zWs5XnxvpEJU6W636/V6+Xxeqmw2m4lAD4sTJDU9id5QP3OZUkVAhcdxHAZEoigSbML8/np6eiprWPwrxH1EsEEGmVY3/NehihCHgl6Nk0ZoY4l+/r0iXBHXfPHFF/Z29UELFItzDjBNHMe5XO78/Bw9qXCYC45YwswJ66oI4CqoDa7JMB6PUSZQSDCd6vX6sabu95ZHs0KUcadkOTOLokhnQS0GYQ5oni7QEZwP3EpTau+2cqrb285VC/g6H1HejciYGXyCO1+DisRayDbMv6BOfoQkzLuvxT8WYhgXi4Xqjygpd++aMJxhb6PW5atAj7C7KxcmPNAoXdMCH7vqiHIlLREbtxwSFvBkCAea+FJY5qeB/BYWlFnhSiXiik3E/NmXqR7mWya+/K9egdQJAjT0jKAkMmF1MG02m4eZm7+3rNdr0WpZEIygG+XUoQcARtBa8wTk5jEuCsN/QIP7gC9ku90yAxe+KOvOU+5ufFFTC+gitp7CWM3b+noxIUUp3nVVoWOZbLdbVjdzI6zebEEJt7Uv+24BNzlX8l8qCPIgVhk/FKkGh/gQKvutncmC1XLmNdVCFiw30Xls6+vk0TyFXDVjVTYrVFl0cgjNUY/RjRgNWlbYLjLppFLURfAE8soMUwgdZbWyOtC3mpxhs1kXepBuFXvhjcJuPGDVqfeioPKtulEAqSigZ6SvhJDdA22oTrj9f/bO5LmOIzv3WffWnUeMBEmRklpth1/4xdt46a29coT/V4cdXtir3nhhL+x2+7nbLYkUQYIA7jyPdeu8xe/l5wRIwC0JICixzoJRvKjKysrh5Bm/40vv6u0wCr7rWlh3GhTPC4v2hYzxvZRJIbfQA3tkMtIuFUPXL9+XMCEkHnxMu1GsXzDtO5+0iXValgAl3Ww8rlfIVkjWVzKwOhlWOVfMLxyn3++Ly4tvUh1qt9tRwsN8HTsuQrznxBf1heUhPGl96pyw4LRY+sry+vzxeEzZF/MaWKhS/zBSfEBoVfqk6BYp5GOja+FT1446wXcquWy1WklvgTjhwmhNtUPjkg847wWNaN5SxdmZBEXj5JrRUjd/jKnNnS9RSWeUtY7QaYFwgLdOATSS+1e+WoXeyytCZ9DWo+5COkqRxZEzsDqH+g9xJ2xM8RyGbuXBYblTu5ggMP0eutXCLGINjpytuhkcGlko7zDn674pk0Juof+ujZTRT5pSTxS1cs7lcjmswc650WgUx3G1Wh2NRhg28dE+e/ZsOp3mcrm9vb1vv/2WGLo0TXEw7+/vU5QY7kYkL+c9ebM4dzAvg8cAorZzrlqtgjWHLZQ/rdfr8/PzWq1GVbxKpRJWCcbw02q1CEoHGpKwFXRfirkTKSLUE6yjtVoNczqmaVAycQ81m816vZ7P50ejEZFDURRRu444j4x+xrRarXDEVCoVXDC73Y4ae2R+7e/vUyyQor7kYZJEhnFiOBziNCSM3Tm33W4vLi5Y2DgrS6US65ZXpGmay+UuLi5AQuK/pMCwws/Pz9mMZOAvl0u8AI1Gg3Clfr8PNt16vSblfrlcnpycEKciTEIyAc0MKDN8CoPBgJCUYrFYKpXooYI8ICD4YAvsFAxXQPgQe4RH49GjR2matlotHBB8/mg0Ojw8lCtZ7s44jmezWalUqlarwDg556IoYqPxJ+ezr4vF4mg0IpijXq9jzFuv17PZrFqtzudz8AKo/wdqQ7VaLRQKcRwzg/Qno586ZVLIz4TwpptXR8hppABbsVhst9uAASAxEHwHd9t5AKWvvvqKPBoQFxaLRafTef78ea/XI4+G2i5HR0dRFAGHRVw9+hxwkM65s7MzAoexkTjnCATjLY8fP+al6IvOOSVgk1VLujXo3ShVhULh8PAQwYjkhVarxV+jKEIwcs49fvx4PB4vl8u3b986n0759OlT+sMg4AinzVKpFFYozehnScD2U3gdJ5cKL7OqiYRgzXPyfffdd865RqNRKBSSJNnb22M9E97U6/VKpdLJyQmprdSm5sCuVqvFYvHVq1cIKCcnJwQn4Usaj8fEu/DqJEna7Xar1UIAyuVyKilAWsdyuWSvxXF8eHhYqVQo08gmpSKSc44aFAJwA+4MsUYhZTibWq0WpRDJHQPHz/mw3FqthjDhPJIK0cFYcdbr9XA4ROtI05Sdvt1uCUFF8yHev9Vq/fM//7NzjkgaNil8gNiR6XQqFP92u00hOrYksGb1en06ndZqNWy3KA8kpDgf/E6Mszqc0U+bMo/Mw9JdeWTkar0G5anYdRldBTSpJDfe++rVK2Xc6XfMEhhplROojFYB+Cg+Q4hA7qr5EduDcw4TrlIewkBCQV5SHePt27cKDcNFbd4Y/u233wpnSZ4XYSPKXcLZw19D7ARKpVuAVPZ9KfPI/FQ8MmEmpxwipVJpMBgosMACnFMiaZQHvvI1eswnwFvg3NGytyAY9t3MefOuT0iL0Hygj4CD7WoRKBatUuWdc7lcrlarKceV0GwLijA7n0RzcXERYrwCt8W14lGU0rzZbEhmQaJCfwh9TC6oqHBtSNF5+KgQgY1e4TMKa1zrAh3g4OBAgfnb7bbT6VDNlNnBXER6jtILrqE8/CQo88jcQpkU8sB0h3Ehia9NBZt4+/bt+fk54VQoPdVqFX2CbQDohpNwAAAgAElEQVQPRc8L60u5oBZd6Ak2M/wjZlatVjebzfn5uW5GxxIiBaYIkB9hcETgcsPp6anOLZj1cDhUKK62K+zm66+/DuVmfe+LFy9UOVmeabuKMB36ntWy0m5/8NmZSSE/FSmESMz1et3r9cLMVd2w9FXmnU8Z1T4izTs8dIX5i6XQPOKIzuDNZvP06VOGRVk5rLdvv/2WTJCjoyPaVEEJjnbcIpys2F0EspIkyZdffsk2xFQQfovcmnEc5/P5J0+eOOf29vaUiSOkY+dcoVDI5/NRFJFuho+DspHcwHeFmVZJkvzyl78ktn2z2QC/QSQKCSOff/45d0p6ODo6koiwWCyQTl6/fl2v15MkUQ7BtengEUWT8Iq9vT2EwjBYB4jYH7IgHogyKeQWyqSQB6Y7lEJGo9F4PEYrenefy9FrQRAcM05Vz+VySarts2fPcGCjgsxms36/H5aMUq6vmQGbeHl5Wa/XaQ2hJI5jIu25rd/vJ0lCVjApefLIFItFUKVpU3mVsFfeC8azmR0fH798+RJFCh8QWBp4owgfAeKaAJEoigi+63a7y+USr42ZzedzFYf7AZRJIT8VKcSu5nkBW0Kfv/32W348Pz9fr9dRFO12u/Pzc6F/qmg7yjoOF+dcvV4XfjH2PBcUMyOqFCRT82k+HKhsbW1z2RW408zwepjPzhCaHzcTavr8+XPiVRWaqpJSyoYlosU8tDGdDMPJoyhSdC0FUzRESZJEUaTc+EKhwHWr1drb2wuzncMS3BBeGJltuJAOsNvtVIiDbF4UBroqIH8UEn11WFpBEqE++Qevig9MmRRyC2VSyAPTXUkhgmAyM0K3/uiP/og2CQoBawTK5/NIGPAUdojwK8OqY3a1grzzuM6gBwoRCFsLtyFDKDVfyNCqnYFihFEELEvSYgGihvWbd+uEaJW6aDQaZAmGvyPWoFmOx2P6eXBwEFaE537Bv2ZSyA+mn4oUgluh0+lwbhELArAb4MsSrCl2qKcAz+C/2qHmLYiXl5dim6xhhBvn3KNHjzA2IAe3Wi0h4jgfwslFaMPgAiigEGjLAhgM/usCex6LvNvtnp2duQAPA3OIvlHknFPAOMK6cFkE+EGtXZ39yGS/+MUvBoOBgHwwCIEUggLAI2xejCX0EMVDARxoF9e+ZbVawQ1wFQmD3/mgdaQ6ta/cvR+mrT0IZVLILZRJIQ9Md2gLMbPJZAJjovQrP2r1KxFXANVAO6guBvZS83EkgCalHuWa3BkzIyptu93udjs4mpmBTiZYCAqv69PESaMoElOGN8mlwuuc9xAnSQK2EvFrStKxAHpZI0YZLX1viHmlsQViqFKplEqlEMjhB1AmhfxUpBALYGDMA07gCiFolBLELEW8FaEEwLOKCOFfFU8gK5VBEJip85ibZJbhKyRpJZfLzWYzkj40dDuPsoq1UkA+URQJpUbnsV6B4BKiobRaLcFvCMOGIG6OcLDFKP1aq9WUD6wdpw/fbrd7e3v/8R//wX83viAcqfU8Mp/PFbDCbUmSUCnXedg37uSjZDgxj+vqAkhi83xPt6EmSRhSpr2eCjFPP37KpJBbKMsR+PkQCbStVgurAFirsiFz+mJF4LyfzWYobYihJJuIQfO7c240GlUqlTiODw4OttttpVIBdKRarZZKJVwbzrnNZlMoFNrtNrmF3AlnqVari8Wi3++Tm/Pq1Sta3m63tVqtWq1Op1PMwlEUYcjJ5/Or1Qok+3q9DnIi1WL5WJKKSdKJogjzLzbew8PDzWYDnhs3C/LI+Rqn+Xw+l8sJhD6jnzFhkyDpA9kUIYDkDjYLGL5CCiHFLIoi5HKeqtVq7BdSSMgkJ4/G/CkOWDMZN0+ePCFtpNlskmNCegsSMKaXwWCgIn8Sj5zPBAHel9JadICNk3rsLASdUqmE55FEffayvDls5HK5DMBXvV4nAAUmoCIAKpQxn8/RYf7sz/6MbH+qNjKS+E+dDzIj2Mt5cWq9Xp+cnBAiRnIvuTwk2DvnyHRbLpdYT5W0j3WW7BvMJ8oGItmnWq2Sc0TqdVjZI6OfPGW2kIelO7SFhOhDMCPUBRdoq6g18/lc2tL5+TlptOTCAenBn6IowneOu2c+n2N9pau73W46nQKxYFctLhbYP4bDoZwslLOipoyUHmDRnXN4x/G4K8vXfLQpRFOkCusthAeGmqLzWAIAD5TLZYJmKC30493JmS3kp2ILYXEOBgOZ8fv9/tHREX6H6XTKqiOoYjQa9Xo9RTQT5UAmuZK8zGw2m3HPNXMjixYnCGfkdDrt9/uCD3bOkYIex3E4Ys6bT8wsTdMXL17IdoiHAhHcOSdHj3NO0Hy8/fj4OJfL8VciTyG9CAmelP6vvvrKebATvCTNZjMs7sgn8Mt0OmWTXlxcsPXSAKVacgxsBAnv6OiIupIwFmSmy8tLlQJWCLliWZx3jaE/CDdZ/RGI9nw+V9TLj1kbH5IyW8gtlEkhD0x3JYXoEULtXOA8RndhG3DNneTZOucUMqbE116vNxwO4ach9uL+/n6v16OyFD9SaX2xWDSbzfF4TBQemAr2jkTiPOCSyHkTtwWZjTxrQc3bfD5PLB4sD05KXGqj0cAWUq1W4UqqorcKyosfHBzgUeKogDP+4LoqmRTyU5FCzGyxWFxLzNY6JPgA08LR0dHOo8JrQfb7/bCwoqY7CfDmOelZezg+uA1UDMWDUxlA95P3rl2p0BDaRGIg7VyZawwydkq7Gq0SXmx8qTkzY2sPBgO+gvRg8MqwA1lQl4faW7PZTGnA5ndlHMeDweD4+JiR5MHJZLLZbEjAMbOzszOuQ+cO0evk/siz8+6/FuQo7XY7EF2dr/WNFaRYLIoPqPTEj1kYH5IyKeQWyqSQB6Y7tIX0+31VKFUht7AAhAXsIw0qs9TrddiTc04AHmHkf1hejnbEx0nzk+t650uZOA8N4nzkPBhorLTLy0uAGjELh4YN2Nz5+Tne9PF4/N133+VyOezJ6pLkG/oDurzc7aKjoyPzFiB8N4rh/TGZfpkU8lORQtI0xZIxmUym06mQPHTEnpycUAcEaz+QFWZ2enr69OlTC3JkkIDxzjx//lwoF3j3uMaq9yd/8ieSKq7FY15cXOBhVA9xeVjAfufzuVLGLKiuVa/XwWxd+QL02BvMbDqdIgGE2oikcJwgzrlarQZYHxZHesu/il5XryzYX7iKkJxkRr28vEzTtFgsvn79WltY1ZckSchIOZlMNFDO14jGrUMCnUDiGYpyucwmpXIvxlqh7I9GowzB/edBmRTywHSHUohOAirKSiwgEm04HDYaDaowxHEsfCG76viwgPUoIn0+n/d6PYBTzQyrMq4N0K8Rei4uLgA0Q2ssFovlclmRfaPRCCsFlTmRBojXMzPQnc1stVqFeXrXuKEuzGcl6L8hS5KK5pwDSFtcEliq7777juThHzDOlkkhPx0pRBB5O1/h1gLBQuYNrSVlVBFXcc1557znhdMReIww6BspByE7zE/h5KbkyvHx8XA4BJA0DLIeDoeUVQtNJr/73e/M54motyLqOAIRxEcpTUYWUI2DBYVmnHMvXrwIs1FQP1SPyYK9JuhY/qsUXI2SeW8UJaZxVJE2r+ElREZjiyPM+aS55XJZr9cp5bPb7XABE+FuQWVH7idbxzLUsp8LZVLIA9NdSSEofDBHhZdXKhWhQIZcVZt/PB6Px+PQBBJFESBjzjlAycK3yMCwt7cXgiqyr3gvPmmqY0BffPGFdFBl8ZCzoPZhhb1eD2Vos9m8fPkSZfT169eFQoHMmjiOybOdTqckBNICXmryaObz+cHBAV0SFsJ6vV6v10hRoYP5+44zlEkhPxUpRGLEer2+vLwkWoj4R9Zhu91GTHE+5aTT6ejrzKfSSDJg3aLHQ4Lao2X9dzAYVKvV169fMzjCOQ33FGYAYsaRj81zYEVTqSKdc265XDabTRQD/srOVV5r+OGLxYLDni99+fJl2FU+TZBrZkZ5pvAGUAfNB7tQeTgcGZQc1bPF8jGbzbQe6MA333xDayCdMNSh44bk5JDvoSxJUDNv0RR7vKUA70dImRRyC2VSyAPTXUkhL1++5ALkAAu8s85DoFJYix9lkTZvbn0Xn4P1UCwW4RGc+iGDvnb6Op+l8l7E0s1mU6/XaV+9pUyG84kMuj/ESMBIQ5YBN3S73Wq1+vvf/z68XyjvkrrAICHYjXoiqL908seEtmVSyE9FClEuCdOtau/0PwSloDzbdrsV2L/MeIoX4UcO5rOzs9VqhZQfmg0skDO22y0+R9FsNqMEndbMxcUFLkszOz8/Z7nKMBkmxIbx1zSlNczmXSwW4MeH+gZd4sOVnWt+7kiGv7y83Gw2r169skDAItilUCjsdjvydPSBuI3UGUwv2EgYq9CDw23a8uE2N2+t1H95C+KO88hGzgfQPH/+nCxfM1uv10Jq/vgpk0JuoUwKeWC6Q48MfhOunQ9Zd84Vi0Wc00Jwj+O4Uqlcy20J/SBhs9JRVJpcSbC1Wk2pKM4jCvCUjCvOuf39fTYhAgfxpFLLwhEQV6VZuwr2YB47QRrnYDDgWbIDQu3KOZfL5dDS3r59K9OxuOePYWGZFPJTkULMY+KZGQVKzAxvCBEelIplX7BBarWaQrMRRBQ9WqvVlKKSz+cpTG1m/X4/tCZiAuTteELdVY8Gd7IpCMuAhBy4XC4x2Ox2OzmPzGyxWPAiauGmacqLxuNxq9XSOiS/XXuBTaRcM7gBW4PoK34hwV4952I4HNZqNcJprw1sqMkgwFWrVbWAamFm3333napBhXoFjSwWC2EeIuLIz+K8dSoMJTYPaZ8huP9sKPqHf/iHv/zLv0Rkbjab/Jum6Xw+r9frnBYA8kwmk3q9ft9lSOkWie96l7bi/VEURezk5XIJBoAy0O6VQABzHvfQvD84jmNBKRO0RfFrisE6Xz38zZs3n332GTn05LCYWbfbPT4+HgwG+/v7RIAyrRTeJKH/+xbFTpIENy0CBxdYTe9+UH4Erdfrcrk8HA739vbW63WpVJpOpxwD9Na8gMIAsrx3u91gMDg6OkKmgWUwdP1+H3mu0+lQBZ6BNTPc8CR8CiTtR9JsNnvvvgNqJU1T/OvOQ1NUKhXORW6bTqc61QhORDgrFAqEL4QQuj+yn41GQ7iZURRpWO6k/Y+N2J6speVyWalUiGTCmMd24N/NZsPmYlcq1HS73QKMgSWGg581dnFxcXBwMJvN9vb2+v1+s9ksFArsWe5hJQCiU6lUGGrnTYA0NZvNMEi8d5045+r1OlIO5x+JZs7nupdKJeyF4Og0Gg1MiYo1YSPw7cCYFgqFXC6XJAmbjqSbUqmECMXn04d3+6n4lU+EYDLmRatCocBQP3S/Pg769a9/zQVbxXmghVKpFDKsVqt1cnLCirxXUlRBvV4Hl5Ote9/v/eKLL5xz9XodjOcQmedeSbIOqhXX/ChLg3OOrNQoivb39wuFQhRF/LdUKgEJGscxMGLOW0FkC4F4XblcbrfbP2Ae6Rvd0MUHmJfvS3SPSYRRRgG/4ytgxxptboD184sAsJkFXT969Ig7mSO9sVwu31X/b9p3fBTiCB9SrVb5TAki+XxeQBFqpFQqISmytu+qnyrTE/k1zLDcVfsfG7GctP755FKppDWjVcfNIGsxSjzVbre15Diz1VS73Y7jmKkP+QDbn1VH7Vk1xQ2FQoFF7jyo2k3rZG9vj8ad5670VhP37Nkzlnq1WkXE0Q08ValUeG8URfl8vlgsPnv2zAWmVj6W/7JiNVzv9vOh5/NDU2YLuYXcP/zDP0RRVC6XQalj5cFVWUDofy4odnDf9OzZs+jqtr92oN4TSQ4LIxU+DOnwuHaKVKtVZfqdnJwwLIzG8+fPYR/0U71l0f/pn/6pc67VaqEZv5s3+H2J/sRx3G63YZouOOo+HmJw+GpYYbFYPD4+bjabGls4wuHhYRzHjx8/ds7VajUG84//+I95FjGlUqmgX+ZyOWqlws31ulBGuRO6ad+pyJ/6LIlKz4JP7/z5Ua1Wy+Vys9mUI+xuu+qufr6kop8lPXv2TE4ZSR65XI5lU6vVmBTnHY7OTw1jwjVp7cIhrdfrzWZTmgbt5/N5RpUUMyRmjn/t4iiKwpGnBTpw0zrRxePHj3HIcjPiFO3zRnbNl19+6TwzYcHTMiIRMB7OOcCaXSAYOe/w5c6b+vmpUSaF3EKxLG/j8bjdbhO6XCwW4zhWqDYmvg8mhYCjXK/Xu90uNl6y0u/1pVjJnHMYVLFJjkajcHfdE1mQOkgluSiKsHw67/sgf2+9XnPNpBDpxg3z+ZwNT/9x9zqfq/LjxQVlwcjOTxnS+56XH0BkGwq9Hi8ynZ9MJjBQRmm32/V6vUePHp2dnYG3/fLlyy+//BLYkiiKAIo2H0VLWF+aps1mc7fbNZvN7XaLwfwOjas37TuWBN6fXq+Hcgw2A/befD4/nU4LhQLmMefcZDJpNBr9fp/SZXdoBAYQotlsVqvVyWSSz+dBg7grz9THRji/ptNpu93u9XqHh4fdbpeiB/v7+9RnRsvv9Xr7+/vA4h0dHVG0JYoiHB/YSPBkRVGEryRJEvEZ8IjlOqE2dbFYlLscEUfzzlPEbE6n05OTk/euE+dcmqasBLxp4jDshfF4jJzKzUC3YSAkz5YqwaTiA7Qq9029XsdVRGfIzqMo9y39/ICz9/D0sXmuPyqK/u7v/u6v/uqv+I/5ymHOOyydcxcXF5RQHwwGktPvj+RklW+yWCyqJOO9vvfXv/71//k//yeKovF4jAnxA7waZAuiLpyPXSCGrlarDQYD2BYbG8VlNBo1m00iAEajEYZfHiQuTCeBDsg0TUej0cHBwfn5+ePHj9+8efN9uQD2AAVAwMg4Ju96SH4U9fv9R48epWlKUMhms0FgkqBA5Qvhq3JDHMeEklCbRgYJBYU4587OzjCHOC8QRD6UZz6f31UUESU/3Dv7LpfLsR04ugRJOZ/PHz16xNlA0ZNyuUxwyWAwqNfrVD9Gzdjf37+r9bxerzlcnY835BD6AFv1QQhdNoqiTqfTbreLxaLWxqtXr05OTrQANBTOuRcvXvziF79I0/Ti4uLJkyeSSBBBwPng7AcnwzlXq9Vo+fXr18+ePSNYTd0YDoc4bqR1ANWq+CexzWvrhJajKFLgLboWvqEXL1788pe/dM6B5MFOb7Va6/Wa6FEkEkrkVKvVfr9P4gzLAJF9MBhE3qW+WCwIGL+pnz/XdXITUcLQsriQ99K//Mu/gBNFfvlqtYK1AYZj3nC03W6Vf/EBCKWTfHTy9e/7jWSIgLRDUvsHs5glSUJ9tXw+PxwO9bEEpVObCo1c4EgwMniBmak6lAtM9Pl8fm9vT9Vl1eC///u//4BOhhgAEGDPP+bD74N2u91oNFJOjeqEmcckMLPFYhEihQAJZT5rRhAOzrl2u42P3Pnk506nI/RVlUa7w/7fsu+InGVrMB3qib7XzNbr9W63Gw6HALrQ4H3ksHBqCptLqKM/V5pMJuSUDgaDwWDw5MmTXq+n2RdHDZ2e5rPGiMRqtVqKzLjmsDCfk+K8E+d//+//7XwACjc757766qtrmw4mudvtgFK1G9bJdrvVhpVJjxaUwMJ/gScJqx+YmdyCXKgPIXqYWnA+IShs4d1+flKUeWRuIfd3f/d3IaqgmVHvYLfbrVYrGNl6vWbZCVjw/ggxiGu998MQqWvsq+12u16v301Ou3OiUrYFSY9U4jYzqss670+V4Kz4BhQdJi7sKmYPAT+bT4Ezz3rAa/++hGQGDqmQ2j9CUl0MynU658rlMmZwxo1IQIxPURTJnIMRglLAzIWwE6rVKvKNeRgr7B8k3dxhkfGb9t1gMEC8sCBx0cz6/b5q9yBshSwesUCwV3dY/YtPZiTDkvQ/V1INNiGIm9+zIcuyq0B8g8GAGcTHSgFI7mEtMdFkMAncbDabLZdL9jVIgGKD0+mU6RaOCAQax3g8vmmd6EJwDOv1ejAYUJoOj9J8Pg8n0flU+e12K0ghlj03gASo4i/n5+dCMlQLN/XzR0zFT5IyKeQWikm3I3NssVgUCoVWqxVF0Wg02tvbE+w/AHlfffWVSqvfE8Hu8VCYmXwiirG6JzJf+cnMlOP6ATIPSeKgfKVzDj+Cme12u4ODg4uLi0ePHmH50CPr9frx48dUqML2vlgssI5Op9PDw0PMxfl8vt1uY5tFs8fSu91unz179n2/K/KR/0xHHMchKtrHQxiiCQNUyXVSr4lUV9wMsTLE35lHeuB+4rXTNH3+/Hm/3wdbOpfLYZSiZaJWsTODi3An/R+Px+/dd9Pp9PT09H/9r/8VRRFnHl6n/f19sKG++OILDObFYhFF9ujoqNvtUiGlWCxiMLurfiKxsU9xKeL5+gjjhO6EmOJyuawAKSI/nj59StiEe8dnVyqV9vb2kM9U6ECmylarNRwOj4+P0R8YN1Qg0lxLpRLFe51zlUoFzpCm6ePHjyeTyeHh4Xa7rdVqeFucc/g+8vn8e9eJc65UKgECBhLJb3/72+fPnzvvXDMzXLf6EBZhvV4/OzvD/5jP5wkT6fV6jUaDqKl6vQ4rODk5kZnWOUcdCWIN3+3nx8Y3MnpIugm1TKYRiEKOhUIB2y8BAaG527wVAVAKC2RwNLDpdCq7sZB2uE2yIV1iz3Cs2lWY7WuIOrx9s9kQeMUv4Oeo9KLAE9VDGRvMbDabIaqjGbNjVSOq1+tdAxUOq1DqGwXqTOr8dDrVR6kmJ0F80lFQee1m1DK+mloniIbOuXw+H8exxGrUKUpwCahUrXGx2WyYINQpFZK4iQRWvVwuBQmPq8I5h+M5iiIqcqVpyoDQE9l17Gphbspt0AhTQGdwFkgxGo1GmKDMG294vNPp8C6MMXJD6L3T6XSxWKRpShF2LTmV5HUBfJMGWRCZ5gHgnbdF6do5h25aLBZDQ8L9oZahMYeDQPBB2LFGo4GVSzZwtkyr1QrL7lDruFKpqMbhXXXSflKoZXdFLICwWpMF5aAF8YlvFLkfEwIir/lB63Q64JoLN895qNN+v8/yljfWefBWeejUB2JF5ZjTIhd+q34RM0cUaLfb2ua0gOZzfn6u2AXFkyZJQmfkGddGgNeNx+MkSZDJcGVyPyGrSE5wacbqU1gq71JmC7mFbpRC4Fzr9fri4iJE5ORCy5p8BI7hd3nxcDjsdDqdTkcrD8w7Dhu9iGXKDddODr2IYzu0LuIX4B7JK6rPZH6T4xPlRzYMLxULCKGIw85zRlKZSZuWMpIQRyACh7Y0z2Kk1Zm6XC4VDsnJzUsJQHmvFCJbOohtWD40SuTvaMok0EynU3qi9A1mQeyD94ZhBNdIZ7wueAQrMT387rvv8EQwCxZ4fOBQvDE8tukVlTL4XeOPRBK6DBAZGRyqjZtX6SxgxCxRbWaswaqEDobjeDwWqGU4y2/fvtXjO1/J0zlHoU4yF2TsAUTOzKiwYx8EO1UAtZPJBLvgcDhcLpeIGvqcEL/SeWBvsLMkkajU+x3281OTQlhFl5eXKm2vTcTCYyFpspBr5cJ2QcAWyb3OuTiOETHZreYdJSxplblOkkR8D15NFqHzgKrj8VgiNRcCMHQ+RAMRgRIKWhKLxWK73X7++eenp6daUezo3W6HbVhYF8R6u6uxLNeOUgku6jm3sdcuLy/ZaB9hPNl9UyaF3EK3IbhfXFzwe7PZrNVq1EQllJWdprWoio5m9ubNG1k1Go0GbU6n02uaBBTHsWInz87O4PscSPl8Hg8oh58wwvv9vracfuz1eqenp/AFhSwQ4MKd2BLo6m9+8xt+hB2wMYAvHI1GoQ4RwpA3m01ki3w+P5/PeXVYHarRaIzHYzxWbFftQPEgC0xEiEQ3SSFmRql6xrbdbgsLiAAx8wJWt9uV4iIkgGazGYI3qFD4HxIXNhgMxEcEKc1EwJjSNG21WhTX5jYsNIw/MqtSSxDXlsvl5eUlAQqhRsUYgn8AHDvfi2apLsHOwixQhkj5b1T0SNOUDAKWIv3Z29uTLYdQm/V6naZpr9dj+i4vL/GLKTXGfCEMrjudDtEP6s/9SSHolLpG38UlZN5euN1u2+12p9NhNtfrdRzHFxcXJycnePpxHxCF0G6376MA+qcmhZiPaaDsrZnV63XtRIyg3OaCeigqfkSCvQUrx8ym0+l6vZaKAuuI45idC3Qeni8d/Ozu8EVCTOddLI+dL2YL4IIChvSjeiJUdbWG/KoaOiqqp9tQkPb29nq93ng8Ho1GfAhiBxiy6iRokPBqJCFyvO9xnj5KyqSQW+h/9siEi75arZI1Turgu6a/cOGimudyud/85jfaovBNNq3zKBSLxQKAajN7+vQpzaLuT6dTnIh2tTaS81J/2EMzwxcjBVqgDtSgwmfJI0RymVmpVNJp6oIqUJw6FJUws263W6vVBCRFO9rtfODTp0/xVqgGBMWiwtv4djKS7GaPDPXomReiGVRAPPzka5MVskIeD4985IPxeHzLscQjeLL/e5U4t1gswKJAmMjlcqquGaYJhOc9ClAul9MRBfd5+/atbA/hMXZ4eIi0gfSpENHwotfr7e3tSbhUD0ulkqrxvX371nlZljOD0eDtGMNZPK9fv2axXasUijDKyMvYEAbu3bctBD24UCgIftsC43/Y27A0MboBUrvgd52Xlb/99ts77OGnJoVgBgurx7GEarWa2CCCbK1WI2ZC57qZ5fN5uJkF3EAbh8g8M0Mo4S0yhpn3LMtRmyQJwRZYai3QLijUoHradnWbSJKgmq56Ir1OTme7GreBmE7Kt0Ad5ScK/bCtVotUYayVevt8Ple9yU+QMinkFrpRChHPRf3FPK7dIqbc6/XkQ7m8vGw0GovF4vLyMvQdcBHGRcuGqbAMzip2BcIy+gHarQXlswnMDnc4h+tkMhkOh8pwMZ8a4IdYpOQAACAASURBVIK8MrpxLQnNBeYcnUkuMGOEIM129UAi8lHOYOecDjBUkFBsStOU81Wh8nZrNTvxNRonrUNRohgGqtUqncFnhLw1nU4fPXpE+8zmfD5XjSg8YresCdpBx5rP5+PxOJ/PS7yA48RxzCcwTewroj4J2aOpfr//X//1X7QJp5N9uNPpSKykeicMlAfPzs40Nbvd7o/+6I+++eabkKumaYqaKDQF80ZgWpCfLpxlTugkqMkHyTsO6yQpYLfblcvlxWLx9ddfw3Plmrw/KUSBRyArqPMsJwUSSt2UiHZxceE8eImiWK6dQ3eYxvKpSSHmw48WiwVOZMSCQqGgavUEXa1Wq1A0NLPz83MEROji4gJ3iZJpna+0IgkAe0a/38/lctrg/InIoZukEIBhzOzJkydsokKhMBwOZQjZbDbk1hGmpkpAvV6PfDHz0/r8+XPzYq4kYPVEb+z1erh6pVookwjF4OLiQvLKer3GE3Tns/ORUyaF3EK3eWS0qlia7DRkBaWTIJqs12uWPniU5tcxWAt6WZIksHjzOYTOOSwrug3IKbtqg1HcA5B82+2WdEpuYD+Mx2MUBWWy6XEzOz09DaMy2Xur1QqDJJ0P1Y5KpYLx0AUZm5vNRrzefGik87q72ESxWFRghw4GVUqbz+dopYpgf68UAn8hg04di+P4WiI+c/Ty5UvxPsa/Uqmcn5+PRqOQtYXRozfRcrn8+uuvNXTOuTiOESXPzs4Isjs7Ozs+PoablEolAADwOps/IJFgaAcJBilkOp1uNhuFCn3++edy/LmrHi7nHIicoTDHdRiDqWTanS8prhULSIO8NsViEQjR6GolLU4Re8fgwcjzyeEr7D6lEEXzuKCUqyz/2MlZrlEUhZYSvn0wGGy3W+YrDCA4Pz+/WzP4pyaFbLdb1ZSGj5nZdDqVEZfFL2MJdtDz83PJ0867V3DmUkuFaxQtQkkQPrRPG43GxcWFluV8Puc2u9kjY95sDK9gAadpWqvVrukS3FapVBqNhpjwNSs4mO4qEHFNJVOmrpnhon3y5In5srfmTY/4suk5jq1PjTIp5Ba6UQqRp5Oxe/XqVRrUfHeBiZvCpBJZ5vP506dPWZrz+Xx/f3+z2YxGI51Jitksl8vT6bTb7QLYR4KD864WykyrAwQqhh1A82BGObMnkwmBrvCI3/72t5vNBohP82Gh2EVI0KfPSE7j8Rgtk8CXarX6+9//nhcpuhM7OZVLlXLivGGcjX1+fq5j8uXLl+IUjJjicAeDAXEwt9hCGA04VJi4YWZff/21C8K+RCDOWRDka95WxIWSU25aEPxJ5iKxLQmXRN2WSiWdQzzY7XYxZpBGyHJiKlHszKzf74ev5kyVdAgfd1ddPOYjafCIMxrYwzBXmBk2MKKJGWT1SmY5Ugmw1oSKKcRaUr0xYg8/++yzzWZTqVR2ux0MVOaT+/bIIAGrWUaGRd5sNnWbMoSvZUk45zqdjkKGiXGxICbpTnpon5IUEuZe4bMzv4C5gaEgmOPk5ITMW/4EXN5kMrkWO9Lv98NkLkkw4SYN5W91BoAW977oVDP75ptvdA2XdkHkh5kdHBz0er3lcnl8fExrsAjupJPkhZnZf/7nf/JUpVIBqUjdIHaemFyxYoky/FcgPewsGs/wQiyTQgK6UQrBAqyQbzg7gnCSJMfHx0pqCAeXYgc6eik1ojAoXVhwzplf/Wma7na7arW6Wq2Wy2Wz2URQaLVawigM97y6Cua6eK6WuKyIEtjDuBC7Gg3AkZ948CV+PD8/J4eewUHect4gRFNRFHE8yLzJs6ExXMJKeLRDt3tkNPLoIkKJxhblnMvlcrAkPl+iHlEd0qgk+ZkPQLtlTeDL4FtosFgszmYzjMAWOLa32229XieE9trsyIys69STeTMSNTgQO2DoVMqYzWahUzy0hSyXy+VyKfmYB807hgik4CLEtbzWPRIIySfCYICIw/wqxSacTWRTDdG9SiGSGkk/DnvOYpBzLVwzGqXBYAAuiGb/vQLrj6RPTQqBsPkxkkSKsFxHoxFbMkQsJSEFPgCOvgUsK4QfLRQKtImdQGk4xGFYkIOmqbdbM3VZDEpdpPyCmWGK1pLWLja/6jCcaH9h0JWwBeuL4xiXurIUJd12Oh2xiJCRWuDov49Y6Y+fMinkFrpRCmFpcl6CbGb+FFddZl07H8r37u/6q5kpugo3ASxVgQ5cq0IsEo/OD6RpsfskSZhXjh+2veylFpzHhFLSrAUI2c65Wq1Wq9V04JGTxmfq+qbvItjK/GaW6nNTO5RGw/hh/lxkEG6SQjabjSyx8AhugDUMBgPFEOw8+gi4VdgJNAjqp5ktl8v/MU1GJl++FMAiwi+I3leFbmlgfD6vIDjO+cQcOgmmC83CcEPNSd8Oa1YdPhXd0Ct0JxNNxAxId8A6ab3hwud1KgBmPvNI9hLlNjMscluEIqB+0clxf1IIxwxTAEIDsGlm9ubNG1as5GZFh3ABVpvzWLHOuTiOCZ9ka9+hP/5Tk0JkTx0Oh1rnzsMMCuU2jOEQC0KTCX90VzHOOblTn/yfJAnBPWZWr9cBDVIqn5mNRiOWAf/m83lJOfY918lN+46+KcAltMWieUqUYSjYPrTPWOFb1C5TxuItMAE/Y8qkkFvotrgQ86DdWCA5QYVgI2M7O+em381sMpmsViulIKYeZAITApyRJbvzmFTsVTQAsU6Z1jcBWprMiRA5EWyqbrc7n8/DSIjQ6x8KNJyLfCPfwp3KCn7vd+l81c1S9N9tZ7fb/e53vzMzUnhCyLL3SiHMhY5eYlGpB/unf/qnzrn9/X2cBdhCAG4xL3VZIEyYGYktEoCIHngvoUit12tkHawFSvYLpwPpLVwSynjiBmZB2QSMBn8FEs3MMHSZP/6ZiCRJULam0ymLxPmUJTN7/fo1UEiKeJ3NZrxLaVOMBjXEGSW6KuA4Waow9Z2dnekeyTG9Xk/MV/wauldbyNYXZNlut0KNE9TNu69jSENjWGjuErTd3Rbv+NSkEEHv6BdNPbFxlHmTtZKAD0wLzodQbD3UTWiEiKKITFfzeIYbD+XufNKZIspVxoh4c/aseSPKcDj8vuvkpn0XCt9czOfzXC4XhtDZ1SAPxItnz55tNpt//dd/NbM0TY+PjxW5hSHzA5TF+Agpk0JuodtyZN6+fRse4aizGrsQNSvxoF7v/k58ZRjrEL5eGjwXobGO7SERYTabSXzhQUkbFmSyaeMJSsE8Mgf/IgGEKH6hBYX7JWcotPvd74LwBOnrlEz7bju6QSYBWMBNUgh9UyopHZYXDGMSnz+bzfRp6GoKg1VoqsSv0KL7XuJ+nViCT6WR4XBIyi4T0e12VauCM56e4CFCNgrPpzAuITQj8408ogHXVMqGzPcSZzefz4n7w3AtkzUymXmJhIwG82VWVHNHMs10OuVz6L+6J/k18ZhRo9FITo37k0IUbqUcSJWIkxROt3Fcml/eFhhyGKXZbKb0MX7McmR+MEnXt6DqIYufcLH5fB5q+akHTtTIoBUoiQ+NS7kka08KS9e+63Q6QhKzIH4Z0px2u126973Wid2870jlU8o9KY2bzebVq1e4gfTqNE3V21evXsnwlqYpg4MnS5vu511y6L2USSG30I2VhSlWgmiPilwoFKjXTDamgqXN69/v/R0IKYiK6iDBo3Fi3CsUCqVSSXGR5+fnsH7KKBAgUqvVKM3AsVEqlZbLZa1WI2mFNnO5HIgdURRxEcdxr9cjoC9NU+IZS6USEaZA+uTzeYlB9JzwAj72pu+iBO56vW40GspoBdXtve3813/9F+GxfDgLUekb7xKNfPbZZ6hQRJbApzabDTbVOI7H43GpVGo2myBbrNfrdrvNi9DDKpXKb37zm3K5TApxu90ul8vRzcS47e/vc3+j0WCUnIcXq1QqtVoNbYmaNWQnLZdLQOoYmUajAdOhhnUURblcjnnHb9JsNjEw4Iaj3jc4NN9++61zDhCzJEnIDDo8PKzX67TT6XSq1eqjR49kpyFF3MwATSIZst/vVyqVZrM5n88PDg7omHOu2WwCqI+RCf8F1XbG4zGsljV5dnaWz+exM7daLYFH3R8pqYcDjPRs0B1YveRI1+v1UqmEH4oNgpieJMn5+TnlPHK5HNhxFJFxHssyox9A9XodELn1eo13slgs4gd59uzZer0uFot7e3tnZ2dwJPDxYBpETz969EhAAHEckxMOGl4cxwTjF4vFk5OTN2/eVKvVQqGAAMFS3Gw2RLnGcRxFEaoIhhM2Yy6Xq1Qq33ed3LTvnHOXl5f1ev3g4KBYLGKkqdVqs9ns+fPn2+2W9tEQYL/OuTRNnz9/HkURHvMoip49e0bcFTVoGMyfa7GhjH4g3RIXQha4hFyskaPRSMKyynbc8ru9T/JV7rhCzd/V0TnOQdQ2b0IMbSHmUUzMh01Mp9OLi4vQbCDPTmhlYQcqcCzExNztdjK6JkkyGo1u+q7ZbDaZTABD0+Nhnt61drhO05T4LIwit+fIaOjQjzGWCkPTPOzKeDzudDrSw2azGWZSlCo0aRly1lereL9LYfvz+VwWBelPusAXFtqoNSCS6maz2cXFhQY/HGpBf8rAQJQfcxpqe6pZGk6iHGR2tZqP/EHD4XAymQCQGmbrhIVvFCbMVwvXS1aT7XY7Ho9la9HH3qtHhrMHe9i1lCLzljAkdX7XPgoHDXAL8wakO6ymC31qthBWqaYAS6RsgXy+Si6bx2LX47PZDNuAUuRCgwSlBvBWsFzfvn0bslAMfnAPzXJ4A6+DDX6vdWI37DvBQakwgnmnEv4j1hUoTeYLWch0p2yyi4sLGfOICwwZ5qdDmS3kFrotLuTFixdcUJ7N/Pru9Xriy91uV0gV7/2dE1GuQUU8zGYzntKiJJNFwQSqPk90FSxVxxgX/Pi73/2OTaiNTaSqsmcBzkrTlBKjit/mfjrAzRxLk8lks9mECa7v/V5lnxJFqNir97aTJAk7M+TXDOxNHplXr15dc/Emvi4dclVoR91sNjAv3Z8kiWI73rx5E3p2bqfdbjcajWAuZGhrhZhZp9NZ++I4uh9/ECe9JBj418XFRRrkSE+nUwmF2+32xYsXgtMNtyUgIsqmhv+a2evXr8PfZ7PZcDjU1KsP762AqHje7777bueB47bbbZIkSnoCVYkZ0WrUpHwAvBDzAJrmVyzwKuYXqr6UZaxoazM7PT3dBsUCzQyAba45CO+qk5+aFGJmxKVKMTAfacRfEfv6/b7WEu6MxJfZgicsl8tut6vw816vd00UFtLGcrl8/fo1yDp6RDkm5MdS3QmN0fy8f691ctO+s3cUPxidQmgtCMPCPm0BM7fAN8qX6uZPELLMMinkVrpRCuE8Q2WX209BhQgTUrBu+d18Stt4PAaxyq7WUjGzwWBwenoq1SGESQ5jU1i+UujD1dzpdPDg6F81pWbDTMv1en12dqaWJ5OJzioeoYXJZHLLd6H6q02y4G5qZ7vdSsBCYuC22+NCAHoP9TC+NIw2D+0u3BAalsIehpO1u4HgQQpK4BHksGt6OYX9tr58sX4XJ9p5mA0dUcJ92gXoseGLpp74L9KkzBiINb/+9a81iRrGTqcTAtpem53T01OCSOzqslF/GBN6y/gr/0hfFybr3jdeCIU8NCzIRurG2dlZqGevVqu3b99KBA8PJPUWSesOe/ipSSEK5DSzly9fhgbX2WyG3XHpqzBaYLfTxWg0YsNqocpg0O12aZwViIuTX/Q4FkGtXuXoQZru77tOoHf3HbLRmzdvEIIXi4Va1lZCBuI69fWucejI6sOeFUuxT2CpvJcyKeQWus0WkiSJRH6pv2HaJzFWbICbfleCqJpV2Cm/h+ZBHVGcvkpbWAblzsPecqdwAGlEh9a1A3g8Hi8Wi16vp53JtpHuQmGFrUd/tyAf593v0kDx3zAw7b3tJD6BRXIY/b9JCpHUYoGcwZ5HIwmD2xVXD7Y0fQgNBmmaKvr9f4RPXfs6vZyFYc4zTYmniKPx+XRYEx0ytZD1yC6iexifMCUKE3Q448oR0OvITpKgwEEr9VTOGjFKTCZyysjWdW3uLMjbUsvXqoDea6Yuwqs2IzIlU7z1+G98DthTqY/7XiwWgnDQtzB0YR7pndCnJoWYGUesVrXE0xDYlHFQfLF8r5Ie5LvZePAk9pea1YVkDnLLzeuEOFY06aEqhSjwvdbJTftOzF98FdEE6YQtk3rkhRDlfetL1oXbVluSPty51P7xUyaF3ELRr371qz//8z93zlEyDfRxAd5ldN9kHmIkBFZx76CMZ/RREdHKmjJinB+6Ux+U+GSNQBi+nVFGGV0jYvzNIx0Ts5+ds1A2ChlllFFGGWWU0cNQJoVklFFGGWWUUUYPQ5kUklFGGWWUUUYZPQxlUkhGGWWUUUYZZfQwlEkhGWWUUUYZZZTRw1AmhWSUUUYZZZRRRg9DmRSSUUYZZZRRRhk9DGVSSEYZZZRRRhll9DCUSSEZZZRRRhlllNHDUCaFZJRRRhlllFFGD0OZFJJRRhlllFFGGT0MZVJIRhlllFFGGWX0MJRJIRlllFFGGWWU0cNQJoVklFFGGWWUUUYPQ5kUklFGGWWUUUYZPQxlUkhGGWWUUUYZZfQwlEkhGWWUUUYZZZTRw1AmhWSUUUYZZZRRRg9DmRSSUUYZZZRRRhk9DGVSSEYZZZRRRhll9DCUSSEZZZRRRhlllNHDUCaFZJRRRhlllFFGD0OZFJJRRhlllFFGGT0M5TabTT6fN7PNZlMsFkejUS6XiSYflJIk2Ww2hUKhUChsNpskSR66RxndSIvFwjnHHGmn5PP5h+zTQ5A+mUFgQBicjDLKKKM/nHLFYrHb7a7X62Kx6Jyr1+u73W61Wj10xz4ViqIon88Xi8XtdrvdbovFYj6fj6LoofuV0fupWq0658rl8nq9ds5FUTQej9M0feh+fWhK03Q8HrNQ1+t1uVx2fnAyyiijjP5wipvNZrvdRgufTqeNRqNYLKZputvtHrpvnwRFUTQajer1Onx8s9nMZrN2u21mD921jN5DaZr2+/1Wq1WpVNI0bbfbrVZrsViUSqWH7toHpfV63Wq1Wq3WaDQqlUrL5XI8Hh8cHGSW1Iwyyuh7UfT3f//3f/EXf1EoFMzMzJIkKRaLSZLEcfzQffskKE3TXC43m81arZZzbjwe1+t1fnzormX0HgqnBkvApywvXhuBbN1mlNF7KY7j3W7HTtlut4VCIdssohyGkF6vZ2a5XG4ymWQiyIek7XabJEkURXEcx3EcRVGSJNvt9qH7ldH7qdvtOufOzs4Wi8XBwYFzbj6fj0ajh+7Xh6bRaDSfz51zBwcHi8Xi7OzM+cHJKKOMMvrDKYZxNBqN+XxeKpXSNEUEyTwyH4ZKpdJ2u63VapvNxjlXq9W2222pVMrG/+Ok4+Pj7XbbarWq1epwOMzlcrVabbFYfGrzVSwWq9VqLpcbDofVajVN0+12e3x8/KmNQ0YZZfQjKf7888/Pz88fP35cKpU2m83x8bFzbr1ef2p+7oeiwWCwv79PRI5zjgt+fOiuZfR+SpKkXq+v1+s0TZvN5mw2q9frD92pD03VapUPn0wm6/W6Xq8vl8tCofAJpgtllFFGP4r+9m//ttlsOufIkSFGMhNBPhjJ+ZXP58XBM4/Yx0x7e3vOuUePHjnncrlcoVB46B49DBUKBRzbDAXDklFGGb1L8HaCLzebjZkRJpKRmT1YdAzijs5dwtyQhD4pqtVqzjls2nEcl8vlSqViZpVKhRswffMnfikUCrqGGMYoigqFQqVSuaaS7u3t6aQkBhaqVqulUok/HR4eRlFEpmWpVIqiKIqiXC7HMYOcKo2/2Wzye7lcjuNYs4Y55+TkxHkYiVwuxxfpBl5XLBaRtGizXq/TsePj48gTd+qY55BrNBqMGFSpVBThpbfk83l+ZOjc1QOyVCoRz9Fut9XnYrGI5K2BpWOFQqHZbPIn/i0Wi8Ph0HlsjEKhkAXxhMSAa71VKhW2dqFQYE7r9Xo+n2cSWVd6qlQqMex6in+1SiFdHxwc5PP5OI41d8VikbnmdSxgLYNSqRSu53C5anKdc48fP6Z9VkipVIrjGJGrUCgQvKW/QkdHR865XC7Hj+wL/bVSqbA4WeStVotPiKLof9T38vl8vV7P5XJ8QrFYbDQaIVBNGOF4bRlHUcQFj2izRFHEOD969IjxaTQa9A3UAD4zHHP4CU8dHR1py/N7qVTivXEc85ZSqfQ/WsXEDSqVCjfTPbEU7XQ19eTJE37Xe9VnJiWXy11DOmBqKpWKFpu7qmZHUdRsNnljFEXiFeInmkoxBzqgBo+OjviQa2w5oz+U/u3f/u3t27eIJOv1movVanXf4s9oNJIwuN1uzWy5XC6Xy/t+78dGDL7gnrrd7mQyMbPNZtPv97nodrv9fn88HpuXoM/Pz81PE7+naWpmy+VyOBzyV9rZbreLxYKBHY1GZtbtdnn1aDQaDAbm573T6czn8yRJkiRZLBbc8+bNGzPr9/vh1NAxuo1cT1jA2dmZ/kq8c6/Xm06n3Jym6WAw4I2z2WyxWGDM11vMbDgcbrfbNE3p/Gw200vX6/V8Pjezi4sLfplMJrx9tVrNZjNuVud3u12/3w+Hi550u11GTOOg7oWvY15evHjx9u1bxnY4HIb3bzabk5OTXC7Hl36CNJ1OYcSsQ4adfxnb5XIpTjIYDDabzXA4ZJDZ8rvdjovxeMzC42Zm38z6/X6aptPp9PLy0sxWqxVrwMzSNO10OkwKDy4WiyRJvvnmG9pkNfI6ZpAu7XY77gcYaTQaaWZZ/7vdjq+gG6zY7Xa72+2AVqJBrR8aZBkMBgOiy2mBlufzOV1ieW82GxakOsmCfC/RYfOb9OzsLEkStsB2u2VJa7eORqNOpxM+nqZpkiTz+Xy5XHY6HaZjt9txW7fb3e12k8kkTVMWPHfy4ZoFvpRvT5KEAaEFXt3v99WH+Xw+Ho+162+h4XBIf1gnWipiL91ul3HjjQDzmNl0OgVLYjgcrtfrxWLR7/dhBdPp9Nqrv/nmm8FgMBwONTLL5ZJ7WAbL5fLs7EwvZYHpKOQ27hS33O12cDPGXAz2lq/ObCG3UPQ3f/M3f/3Xf71erzebTalUGo1GhIbcd5TZdrstl8u9Xq9erzMrCOOfWnRbPp/fbDbr9fqLL75gWTvP1hHGR6MRCtb5+fmjR4/SNB0Oh0dHR+v1ut/vP3nyJE3T1WqVz+dLpdJisUBn2u12INHFcaygE/YwjVerVbKynXNwyXa7DfpWLpczsyRJhsPh8fHxdDrd7XbtdjtJkslk0mw24zjebre9Xu/x48dA7upz5vN5pVJZLpe5XG6322HCgUPxCuZ3Pp9zgO12u+l02m63Z7PZdDp9/PjxmzdvPvvsM+dcr9c7PDxkNN68efPLX/5ys9nEcZym6WKxqNVqZrZcLmezGcprGEwzn89RpAaDwd7eXhRF/X6/UqlUq9V+v48thJ73+30wckifgynv7e2RR6d8sfF4XKvV0jTFcTaZTPL5fKPRYBddXl7S1U+H1ut1tVqFt+52u9lshs1gvV5jiiNuBq2awWQlT6dTNFeQmlkS+Xx+tVqhSppZFEWr1SpNU1ZpHMebzQaOkc/n37x5U6/X2+22ZjxJknw+3+v1UHzN7OLi4vHjx7Q5Go3W6zVuI73l7Ozs8PAQpJNKpbLdbmezGXowzSo2zsxms1mj0dCzrMzZbMZZWCqV2HSj0ahSqRBvvtlsNpvN3t7edrtlQy0Wi3q9Ph6PectoNMJyeX5+/vTp09uHulQqjcfj+Xz+5MmT8XjcarW63e7R0dF8PmdMEMRZhC9fvvzyyy+73S6hfoeHh+PxuFqtkh263W7z+fx0OiWamClYrVZsrmq1ynRoB3HoViqV1WoljjQejz///HPnHN1wzgGiMxqNDg4OoihaLBbYQW/i5/l8HvEon89jCwGkAH5YLBZhNaenp41Go91uR1G0Xq8xfcHHrtlaVqvVbrer1WqTyaRSqUwmk/39/d1uhz2MVbRer+M4zufz13Y9LUwmk1qtlsvlQI8UL53P5/P5nMjr3W5XLBbpITfsdju42bfffnt8fHwTcB8JB5Zl6r6X/umf/sm8UGyB+HnfxFskcnY6nfV6Len70yEURPOIC+atCBAiNimRFsjaGihkEQv0Ic1sFEXwEdopl8vVahVz6zU7cLPZLJfL0s+m02mpVJKR5l1F7ZrNzDk3GAzevn27XC4RDsJ7+Do+hFnmkVarheTknCsWi0dHR9y/3W7J25JmjDrrnONgMzO4v753u92GepKZlUqlwWDw6tUrMxsMBu12W+ZTDPXOOZD6zBuihsOhdOJer8eoTqfTOI4tsA5yD6u3XC7rez81wqrhnDs4OJjP51izZKZaLBb8lemezWZAvBcKhf39fU5f51kzi7nRaOTzeTHxXC4nDyDzRcvdbvfg4AA5slgsymweEitBy4YHcZxZYNM6PT19/fq1eRuhCJkgiiJkd/wmLGDaLBaLaMysCg4Vsc3pdCrDoXOONYbZj3tYsYzVdDpFPriJP5O3KJ7AvhiPx7vdjuWNBYi/zudzLVTey+ql26enp8ViMfxS7ul2u8Akcr9zrlKpyHXLq2nh7du34jP4JXlcL12tVjIw/IEG9dFohNCpXxaLxbVnNW5mlqapeIhouVyG5mGRu+p8ieNYlq3VasWfEE8xb2jMw4uwY2mabjYbcuIajYbsRt1uV/a291JmC7mF3N///d/LqI4CbX7W75WWyyXbcjabhVbW+37vR0ir1WowGLRaLVR2M3PeI45qRWjFu1I2d8LCWOXb7bZSqbC+MU6iwcMdrlmDzYy9d3Z2Vi6XpcCZGfocSiQMtFKpYPNgZ4Lxqj7QGtKDmfV6PV4Hl+d3DhW0GecczVar8niJvgAAIABJREFUVbpB50MWQ5s6yXTBIsHoDWgpF0mSLJdL+q/HMZUzILvdDnQ+HZZ8XZIk5XJZnyA++/Lly3Au6DyPa5qcc9Pp9AN4MD9O0jqEGGfJiEr7t+B4OD095RfY93q9ZlqLxSLzwviHzXI8dDqdyWRCy4jIk8mEWhO6kzbTNMUaZ14OwJRSq9WQh9gOLJXxeOyuRqSxJs0sjmOkK16BSR/k/vV6fXFxkcvl1FtOX+yaNMuqPj09NW/MX61WKNB0st/vJ0kym81C+/+7I2xmo9GIT8a6oL+SK+68oFar1WjwxYsX3CyH1Gq1oufb7RbxhRmB9zrnJJwhQrHl5QzCHiCvJfZLtHnumc/ncljgPjN/3L6X0jQdjUbIf87LauPxWL4wCRbMKcPrnKNxviUcIr5ouVyqk+HCCP8r/y9NkdvF41zAYeSwNi/NwGm5h8nlKbgWnp2bvjeTQm4h96//+q8Mynq97vV67Adqqt0r8XriA8xMQvd9v/djo263m/gNdnBwYGZAYDE+iXd4Y/cTczcz1BpYhrbxYDA4OTkBeoTHNbBIlox2kiSz2WwymSgSQjtKG/j4+Hhvb4/IL/a8HKsoWCiXqDJJkrBysIKqk9fEykKhkCQJpnUzQ5/odDoSaBTSQYguj/CZOgmkEnFDqVRS+7vdTlIIhU5+//vfm48/cM4pKAQBC01Un39xcSERRCOzt7cnE9RsNkM4Y6xwK3yY/fKxEacXvkIm7vz8fLPZMLyXl5cS9ZrNphYzfJ+qBRYY8FCskyThLHzz5o1zDsmSdmq1GrOw2Wz4RSY6FiHKt6KpJpMJJy7GKlZLLpdjVZjXa1+8eMGfXr9+LUkUzThJkvCcu7i4uLZZer0eEvByucTIv1qt8JIo4oGdQnySVlF4Oiq24yZCliI4Jk3Ta4lI2g6S1JMkoUGOPaSrOI6TJEGf4cFf/vKXq9WKAx4nEaIb24f9iFawWCwkJPFLkiS5XC78HNkDrolTDON7SdM3mUyePHmiR5A42+12Pp8vl8u4niWdsCqYMjy/6sBsNpOkSyNaG8PhsNFoIPfACni7c07qhFQO59zZ2RnL+8mTJ+fn57vdbjwecz6ytjUIvI5gGi3y91ImhdxC7le/+hXHAP8HyvMDRInKhI5TGdXhvl/6EZJOazYA0nexWFwul71eTztc/BTpwcycczK0ymKM69Q8p5vP57hRUcgkrIiDsCFxSVjgYUmShB+lsOqc7vf7zjnC+mq1GvH2lUrlXfxQ4tWn0ylHDlzbzP7zP/8zBNj46quvpFLTMWSONE3FTTabTaPRuLi4wFaMQRXLuQLpzYxv1+ezot68eRMaSBDRwjNsu91+9tlnaEi73Q5OXSgUOGJrtZqsOJjoHz16xJjg5QljWj8d2u12CKC5XA51kN85LRgToiB1VJC8gNauXBKOfAumDPsZLB7TAgIBIqA6oNBjHQYiZB0tsDiOtTifPn1aLpfVB0U0c0jTVU76P/mTP5Hue3JyQstpmr569erw8JDjFlmZYAgL9N00Ta+lS1B2R+h2ZnZ6eqrIU3dVaw/JOdfr9eS0NbPVaiVrDT9+/fXXDIgcLtPpVG3OZjOMIrCC0NbI/iInRWD8+qscoOg/oWGAi2+//ZaLUqnEmI/HY/ba5eXlLYYQ83vTBVYoSbQqJxIaPDabjYSMJEmQkzabzWg0evz4Mb8zSqD4KHyYD9SzcjBJVZO/ezKZkKxnPp6d3xW4qrDWbrerEcPaR4iYjEDvUiaF3ELuH//xH81su92yOq8lAtw3EZ7N5scj8CHf/pEQkfPktjH+HNuyeYiP8wuOSZ5lV7AhYTFEV8VxjAW1Wq2iqZvfVIopmc/n2g9RFLFpJZHgzVkul3LKEo5nZvv7+9IhzAdhSJUsFAqYc4lQs8DB57zh2nlTTalUwsQSRRH6R2iQXy6Xh4eHMDuJGoyDvIfa25jWZctRIAh9dj4mgBFmWJbLJYIR5hz1DRXQzEAnQ2TR1nDeSE42o3mL1CdIzscyM1zMIMOlBCjzq3Sz2ejsSXz0gHmmLOFPEQkkbDuf4GpmOHAt4OCz2SyKImnw6hir1/xqvHa+6l+1I8+OBF/FPWBvoHGtLnwc4XqmNaIOkZwsUBX0usViQQwptQDxy2AyuWmELTizzUsYSZKwB/f29iyInCDTcLfbNZvN8/NzJAk5pxjwbrd7cnKyXq/DvslWqrHiF6WhabplbuFLCZVoNpvD4ZBhMe/0vOU0SdOUk17RpuG88GrJB/JnUXI1SZJGoyFFQgmGKCG9Xo8+J0mC/qAYWLrNKt1sNtVqFX2GgNPhcMg94SKRxwqBQ1m7CjrmM8OveC9lUsgt5H71q1+J/8I1PuToTCYTnaP/3SfnnHNPnjyRUVfLQttVrIp9lcvl1us1uRJ8AgoNNw+HQ8IR5Mft9XroMTrbHopgTInPxTC/+afTaaFQWK1W+C84YvWU1rG7Co8xnU7JSSmVSjgpnU9hMLN2u63AK4Vn8wujgZyhHDwXGEiiKFoul+xJnMGkwJiXgcJwUTMj36Rer6tEEaYR53UvCzQ2jB9E46MuP3v2jJ5Lp5QHOuwVL9psNijQzjlYVRRFDKysILxXaCVYNcwzQeeVPzImdP4hyoC1wNnTaDTCZhmBT1B6Dk9fuzoCo9EoSRIOaYQJ/WhmZNPY1QhrMyuVSqwuAiB0/Oh8JfTS+XBCFkYcx/xX88vBY3ZF4LDAZ6F/S6USeZ48HgJyIHw7bwsUV3HO1et1BS26AOKCO4vFIgnADEitVtOHqyekgWi4ZAd9L3HqL5dL+bCItpHyhvjO8Y9GHr5OMr3zYVXmzYEMr3xPPPVu1kYURZoCQi440Z2PRcOYwQ0YaRS+k3jP+3uJY5v+h/GnbF4d//ocKgZYYNMlzsbMCAdh5Pku51ytVsPAiY5N7g+vgDdWKhXaIaVLPjjnHOyXfgqnQEtda4nfF4tFoVCQrei9lEkht9CDSSGLxUIJ96wYQqNhDfyuAve1Wg1cLxnZFAcUwp3pr4oqYOfoqGMhkjCiU99utYh+ANKRJm8r+1M6HCoFsatoAP1+H66EpVSM3q7y2clkwp/MSxUKBDYv7qDKxHEcZtkcHBwcHh7i7EB6g78ol5jg0Pl8LiZer9cXi4WSHpvNJibid225eJqcc4eHh7CzcrlMlgFd4gYzk6yAG0gsVYb0NE31gRg2rsU2yuGF0uO8DcbM9vf3pe+SCyqriXIfnNc+YTfFYpGFRwvIK4mPifmk6CYpBMOebkMN5ZrlxIbFm9Zut2XVp51vvvnG/HSznq9pKbgXZQkL/0QUKgo6S26xWCiQYrFYEOGEMEH5PR4MgxkJKOGIJTqB/xJNb97kxv37+/v0EKn64uKC80xD5Hy5ysvLS+dFGY7S8XgMDpBdjW26RiFroie4QSX9OG/Rka+HuQizh0hAk2I2Ho+jKFLeDYmpCpcJXbpinjrgzWw0GjFiIQqRXUXLwEZyy75ArkrT9MmTJ9SDTJJkf3+fMdRXMLCCOZFoxXc1m03B3GH0osO1Wg0hFS0C+TJEmfviiy/QfBhGxiocbS4QiGUH4jySg4bAf37BS5t5ZH4YPaQtBAVaKvv/75C3B2COY6s4H0aEjlWtVknVExMM9yrZ84Sh5fN5NFdl4uhOOQu0uB+EQj3+0aNHi8WCMLQw2S+8IMifB7fbrWL4ibriWCW4z/y+TdMUmxMuT7bWZrO5vLxU0AmvU2hhmqbwzTBsRWIKxVPMDAEF/AzzbJf+AEqGOEgjg8EA1AF9++npKQn30+lUKZ305NGjR7iWW62WziH+KpkSjTM8nxBVX79+reOBfkpnogQdwWUYhBFinFe5OP/My1tovTKNOB8cY55fs4o+wRyZm6QQ5pGwIX5xV73vIengl8BNXhXxnkmSkCsB3AUeWzkR0MsXi8Xnn38+mUxYgZ1OR+B+kniUVOW8qk0LQImoMzLG8CNLK0kSJBu4IlPfbDaXy+Xp6Sm4GkmSgDyhLxI6H/9lg7darV6vN5vN9vf3ZQfabDbffffdtQTakLAKjMdjIZWNx2OAQPDMHh8fYzFNkgQXauiCDMd5PB7LltxoNKTGLBYL7QL+RRSDaWDmkWQJjEetVlM8B+c9W4Ck4j8kUkpHu8AqFaKey+UGg4HCe7H0YF95+vTpNZtraKxi7dFavV4fDodS8PQnzEWwFBgmC6ZQKMA8dRw45+TLHo1GxWIRNuKCrL1rAcu3IE1kUsgt9JBSiOLGxSAQ0s0bHuv1unnthN0S2uRDPxzAO0mSYIszj8QaHsby6v3/L/dOX7u6Yx+EVqsVyDwIWwJsVnoY6Eyk7LLtya01s3/7t3/L5XJhUIV5TYjlLmxc9jy2Cjgj5zr5upLxzSezMRfT6VSh+N1uN7yeTCaLxWJ/f5+RJ0xsMpkcHx/rjev1ejQagSkUGlSvmaklXcFtQ6WHvxYKBewxuVxOR46Sb2HN4YGnoVCgmSQJRFjz6UhpmhaLxRcvXiDyKsAFCZUxVPoAvJuuhsvpU6ObpBAZLGezGSAK+ObM7LPPPjOfTmkew0Z2shCyfW9vL45jYYo779bBY0jWBm+UGKq0FEj9KZfLxLE6b9bC6jafz4vF4mw2w6w4Ho+fP38uaxm7CSFDbYIbFkZOOG9ac86BY8Yxj6fDguWtgTKvM2AJYBtGUZTeQCGGjaRqsTjJ/TqM4YrqpJJBOMUZ/H6/D2uF+4F3ksvlYJj0vFqt0iaWiVA+05akD5hSLEiTlo/p9lAJ+kbQ7uXl5fPnz8kifle8YLFh2R2Px7B6GTI1sJwmoCzqRw0FRl+k216vNxqNwsnlHtSYL7/8UpKZDEtcSCvebDZK2e31emG88Hspk0JuoQeOC1GgO8cGsWbK1ovjONzMysErlUowHQKRdC4qjJE72Qxh4qvuNL+75AD+YJ98jYAfRg+QpjIejwUcHppwnE+iCXPDzEzFVuyqQcK8XNLpdIimDF89GAzYsfrF+fRI844JaWn5fD7UbufzOXtevIDRJl6EXQpnCd3/yEb0sF6vK87cOVetVnU+hfAhqCCXl5f4p11gFVPHtMMPDg4wijabTWz7soKo5xYEzZGed35+HprE6Q/OeOeNH7VabTgcsvZksEFMtHdgrz4FuiUuxPzxZmZv3749ODjg5HMBCRDMvJPeeQxfM+t2u/l8frfbaZHDFmTz5zBAFvnss88Egci+4Hgjykeso1Ao9Pt9yv/qbKY1MRltHOz8Yf0m3ijdmjBJwtGQXeizvp3NiyDFJgKDZ7lcCi9EeR/OZ4S9S3bVE2FeiHE+KKFWqzGAbMCbpBALLHbb7TaKIlBD9NU4UELWMRgMFMRzeXlJwmriwXXG4zHLvtPpCHLw/PxcchKouDetn9D4isVa08GWx2DpvGMuFDuUrIuCGi5Ipmm5XIZZeH/8x3/sAiVEfQiDxpz3zDoPSYKfWiauer1OoSLnHMawvb09tDVE29uDwzIp5BZ6MClkMBgIPbDT6QiDMlwlMCbBgZsZapDuIVDLzOr1OktHO5b72TDOhyNYsCExNpAwLCPthyeNNl5zNqemI0kSmbJxLRUKBZkBGQp2V6iMHh8fK7RCN0s6ubi4wAOCIZdfdKiE5mge5EIRhex8DnJt406ng3ZlZlyIY4ZAh+YRpczs5cuXgEmHVV1SX0Eml8tRScAF4WlhZiPdwNWNLceCxaPwdT7z8vJyvV6LiyHfMDKhygUedviL88FGHCQy56gbDEtoRvpE6CYpBE8ZsTLMlyalXq9LXNMRiJCNZYKFQRBPFEUqSxRueUnnEOI7wHEhUI0Yfb1el4PSAkPXaDRi7aHt6AZJMOaFAyVcKDTEOff8+XN9O6USzMO18aNqMVoA6mOeQXGo09UkSRQI+S6lAQJbkiTdbrder6ceMIPDm7nYbrdHR0e3eGS63S7gY+Yza1Bper0epj49AiJZ+Kz5HXp5eVkul4VdNJ/PBYbGDfKa1ev1W6BQGJPLy8sw284CuzjbEM4slUO7UuHP5nUnC5JfwPIPP5+Jo6tIVzyu9QD0u3MOO+50Og0NsRLLkOTITs/lctcMcrdE42ZSyC30kLaQfr//3XffWSCNEgaobCgzIwfMeX0CYicTWLRarVA4lK/B/leYkvPOYO6nKqP5Bd1qtcrl8u2Ww3ul0WjE7qXQ6Gq1kqbONsjn88qjhrTiha5hQTU75320Mndr01LLw4LwC6DKcT2Ytw91Oh1S16SOWDCwlC01s8FgIN2IJSTFbrPZwBEIGQs7z9EiwGMJRvRqt9shHZpfh4VCAUlRmpwQWu1qOBhqrgVcAxFEN+x2O5VLRcSRmURVadQf5kLWI/gs/2IJN6/p/iGFu35+dIstZDqdsvAYRvPquwrdyVJyLfnZAtzVawcA8govVUao81Z0LWAKGnDWhhgbSZLImxAeaVKpzWy1WgFOZb5eGs+CtcNT4if9fn86nXJGYpFV5ARWfR559eqVUnypREOAfOorOmH+CSWGd4kvxaVSrVaV9qyRabfb2JbCuM53o1PDcdbFv//7v1sQhWqBiM9/aZN9BLvmXarZ5Jzb29tjfLTdXJCS817abDbXmIDzKhB8m6FuNBowkO12e3l5qTBSPUUL9Xr9/Pyca+GPcdt2u4Vf0cPj42N5qHHumDcOpWmKW0pQCGGuMo5dWd04Nba+bCEum1s+OZNCbqEHk0KkZAgzW9yB/wI5bAHeNoHxrJskSYQcoGNg7Ss1SOVC0JYX2a6K1QAXfpi6ObdTv99HSJIF1Xl7teDIiJyAYyKZmV/QKEwqBrbdbpWLH9bgMDMMlcrHK5fLURS1Wi3dhoTHkNIZRgwFyPzBEJ7uznupLdj87DoOFQl5+MsxYKgqd6FQoBs6MEgt1kzV6/U4jhXi3mq1kiThJOOlSgrFOxNFESW1GBBMIC4IB0G6onGqWznnQhhf5OBisSjQegJ06HOj0cCY1Gw24dG3xMb/XOkmKUSCXbfbRYNHb2axUUde6005UM4D3gDiYl5+pSnnwwAJWNaKworJg+In5k+mMPDoWviXuh2iktNzuYr29/dZBr/4xS/4Rcs4LJvifBQLYnqlUln7mquqic3jCueUloVmpeD095I2pjJx1D6NhzG2hJ+/N1M3hB/lTwIy/+1vf+u8sSTkFaz8xINYipe6qzITBukwMhRG8T+C6HD2O+eYBTMjSbBSqUhKw41lgXWKooDuHbmNUnyILBSkRJ+BCfAiCZHdblerhc9U+/AZXoGkZVfL4jApcjzBPcIPfy9lUsgtFP3qV7/68z//c+eLuxaLxfRnXetvNpuxwtg5uJ/B5HiQ/pgPnLyGXSgv5o8kDONsLQL+cUtTPSGKojiOkWCiKCLugVA1bBvUreD0JRGX4pYU2XKeS3J4YBsAcoNCvub1hs1mk8vllFhIvjSaDUhrgKMUi0V2ON0wszRNcRur2qcLJlG0DWpjDodDEKkF0B5WCbkT4nWaMnXs0yE+WSMQjn9GGWV0jcIYx21WU/cqfXKjUK/XX716xeHKSUYtt4fu131RqVQClcE5RzSMQuQSD4Tc6XSiKHrz5k2z2SyVSvj14ziuVCrk6SFwVKtV4sJ2u92rV68AaXXODQaDfD6PCLJYLBjMRqORJAnVMvH6S0PCfkAOHlmOcRyDhkSSHlVG37x5E0VRPp/vdDpk2BJt8M033zBxg8EARbPX6xUKBQytaZpigI2iqNlsFgoFqoQ/3AxklFFGGWV0I31yUsh0On3+/Dkn4ps3b+bz+fPnzzFF/iwJJ/1XX301n89rtdp8Pp9MJtVq9fXr13JzfP755//3//7fzz77DMN1oVD4f+y9SZNk15Xnd97s/p7PU0yZGQkkBo7VbIoslTWbkrUW2msnk0n6aFppJSuTVDSTmWS1EVVVbKnFalaRRQLIRA6REeHh8zy98Wrxxzu8iMwIIFIAHGSe3wLw9Hj+hvvucO4ZoSiCO1u73UbEYJqmQRAMh0Pf909PTyFbdLvdRqMBR1oIECgJhCzyg8EAEcjn5+coGlwsFmHXx1Wm06lhGNBtQCRCzgMiQo2rXq8HHw4UWPc877333iOiyWTSaDTgv9JqtaIoOj4+hu9LkhfBMQyj1+vtdjvO5i4IgiB8q3jrLDLQJENpT0STyaRSqfT7fSRz/Ob5ui0yRATzKj7rp2Ut+nw+51IdOIC/gWGFu4TKU7iiUCosHUmefl5/qCiKcFE230wmk1qtBpMQPDPwcziB4gxslMELwm+32+1ms2k2myj5GwQBEr0HQTAejzl/HfIpEdFkMqnX6zAw4Rt07K+qPUksMmKREYS7IBaZW3jrWgH7bKQb5wQ7+xJBvgEQB4hlm2Wd6XSKgBQiStMUWgqUqkdeB4QOsdEKruOo+LBarWAxQdka0rQXXHF3sVgEQXB1dUVE3W4XDm6tVsu2baQ9RuYxIoKXCUJRRqMRLkq5dxjkGDi0wg8RSd+RJnI0GqGWKdKow68wTdNGo4EnrVQqUOfIAikIgvDt5K2TQlAlNUkSeDm0Wq3NZtPr9fZ9X18XSMuG8le9Xu/k5CTLsmKxiCQ8sIYQEfxFsiyDjWYwGCRJgjyDlmWdnZ2hUoNt26VSCcViLi4uEC2CsAUiOjw8bDabKJBNRPV6fTAYvPPOO5R7pyPqB9H28D8/OjpyXXc2m02nUxhWYMEpl8umaV5dXaE0HTYNlUoF+Qlqtdp8PsfxCMTAA87ncxQsxLOHYdhut4MggLQkCIIgfNuwv/iQPzvSNMV+GjvvSqXyZ+ydCg0B9AGHh4eXl5eLxQIrPRZvmELgVQrn0EajgbyHRATN4enpKREhkogzArVarcvLS6iRSqUSMiicnp7CCJKmKUJjLi4u7t27h2NM09QzGOIzhAlkN0GoLYfGHB0d+b4PRQtMMBymWK1W4zgul8uHh4c4D9IXUp6blYhg2fE8T/xCBEEQvp28dboQeFD2+30kimBvmH3f19cFiu8EQeB5HhbyTqeDHCGoIoYqMI1GA8VoarVaGIZswlgul+12ezwec22IdrtNRFmWFQqF733ve9BbGIZxenr68OFDznqC8uiGYdy7dw/JobkM0HQ6xUmISCnV7XZR8BYRN9vtdrFYmKYJHQZyQSZJgvS4yB4LFQ7Ejo8//lgplSQJMgjFcVypVCCIoM57oVCAHCMIgiB823jrpBAYAg4PDyl31fwzFkGIyPd9VGBRSi0Wi/V6jQzHm80GVhIs6tBDQB0CIwjyiCBDOewj7XYbriGlUgn1WVDfC8oJVDyHfQR1FprNJmJlTdPEeXBLyESCzPREVK1WkT0W5XmhoyKi9XrNKaSIaLlclkolRN+Qlvqp0WhUKhXbthuNhu/7sBw5jgPvECRm1vNICoIgCN8e3kaLzFsF4kRgkYFSJAxDFMhGeTl4iWLhR8rCSqVSq9WSJOl0OsvlcjQaHRwccDJTIoKDKg6Gew3qaiKndRzHCJfllOdEBFsJ5JVWqwXdBjKqIRgYFpwkSarVquu60KbAZ4WIdrsdy0yUx92Mx+Ojo6OLiws8CDveIgca5B4kXttLywuCIAhfyFunC3nbQPYwLN61Wm29XheLRZSs9H2/2+3CnRO5qC3LQrgKEoVBqjg6Ojo/P1+v151OBynkkSIMgTNwH4E+qVwup2mKLGREhNT7iJh1XbdQKNi2jTq6kGA8z6tWq61W6+nTp61WCwn45/O5YRgPHz6E8gMRsMh0QnmCMsdxFotFs9m8urqq1+tBELC7SaVSCYIA9zOZTAqFwm63k6xlgiAI305ECvkzBzaUQqGA7A6NRgPpN+AQc3Jy0u12S6XSBx98gHork8kEKop2u43SKkilSkRxHEOHEccxTFqe5202m+Pj48FgQES73Q4xR6hBCL9RWHYmk0mr1UJWNNQMozzPBBE9evRoOp3O53OuVjWZTHDzHGOMBPA/+9nP4jhutVrVahUZ5ZEkTSn1/vvvo2wyJBJIPEjPKt6pgiAI307EIvNnDnxv4ea5XC5brRYqc6ZpOp1ODw4OTk5OxuPx48eP6/V6FEWNRgOFY87OzhBwO51Oa7XaZDKZTqfFYlEpFQQBipR2Oh3f96+urpDYw/d9y7JgHFksFrPZrFAoeJ53cHBARBcXF+12GzJBs9kcDoeNRiOKotlsBjkDNbXb7fbjx48/+OCDRqMxHo/ZpMKp5bmuDWw0jUZjuVwiB1q5XIaOZDqdwijjOA4qBaK0lSAIgvCtQqSQP3PiOIYviOu6SDMaRZFlWUEQHBwcwI0D8bppmtq2fX5+fnx8vF6vEe1yfn6O0NlGo4FgE/4JUozAubVWq6HmXLFYxHlOT0/h7joajSzLgt2EiOAVC3MMssUjQwksO0gb/8EHH0AdcnV15fs+rCrwmd1ut7DpcEluPCBOCJDdBH6spmkis9leX4IgCILwesQi82cOPELgGAHXilqthqBc2DuyLKtUKhAswjA8PDyEjIKy6R9++GGxWNxsNmEYwncEWUZQEQYCgWma0KykaXpwcICI3LOzs3K5jNxiEFBw9UqlYlkWEucjBBfWGcdxptMp1B6lUgnpWY+OjqrVKvKuwtRSLpcLhUK327Vtez6fO44DEYSIoii6vLyMogghvkgVjyStX2E6fEEQBOErRHQhf+a4rrtarRBkyyoBWECgKvA8D84ZWObxX+g/iGi5XL777rusuqA8PoWILMuCioW0Gi79fr9SqaxWq1qttlqtqtXqaDRqtVpxHD98+NAwDNSfg1iAbOvIJY8gYSKqVqsff/xxp9MxTXO5XAZBUCqVFotFHMfIlLpcLo+OjnCT/FBQpZycnPBToNINDEB/3ilhBEEQ/nSxUWkdxcOg7k7TFKr1fd/b2wKHoQKkMb3pYFSjxaofx7FlWVBFJEnieR6yd0AgQEW6MAzh3sHLMzwtkEnMcZwwDLmokuM4s9lMKYUiw5sJJ7VoAAAgAElEQVTNxvf9Tz75pNPpoG8g4Nb3fZR9abVaRIQPQRAgdbrneVEUFYvFcrncbDbH4/FisfA878WLF5AYdrtdp9OBu8lgMHBdF36vlmWNRqPZbMbNggfBtYrF4ng8xlMgyqZcLodhuFqtyuUyQoGiKEJmFJZO1uu17/sQQTabDeJ30jSFjgSp2yqVCpejwwfUH0apPHzDVf2yLINjCmJ5lFLb7RYGoK++Z3yLsSyLc9pyT+P6dl+eMAx932cH6l6vd3h4iPkH4d84DG8EPdY0zTAMwzCEoDmbzZALOMuy3W4HByBMYqVSCfMbaiJCqwc1HhEtl0tIqxCLoTWEkfHV8XXTfSJknYiQkpjyccfljRBGjv6G/H4ssuMkg8EAqr7Xtg+8y5ED0LIs13WVUnpewTu9MvRe/QGzLMOmAtWdsixbLpeoZIkmStO0VqtxyUn0c6RR5iZFm3N5tuVyiWh5qFdx25T7qHHhQ4x0pGnebrelUmm5XDqOUygUMIpd193tdpZlOY5z1/bEnaCgFfZUUP3OZjMYpjGuN5sNYu74rjA9TqfTarUKnTF0q6gRgZpZmD/v2v7Cjfzt3/4tIgtAHMeY64VvEl7DEO5xC0jwhekD30RRpPLkofhmt9tNJhOl1Hq9xrSCz9vtVinV7/dhNIFrhcpfepqm+FWSJOgSSC+mlJpOpzgDjoekMh6PV6vVarVCh8GXfNh6vZ5Op/An1e8/DMMsy1arFX+Du+Jz4svNZoMbCMOQn5EfH39CxE2320UD8u0tl0tIY5vNBld/8eIFGgerF98qvlyv1+PxGI8cRdF8PtdblWNwlFJoHwaCC9/tWwUemYgwxf//4erqSinFXQJvHL1is9nMZrN+v4/OuVqtoBLDkdyxlVKLxUIphZJGOIDfslIK3Rsnx1/5VWZZhmeZzWZJktw0vm66T6UUZBSl1NnZ2eXlJX6C+k18A/wrPJdSCiPr008/1S9xCxiD4NqY+pLwVbIsw70Nh8M0TbE2z2Yz/Sb7/T6OQV5jPOBms+H7Xy6Xi8UCgwUbgNlsxo2Ja+GEeDWXl5f4bRiG8/n84uIC5+GRjoOzLOv3+/r8gDC9u7YnTxQ4crfb8SgeDocwMff7fRzMt43nxZGLxQJtrq+P6/UaPmp3bXyeK7hxvnCqf3ugf/iHf+Cy73qZD+GbBDuAQqHwhVucer3Ocaeu6+LdwQcTfyWiSqWCFLGmabquiwHw4MEDIgqCoF6vY2vChhXKk8ni5/wlV6tnxRgSgeDnjUYDSghcC19ySlPHcXhHwufkf14rYsx/cl3XcRxk1ufzmKbJSVS5ffgDnsIwDLQA5blWPc/DbetavVKp1Ol09AbEka7rQq9DRPiA7WC1Wu10OvxbXAJ/gics3+fbCdQMeAW8gb4r3BmOjo7o833M9/12u40CitVqlXsXIsDxHu/fv095vSRQr9fRi9AToFk0TRPp/NEf0OEBroX/3jS+brpPbgciOj4+RgocvihAX8WvGNwbaj3yuHst+CvCzaBueQPwCOjq+KZSqdTrdR4dR0dH0MhCsXF0dIQHxIOghjZaA98fHR0hWzFGKCYW0iYNHux4NQiUwwFwDuO1hmekYrHIMxj+BIUK3b09+f3iupVKpVwuc9fi8DrKzdN6wxYKBRzQbDb1NiGiUqnkeZ4+rX1JRAq5BePv//7vf/7znyOpFGReZIjSx5jw9QHPDAjsRGQYBpKK3qTxQ+oOeFokSYIyK7ApICMZEo8SERtQSqXSarVC2nWu9GZZFpxJ+/2+53mw6eD7UqlkGMZsNrNtu91uX11dQVXbaDRms5llWdDHVioVpAnpdDqLxWK32yE9K8J62+32cDiE7yqyqkPJuVwuG40GAmeKxSIylUEKieP45OTk8vKSiIrFoud5s9mMb361WhWLRRiS6vX6crmEYwomLLjf4kGq1WqhULi8vCyXy9AGIbkI2hmtt1wufd+fTqenp6dnZ2fc5+Eug6YzTRPP4vt+q9V6+fIlEaG6HmbSyWQCOQ/66q+7q3yrQKJ97CMbjcZisUCRSHS5L4/rulxMAMUBPM9DwyJvHvoeumutVouiCIY/3/d3u12xWETcFsxkPIkRkWmaqAnguq7ruuPxGHl+OX4K2nskpMHx5XIZZoJXx1eSJK+9T+wceGuOS+DSMHZgkcN58MiQZVEsKQxDeDjd1D6O4yRJAksKSljDDnXX0ki+7+OKxWLRtm3HcUajEZ762lRjWRZaHkJPv99HI/N5EJjmeR7amYjQ7ERUr9dnsxlsZ3B4R16A9XrdbDYxL8HtHW8T2krcQLlcho6W8oGMdIuGYURRBIPIl29PlJKA6xtmgPl83mg04jjGoyF/AYpiIosjEZVKpc1mgzwCRITpC2dI0/SDDz54/Pgx1wG9U/urXOyg3OrHBizBtixrOBw2m01kslJKGYaBTrDve3srwOqbZRkKvA2HQ5hUb5JCLMtCITcsfq7rIl26fjbsG1DMFutuqVR6+fIl1CFENB6PsbOEpRYTNO+KoH2FSIGqdfgyiqIoitBVeDGmvEYxvhyPx5j0syzDdA8HgiiKUC+mVqvFcYy9RZIk6/Wa849hcgnDENMT7PfD4bDdbs/n8yAIEBeDCaVarcIhgPJRTUT9fr/dbkO5yool3AMUrbyjYvP/bDZ78OABBDh4EsAFhPKs88iWxv6tSZLYtr3b7UzTPD4+ns/nSEL/tuWJhzOT4zj1er3b7aKfJElyV2Uq/JmICFKmZVn9fh9CAJp0PB4j52+lUoG3Mqz18H86Pz+/f/8+3uZyucQSS/n7xctCP0E3iKJosVjo/kzwKoCRIkmSIAheO77Yf+LafVqWhfNzJ4QpB/4E8DxAT8aFkiRBtmIIN2gEuC+8tn2iKIL/OP4LJxV4792pnbMsw0KO+tXwoEJhJozi0WhUq9Vs24YXl+d5yJLM2iDO3AN/qWfPnr377rs4ObuG9Hq9g4MDSA/wpUCbl0qlbrcbBAEGO0RG27Z7vV65XMa+ix1NcJ5mswk3NUiHePVfvj2x8yEidtvCnazXayRGcl0XZ8DjwDNSKYU7gYgAucG2bfjvJ0nCk+Rd258NDsJr+Ju/+Rul1GazwXYWEv1baOfeIzBv43XwP2/i5cuXOAabM3yJMFqlVJqmq9UKhliVv0c+7MmTJ+v1mk28SZKcnZ3h4M1m0+v18CdYYXG2yWSSpimMrNjwxXE8m83W6zXv/1ar1Xq9ns1mMNzi+/Pzc3yGAR4bDhzP5lg4YUynU8wOSrPWY78F+zduBgXw8EOUz4Vi8/z8HO4pMFHjDNyGMF3jeJxqMpmwURzHsN0XiVY3m81kMtEN26vVajabpWn67Nkz3EMYhuv1GjPLl37Pf4YQEXyi0XPYNefLA7GAbe0wxsNdUSl1fn6OF4peOpvN2CQfhiG/5d1uh061XC6XyyV62mq1Yt+OMAx5vPT7/clkwtMdkgWrvM/cNL5uuk/885NPPlFKTafTq6sr9hdR+XiENH91dYWnmEwmo9EI3lEIKb+lfXjUvHz5EsMB6r27tjPfFQY+Pyz7W7DfDIYD+43BVStJkvF4jJcCPQROtdlsUHB7MBjgQbbbLdy5cB4cORqNcEL9YdkkwZ5AaBCVe6RxN3iD9oyiCBNLHMc4THesgae8Umo4HE4mE+63kKejKIJDGDc+nGCUUnCg0U/1JRGLzC3Q3/3d30VRhOaOoogdvlLhm0IptVwuIYWg/W85+PDwEBOuyn0teUjM53PMoVmWPX/+XClFue8kDyeVr7W6KysmGtgv8CWkUp6Fd7vddDrFksweoyqf9PlmMEuuVivcUq/Xw3jGTMTeguxbpzsAppoHKMQalcsu+koPX1SwWq3QAvgni0Gw2mDYQ2OBM0A7YpomTMXY1rDQBuUTNFIqnzUQXgRFLt8wO9bhJLiTb6qzfFtAZ+CM+9wsdz2PUgp7UJWv5UqTqnkHyYZ82Ptd18XmW+8SfCdQDeI86HUsmrDoyd616BJ40UR0y/h67X3yX7fbLToSEaHf6i6WaJzlcqk7OC+Xy4ODA6UUBJqb2gfL+YMHD5Ik+c1vfoN++AbtPJ1O9fHS7/cPDw8x+vDI7CKKnMXL5ZItxThgMBjg5/pT40Or1cIzRlE0Ho+hzWV3VKX5xm42G6Q2ptzDg91icMCzZ8+gmmKJZLvd3rU9+WyLxYIfuVgswsVY5W7yMK/M5/Plcom6V9jMqFyk5loT17hr+4sUcgv0i1/8QimVpimGK7y7931XbxFYMpWmC8HwuOl41peMx2MsjYPBAJoDdG4YDtjZCnFurPrCwNbdkH3f5xtQmhYBXyZJMp1OWW7AEOUeok9q+JLHMKww+p2zTMPO8HEcY1/FPoNw0eVzYiKArR3fIHGIfh6l1MXFBa8cHJWDfXOWZTAY4/YgaqhcnsBp4ziGt6PKd36opBMEAZYufXnjwAFuavVGOoA/dfDIEAhU3iB6FMOXB22I+UeXmHV5F3/V1wMshFiEiAhuPdvtFj0Q9hT0BD4JrJPwSWRU7mOhtNXr1fF1032maQoJxnEc3Q+a3S2JCJ4KUBIopaIowm3jfpC776bG4S243gnfIEYmjmPElCEgjvWvaC4MH9zhaDQKgoA9jjF7wIYFQxUeEAmEEMqLbyDBX5t8MKhVrjbDaeHnq5Rar9etVguDjogQqA/DCqRM+Iajzvad2hMjHZH8Ktet4qKYFlS+HeKGRSOwIypunn2ucee4N8gud0KkkFugX/7yl9ytMVy/sHW4yPu1oLVreirTNNHccDfhSma6ThVjADo9desstt1uYejVdb9Qk+KvHFOK80Ofrw/X1y6KHDWKI6FLwJ8wUPlXvNLgA5IT4KJ8M7e322tBCgqlSSH4BjpGpRSGNIQGpLtgAYJHdRAEaF74bOLMeCKOQlR5glGlWWp4NE4mE31ojUYjVvzCK0Ll+0jEIkIHCzEfo5dVHdcsSvorQNfiUEnOH4B5CqeFzXs2m7FdCfbsLMtwCT3o7lXgpaEvG5zVg79hKQoRhmEYogCNUsp1XchPyNqitM2QvuvCI/Are7PIyT9peAbnmf3L/IoDZc/OzlQucHO3VLkBQtc88SY4TVNIPDAEKE2Nh3twHAdmPnzDL4VVvPwGiYh3+VCltNttdlFUSs3nc8gWWJNYRMbzIrcvr6/629f7w7XFBltt3mOwGIdjsizD/InOqe8GOb8wfp6mKWQgtBJMnzBn3P6+WPxCvSc4PyFWhZfeSqWC22ATKr9ftnDhAFafEBEWeNZ82LYN56r1es0pfHA2OI3Clxw3Bk9VqDzRVryjYLkBVqTDw0PeYOhzJlOpVAqFAofI8fc4EjpRlgZ4UvV9H5sQuI/wtIPpDj1nOp1yRPG1cP0viUght3BnKUR3GcF4gOyZpimGGTwM4IatlMJrhh4sy7LxeIx3wJkh0Ef7/T5s7TfeaB6LoXKBRs8HAGUj/xyXwEDFlqjX66EGG0LDceRgMMAHOExx/4NsBBMD26rSNIX0jSmDN1jY0A8GgzdzprlJCuHb0KPVdXlO/xMnAlHaDMvGHV3dgs8wlKAN1+s1vMf1cYskpEozOgCcZ7FYoK14UcGIhbMnXgca9tmzZ3i/MPFwHD/uDfMgrgIV63g8xix/cHDAO6p6vQ6PXbTJ7XZx3OHz58/hC8JzN64CF1cOPkS7ISpntVrB2b5UKvGz8wc0KS+WIoXcVQrB6MCY4hkmTdP5fF4ul1XemVnbhAbnGV8Xo69Z9Dgqh71HsaZy7C726JwGBnWhlVJnZ2eu6+ohmlinWT7QRzSugs841Wq1MgwDx0BFhwMwY3CeHhwPC6mee0aXn/hLPFqv12M7Jo9xItL3PDjDtQkTM/BNcF9FY56dnZ2cnLCOBA+FUYZmZ5lstVpBaoTlkU/Ij6yfn78ZjUbQL3L6Fjj/PnnyRCkFmYDyCGQiqtVq/K45Cvf73//+NVHDcZzj4+NrljV2YSEitBhPkvP5HN/wjaVpir+muTVc5Z5e7MQWxzGCfnnLh3iWW5r3dkQKuYU30YWgr/MKzVtPlRdtV3kars+ukW9A2YKL13BxcYElnDcrt6Dr03iXEMcx+z/q3yhthmIdCZZwPScbeh7bTdnez1ZkgKGOY3iv9tpW0h3TviQ3SSF6EjCW4YgI2po0TWG5gBudUmo+n0O6QiAf7yrYnjKZTPiNNJtNbPXa7XalUikWi/pf2RUD7YxcqHhBGM96+6t8XuNhD9M17l9fnrmTwNMTt0dEaZpih4SfwFVe16sREbaAvAe6pZ2jKGLXs/l8bpomJixMbeyBq/IJF1KpZVlIEIlnZxU95kcIoGxsUiKF3F0K0acIpbluqFxZpfKJYrFY8GvCgsG2fF0yQH/Y7XYI0OCf+76PS+DFsTmAbwNrFe4fIaZ8AKJsoGw7Pj5WSs1ms+12OxqNdrtdtVpFIj6Vi1MIs+L5B8KNLgDB4wF/7ff7nIiCozk4i4YeW4TjkSCrUCis1+uzs7Ojo6PtdgvBGg+IQTSfz9EOX/jK8ER6N+Z3h5+fn59TrpCAwbRUKvV6PYTuI3YS6zHPKvojIDhOf3zEK2F0K21RQIgZ7w0wdRAR21YQ2K80mxGSqCptdgrD8OzsTBfjMJ+oXF3KgiO2TJ1OBzokzDMwcvFVdNc0hBnzi+DpDhMRq8DvhEght/AmUsh6veZ1Gn49Kp+vS6USXJzQz7in6i+S8rTE+Aa9CjuS232/kV4CnV4pNRqNWPGO7q6UgtqDt0fYx+92u4ODAxg4lVK9Xg/TGfLP4KIcrgbdJv6Kk+jKfCze0JFi68y+EWwMuhM3SSGAk5nqOkxoR/mfvASycxyeBQmFYIJtNBqGYVSrVZx2OBzyEGXtN1JxY8LFe+QNKL9HaBHw3jG/BEHAdjcsLdggNptN3CQRLRYLTKkY20g+xgs5YnpxJNo8SRLMOLiBUqnEa9jl5SW0O7c0aZrH5WO6Rwvw27csazweYzaHVyB6MvRh+DlWtTRNr0lRvN6IFHJXKQQORuxyiMJGkOZJi27VJ2vKc3j4vo8B7vu+nhut1WqVSqUsyxDSSUSTyQRCJ0QNnGSxWBweHqIHQvfuui4iwyl3BzFN8+OPP+ZlEh0V+xkWiPnGfv/736vcIwQfWLLhjTU6FWK5p9PpaDTCNMtmFHaPxSqru7kMh0M8BYYDz3I8Z2IQwUcV38RxfLsuGVlwuLdDtEKMK+za2GAgDF59XmJQuVDCykWVG6/b7bae6hQ3wCYVdBJk98cs7XkeakxS7hfSbreV5pGDM8D09vTp0+985zs4FcKGcSG4oOprCsRBpRTmc7QGD3l+d5ji8I1hGJi3ocv3fR+NyblfKRcWoVpDYkn89g1cJ0UKuYU7SyHolDj+Ve907NcxFJFWQSnVbrdXqxU6vdICU1UeG6KUms/n6Ao3Xffi4gKaVZhvHcdhCVrl6plrfY7FC8i5POOgxAnliTEwo+FZ+AyId8dnSBtsPhgMBuid11wX36xX3SSFsN0EH1AnBfITETWbTT2PIaINIZ1g/eZ3yl4vcJiAG4RSKggCROGnebwDafsGXcSB0gVpfJRS2JBBi65ytwmAFCNoPX4cpSmT+RVAXlkul+12m23eaAd0kvl8jjEPJQ1uEifB9veWJt1sNiy1ENHV1RVOhTm3VqtB+ODOdnV1RZ93J0TD6ikcdrsdlOpApJA38AvhxYny7e/l5SWyh3EM52azefToEc8h0IGxbwH3KIC+ijGSpinSeGDjgSPPzs7gRIkESLC6xnHMkU14xa7rVqvVRqOB7CCQAAqFAj7ASYtlGlz66uoKcx23AySS+XzObnOU2xkBPyAHBqNfEVG/30eAqO7bQbk1RGneqbvdDudER8Vw4/oDt09BlIe6QBhCUhZ+ol6v1+12kZsH+we0EvQTGHFQH3IwGt9kpVKBYIGBz3mJ+K1x96DczwN5/3AYNEadTgfT+Hq95nRe+GDbNutX2CVct6HrUw0+szfber3mylyVSuXevXs4Bu3PC8d8PkeuQpWvcRypx/7IsF9z6NCdECnkFu4shbBdVlfRq1ckEmSmQmj1NeEAXRMmQ+wneFFhrf5rQQ4r/VQICUPoKSohKaWQeHE4HPLqjl7l+/5kMmFzLE71/PlzyN1ZlkGh1+/3oZCHezZ6D89cujUX/0Txs08//fT22JabuMUvBNsjyE98k/gVVCPspc9nw53jBUF7zO8LB7PTK+UbUMxlmI8w3jAHIa8GKzlbrdZsNsNbxs6PXeLff/99pVStVkNnWCwWbFFGRRvXdUej0Xg8Zv++YrFYKpUmk0kQBGmaIqGZ0tzW4IzMgiamGxzzhRsRVmnob2q73Var1fV6fe3BYfDmw9iEjOkJMz7/lSdfkULuKoXMZjNML5BfF4uFvpeFaAuZOEmScrms73YAOtV4PIZnCceFwgrJmwT2eFVKoQzh2dkZKs/x/Oa6LhuUdfkGeyF8w/egtA4wGAzYfpSm6cHBAfLdjcfjRqOBhQ2dvF6vX0uvqXJVBwypLFiwOzl8p1SuiYHTjMr9T5E+WOV+8SrfX7FZHBq+W16B/qYwCuDohlbSxwsXgxwOh++++y4yjGEVLxaLLJ0rLeBZaXl9OHAJrYR5DIMX9QWVlrGjUChg2sHcwk57uqDDtieVe8ejMbMsYwc1IuL9DHYyUJrqphbDMDCu2daslPJ9n+OT9am4XC5zQBDyyXKC+Vsa+SZECrmFN7HIoB9gPWYVH7bmxWIRSX913Z1hGJPJBK5JWBSTJOE9BxENBoPBYPCFanbK1ScYpdf0H0obWqhpyRMl/xUfeAegh//pZhelVKFQgDWaW4OIXrx4AWNkqVS6urpimyLfgO5J+iW5SQqBh9R0Og2CgK8CyY9HfhRFeISLi4s0TTFb2bY9nU71YhzYIyLXOIQ/fTygWC6yf3KjIQ8mL8mcm0EpdXl5qb9clfvcUa5QxRmQEx0KDH4uvan113ftJeIDHhPPovIwwvl8zoV2Xwu7quiqMhhTSqXSfD4/ODhI0xQT1nK5hHs1EcEUBZMB+s+1ndZ6veZvRAp5sxgZ+Kej0yLp+2g0wmKgtOgqnDzLMvicbbdbRHRDFkeSOhyJpQu9DjWWIWiqz0e3Uq7FROYbGIP0XgRrLz6z7wj/lr3N9LPprlQ8IvTsfPr52dmCVTt4FiR8o9xBga1+GPsq14Xw+qq7WyEVGC4Er6ZbWj5JEtu24QbH41HlLw6pkCeTSblcZp2NHpHEHru6Wx6X98P8AJ1xpVJBmRjP8/iWYD1HFC63PDRYPCdEUcQTDgtwMMZBxGQ9JSY0eGtlWaabpzGVsV8XQOA92pBrS6lXJh805na7RZbe6XSKHshLAPonppFbmvq1iBRyC3eWQjDLc6w2+gF7V+D169sLVFW4plDlQas7qX1hLd9qtcq5MdCNFosF/MvwXkulkm5QwL15nsem6PF4jGfkIEw+GJ8Nw9jlxVaU5nq93W5RfRtg+wLVK+U7dV6i7sRNUgg2fOwSS5pvDaBcG6S0jGGk2T74PeJs7LKnlPI8DwUakDgEaZWJKMnTFvFLYZOZUsp1XT3WUeXpKXm9x6yEC6GoNw62bRuqYFTQVvk4zLLMtm2U5+DsDpRbyrj9IVzql240Grc0qZ6zpNFo8NmuTTq6VIrW8H0fwjQyWeGNFAoFbK309hcp5A28U9mPAXoIfi+e53HNW87uwJqALC8AC19jrA0qdy1XuaqAxywWNljloJZnOVvlWWTQ85VmOsRAYE8RbJl4jeTgf/RwXl8hH0NcxgnxjFCoQKPAEoyecE/3hlFaRhyeQ/QoOd51YB6D0B/m+UbZ3KBeqfl8rf0xa0HOwO6RRSueMBuNBiukeTri2QNniPLkpAjkQQoyLNj8vnQLEXab3GHgPg+FCko+8UBTWhlwnhX5iqvVCoLRdDplrRIfg8fRKzyzKIO6P7gQD9VrSxK7x+lpEq9V1sTLRcKIm9r5JkQKuYU7SyEQxlmvlSTJeDyGMyM7Fl1bCLnr6Es77y/RM3ha55DILM8ggtkfVQlU3qevrSUYEqRF2eGvcRw3Gg0OYeWb4aUOIv92u4VkjYJtSlvOlbZ6wXeaYwsB7kp9kTnpJm6xyOAOcUUUiIKCUeVyCQ7D08GVBDIZsh3AMsI7HnbHgbGDs3jByUZpk45SqlKp6BsgpdRN7bPb7V7Vr/A/sV3jnqC/F9wJ8lGSRhAEcRzj0iw58f4MS46+0bkGZ3nBhO44DqupiWg0GiErQJIkMAPrvTHLU5lxOJUuk+lhXCKF3FUKwbKh14VXSq3Xa9Rb4cTb8CHFMfqSfM0S+irYZ/Mxq9WKIz/DMDRNkycBPgkuBNMAuih0+LoOFRm7+SpQ2utyLcvT6E7ot/oZcF32V2WRAifBRJplWRAE+g6b8/nin/rmvtvtQuOChZM1srfPP+zFwiKCypUE/GhKqSAIOJa+2WyGeZp8Hr9QNvOt8gCh3ITNmc1YZ9nr9dK8hBMamZ2Urznds5kMridExIoHRCTxbeMDwnZ0OxTlljU+AO2TZRnyEfDNoxKn0uY3lc+HiKuIosg0TRysa85u6YS3IFLILbyJRUZPw4fONBwOfd+v1+voaqi1fa1+j8oFEcpzz+neaog9wT9ZAXB5eamnDuOf48hut8uLgf5zfbrRewy7NSHKBnsXHKN/5nHIQjqUvUQE4YMfASIUhHrcyRfGG7/KTVIIJ1DX519uVSQ2ME0TH2DDhoDFcf94rXo+A6UZQXFRnHw2m0G7gElKT42gzyavbZ9qtdrr9SzLgj4WN0+fzw6E2+ak8piqVO5hVy6XUR1X13wobbRzSC1P7rdkt0PPiaKoUqmEYYiexpkVoNAiIkg/8HSGah37bzbMsQeSyjVng8GAFySRQu4qhWAZgLgPk+7FxYW+DCjNDVBpbgF4I6VSCXGkt1yC8joIYQEAACAASURBVPqILHDv8tpDvNLwUo25Tk/Gz0u+ntsbcPkCoMs0SvMlUrm1mp8LT4FRxjKKbdu6dgQL3tOnT+/fv8+xfrvdDnZt1vH4vt/v9xGZwq/g2ki53SKst16oVeGBLhCfXdddrVaQjdACs9kMAXHT6fTg4ABXxATF6WVhwUS4TZZlaARkjWL1DN8bDxYMsXfeeSfLMoT3A9528m1T7vy72+16vR7uARY9dvtA8TnDMCDAcfZ3lZe+4hbAl6hpx0IhlHN6HAPUHnqOafjJlctlsch8tbxJjEysVT/a7XYY2LC5Kk1+18PGcH6OsWRnQ5yEi4eh6zx58uTapAY1nZ4lIsuTfrKYgu6e5qXXAMJo4zgeDodYcna7nZ5NiJ0weJbBGIBz62q1ivJqVey2hp/zLInH5Dxdd+UWXQhvChEWn6YpxnmSJBDwX758CS8ZXdPAjg6NRqNSqUA+K5VKSBOEwcxvPMsr906n0+FwiKFyfHzMGTvQArpb+LX24daGXVk3S41Go2uJPZI89S0XoGKrE9PtdjmhCLcJt/aXqf6FdmNb0qeffqpy9exwOMRzQaJF5XGVS1RcTATSFYwyEMK4v+EqIoXcVQrBLMHGUz3odL1ej0YjfZlHFhzeBCMG/nYRRGmrLMdzqXz2Rz1CfANvKnQP7C70AutcGQcvPYqibrfL3pGo/YbAMSKCvhD2EXi/8f3zWH7+/Dl3D1wCmfeUFoXBIcH0ikrjWiAeDB/z+RyOtEpLJMhy/GtBmA+kNC7Cgj/B7YZfJU4IrxrWlCCIWuVpTJU2JH/3u9/ht8jyTvlOyXGccrmMJsIs0e/3EaPH6zocSjzPQ6YGPYAfu5pr7xRXgVMIHgHe5fP5HOlYQq1mDdYm3b0GwhZuIMqr52Bos3czzMR4rXjSZ8+ecTOKd+rXwZ2lEF5XOLMQZ7dluy/LoWEYIs9mkiSc3xcdAgPm6uoKMjLPYpwn+OLiAud/8eIFR3lgClitVthUsS4OPx+NRjDc7nY7aN4g92ADwTYI/IQDvVh8waw3HA5ZFQ8eP36s8vJFuvYPakMI2lmWQfF41xdwkxTCFSnZXUbPQr3ZbDiVk1KKx7nS0urDYwPn0cUINrSzT4melUQp9fTpU6U5AHFz3dQ+y+WSYxqVUoPBAL5gSinkEuCOoSc6ZPmDdTMIEdSvy1730+mUVxFO7HETcRxDzc5CT7fbxTNyVlz9TtjLTxdPdXULPx2njhAp5A28U7kLKaVmsxlCQngzwyML6xxn6+dQ8yiKbrkKTqgv6vzh448/xj+vTTVwmefHwWdo7NI0RVi7fgnWQ3C8T6JFC8JL7FoG2Ol0ij6M/RJPPjges4dSKgxDCB98QLfbfTUiXc87HGsZZlkpop//tejSPOc30pVPmFf5eGzheALE0GO/EM5XyXsPni7QGpxbeTweYxVgQY1zdeDMbHnHtACdB45klTk/KdSi/P2TJ0/gAshPx9nW+Vppmk4mk36/z12OtUG9Xg85ojhuS9+p4htMpCx+vcE8L1LILbyJRQZrPDYK+jjZbDYsamC64eLLGJ/Qd3FsFcutCOmGgDKbzRACyoHdtm3XajWY8DndBUrJq7ywKiYgvF0+s74ws3VW5aVGlsslB3TwAqy0vQUHAfHWXOVKVB4A27zINXiD1egWXQjC5zDk0KSI6WB9AGdT4LeGb/DIvNizjlrPM6v7lCiluFw1Z8fH1KBy4/1N7cOdh/uAvn6zp4XKNU9YJzDOuQAefoIZvN/vQ6OLhYcXfn0Nu6Wytq745amNMzQoLZKQBWJ8vhYGDGGXYxa63e61fN5KpJA7SiHchc7OzriS0Ww242A0iPV82OXlJStOsJ5dU63dcpXJZMKrGr7n4TAajTCCsNnNsmw4HKLbwO2DNzMAOQxxZJqmEFM4ZzEqWGGVxVWQP3o2m7HUovdb3h2x8xOHnuKGUYwC37COttfrsVuJLklnedTutXw2rwKlKbb4fEUYULIsw7Smi1aQMF4r1iCfLEstqPyHCBeE/3zyyScYNdPpdLlcYv3W13j2homiCBOOnlhFfb7adpZlqCrFX+IncCLRfcZ50oN2B0+BR4uiSH+nfLmrqysevHgd/NYgBeotA8Hl2hT3JREp5BbeRAphn6Ysz8I5GAy4yPvFxQW6F960vqnl+eXZs2e8V1avZHe+5qDKebvBbDbr9XqczIdHeJzXo1HaZpctNSrfwSR5/RR8CW84Pj+SyvN51us1BgyvRizC808++ugjrh7+hXuRV7lFCuG1FuYklU8Q/EQY/Nx6SP4IWQ0NzsMS8ODkmYs3ndcSOOqLge7s8mr7cDPqH6D6Yv8hTP3qFYvvbDa7vLzk+FilzT5Qd+EzNm08y+uzyWvRt1wsrSJ/K/6a5hX48LDweMXGFH2bpVKOBeOoBCBSyF2lENZSsG6g3+9jqsG+X+WOougqXJRK5RGh6tZUMbCbYJ+qy9Z4j1CzIaIEf8L5r66u8AEWDV03AAMHTy8sSeOf2OogIzgrKSGX684ZvOHm+GQeAmjAq6srFoWn0ynulg1AEH22ebUj7oF6OCEWRXT4W8L0eBTgumgiVqniubArwyhQeWQAK1OjKBoOh7qKCO3DL1Rp2aTU5wN2stytnn1juUoc/xZCP/ZRUB2xPZ0vhw84FR4W6hnOVKQ0YU5p8zz2GJvNBppaHIZjsL998uQJmp0zKnFGE2hzcYZXUzR9SUQKuYU3kUJUnluGuwUPD96R65Fa8GaA0kLlsj+PB3QFtlbyqdC9uPvyZoXvgUf7xcUFO2coTbHBAi/sr3pxuNls1u/39UC43W7HoXQQqpQ2CWIbBKUCxi0iBrmX89PdlVukEFSI4GbkiQPtpvvZTSYTfW3mdojzSnKDwYC3UJDGdOFjs9lwhrQ0TfnZuTrdLe2jW6lwh6xK1Q1eSpuJ4P2n6zaQLWA+n+sBnKzm0R8Kc4Hu+nMN/YZ50Xr+/Llu8sOHx48f485hgYKOWuWVC9F0yBqJw6ATwm9FCrmrFMKdZLFYsA+Z0sQ7dBveXSil4FuKF8EG/tvBz6Fi4VvSxWhcDofpATuskINozhZkXUvHDw7tvdJMIdhA84BFqmi2Hau8x2JDpW/GcG9Y46EPxm2jNaK8+jTmTDQa/5ydQwESKN/SOB999BE+IHcwPyMmVZ5aIQ1gPtFfDZ8cGk3dDY7lJ7TVxcUFFEJZHsbPtlGomlgLBX9PVsnwJoRV1Lo/Ftd/YQcAnrX4zjn9Gl4KzvxqtkPWyOpm+vl8jqe4urriu8VuCudkc/8b7DZFCrmFN4nURffig9E5OKafTX0wvkBjid+GeVZyXV7O8tgHXj9Yzai0rq807Qh7yEZ5tUaVd9lrlT6gAuVOs84r6OqTpq4t4OVHaX4kbGXkltGbCC4XbEO5tbVfw01SCHtL4H4wDfGkzKoL3bszy7Llcsm+VHzb7KbDNaj46Thdo9LEhTTP6Y4/6XbZV9tH5VP/Nq9Iji/ZC1VpSZbwJw4bxsTHwk2cJxxjBQ9b+vkmv0xSFixCKjcR6rEA6DmhVnGDa/lmeSkT1tWnefAeL0u6oliJFHJHiwyy2PGI1mcbXgK57/HEkiQJ70pvyQ3KvZePgeKTxxGPFD0SmHN14xtWA7C/RZo71MNqrDTPCZ4Z8OzsS8tNgT7G6xncUFi/y/fJll9uVQ7tSXIXXR71vNFnexOnur+98bFgc2Fhvi7P2Gg6tvbiS1YAY9yhLi7/Nclz5/O0rFsruB100zbfDzZ16vPqE/4A2eXaC8o0bzn1edHkmoMg7oqNMiqfPxEAeM195Npb053V8CWED6hF9dCbOyFSyC0Yv/zlL3/2s58REfIBu66bZZnuNC583cznc9u2kYUapQo4X+qrIO0jEn64rmtZ1na7tW2bg8pUHqbbarUwaKFZrVQqT58+7XQ6SFvkui6i2srlcpqmRDQejzudDq4ex7FpmpZlbTabUqmUpqlhGPgVbkMphXpaN3WVMAy5FheuzgfjT7Zt486RVhk5tn3f3+12hUKh1Wq9ePGCw/O4aOpqtdIjWQzDqNfrCC4oFArYtcCFnqtC4DDP8+Abj8xpyLOHqSFNU1TAmU6nSJRSLpezLEPtHg4fIKJisYj0bnGe6IzyoD5ObfSWgEfmFkCD7PumBOFbCofjUT57yDrLSCvsmTiOq9VqEARZlkEtjJXeuIF+v49MXCgKul6vj46OyuUygvsRRwBR/cmTJ/V6PQxDZADsdruPHj3CEo5sBESEgnaWZWVZ1ul0kiRBwVvP83BOpH5CDYVyuYylF+lWu93uLaPI8zzE7iqlKpXK1dUVFn4ee9hCEVGSJIeHh1EU+b6fZZnrunEcIxUelnzkGUOgYBAE2JQg6dBms2FVDWdfxd6L7f3452KxgB802geCF29uoNCqVCq9Xo+r3H388cdQLEHfDqe8b6JPCIIgvDXYX3yI8HUCNQPyDRweHjqOc3FxcXx8jGXyVQ4ODvr9PtIU9nq9QqEAJbZt20jwh9rlk8mk0WhMp1PkFgyCoF6v4wAoAw4PD5G1ut1uD4dDiAhQbzx//hw53Q8ODlzXnc1m1WoV5jAUoyGiwWDQ6XSgEXntfULBU6vVTNM8Pz9/8ODBO++88/z5cyJqNBqTyaRQKHzve9979uwZ/8SyLIgXeDoi8n0fQg9ur9PpjEYj7CpgEywWi3hMtAzEKfy22WyORqPNZnN4eKiUQgEz5CfYbreQxsbjMRIAmKbJDUVEtm0vl8vj42OYxjqdznA45Op9giAIwleFWGT2z3g8bjab1WoV+3VYW7h0001AfIEkEYYhDChKKdM06/X6ZDJZrVbtdnuz2bAeBaXgLi4u7t271+v17t27xy7fhUJhOp222+2zs7OTkxM22SyXSyzYSZJwXQZIJFCccIHN16LyhEvNZvPZs2dY8tmcAU1Jo9FAlwuCYDabsdGnWq1yzNT9+/cRewVzEhQ2cNSApHJycvL48WOoMSCywPpbKBSQkR1CBhGhcBebeMBoNOKcS8vlErnAJ5MJ0r4hX/5isUCOSBKLjFhkBOEuiEXmFkQXsn+CIEA0PJKOc/2/1x5s2zaSux8dHcHd8uTkhJPlFwqF8/NzZPuASQWZ3bkwNxFB3Gm325VKBcPAcZzFYhEEQalUOjk5gX8GEVmWVSgUMH6KxSLbI+C6QVqC9lfBKoWkt5VKZTabIWk6QmFxfiRRHgwG0FvgWlDJsLcHbDSz2SwIAtRfhcmGiGq1mmEY8CQ9ODgolUpw/oBAYJpmsVjc7XaLxQLtMx6P79+/PxgMkMIffiGQhFqt1nw+RyVhZFFcrVaNRgOxi3DBSdP0dpFLEARBuCsiheyZ6XRar9cNw9hut0EQ2LaNxfiWn1SrVXarNAyDS1fEcYz1WymF5Ei9Xi8IAsdxnj9/jpLC5XKZS/Eh2xIMDaVSCaWbiAjSRrvdhv98kiREBNEE3idY13XtyKvgDkulEptI8LCooqmUQr1Tx3E6nc5ut2u1WshTEoYhpCU8kW3bqPy+2WxarRacZLHthlkHO/Jer0ea72oURaZpjkajarWKm5xOpyyCKKXK5TKc55vN5ng83mw2MEIVi0WUB4KggyqdnuctFot6vY4/CYIgCF8VIoXsmXq9Ph6PscAvFotCoXB2dvbuu+/qi/erP+ECxXAd5RiQcrk8HA7n83m1Wi0Wi4jfu7q6Ojo6Gg6HKM3Q6/VarVaj0UCl7NlsBgNHFEXtdns2mzWbTa5yDgsdbBnsAFsul5F/tl6v32SJgE7CNM3FYsHCSqPRQPx2vV6HYoMtPtPp1DRNLshZKpUQ5AKlC3ufqDwk2zAMhAjBD8YwDHja4jDDMFC3j4iQ9R/GoIODAxTIWK1WMO5MJhN+LtM0YRiivNxds9n0PM80TRaMBEEQhK8QkUL2zGazaTab2+0WFoT1en16errb7W5SMxiG8fTp00ePHsHWgHpRUH7AaHJwcADvVK7tpLTK1FmWVavVg4OD8XhMREmSwB8oTdNSqTQcDmHmgNtpEASGYfB5Dg4OIA1APYBs0Dc9l+d5URTBQVUpVSwWkbWsUCjUarU4jtmLBZaRer2O+GTUN+Z7gPeJaZqQKhDJAhENnhnb7RaOt3DIJSI0BW4V9SMODg6iKCqVSlCuwFOEiGzbVkpVq1V2mkEio0qlkqYphA+UAYP0A0OSIAiC8FVhEtFut0NmCCi6b/JIEL4OfN/H2owUQPgnB8S+ChHdu3cP/qRwICUiOGwSEVZTmDYQKGsYxnA4hLbAMAzLskql0suXLx3HgX0hTVPbtuEggrUZGoVarYZ0PShXoZTq9/uIcUXxJ/ZP5HtA8ngi4hBcPONisSiVSih6CbkBfQw+ItBAoFYIu2sVCgVOOgQP3MViYZomzEk4BpIKnGPK5XKz2cRjQpcDJUqaplBjtFqt5XKJouq+70N+wn3CIwRPgTPg0ZD0DKomPClsVXAug8tqvV6fz+dvm2sqabMEnh2tcYsCTxAE4bWYcAiIogj5r+BqIHkRvjE4FRhyaRARLBG3/AS+lkmSFAoF/OTevXvFYhHaFBwDVQosIO12G7Eku90OS2wQBLvdrlQqjcfj9Xr98OFDBNogAhZqjNlsdnR0tF6vESmDlF+QGBBXDCXK4eGhbduIbSkUCpPJhPLVCFdMkqRarQ6Hw6OjIwhJ8DA9Pz/3PA9RMLCDsMKGiJAmmYgqlQr8QiAfqLwwN4Q2yB9EhBSoSFrPKfkpL9oeBMF0OoX5CU3kuu7Tp09t20aZ9fPzc5y21+vVajV4mSA6Zjab4RJ8SxDWIbisVqtqtfpVd4o/ASA3I0EcrG/4sO/7EgThTwz77Ozsww8/xNSMZYAXxT3f2tsBQraQzZOIoAjBl689fjAYIMcXIl0//PBDIrq6urIsCxG/iF/lEEoiOj8/hzwBY8disahUKoVCYbVaNZvNOI7/8R//kbT4Mayytm13u93j42N4mcAegaRqYRgiq6njOFdXV0huRkTb7fbw8BB1fBzHKZfLnufBxuG6LkqkcgDL/fv3J5NJvV6HzQXSmJ4atVgsIjxnMBjA5YVjYiFhwMsVGp3Dw8NCoYBIHLiYwC0GN4CgIcuyYHyBF8ijR4+63S7ypsAXBPnTNpsNlEybzcbzPM/zICAGQTCfz5GxDe4slmWhTil8R77urvKt4vLystPpmKaZpinExMlk0mw2Zd4QBOFO2O12OwgCuBEQEfJXImf2vu/trQBrP5Y6yvUct2RfODw8nE6n5XIZQa3T6RSZy5F3HIIIXE1h1lFKtdttqEZc10UyDGgL4AjSbrebzSYEC/h7IhwmTVNkD+OVG8vzcrnE8fAtPTo6gnUjiiIkOe12uw8ePEDtCSTeQEL0w8ND+IKgeI3v+wgOQhY113WLxWIURYjrgWpnu93CcnR6enp+fg4tHZQinuchvAg6mO12e3Z2dnp6yunaTk9PsUdnsebp06cPHjzQ+zaugvzxRNTv91utlu/7kLGGw2GxWISyBEIGqz04hwqf5OvrId9O7t+/j6pGnueNx+NardZsNjnGWxAE4UtiX15eEhFnjiIieCewUV/4WrEsaz6f80qJRKioYPLa41erVa1WQ02m6XTq+34YhoVCAWnakXoLLj5wKbUsq1gsIhwGSUSIyLZteHj4vo+AVSThgEYdIojv+8PhsNVqoR5yoVBAUWyEokB54DjOdDpFDngoOTabzYMHD5AYrdvtVioV3/dRBxg2FPiZwvMU6pzFYgH7zsXFBdxLKY8WhloO+gw8O1LdI017sViExwksTUgCi8hbnMT3fdu2P/nkkw8//HAymTx69Gi5XMKfFwfU63Xob4io3++fnJwg+yp0SIhhRvI0PUXsH/7wB9T7RSIW0zQHgwHf+VvCxcXFw4cPiShN02azCV9paLb2fWuCIPwpYfz2t7999913MbnDSTCOYyjYhW8ANHuSJOwaDCXH7dtr+D2guJrnebPZrFKp9Pv9e/fuERFqYyI4BVqQ+XzuOE6lUlkulwiTIS27BkJ5KTfJoVAn1mCoAYrFYr/fPzg4SJJkNpu1Wq1ut9toNOAcoN8wYlUODg70lOeQOTghLKSWYrGIYnudTgdWpCAIlsslQnJwY8hfAreSQqHAsbWQG1B4j/LMp7CzQCKpVCrQxOAk1WqV05tiv4609EjZDq/VYrGI+4RqJE1TqEZwOVwLZVE7nc5sNqvVasj/hhp4b6E6hIgQL438Mfw6BEG4huROvY2//uu/Pj4+xudCoVAqlbBdFr4ZICWUy2WoE1hXcfuvkIoDHyzLgsqBc58TUb1ebzQanudhOX/w4AHUJPV6nau06MdzuA0ElPv37/PtQXRgC5Hv+w8fPsR9sjMsPpyenlLuEMrGC6joYWlyHAc5S+r1eqFQODw85HULugRIUXzbQRBwFlfINNA98K9wrQcPHnCbsACNKxaLRd/3Uf6Gc36wYgMf9GT5hmEgsyrWV7Yv4LTwdNFPXq/XbdvWW/ItAaY0IiqVSmhGiIaCILwKtkDIm4Ba3xBKBKWU8etf//onP/lJsVgsFAqLxQKRjcvl0rihSpnw1ZJlGTtUvvrPV+HknnD7QLUU/a9w5IQWgfLidgh+gXtpHMcwXqAwnu4JxKYKIuJ/cuGV9Xrd6XSgD4CygfIUajAG9ft9dm1OkiQIAlguKE+Xjg+4ST3XCFxDYOspFovIMwYnEhyP4BfK5QY8cqfTWSwWu90OP4dKJssy27ZhWHFdF66jHLuhXwixSPiGiCzLcl0XkcOu6+52uyAI0NQnJyeXl5cwzTiOg8q9pVIJFYwRHvK2bWtUrmaDTw+ysBQKhdvDuwTh7QTBiUp0Ia/DUDeXAhEEQRAEQfj6EFlMEARBEIT9IFKIIAiCIAj7QaQQQRAEQRD2g0ghgiAIgiDsB5FCBEEQBEHYDyKFCIIgCIKwH0QKEQRBEARhP4gUIgiCIAjCfhApRBAEQRCE/SBSiCAIgiAI+0GkEEEQBEEQ9oNIIYIgCIIg7AeRQgRBEARB2A8ihQiCIAiCsB9EChEEQRAEYT+IFCIIgiAIwn4QKUQQBEEQhP0gUoggCIIgCPtBpBBBEARBEPaDSCGCIAiCIOwHkUIEQRAEQdgPIoUIgiAIgrAfRAoRBEEQBGE/iBQiCIIgCMJ+EClEEARBEIT9IFKIIAiCIAj7QaQQQRAEQRD2g0ghgiAIgiDsB5FCBEEQBEHYDyKFCIIgCIKwH0QKEQRBEARhP4gUIgiCIAjCfhApRBAEQRCE/SBSiCAIgiAI+0GkEEEQBEEQ9oNIIYIgCIIg7AeRQgRBEARB2A8ihQiCIAiCsB9EChEEQRAEYT+IFCIIgiAIwn4QKUQQBEEQhP0gUoggCIIgCPtBpBBBEARBEPaDSCGCIAiCIOwHkUIEQRAEQdgPIoUIgiAIgrAfRAoRBEEQBGE/iBQiCIIgCMJ+EClEEARBEIT9IFKIIAiCIAj7QaQQQRAEQRD2g0ghgiAIgiDsB5FCBEEQBEHYDyKFCIIgCIKwH0QKEQRBEARhP4gUIgiCIAjCfhApRBAEQRCE/SBSiCAIgiAI+0GkEEEQBEEQ9oNIIYIgCIIg7AeRQgRBEARB2A8ihQiCIAiCsB9EChEEQRAEYT+IFCIIgiAIwn4QKUQQBEEQhP0gUoggCIIgCPtBpBBBEARBEPaDSCGCIAiCIOwHkUIEQRAEQdgPIoUIgiAIgrAfRAoRBEEQBGE/iBQiCIIgCMJ+EClEEARBEIT9IFKIIAiCIAj7QaQQQRAEQRD2g0ghgiAIgiDsB5FCBEEQBEHYDyKFCIIgCIKwH0QKEQRBEARhP4gUIgiCIAjCfhApRBAEQRCE/SBSiCAIgiAI+0GkEEEQBEEQ9oNIIYIgCIIg7AeRQgRBEARB2A8ihQiCIAiCsB9EChEEQRAEYT+IFCIIgiAIwn4QKUQQBEEQhP0gUoggCIIgCPtBpBBBEARBEPaDSCGCIAiCIOwHkUIEQRAEQdgPIoUIgiAIgrAfRAoRBEEQBGE/iBQiCIIgCMJ+EClEEARBEIT9IFKIIAiCIAj7QaQQQRAEQRD2g0ghgiAIgiDsB5FCBEEQBEHYDyKFCIIgCIKwH0QKEQRBEARhP4gUIgiCIAh7IE1TpRQ+K6XSNM2yjL95SzDetgcWBEEQhG8DSinDMPZ9F3vG3vcNCIIgCMJbSpZlRGQYxlsrjohFRhAEQRD2w6uGmLfNQCG6EEEQBEHYA4ZhmKaJD/qX+7ujPSB+IYIgCIKwZ7AWv20iCIlFRhAEQRD2gq4FiOM4DMM0Tfd4P3tBLDKCIAjCVw8W2IzIwv8V/kVERIZJZCqiLD/ss6+JSNsc4684g0lkqCT/wiQyyDBJZWSYisws/5WhXdr47LoZEZFh//FLlZFBisw/HkOE+yEiI/9nSqSIDL5/MvHPlAiSgktEKiHjj5v5/JzZ5z4r/akzojh/ysyIQnJtUgZlKgvDJFMGFSzL/3wzvKZVdXLlSX6V/EFed8y3EZFCBEEQhK+ejAgLufnZYpwSJaQUGRalBtmFiChKybQ+kzaw3qcJFW0yiKKMUqJNSp5DDpFHZGUxqS1lGSlFTomUTRTF21T5FSz7jkG71SIoVSAlWEoZKqIsJtNUho0vzSwzKSai1PB2MRXN1DIVESVpltk2EcXzWVApx6mZ2JQQWUTFLDEMRYYZpeRalBCtiaKY6lnoORmlBpFBlklEqWESkR1vybBSu0BEtsooCclSREamDNNU6+7j3Xa1StTpo3fIDLdPX7qeb9Vb2+FkNF83j+57h/dJmUmaWbZNRCoj0yRSpEiRYUwX60olSIkMoigm2yTPonC7LhQ8IpWEkekWlWnOVlG55EZhWvAsg2i1WFUqpTRJTNMklZqWhcag10mB3zAihQiCIAhfC39UhygiSkhBEjDI8hT+ikU9psFgE0XRbrVUZFIGpwAAIABJREFU0aZeKpSKfudeW5k0W9Hls9lhPXjYcopEpBQZikyLEiLHIEWOa19Mtv/0h8cl1/xPf/zDoFRRRJuYLJt8wyAyiBQl8ZbSyLB8h2zTpDgk28uIbIeyOKMktlzXtOyQyCJyXZeIZqvVPDIm2+zD07KvMop35DmWRRnRZJWeLQyL0lIl9hyDLJcUfaabgeLEIiL1mQYki4kSikKybNOwiNJ4M6oFjkfe+OJp0zbT3SzKItfILKJOu+EH/m61KJTqtm0qIqUoUyraxVmWmZbleA7ZNmS7y97i+LBiEoWJKhSLWbwzySAi0zS3CZVK7jamgmd9pjhyvIzIsm2DKApD9zMp5I/gZq9/+40gUoggCILw1WNet7CYn/3bsMmwY6KEaL6h8WT5/Oy81+tRlhikKNq5RkpE7333h4++9/7ZxfzXv/nnB0fNyk9/cFLyaLOiYoFMd53YBcOykjBOsvF0/ezsvGCp46OD+4etNMtsz1YEQcUi0yLLsw1LQfVCyrYctgc5jmORlaYqJsosIiKvEGy36//rV//Px2e9e++8f9T4y2rJVGmaJgnZNhHN5/N//x8eexape8UfvX/P9t0wVoZBhpkopSwzIyMmMm2zkGUZUUpGQrYxOXuuCkHzqOkYZMRxMSiFYbjNrNitKqeYKS/MEiMxMjIKnp/Ese14aaosy7AsY7lO4zhuNCuTxa5SKSSKoowWm+0hVWbzXcX3FJmG5ZJh2g4poslsUW9VEqJnF2OVJI8eHhSKTpKRZZJFlGb0rXIJFSlEEARB+FrQfTXgC0JkkmFtYmU6xiaiTx4/f/bsxWIx81ynVqsdtDuWSsw0nE6naZou17SNU7Lci/44JkoM0ypUDdNWppkVKCTynaLjmEf3Sz81/m26W7l+KTNMxzNDooQojsgl5dsOGXZCFBG5JhmGQZlNZKRECZGtKEvJsK00o21KnkUpGY5fqrYOT8ibzWZxuKWSbdi2ZVmfOY4a1jaM10k0XWSJMi3LYc3CZ0+aERlmahiZZVnKo4yIssQq7jIn2GV20DStjIJ6yWuYylSLFTle0KgXwmw2X0SJ8hzbJouIDFPFmZGk6vyyu1xv33c/qFQKu4xMk2yLfvuHT4JydbOc/upXH/2X/+7nQcFJkiTNyHLNZqsCIe+TT1+U/MLRvYOiTSnRdh36Ra9QLKpXjC97lEpEChEEQRC+Fgz9k7KIiAw7JUoMMoiGk+2zFy8Xi8XJ8dE7pw/azXqxWPQs8j1aLiNlu4lDGZmG7RW9IHMoItpsUr/ohgaNImoG5JFJRJZLtVbNzmrlMlkWhYqWKRVtslyyyCGixTZama7hkGVSSmQZBm5DESmDUjKzhAybiCgmSg0KYxrOVsPJKigUM7ih2CZiaBVRMSj7QSmOY88vGm6QEE3XmWWbBY8SoiSlZJ6atpkGZFlUNhzXcoio+vB7WUQLlXQOK0TxKrMSx3AMx3NTRWlsWOQpJzANIpVkhm0RkWmYyiDLNFLDJstxi+7/8D/+L27BD+MkSbPVZuf/yx8W85lnpr/43/73v/zJj985Pflf/+df7FJzttqswvTd9z5YL+eXV70nT59nSWSZVHQsv+D923/zV4etGgsie3dcFSlEEARB+OoxPrfD/sxpARoIy6Z5SE/PLobjSatR/853vnN6UnMMsk1KUnIMqpRcZdI8oyjebcJdu31y0d28mF1dnX2amU7mBKp8eHrv4Cf3C55NL7u73/zh00rR+dEPPqQS/e73L86Hq0arWfedcDEanD+bLTdUPa42Wn/x3r1Hhz4Z9lVv8KuPzi97Qydde5ax3uwqnZNC68F3PnjnvSbZDhleSZlLp+AppShN4TGRZmQYZNvmarO1LMtwvGWYXl6NHj99XgzKp48+eHbZm88m2WJk2q7duN/qHHxwz216dDUMf/fRJ9Nd+sGjB9bD2n/8D//xcXdUbx389Ec/OagWLKL/958/GvUvD5q1Rw/ulyp2Esem5SiDyDC3Ie2SJDGdXUL/9X/7X/3mn561OkdhnPzmn39XabS/+/0fnj973KmVoswIU+qPZ//Nf/ffh4r+5aOz1DD/8q/+E8MgQ5FF5Nq0Xa1//X//6unzs06r9u0xyYgUIgiCIHwtXAsiVUSQQhKi0Sy+7I8yMlutVrVaNQ1KE3JdKphkKYrC0Cx6RZPKvl8qFnbb9afP1uZ6GIVJmMTzaLubZIvV8rT86LhVjDLjsj+au8ajR48qJXs4W/Qmi8kmKjnKTjZJlMaGs9lEq3g0unyR/dWPvnva8Su1cm1z5ATHdf+wXb+4vBotw8cvL9fbXeEv3jtsOWQ5TrGUkWEYBuWZxAyDUkVhnCnDUoZlOAXDK26TdXeyoukmcsrPL3pZGrlxkqpktuhWZ1vXeqf00LHL3uPuaJ057/2gYViGU+4oL+nP0998evXTf31/M6d//uRsOe65TlEZDhmW7RgqoywzwjR7eX716fPzMMlm67BZr+6idL7YTJbLlMxNlA5GY6fgl+vNeq1kWvTed7570RsP54uPnjwr+MGnz8+icGeSCteLRrX0X/xnP/vhX/zo+Kj9ulyln8Unf+194hVEChEEQRC+AUzO/5ERLbe7JE7L1Vq9XnccwzHJdikJM98zSSWuqdKULIscMyMVL+Zbp1z83nvvvffOSZzRb5/2f3s2msyWv/v9R7V/8+PMsAtFP83iXRRnpl3wK8rY7MIocNz7p+88PGqGKf3Ti/HTZ88d21mtt9swNRz3vQ8eKosCi4yM/qJT/penk9+fT6bLVZwqIiLTDuPUJiLTJsuiDElHyDIojCLb9aIo2oWRYVKxXLM9fzpfdHuDn/zrf1X2zCKFvdH0n571Z9PRoOfMO+/EMRVdx3FK88lUHTd+/IP32/ff+5/+5v9YbF5uIivZznfkfP9HP/1X33u/UnLjOHYcK01jy7Edy/B8v9FqKtOr1hvzxSJK0lK97tfq591+pVpr1quj3uUnT57/1V/+MCP6z3/+0//z3/9e2W5QrnznBz+oVopJQmWfnnz0/Ozp42JQ8qqlKEp8x8409+H9IlKIIAiC8I2CffdutyNDVavVkk8IQHFMRSojlVqOlUahbXlGvHMNlarswWH7nQcnNZ8iou++f/BssI42C9t2l6uo4Lu267lWQZFhGhSnSZKmyjDff//9+51yIyBl0g/L916eX0RxOJotJ7NF56BedmhH5BFFMT17Pv70yfNyuRrHYZqqXUbT+aLoB5SGtuctl7NyqaCIwogch4gMy3Rs14ySLMnIdu04zTLDfnT64EHdbvsUmMWjgF6+fGHaW3c3ttatwC8621EWrktZ3UtqRdu8VzZ+/N33fvPp4Pn/196dNcmVXPcB/+d2t9qX3tHoxg4MMKRmSIozEmlJ9oMdtvSd9GUcVvjJ4Qg7JDski5SHQ3EbcjAbBmuj0Rt6qa7trpl5/HCru6sBDEWIAzQ8zF8gCre2vFm3OiJP5XLyyXbdZ5Vqa3F5VXieEJBCAVYKr1zMvLTY2njagwjOr3YfP5br6+vr6+tBGDHG+sNxkWcmz/wwCD0kBX72i0/AxOXLV1Yv4YN//ujKlWtZlny2uzM/0/lPf/XvwwABA4e0pxbl2hd/Sa+Li0Icx3Gc18By8HKyiLXoNGqdbnt7c2Nzc7NVv9KqMgBKCZBGUUApz1c5wGxu82R+dmZ5cbYegQMSUByK2WrgZ0UulMc0ev2hzy0ACei88H3f87xmvRYFZToxVHxEUWSTgnFRb7Y0sHOIe492BjuPD3e3Wu3Ofm80sl4URUoJwRD63uhwJDjnEpWgCRQWUB4YMB6Px2kihJBSyqMmNAzD2W475IgkBBWtiqr5LBnmkTDNimeo8ASkEpEvuc4MUaiit69fvrsdG+5l48H7f/LdapVXQwxHebPqMeLWGsZFebmUUsS5Eujt7wLwfd8YMx6P0zT1RAAibbQGAoW3376VFhYSw4FmjN2+fTsMfTLFMPK3trxKoBZnq9Eb1uy/YdVxHMdxvimOcqKXmcsn2VEJ8BgiD5EnTJGlaep5TIlJrlVosDLFJ+NcclPkgkyRjCJfBWIybcHjyNNRlo6VaCgFxaCUUtyWQYFSKouHgd+KQoQKqjy3gc5iDqS5JuDnv/zi3tPxKC3mG8G1a9dmZ2fPjbOP728yxhiZPJOV0F/fehpGlXEBG4ITj1PtBRJAkiSSQ3AIRhwgQ2Q0IDhHFKHcGYYAxmVuzCjJ4yxnQkk/KkSQaTJQSkoDGAIzur8/WOg21h8+uPnDy2mOetUrCvIksyBxNMOXM2MsihztZiOKoqheN5bm5+fPn1tkVg8Osk67s7XZ33u6u7P79GAw5n54/uK16zeuVqJISgz7cZHGuzs793u76/UokPyH771zJn8PL+SiEMdxHOfrR6cyck72kRFMAvAZQg+NSuBJMez3d3cPg6VmKKABqSSXdcBmOTEJLwiDIIjjWDCChTVGKOFLCDISVBTZcJgl8D3JFaMkHme6QUXKQT6zzMBqACQl8wAJk+Z5mhcGWFtb6+X+3MLildX5TrMSBSIa0y8+vUdG6yxhxm83ahw2t2xnLz4XRVUpvGCSZv7w8FAIoQQXnIEgSEsOWKOLXHA/K2C1sdIj7lsV5txLSdnc5qQGiTkYFjmTHsPGAf7xg58nw/HybCfu93pp/1cfifffuQDAWgtW7pwDa8E4oItCp9k4r0aB1hrWVKLKbLcdhcHocJ9M4fuqWglnrl2+fuPyw8fbj7d2rS6KNBvkBec8ice+QBj69eriyvy8kkeTbc/ir+J5LgpxHMdxXgk6dWQAgEgwQeA1hcsXVnq93vr6xgc/+fD6tatXr14SDO0IhebD/iC3aM02hfIzbepR5HlCMORFLlXILTxO5AlYLaUUBGOMoZyDPAEB04g8yQhFhlxIZQT8UCL0pOfVvSDKcjscJ2G9eeHChdXzihN0BsHI5omSohLIWohuPQx9b6DNvbWNJlUuLc3mJJM8P9jd3djY0LbebDc7jaovYPKEdO4pT0qpAS4hZWAYMh6mCBA2vVagNQq/lhjOa7PMx26CLx7vrm3uXbm4cvXiyv7O1sN7d+592rs43z23UPN9QVMxHAAOI8gw6Cfrj3ee7npRrTs73+v1Rv3ewdMtyexwf2t5af78ueV6o+JJLhiRKcYjzTkXDGQKLbjO0qjqdzsV9ew6mDNetOuiEMdxHOeVKNtROt7JdvKAlMy3wOJM8Eff/paU8vGTzY8//eLR+qYXhKGSFPeMLtqd7tu1dw9HyeFwXAn8JMkp8ILAA5BnNo/j/nCwUGl5kguNNB4bm3NYxcBtkY763BbM5o2wxmFAOh2YYW+PB1XZaQGo1+ubo9GDB/ciMxcp1mq1QNb3FLcFFZnHq7Od2q23rn+8tr+1u/fh9p27FUlepSgKncbxOK9155YW5hfmm4phNOjn8TCIKiaLs6xW9yEBAuJkNBoOx2M/GUMopGmqtceEHKX45Df31nYG7Wbj5qXVuXZ0cf5yb/OhLdJ//Ie//4s//8HyUvf4AnIOAiRn3Fe10H//vVuffLo2jLPlpYULK+eEwKN7inT+nbdvBApSIs2RJuNGvXb52ooMAAMpYC1GA3pw906WpkUB338mlcsZc1GI4ziO8/Wz07vZlf9PdrMDLIMVQonl+SiqfHdhaWdjY2Nr90Bo0bMJz+Ja5KdWDFNwv7K8ciEQlBWGCOACgJS802mpQAWhjONY80p3pqNMVmRpmiIK/ZlOS3AWeZIzC6thCp/zbqveSykIgiDg77333i/vPH78ZDPZXvN48e677zIZNGpVnY51OibTaYR4561uEXV3d3b0k/ig3xO+YUIFUl65siJnLi3MR/UQjFCLvPNL84wLSUXEEVowFJKrxbrP5hvdiCEeGCbaIQ98jyf9/lYS721U4C/Nd2er/lwTh4f2L37w/s9++tOoEmw8Xl+c7woBxjgAXl5DMpLzwBOK49ziwv7hQDAUWUZSgmzgSSKylgkg9EBaP3m8cdA7PByNlfB8X1WjQAq+v7M12256b16bz4helL/EcRzHcX4PBiizpHsAgwYVoDIyEYAwJEgIDaQWFtAa/YFODTfG+KyIAs8Y0+76OwN4HpJ+Ptf06h4UUGjDlHi0bzxPsGwYVWo2xGEMYWDSdHkmGI11TmJ/7+mlpdmAa6RD7imjalv9LCMvS5OKsHMz1b7F9nYSIFWMAk+1OrXdEYa9g3PtqOLLYQ4RyRFQAOywyAb7KqhorfNk1Fk4l3rMl2hYeEBC2O8nSZrXo2Cu6fNCMx0jiDYOdc64oqxeq3iS7w2KxCoyeqEmh71D7tcIvOqzKASA8VgzS093t8MwrNWq1WpABMZgACL88le/FkJevnrdC6TgsMAgxi9+9Rud56Di+pUrF8/P6Nz4ngDw+d21pwcHi8urBkyApWkKMpyz/v5Bq1G9fmUly3TkS7wx80JcFOI4juN8/Z7tCJnKS0GGE+PHbQ8RiGAImQE4OCAYOAcxMA4AZCEYZLkdDWAZNIEIkoEAwyaDPgzgNHkNyiU5ZBk0AAvPMBgDxqAYGIMGrAVZC6M9zwNg2PFbrIU0DJbBErghGE1EjDHOOXHBBAhQBAayxI56eCZJOBgswDWDZUf1oZN5HorKD8QAKIGTFtiCjibSCMHKozIKsTS5RJ6cLDeyFsbAGGOthTXVagCanMGCiFh5LmZfHGlIeTIgc+axiItCHMdxnFfBHt1yAITnWj565sU8yzMwwU4BAGsJAGMnLSYRgb1cui1GAJnpcu2Rk7wfp3Eh6Og1ZQVKnPPjprM8ICICBxP2qJJ8qm3l7CvaWTb1KjLHpQkhAFhiOApEyjhLUnnpjk9tAKDcu/coCiGyAAgGxAVjIAbAMkx/C1ycJC1zUYjjOI7zjXQqCpmeEEmTH/cEgJGdhAWM/auaxDNO/TmFP9+a/j5t/FQvCVAmXH9hc83s1KtwOribmodK/OwjjhdxUYjjOI7zitgXRiHHjocRGOPgKLscXlDKUVfE1BuPB3xeDmOMQxCzjLiFgWUW5viR6VswK6QETRy/nTF2XM9nGlACp9Mfk+HZmr/Qs+WUd5k4fu+kBKKpQKTc2sYSEWPTHTPHr2CMnfR5TFdMTPWFnLk3b76s4ziO881x3Pid7NqaZZnWOs91nudFURhjrAHBCHE0VnN6vKP0+0chRAyclXEGh7Awz0Qep6IQ2OdHUo6Hcl5Yq3IM5XdXxihlfHCqnKPyT41LAYw4ACIzNQxkAHBeXuRnIx5LL442Lly48FL1fKVcX4jjOI7zijwfJZzqKrAG1h6/iDzF8FzHwLHfOwrh01HCcWGM4SubQbIMlk2/9Oj009WaqtWLo5Cv+kRllPNVUchUL8jRx7QMJ7Nvy7M/cwXKvKuT/idLk6vNTs/B+Rf7Zl4nF4U4juM4r8RR6zLZROaYMcQYA+OTyadHjzM61V4eN5bW2umBieOeAPZVsz5fjNPpVSPHhy8shVOZaQ3TvRHH9Zmu4cmz5QzT58ae6KtmZNBkFQ5jjKaLKQdkQCj7S8hOYh0SNDnjqWKm6kMAL28xyVYLTIV+R+876Zd6ZhbJ6+dGZBzHcZzXSnBRtrFlY2jsZC2rX06EOEq3enLLONjJI8ftNWP86Hf/v3x7PGPiBeW/8JaV+/A915MAEPhRDcq7R4dMAPaZSbZlaS/stGEEMPFcjweOT8wmBR9Vir9oddEL6sMwlTUO00HHyb3jq3nG3pwsro7jOM43jT11aMvehSxNjx/Ncvznv/lvD9d3uUCSWQvESVG2oP/jb//u57/4ddmREmd5GbUkqbaANpMf/gRuCdoSAdqSseUUURD4YDhOspyAOM0IIEJWkAUKg1FaEPDf/+ffPVzbskCukRSWAA0UBh/88y8+/OePjhOTxJkuJ9mao9m2xEEMcVbkBhYYp4U96ngoeyVo6l/5rLaTu0lmkswQUBgwzonov/zNf916ur9/OJx+V5kQZcIYmLKXBXGmywItoOkoDQtHYVHYyd1MU3lGC+SEB2tbT/cOAWg9FX/ATo/mnOFCIxeFOI7jOF+/qf3YTjc0ZP3QA1AURIDw4PkBuLCA9DkBkDLNbVIQF57lvD9MCgIXXpmJFVJqCxIoLEZJnuTGWjAuADAu8lxbYDRKLVCrVTw/AGAhARCbhAJcIAzUOMXefi/JilGihYSnuAX29gdM4MrV6+fOr45Tm2mAQ/kyM4jzSSCSGVjgYJB6gYKAAbxA7exPYghLrPzgRUFpYS0QBCpOrbYoLAygfKF8YQBtMU4Lxvm33nm31e40mzULZBrjnDShzPQxiUM4hxAA0kIrX3qBMsAo08RggNwiK/OkCmQGuQWX7PhxzvCrX/8GXI6TQmsN4LDXO9riGJNMIuXRV4xMvWpuRMZxHMd5XRjhaAqnMYYrCcCC9vsDWmd5Mlqcn6lUAiUYAGJCKN8LQgsIibTAaDS21lYqlTDg4AhDD4A1WH+8GfrB7FybS0mA9PwyFMg1PIkgUP1hOooTL6rsHY5bjVYYQPmIqrVqvaEtrW/2omrYqgfdTh1AvVllBMmRZACH5Mg10jRlIgCgBDShXg8I2Ng6yPO8Xq9H1ZoFGJDkhRDC84RQDMSSAuDwAl52fnDC4bA4PDzsdDrNCpdKGWBmds4QOJAU0AVVI8YADeRJYY2OPOEpDpAx1pJIUxMFItcYjmJLFSmFJ5FkZZSCwSiP49j3/WYjVBIWOIwxGI4Ho3EUeEHoAWi2WmWP1BvCRSGO4zjOq3IyZ2IyP+Mk99bR+lKM4nRrZ7fX7/f2tu8/CObn59/9o2sARkleSXIIgOHO/c07d+7s7OwIITqdzuXLl9+6dt4At2/fPTw83N7eVkrV6/Usy27evLlyfrawKAowNsmq/uWDtadPnx70B1mWzc3Nvf/++7UKzzP969/8ZjweZ1mmlJqfn3/vve8A+OCDn9VqtevXrxvgH//vh1rrJEnyPA+CoNvt/vBP3skMdnYOPv744+FwCIAxduPGjZvXL0mGR2uP4zi+cfPtwGe5xr0Hj3b3Dr773XcP+sNf/fLXrU47jtNHjx/XarWbN67dvLqcjLNffvSb86sXWu3u2pMnB73+D37wHY9jZ2ewvfG4GvkXzi15XgCyWhcq8P73339QrnNOksT3/Xa78xf/5nuej639eO3R+vb2dpqmWutms/3OO+80OsEHH/4s0/qDDz74zrdvXbt0ocxK73lq8t2cnh18JlwU4jiO47wWUyEJAHBejnHk2oBxP4y+98fvPVlfu//oUVSrXbq0WKnXpe+nBQaD0a9v315ZWXn3e9/zff/+/fu/+OijhXPnmhX+6PF6u93+7h9/Xyl17969tXv33/72HxnAEHwfAJIcd+8+eLq3X2+1//j9P916unPv3r3P7ty5evWqAeqt1o1bt4IgWFtbe/jw4SjR1arURExKP2Jrj/c3t3beeuutCxcuENHa2tqjR48GMWoRPvjJT8+fP3/r7W83m83Nzc2f/OQns7Ozi7O1cZI93d2/WGjfV1JhHKe7BwfcQ25pe29/Zmnp1tUbq5evrD/Z+PLeg29dXw4i/3AY32i0Ko1g1iyvbe5+9uXm6vnFje3tQX9Qqc4J6QEcpvB8f1hga3tnZWXlxo0bnuc9efLk88/vPFw/WF1ub2w+HQyT8yuXVlfP5bn9/PMvPr1z989++PbqxUuCUSB5s93lSnkck9k5jED2TZiV4aIQx3Ec5zWY+slNAAMRGJBrKD+cn19cWl7o1jG3+K2f/1Q8PejNzi36larnVwrC5tauF1UuXrrGJKtFuHj12v0Hj3f3Dna2TV7o1QuX2+1q4EF5N59sbA+GoznbOl4RYyzuP3i4sLB09cZVofiFCwtKqSAIGlVRbr9SqVQ6TT+Kbnz55Zd7e3uczzLGiGg0RqXW8Cv1ZndOBh6AZneO1jczAx+4fuvbly4tRR4A+JV6pdEejmI2W/PDSHq+VKocEgoqlU53ttc3you8IAzCaq3OW806k/7du3d3D7NW3d/r9Q77Q79amen6i0vnHj5ai+NYF9nc/NLyuSUvkEVRSBBjQioIPwiqNUgV1eTi+dV7j9YL4rFBf5RUGo1md7ZSRQW82mzdvXt354AuX+j87Kcf/rs//0GtVonjxKuGZDVj/GzmgLyIi0Icx3Gc14LR840f51BKVWrVZh3DFNUAflg5HPRGcXbYH+oCi+eX7j9cW14516izAmBAvcKa7e7DtfVmteaHldn5apZBA91u1Gh1DDHGQYRUQ0oEAYbj5NbMXBRyyUHA/ELXGIxSGIu5+cV2049zVEIoLwATXHAwYYmBY5ykBNbpNqshABTNRpYX/cEoCKvNVvv2J/d3d3fjONZaNxoNDTFMkWZFkuZpmmdahhGPkyxOcy6FJARhVG+24xy1AEHkh5WaVD7nCMIKMREGsMC3bi33+sNHa4/PLy/OL56LIkEAF6ocx8oJ2lKz3ak3FAfqFRTaDoajJdbc2d1jjN2992g8Hnc6nTiOjTH7vd5suz0ejwFUKyoZGwCMv0EhCFwU4jiO47wK7Jnu/uPsFMSILBjnEgQIDiJkWTZKa40ADBiPh7DUavmB5wO2EWFmpiMY3z0o6nUFicMBMUZzc/Ocy4Mv743GqFUA4HCErZ3tq9evxQkqIcRR+zYcDn0l8hwygAECCZIYjiAEC/3gcKirkQQwHo60zkMfjBEZG3iIokhrXRSwgCFkWUFE7XZVSvz4xz+em5trt9s3b94E8KMf/ejqlcu+D9/3pZRe6PkeGMA5T5KkWsXaWu/g4KDTkp4EgDwtGJmiKCwUEZU7vhwMEUXo7e9maeIrz/NE2aEiOAA5zrTypTGFMSYvIBXGObTWrVYTwGg0WF1dvXjx8ng89jwvSZIgCCqV0ALddnNzfX11ockYo0kuEjudKuS5nGav1dmPCTmO4zjfSOX9j1f6AAAKd0lEQVRcSHYyEQFlS0fgFigXmgIotB6Ox74/CVx6+7udVkPngNXddjNO0KhV7n35RauhQgkCQp8dHuxJKTuzs4M0G+U2BwrgyfbTIKqCc6FO1p1qjbdvXr9394vAAwck8OmnD3/0Tz8PfRhd6DxVUvgCDCBT6CJXDMNBn0yhBALJdDKUVHhAyCCpKOKBz/HgzpOqL77zrbf+9HtX59o1nQwDQR4nyZAWxThN07TggLYYDfuNWmXYy2da9aovithIQAIeM5THDFYCushMHktgpoZ/+oefzLXr//aH7208fvDlF3cAEFAABcA9yQCutc+YB0ggkijioSQtLFYWZyPFZlv+pfPtxZnq+YWZUW+nHkofiAeH7VYDQBT5uYElDibBJNhk95mTr+ksuL4Qx3Ec55U5XhR6vMcK45xxAzDAlCtnyGxsbFidR4r5nhQcszMdKZCl8WjYV/Lc5UsXPvv09o9/9OGtW7cYY7dv386zZGFuJqrirVu3/v7//GhleSkMw3t3v0yydDweM9Y67Oej0ajbatUi1m417t+///OffbS4uNgfjDY2NjqdDhEEWJal9ZBlBTyFer3GLFkg8gPOWZYgGQ7CwNNFBigCyOow8Ab9oeCIQr93sHfYY4PBoN/ve0pIwUYJlFIA7t69W6vVrLUHBwfWWilYmsYMNolHtWpDcZBOpUCg1GBkBFCvVOKYPv/882TY//533vF9f67bHQz6O7ujWq26vb0jhFhZ7sYpojC0pjAaTIEsotAfDfuLC81aNXryZJ2sXl1dLYpibW1ta2vz5rXLHKjXKr1eb2MzWlroSoGTHLLEwezRF0Qo09O+9r4J8dd//dev+ZSO4zjOHwYGBjB26h9gjAXnhsAYGHA4SKvVCgPGgwPSeqbTubCy5HtI47waRd12o+KzC6tXDvb2Pv/ss4319U67/d73v698pSQ63XYU1p6sP87z7Ntv3zrY319ZXqrXong4Hvb7YeBFoarXGmmSFHn2eP3J3u7TZrNx4/q1ekUNBmMheLXWVIoDMNq2W80orFhr6/VavVmzhmDt3Oxs4EvOQJaTtZ12e3W5u/Fk55OPP97b3Z3pdJYWF0G0tbFx8/pKo95M4uTpzs7+3l7g+51Wa2lxsdtpkSWr9eL8vK+k5MgywwitZrNe9wBeq1ayNEnTZHZ25ty5uchn9UYry1JrTa1aHQ768Xg0O9sGQ5YWnXY7CkNfQXJkqanXajOt6vLirBTBowcP1h8/3lhfr1Wrf/kf/jxJtFT88HCgtR4NB512R0ppbTnEU6acp6lcZeW387qHZdxudo7jOM6rNt3bzwttueTawhC4wNNe6geBMRQPDgVHq9XyfRCBMRQFrIXvgwNP94bltm2c85lubTi2iWFf3rt/+eKFKBIcODwc/6+//bu//Kv/2GkGeUbxaFyphNVQABjHubV2OE6MMc1m0/Ok1tZaK6X0PQAgIE2ttdbzpDFkjAkjyYD+MPd9T0oIDksYj4swVEpMPkmaYzgcEVGnUxMM48RWQm6B3d2BMaZerxORtTaKPCJkma5VZFbAVxgnFoDOi2bDzwsMBkMpZaUSKon+IK1WA8GRpLbf73e7La1pNBq1OzUGDMeaMSalCDwAGMVGCDEajWY6VQBJBimxv98fDoeLi4uVkAOIU4pHw2G/d/nSShli8OlEIaf6Qvjr7wtxUYjjOI7zSkz9yj7FEhiDBbKCpGK5gRQAwAFjITiMRVFQ4DMAhYaUKAqUqbYAGIs8t0HAtw+S2598lmXZuXOLDPjkk9sXzq9cu3q524qOS5PPpI8/uh0M4kY9KivDGQoNJcuSdRhISwDAGco9a4ggxGQvOQLK7oQ4MZxzz2Pl48NRboxpNsJnTkdHO8KUPRBpRoHPshy+B35UuJqaHJFmhnPuKVbWrawGgCy3vsctYKncVQacT8o8vixaowyqyut2XCwHxnFeiTx2EoLgdBRSfk8uCnEcx3G+EY73kXl+CYY2JAQrG9TjbWktQTLkhfUVJ8BoGLKScy5AFoyDAXsHfVOY2bl2ucmsAR6t7w0Ggy+++CIMvIWFhbdvvkVElWCy+SwZIiIhGQczFkVR5EbXovB4p90iM+N03KrXkzyPfE8TirTwQ8Vosp+cEM/utZsVlhFTHrMGTIAfPV4YKDE57g/jahSleV4JveNnOUAMHGAcZFFmjk3SLFB+WU5a6EDJsm6jJK2GgQWshoHxpSgstDaeJ8qakIUhKAFD0LllgnmSEZAmWnpSCRQGALIsr0QegCy3UnDSheepo615T0chDCD5+tfJuCjEcRzH+frR0QZpJ7lSjw6MISKSkgPQNPmtb4/aInHUWo+PWmhY5OakhbaAzq3wOIDNnd78XCvLEXoA8GRjZ3lpjgCdFUIIJTkRMUYgbqwRQhBgtCVmlZBZkfvKO4otJsfWEBcMBAKMsVzy8ozHt7qMloz1BC8fMQAMmIDVgIBkMIAAcmNhYJkta24KYpJJNinn+CIwwILiUVKpRlOxTq6ExziMthbGk6rsgyEOMVUfRrAM4qhWFpPnOJDkxvcEpr6C58LB6Txy9qyiELdS13Ecx3kdjhs9IU7aOltoAQiAW2MLLRmMsaYwACqBLwTSOOUcgZJpmpctFhnyPM4Jvd5gaa6Vp4UnQAStTafR4IAAPCWU5IA1OtdFAWY5oyxJGSAlL7eyScaxtbbIcwAcjIgYIARjgDGagZTkZKiselEYMqS1lQwATF7gqAVlFmmacIDIwFgAySgGwAmexwMls6zggFKsfG8yTsqLoCRn5a5+YL6vGKC1JmuzLPOVxzni8dha7UkFQBeF4DC5znNttcUklLECIEJZMiw4BwesRegJMgBQFDbLi/JBAFmefcX3w88kYYjrC3Ecx3G+foSvTEAxabxPHrCnn3mJUzzjBWXS0fG/ZhnqK/6hTgB7qSwdL1GfZy4Oe+a5F5/3DDomXL4Qx3Ec5+vHTnbR/e2mZie8ZKDw1T/d7QuO6be94Wy8XAjykmUD+KoP/SrP+7JcFOI4juO8EtNJ3J+JC76mH92/Q2vK/qAnHjBYlNnJ3lR/0F+P4ziO8yqVqcGB5xob+6LxFOfrVvYwvbkhCFxfiOM4jvNqHGcHB2Mg8N9tgOYllat4f5vpZ9/o9viVoNMf+c3rGXrjKuQ4juN8U9BRXg/7wikZZVKuyZ3XkDKL3rAm71XXh/4/iLpcX4jjOI7z6liAH+2fNnmITp541u8+TPNbZ5o+W/Dk/C+/TOaVDhu90vpMXeypSzWZBfz8Sc8sPnvDAkPHcRznG+W4q8OyqTW67JnX/KtHCl7lEMObNnPl5etzlK69DHcmt29Wu+/yhTiO4zivyKlN7Mr/ppucN23l7DfNdF6QcqUMnU1qst/CRSGO4ziO45yNN6tnxnEcx3GcPxwuCnEcx3Ec52y4KMRxHMdxnLPhohDHcRzHcc6Gi0Icx3EcxzkbLgpxHMdxHOdsuCjEcRzHcZyz4aIQx3Ecx3HOhotCHMdxHMc5Gy4KcRzHcRznbLgoxHEcx3Gcs+GiEMdxHMdxzoaLQhzHcRzHORsuCnEcx3Ec52z8PyrYuK8qTAASAAAAAElFTkSuQmCC</encoded_png><encoded_png char_offset="6318"></encoded_png></node><node name="tty" prog_lang="custom-colors" readonly="False" tags="" unique_id="66"><rich_text>
</rich_text><node name="Linux下tty/pty/pts/ptmx详解 " prog_lang="custom-colors" readonly="False" tags="" unique_id="67"><rich_text scale="h2" weight="heavy">基本概念：</rich_text><rich_text>
</rich_text><rich_text scale="h3" weight="heavy">1&gt; tty(终端设备的统称):</rich_text><rich_text>
tty一词源于Teletypes，或者teletypewriters，原来指的是电传打字机，是通过串行线用打印机键盘通过阅读和发送信息的东西，后来这东西被键盘与显示器取代，所以现在叫终端比较合适。
终端是一种字符型设备，它有多种类型，通常使用tty来简称各种类型的终端设备。

</rich_text><rich_text scale="h3" weight="heavy">2&gt; pty（虚拟终端):</rich_text><rich_text>
但是如果我们远程telnet到主机或使用xterm时不也需要一个终端交互么？是的，这就是虚拟终端pty(pseudo-tty)

</rich_text><rich_text scale="h3" weight="heavy">3&gt; pts/ptmx(pts/ptmx结合使用，进而实现pty):</rich_text><rich_text>
pts(pseudo-terminal slave)是pty的实现方法，与ptmx(pseudo-terminal master)配合使用实现pty。

</rich_text><rich_text scale="h2" weight="heavy">Linux终端</rich_text><rich_text scale="h2">：</rich_text><rich_text>
在Linux系统的设备特殊文件目录/dev/下，终端特殊设备文件一般有以下几种：
</rich_text><rich_text scale="h3" weight="heavy">1、串行端口终端(/dev/ttySn)</rich_text><rich_text>
串行端口终端(Serial Port Terminal)是使用计算机串行端口连接的终端设备。计算机把每个串行端口都看作是一个字符设备。有段时间这些串行端口设备通常被称为终端设备，因为那时它的最大用途就是用来连接终端。这些串行端口所对应的设备名称是/dev/tts/0(或/dev/ttyS0), /dev/tts/1(或/dev/ttyS1)等，设备号分别是(4,0), (4,1)等，分别对应于DOS系统下的COM1、COM2等。若要向一个端口发送数据，可以在命令行上把标准输出重定向到这些特殊文件名上即可。例如，在命令行提示符下键入：echo test &gt; /dev/ttyS1会把单词”test”发送到连接在ttyS1(COM2)端口的设备上。可接串口来实验。
</rich_text><rich_text scale="h3" weight="heavy">2、伪终端(/dev/pty/)</rich_text><rich_text>
伪终端(Pseudo Terminal)是成对的逻辑终端设备(即master和slave设备, 对master的操作会反映到slave上)。
例如/dev/ptyp3和/dev/ttyp3(或者在设备文件系统中分别是/dev/pty/m3和 /dev/pty/s3)。它们与实际物理设备并不直接相关。如果一个程序把ptyp3(master设备)看作是一个串行端口设备，则它对该端口的读/ 写操作会反映在该逻辑终端设备对应的另一个ttyp3(slave设备)上面。而ttyp3则是另一个程序用于读写操作的逻辑设备。
这样，两个程序就可以通过这种逻辑设备进行互相交流，而其中一个使用ttyp3的程序则认为自己正在与一个串行端口进行通信。这很象是逻辑设备对之间的管道操作。对于ttyp3(s3)，任何设计成使用一个串行端口设备的程序都可以使用该逻辑设备。但对于使用ptyp3的程序，则需要专门设计来使用 ptyp3(m3)逻辑设备。
例如，如果某人在网上使用telnet程序连接到你的计算机上，则telnet程序就可能会开始连接到设备 ptyp2(m2)上(一个伪终端端口上)。此时一个getty程序就应该运行在对应的ttyp2(s2)端口上。当telnet从远端获取了一个字符时，该字符就会通过m2、s2传递给 getty程序，而getty程序就会通过s2、m2和telnet程序往网络上返回”login:”字符串信息。这样，登录程序与telnet程序就通过“伪终端”进行通信。通过使用适当的软件，就可以把两个甚至多个伪终端设备连接到同一个物理串行端口上。
在使用设备文件系统 (device filesystem)之前，为了得到大量的伪终端设备特殊文件，使用了比较复杂的文件名命名方式。因为只存在16个ttyp(ttyp0—ttypf) 的设备文件，为了得到更多的逻辑设备对，就使用了象q、r、s等字符来代替p。例如，ttys8和ptys8就是一个伪终端设备对。不过这种命名方式目前仍然在RedHat等Linux系统中使用着。
但Linux系统上的Unix98并不使用上述方法，而使用了”pty master”方式，例如/dev/ptm3。它的对应端则会被自动地创建成/dev/pts/3。这样就可以在需要时提供一个pty伪终端。目录 /dev/pts是一个类型为devpts的文件系统，并且可以在被加载文件系统列表中看到。虽然“文件”/dev/pts/3看上去是设备文件系统中的一项，但其实它完全是一种不同的文件系统。
即: TELNET ---&gt; TTYP3(S3: slave) ---&gt; PTYP3(M3: master) ---&gt; GETTY
=========================================================================
</rich_text><rich_text foreground="#ffff00000000" weight="heavy">实验：</rich_text><rich_text foreground="#ffff00000000">
1、在X下打开一个或N个终端窗口
2、#ls /dev/pt*
3、关闭这个X下的终端窗口，再次运行；比较两次输出信息就明白了。
在RHEL4环境下: 输出为/dev/ptmx /dev/pts/1存在一(master)对多(slave)的情况</rich_text><rich_text>
=========================================================================

现在master设备命名为/dev/ptmx，而slave设备则对应/dev/pts/目录下的文件名。

在ubuntu12.04中的输入下面的命令：
#tty
/dev/pts/11
表示shell终端打开的ttyp11
#ps -ax
可以查看进程所打开的tty*

</rich_text><rich_text scale="h3" weight="heavy">3、控制终端(/dev/tty)</rich_text><rich_text>
如果当前进程有控制终端(Controlling Terminal)的话，那么/dev/tty就是当前进程的控制终端的设备特殊文件。可以使用命令”ps –ax”来查看进程与哪个控制终端相连。对于你登录的shell，/dev/tty就是你使用的终端，设备号是(5,0)。使用命令”tty”可以查看它具体对应哪个实际终端设备。/dev/tty有些类似于到实际所使用终端设备的一个联接。

</rich_text><rich_text scale="h3" weight="heavy">4、控制台终端(/dev/ttyn, /dev/console)</rich_text><rich_text>
在Linux 系统中，计算机显示器通常被称为控制台终端 (Console)。它仿真了类型为Linux的一种终端(TERM=Linux)，并且有一些设备特殊文件与之相关联：tty0、tty1、tty2 等。当你在控制台上登录时，使用的是tty1。使用Alt+[F1—F6]组合键时，我们就可以切换到tty2、tty3等上面去。tty1–tty6等称为虚拟终端，而tty0则是当前所使用虚拟终端的一个别名，系统所产生的信息会发送到该终端上。因此不管当前正在使用哪个虚拟终端，系统信息都会发送到控制台终端上。你可以登录到不同的虚拟终端上去，因而可以让系统同时有几个不同的会话期存在。只有系统或超级用户root可以向 /dev/tty0进行写操作 即下例：
</rich_text><rich_text foreground="#ffff00000000">1、# tty(查看当前TTY)
/dev/tty1
2、#echo &quot;test tty0&quot; &gt; /dev/tty0
test tty0</rich_text><rich_text>

/dev/tty0代表当前使用的终端，而/dev/console一般指向这个终端。例如初始化时登录系统用的是/dev/tty2，那么/dev/tty0指向/dev/tty2，如果切换到/dev/tty1，则/dev/tty0就指向/dev/tty1了。

</rich_text><rich_text scale="h3" weight="heavy">5 虚拟终端(/dev/pts/n)</rich_text><rich_text>
在Xwindows模式下的伪终端.

</rich_text><rich_text scale="h3" weight="heavy">6 其它类型</rich_text><rich_text>
Linux系统中还针对很多不同的字符设备存在有很多其它种类的终端设备特殊文件。例如针对ISDN设备的/dev/ttyIn终端设备等。这里不再赘述。

</rich_text><rich_text scale="h2" weight="heavy">FAQ: 终端和控制台</rich_text><rich_text>
RROM：http://blog.footoo.org/?p=73
Posted on Tuesday, November 28th, 2006 by CLIFF
吴晋 （cliffwoo@gmail.com）
FoOTOo OpenSource Lab
由于在很多朋友对终端的概念一直不是很清楚，因此写了这个FAQ，希望能够帮助大家理解这些概念。不妥之处，还请大家来信指出。
Q：/dev/console 是什么？
A：/dev/console即控制台，是与操作系统交互的设备，系统将一些信息直接输出到控制台上。目前只有在单用户模式下，才允许用户登录控制台。

Q:/dev/tty是什么？
A：tty设备包括虚拟控制台，串口以及伪终端设备。
/dev/tty代表当前tty设备，在当前的终端中输入 echo “hello” &gt; /dev/tty ，都会直接显示在当前的终端中。

Q:/dev/ttyS*是什么？
A:/dev/ttyS*是串行终端设备。

Q:/dev/pty*是什么？
A:/dev/pty*即伪终端，所谓伪终端是逻辑上的终端设备，多用于模拟终端程序。例如，我们在X Window下打开的终端，以及我们在Windows使用telnet 或ssh等方式登录Linux主机，此时均在使用pty设备(准确的说应该pty从设备)。
Q：/dev/tty0与/dev/tty1 …/dev/tty63是什么？它们之间有什么区别？
A：/dev/tty0代表当前虚拟控制台，而/dev/tty1等代表第一个虚拟控制台，例如当使用ALT+F2进行切换时，系统的虚拟控制台为/dev/tty2 ，当前的控制台则指向/dev/tty2
Q：如何确定当前所在的终端（或控制台）？
A：使用tty命令可以确定当前的终端或者控制台。
Q：/dev/console是到/dev/tty0的符号链接吗？
A: 目前的大多数文本中都称/dev/console是到/dev/tty0的链接（包括《Linux内核源代码情景分析》），但是这样说是不确切的。根据内核文档，在2.1.71之前，/dev/console根据不同系统的设定可以链接到/dev/tty0或者其他tty＊上，在2.1.71版本之后则完全由内核控制。目前，只有在单用户模式下可以登录/dev/console（可以在单用户模式下输入tty命令进行确认）。
Q：/dev/tty0与/dev/fb*有什么区别？
A: 在Framebuffer设备没有启用的系统中，可以使用/dev/tty0访问显卡。
Q：关于终端和控制台的区别可以参考哪些文本
A: 可以参考内核文档中的 Documents/devices.txt 中关于”TERMINAL DEVICES” 的章节。另外，《Linux内核源代码情景分析》的8.7节 以及《Operating Systems : Design and Implementation》中的3.9节(第3版中为3.8节)都对终端设备的概念和历史做了很好的介绍。另外在《Modern Operating System》中也有对终端设备的介绍，由于与《Operating Systems : Design and Implementation》的作者相同，所以文本内容也大致相同。需要注意的一点是《Operating Systems : Design and Implementation》中将终端设备分为3类，而《Modern Operating System》将终端硬件设备分为2类，差别在于前者将 X Terminal作为一个类别。
PS：

只有2410的2.6才叫ttySAC0，9200等的还是叫ttyS0
</rich_text></node><node name="浅析terminal创建时ptmx和pts关系 " prog_lang="custom-colors" readonly="False" tags="" unique_id="68"><rich_text>我们打开一个terminal,那么将会在devpts文件系统/dev/pts下创建一个对应的pts字符文件,
该pts字符文件节点直接由/dev/ptmx节点的驱动函数ptmx_open()
调用devpts_pty_new(tty-&gt;link)
[tty对应ptmx,tty-&gt;link对应/dev/pts/xxx,那么tty-&gt;link-&gt;link又对应回ptmx
同样ptm_driver-&gt;other等于pts_driver,pts_driver-&gt;other等于ptm_driver]主动创建,
而非通过netlink的udev或者hotplug配合创建[luther.gliethttp]

</rich_text><rich_text scale="h3" weight="heavy">1.首先我们打开3个新的terminal终端</rich_text><rich_text>
使用who am i查询当前终端对应的pts号
luther@gliethttp:~$ who am i
luther   pts/3        2009-07-03 09:05 (:0.0)
luther@gliethttp:~$ who am i
luther   pts/4        2009-07-03 09:08 (:0.0)
luther@gliethttp:~$ who am i
luther   pts/5        2009-07-03 09:08 (:0.0)
他们分别对应pts 3,4和5.

</rich_text><rich_text scale="h3" weight="heavy">2.在pts/4终端中执行如下命令</rich_text><rich_text>
luther@gliethttp:~$ cat /dev/pts/3
llllllllls

</rich_text><rich_text scale="h3" weight="heavy">3.在pts/3终端中输入平常的命令ls</rich_text><rich_text>
你会发现输入的数据并不能被完全显示,而2步骤中运行的cat  /dev/pts/3
命令确出现了不完整命令,这是怎么回事呢,接下来我们讲一讲该现象背后的故事.
luther@gliethttp:~$ l

</rich_text><rich_text scale="h3" weight="heavy">4.讲讲现象背后的故事</rich_text><rich_text>
当ubuntu系统创建一个新的terminal时(比如上面的pts/3)
</rich_text><rich_text weight="heavy">4.1 首先执行ptm = open('/dev/ptmx',...)操作</rich_text><rich_text>

</rich_text><rich_text weight="heavy">4.2 接下来fork(),然后child将打开'/dev/pts/3',dup2到0,1和2句柄上,随后执行execl启动一个shell.</rich_text><rich_text>
pts = open('/dev/pts/3',...);
dup2(pts, 0); // 对应lib库中stdin
dup2(pts, 1); // 对应lib库中stdout
dup2(pts, 2); // 对应lib库中stderr
close(pts);
execl(&quot;/system/bin/sh&quot;, &quot;/system/bin/sh&quot;, NULL);
// 这样sh输入数据将全部来自pts,
// sh的输出数据也都全部输送到pts,也就直接送到了打开ptmx的新terminal中.

</rich_text><rich_text weight="heavy">4.3 新terminal将启动GUI,捕获按键数据,然后写入ptm,这样pts将收到数据,进而sh将从stdin中获得数据,
于是sh将作进一步运算,将结果送给stdout或stderr,进而送给pts,于是ptm获得数据,然后terminal的GUI
将数据显示出来.</rich_text><rich_text>
具体流程图如下：
terminal捕获到key按键值 &lt;--&gt; ptm &lt;--&gt; pts/3 &lt;--&gt; stdin &lt;--&gt; shell读到数据
shell数据结果 &lt;--&gt; stdout &lt;--&gt; pts/3 &lt;--&gt; ptm &lt;--&gt; terminal显示

</rich_text><rich_text weight="heavy">4.4 好了,正常的启动流程图已经有了,来看看,我们试验时数据出现显示异常的现象背后到底是怎么发生的.</rich_text><rich_text>
与上面正常流程不同的时,我们在另外一个地方执行了cat.

这种情况下的流程图为[luther.gliethttp]：
terminal &lt;--&gt; ptm &lt;--&gt; pts/3 &lt;------&gt; shell
|
&lt;------&gt; 运行在pts/4上的 cat /dev/pts/3
很明显terminal发送数据到pts/3之后,
因为有2个独立的进程都在等待pts/3的数据,所以他们之间就发生了对pts/3数据抢夺现象,
因为linux内核调度器根据当时情况随时都会将他们中的一个调出或者调入,因此数据
就出现了一部分被送到了pts/4的cat命令,另一部分被送到了shell,
因为shell具有回显能力,shell将它接收到的所有字符串一一回显给terminal,所以terminal显示
到的数据就是shell与cat命令争抢数据时,shell自己抢到的数据,
而pts/4上显示的数据就是cat命令抢到的数据[luther.gliethttp]

比如我们仍然在pts/4上执行cat命令,然后我们在pts/5上执行echo命令
luther@gliethttp:~$ who am i
luther   pts/5        2009-07-03 09:08 (:0.0)
luther@gliethttp:~$ echo 'luther.gliethttp' &gt;/dev/pts/3
这时pts/3对应的terminal将完全显示'luther.gliethttp'字符串,因为没有人和ptm争抢数据

</rich_text><rich_text weight="heavy">4.5 在pts/3自己所在terminal中执行cat回是什么现象呢,我么继续看看</rich_text><rich_text>
luther@gliethttp:~$ cat /dev/pts/3
ls
ls
pwd
pwd
可以看到,输入ls回车之后,显示了2个ls,其中1个ls数据是cat命令自己回显出来的,
另外一个ls就来自/dev/pts/3文件,那这是怎么回事呢,原因是这样的,
cat和terminal都能获得键盘数据,cat将键盘数据直接回显到terminal上,
而terminal捕获的数据将通过ptm发送到pts/3,而cat自己又在等待pts/3的数据,所以
cat将从pts/3上再次读取到ptm发送过来的数据,再一次显示到terminal上,
那同样是cat pts/3,为什么就不一样呢,通过strace发现,如果在
terminal中直接调用库函数execve()执行另外一个shell命令,那么sh自身将停止对stdin进行数据读取,
只是等待shell命令退出,数据读取操作权完全交给被执行的shell命令(cat),
所以cat这时0,1,2都是对应pts/3,因为cat /dev/pts/3命令需要打开文件,
所以fd = open('/dev/pts/3',...)之后,fd数值将等于3,这样cat /dev/pts/3他的
0,1,2和3这4个句柄都对应pts/3节点[0为stdin,1为stdout,2为stderr]
所以读取pts/3的进程只有了一个,没有人和他争数据了,当然cat能够完全获得数据了.</rich_text></node><node name="浅析ptmx代码级open如何运作ptyp,ttyp,pts伪终端" prog_lang="custom-colors" readonly="False" tags="" unique_id="69"><rich_text scale="h3" weight="heavy">1.对ptmx执行open操作,将创建1对tty主从设备.</rich_text><rich_text>
 tty_init
 =&gt;cdev_init(&amp;ptmx_cdev, &amp;ptmx_fops);
 =&gt;然后创建/dev/ptmx节点[luther.gliethttp].
 所以/dev/ptmx节点的open函数为ptmx_fops.ptmx_open()
 static int ptmx_open(struct inode * inode, struct file * filp)
 {
     ...
     idr_ret = idr_get_new(&amp;allocated_ptys, NULL, &amp;index);
     ...
     if (index &gt;= pty_limit) {//NR_UNIX98_PTY_DEFAULT也就是4096个
         ...
     }
     ...
     mutex_lock(&amp;tty_mutex);
     retval = init_dev(ptm_driver, index, &amp;tty);//以index为pts的设备索引号,创建成对的主从设备ptmx和pts
     mutex_unlock(&amp;tty_mutex);
     ...
     retval = ptm_driver-&gt;open(tty, filp);
     ...
 }
 所以fdm = open(&quot;/dev/ptmx&quot;, O_RDWR);操作之后,将产生一个成对的ptyp和ttyp主从tty设备,并返回ptyp主设备句柄.
 
</rich_text><rich_text scale="h3" weight="heavy"> 2.调用ioctl获得与fdm主设备配对的ttyp设备号.</rich_text><rich_text>
 tty_ioctl
 =&gt;tty-&gt;driver-&gt;ioctl
 =&gt;在unix98_pty_init()中,仅仅对ptmx主设备赋予了ioctl操作：ptm_driver-&gt;ioctl =pty_unix98_ioctl;
 =&gt;pty_unix98_ioctl
 =&gt;
 static int pty_unix98_ioctl(struct tty_struct *tty, struct file *file,
              unsigned int cmd, unsigned long arg)
 {
     switch (cmd) {
     case TIOCSPTLCK: /* Set  PT Lock (disallow slave open) */
         return pty_set_lock(tty, (int __user *)arg);
     case TIOCGPTN: /* Get  PT Number */
         return put_user(tty-&gt;index, (unsigned int __user *)arg);//当前tty对应的为ptmx结构,它的index就是与之配对的pts
     }
 
     return -ENOIOCTLCMD;
 }
 
</rich_text><rich_text scale="h3"> </rich_text><rich_text scale="h3" weight="heavy">3.看看glibc库中如何封装ptsname函数,如下为精简版.</rich_text><rich_text>
 char* ptsname( int fd )
 {
     unsigned int pty_num;
     static char buff[64];
 
     if ( ioctl( fd, TIOCGPTN, &amp;pty_num ) != 0 )//最终调用上面的pty_unix98_ioctl获取当前ptmx主设备对应的pty从设备号.
         return NULL;
 
     snprintf( buff, sizeof(buff), &quot;/dev/pts/%u&quot;, pty_num );//格式化为/dev/pts/0,/dev/pts/1等,即:pts对应的文件全路径.
     return buff;
 }
 
</rich_text><rich_text scale="h3" weight="heavy"> 4.应用实例</rich_text><rich_text>
    int fdm fds;
    char *slavename;
    extern char *ptsname();
    
     fdm = open(&quot;/dev/ptmx&quot;, O_RDWR); /*  open master */
     grantpt(fdm); /*  change permission of slave */
     unlockpt(fdm); /*  unlock slave */
     slavename = ptsname(fdm); /*  get name of slave */
     fds = open(slavename, O_RDWR); /*  open slave */
     ioctl(fds, I_PUSH, &quot;ptem&quot;); /*  push ptem */
     ioctl(fds, I_PUSH, &quot;ldterm&quot;); /*  push ldterm */</rich_text></node></node><node name="upstart" prog_lang="custom-colors" readonly="False" tags="" unique_id="72"><rich_text>
</rich_text><node name="传统的启动方式" prog_lang="custom-colors" readonly="False" tags="" unique_id="71"><rich_text scale="h2" weight="heavy">1.传统的启动方式</rich_text><rich_text>
</rich_text><rich_text scale="h3" weight="heavy">一)、Linux 系统主要启动步骤</rich_text><rich_text>
　　读取 MBR 的信息，启动 Boot Manager。
　　加载系统内核，启动 init 进程， init 进程是 Linux 的根进程，所有的系统进程都是它的子进程。
　　init 进程读取 /etc/inittab 文件中的信息，并进入预设的运行级别。通常情况下 /etc/rcS.d/ 目录下的启动脚本首先被执行，然后是/etc/rcN.d/ 目录。
      </rich_text><rich_text foreground="#ffff00000000">Ubuntu里没有/etc/inittab，要修改/etc/init/rc-sysinit.conf中的
      env DEFAULT_RUNLEVEL=2</rich_text><rich_text>
       
　　根据 /etc/rcS.d/ 文件夹中对应的脚本启动 Xwindow 服务器 xorg，Xwindow 为 Linux 下的图形用户界面系统。
　　启动登录管理器，等待用户登录。

</rich_text><rich_text weight="heavy">Ubuntu init</rich_text><rich_text>
    进入/etc/init目录（Upstart init会到该目录下读取配置文件），会发现几个跟rc有关的配置文件：
rc.conf
rc-sysinit.conf
rcS.conf
    rc-sysinit在startup事件发生时被启动，rc在系统runlevel变化时被启动，rcS在系统runlevel为S时启动。在配置文件的注释中说明了，这几个文件，正是Upstart init处理System V-style服务的关键。
    rc-sysinit在startup事件发生时被启动，即，Upstart   init会首先读取rc-sysinit.conf并执行相关配置和脚本。rc-sysinit.conf的主要工作是设置系统默认runlevel，检测是否存在/etc/inittab或内核命令行，若存在，则按内核命令行&gt; /etc/inittab &gt; 默认runlevel的顺序设置系统runlevel。最后，调用telinit进入设置的runlevel。
    由于调用了telinit进入了设定的runlevel，runlevel改变的事件发生，此时rc服务启动（当然其他服务也会）。那么，我们就有必要来看看rc.conf中到底有什么东西。打开rc.conf，注意到最后一行：
exec /etc/init.d/rc </rich_text><rich_text foreground="#800080">$RUNLEVEL</rich_text><rich_text>
    而/etc/init.d/rc会根据传入 的runlevel参数调用/etc/rc${runlevel}.d/下的脚本（以S开头）以启动服务，终止在前次runlevel启动而当前在 runlevel需要终止的服务

</rich_text><rich_text scale="h3" weight="heavy">二)、运行级别</rich_text><rich_text>
　　Ubuntu中的运行级别
　　0(关闭系统)
　　1(单用户模式，只允许root用户对系统进行维护。)
　　2 到 5(多用户模式，其中3为字符界面，5为图形界面。)
　　6(重启系统)
　　切换运行级别
　　init [0123456Ss]
　　例如：init 0 命令关机; init 6 命令重新启动
　　启动项管理工具
　　sudo install sysv-rc-conf //或者使用带gui的工具bum
　　sudo sysv-rc-conf

</rich_text><rich_text scale="h3" weight="heavy">三)、update-rc.d命令详解</rich_text><rich_text>
　　从所有的运行级别中删除指定启动项
　　update-rc.d -f remove
　　按指定顺序、在指定运行级别中启动或关闭
　　update-rc.d start|stop
　　实例：update-rc.d apachectl start 20 2 3 4 5 . stop 20 0 1 6 .
　　解析：表示在2、3、4、5这五个运行级别中，由小到大，第20个开始运行apachectl;在 0 1 6这3个运行级别中，第20个关闭apachectl。这是合并起来的写法，注意它有2个点号，效果等于下面方法：
　　update-rc.d apachectl defaults
　　A启动后B才能启动，B关闭后A才关闭
　　update-rc.d A defaults 80 20
　　update-rc.d B defaults 90 10
　　启动和关闭顺序为90，级别默认
　　update-rc.d defaults 90
 --------------------------------------------------------------
 
 在Linux系统下，一个Services的启动、停止以及重启通常是通过/etc/init.d目录下的脚本来控制的。然而，在启动或改变运行级别时， 是在/etc/rcX.d中来搜索脚本。其中X是运行级别的number。本文将解释如何启动、关闭和修改服务的运行。当你在Debian下安装一个新的 服务，比如Apache2，安装完成后，默认情况下它会启动，并在下一次重启后自动启动。但是如果你不是一直需要这个服务，只在需要的时候启用它，你可以 禁用它。直到你需要使用的时候，执行如下指令：
 /etc/init.d/apache2 start

要实现这个目的，你需要先在/etc/rcX.d目录中删除所有apache2的符号链接，但这个方法操作麻烦，且效率低下。因此，我们建议你使用update-rc.d命令来实现这个功能。
</rich_text><rich_text scale="h3" underline="single" weight="heavy">1、删除一个服务</rich_text><rich_text>
 如果你想手动的完全禁用Apache2服务，你需要删除其中的所有在/etc/rcX.d中的单一链路。但是如果使用update-rc.d，则非常简单：  
update-rc.d -f apache2 remove
参数-f是强制删除符号链接，即使/etc/init.d/apache2仍然存在。Note：这个命令仅仅禁止该服务，直到该服务被升级。如果你想在服务升级后仍然保持被禁用。应该执行如下的命令：
update-rc.d apache2 stop 80 0 1 2 3 4 5 6.
</rich_text><rich_text underline="single">
</rich_text><rich_text scale="h3" underline="single" weight="heavy">2、增加一个服务</rich_text><rich_text>
如果你想重新添加这个服务并让它开机自动执行，你需要执行以下命令： 
update-rc.d apache2 defaults

并且可以指定该服务的启动顺序：
update-rc.d apache2 defaults 90

还可以更详细的控制start与kill顺序：
update-rc.d apache2 defaults 20 80

其中前面的20是start时的运行顺序级别，80为kill时的级别。也可以写成：
update-rc.d apache2 start 20 2 3 4 5 . stop 80 0 1 6 .
其中0～6为运行级别。 update-rc.d命令不仅适用Linux服务，编写的脚本同样可以用这个命令设为开机自动运行

</rich_text><rich_text scale="h2" weight="heavy">参考:</rich_text><rich_text>
man update-rc.d
man insserv
man initctl
http://askubuntu.com/questions/5039/what-is-the-difference-between-etc-init-and-etc-init-d 
man service
</rich_text></node><node name="upstart启动方式" prog_lang="custom-colors" readonly="False" tags="" unique_id="73"><rich_text>Debian启动系统维护者们说，现在的Debian Sysvinit启动系统因为其不可靠性，将会逐渐被upstart代替。 
UpStart: 基于事件的启动系统
Sysvinit:基于结果的启动系统

SysVinit守护进程（sysvinit软件包）是一个基于运行级别的系统，它使用运行级别（单用户、多用户以及其他更多级别）和链接（位于/etc /rc?.d目录中，分别链接到/etc/init.d中的init脚本）来启动和关闭系统服务。Upstart init守护进程（upstart软件包）则是基于事件的系统，它使用事件来启动和关闭系统服务。

几个很重要的定义：
</rich_text><rich_text foreground="#ffff00000000">event: 事件</rich_text><rich_text>， 是指系统状态的一种改变，这种改变会被通知给init进程。举例来说，boot loader会触发startup事件，系统进入runlevel 2的时候会触发runlevel 2事件，某个文件系统被挂载时会触发path-mounted事件， USB设备的插拔也都会产生相应的事件。这些时间会被通知给init进程，然后init进程来决定系统如何处理这些事件。
</rich_text><rich_text foreground="#ffff00000000">job: 作业</rich_text><rich_text>，一项作业是init进程读入的一系列指令。你可以使用initctl start或initctl stop命令来开始或停止某项作业，这是调用作业的一种方式。另一种方式是当系统被告知发生什么事件event后，运行该事件所对应的作业。
    可用sudo  initctl list命令列出所有系统作业的运行状态。
</rich_text><rich_text foreground="#ffff00000000">task: 任务</rich_text><rich_text>， a job that performs its work and returns to a waiting state when it is done. 中文是一种完成指定工作后进去等待状态的作业。
</rich_text><rich_text foreground="#ffff00000000">service: 服务</rich_text><rich_text>，a job that does not normally terminate by itself. 举个例子来说， gettys 是以服务来实现的。 init进程监视所有服务，并在服务失败的时候重启服务。

/etc/event.d目录下是所有init进程读取的job(作业)定义。该目录下的每个文件都定义了一个job(作业)，和对应该作业的事件。这和windows下的消息机制有些类似。在这里新建一个文件myjob：
$cat /etc/event.d/myjob
start on hithere
script 
    echo  &quot;Hi there, here I am!&quot; &gt; /tmp/myjob.out
    date &gt;&gt; /tmp/myjob.out
end script
这个文件定义了一个作业，在作业在收到hithere事件后触发。该作业运行时将&quot;Hi there, here I am!&quot;和系统时间打印到/tmp/myjob.out
我们可以使用sudo initctl emit hithere来触发hithere事件，从而导致这项作业的执行.
 $ sudo initctl emit hithere
hithere
myjob (start) waiting
myjob (start) starting
myjob (start) pre-start
myjob (start) spawned, process 8918
myjob (start) post-start, (main) process 8918
myjob (start) running, process 8918
myjob (stop) running
myjob (stop) stopping
myjob (stop) killed
myjob (stop) post-stop
myjob (stop) waiting
$ cat /tmp/myjob.out
Hi there, here I am!
Mon Oct 26 23:44:29 CST 2009
$ sudo initctl list myjob
myjob (stop) waiting
这个例子演示了事件如何触发作业的运行机制。

在明白事件机制后，我们来看一下ubuntu是怎么利用事件机制来进行启动的。
init启动后读入event.d中的所有作业定义，看其中的一个
$ cat /etc/event.d/rc2 
# rc2 - runlevel 2 compatibility 
# 
# This task runs the old sysv-rc runlevel 2 (&quot;multi-user&quot;) scripts. It 
# is usually started by the telinit compatibility wrapper.
start on runlevel 2 
stop on runlevel [!2] 
console output 
script 
    set $(runlevel --set 2 || true) 
    if [ &quot;$1&quot; != &quot;unknown&quot; ]; then 
        PREVLEVEL=$1
         RUNLEVEL=$2 
        export PREVLEVEL RUNLEVEL 
    fi 

    exec /etc/init.d/rc 2 
end script
看前两行和倒数第二行，
前两行意思：这里用的前面所说的事件机制，当runlevel为2的时候，系统运行script中的语句
倒数第二行：调用/etc/init.d/rc，传入参数只有一个2
接下来看/etc/init.d/rc文件, 这个文件很长，
cat /etc/init.d/rc
#! /bin/sh
#
# rc
#
# Starts/stops services on runlevel changes.
...
# Is there an rc directory for this new runlevel?
if [ -d /etc/rc$runlevel.d ]
then
...
    # First, run the KILL scripts.
    if [ &quot;$previous&quot; != N ]
    then
        ...
        for s in /etc/rc$runlevel.d/K*
        ...
    # Now run the START scripts for this runlevel.
    for s in /etc/rc$runlevel.d/S*
    ...
...
这里只简短摘取其中一些重要的地方，/etc/init.d/rc文件会根据系统运行级别runlevel来查找文件夹/etc/rc$runlevel.d, 如果runlevel=2, 则查找/etc/rc2.d文件夹, 并运行其中的
/etc/rc$runlevel.d/K* 和 /etc/rc$runlevel.d/S* 
脚本。K代表Stop, S代表Start, K*即需要停止的服务等，S*即需要开始运行的服务等， 
查看/etc/rc2.d目录下的文件：
$ls -l /etc/rc2.d
total 4
-rw-r--r-- 1 root root 556 2008-04-19 13:05 README
lrwxrwxrwx 1 root root  19 2009-10-12 09:54 S01policykit -&gt; ../init.d/policykit
lrwxrwxrwx 1 root root  17 2009-10-12 09:54 S05vbesave -&gt; ../init.d/vbesave
lrwxrwxrwx 1 root root  15 2009-10-12 09:54 S10acpid -&gt; ../init.d/acpid
lrwxrwxrwx 1 root root  25 2009-10-12 09:54 S10powernowd.early -&gt; ../init.d/powernowd.early
lrwxrwxrwx 1 root root  18 2009-10-12 09:54 S10sysklogd -&gt; ../init.d/sysklogd
lrwxrwxrwx 1 root root  34 2009-10-12 09:54 S10xserver-xorg-input-wacom -&gt; ../init.d/xserver-xorg-input-wacom
...
</rich_text><rich_text foreground="#ffff00000000">可以看出/etc/rc2.d下面的文件全都是链接到/etc/init.d目录下的服务程序， 而以S开头的链接名表示以Start参数来执行对应的服务程序，以K开头的链接名表示以Stop参数来执行对应的服务程序。而S和K后面的数字代表启动顺序或关闭顺序。S01policykit会在S05vbesave之前执行，因为01&lt;05。这些细节都在/etc/init.d/rc中实现。</rich_text><rich_text>

/etc/rcn.d目录中的每一个链接均指向/etc/init.d目录中的一个文件。 

/etc/rc.local
当系统启动的时候，在将其他init脚本执行完毕之后，系统就会执行/etc/rc.local文件。可以将用来定制系统的命令放在 rc.local文件中。虽然可以将任何你想要的命令添加到文件中，但是最好还是让这些命令在后台运行。这样一来，如果有些命令挂起，它们不会终止引导进程。

</rich_text><rich_text foreground="#00000000ffff">下面是Upstart大致的一个启动过程：
1,内核启动init
2,init找到/etc/event.d/rc-default文件，确定默认的运行级别(X)
3,触发相应的runlevel事件，开始运行/etc/event.d/rcX
4,rcX运行/etc/init.d/rc，传入参数X
5,/etc/init.d/rc脚本进行一系列设置，最后运行相应的/etc/rcX.d/中的脚本
6,/etc/rcX.d/中的脚本按事先设定的优先级依次启动，直至最后给出登录画面(启动X服务器和GDM)</rich_text><rich_text>
</rich_text></node></node><node name="udev实现原理" prog_lang="custom-colors" readonly="False" tags="" unique_id="63"><rich_text>    相对于linux来说，udev还是一个新事物。然而，尽管它03年才出现，尽管它很低调(J)，但它无疑已经成为linux下不可或缺的组件了。udev是什么？它是如何实现的？最近研究Linux设备管理时，花了一些时间去研究udev的实现。
    udev是什么？u 是指user space，dev是指device，udev是用户空间的设备驱动程序吗？最初我也这样认为，调试内核空间的程序要比调试用户空间的程序复杂得多，内核空间的程序的BUG所引起的后果也严重得多，
 device driver是内核空间中所占比较最大的代码，如果把这些device driver中硬件无关的代码，从内核空间移动到用户空间，自然是一个不错的想法。
    但我的想法并不正确，udev的文档是这样说的，
    1. dynamic replacement for /dev。作为devfs的替代者，传统的devfs不能动态分配major和minor的值，而major和minor非常有限，很快就会用完了。
        udev能够像DHCP动态分配IP地址一样去动态分配major和minor。
 
    2. device naming。提供设备命名持久化的机制。传统设备命名方式不具直观性，像/dev/hda1这样的名字肯定没有boot_disk这样的名字直观。
        udev能够像DNS解析域名一样去给设备指定一个有意义的名称。
 
    3. API to access info about current system devices 。提供了一组易用的API去操作sysfs，避免重复实现同样的代码，这没有什么好说的。
 
    我们知道，用户空间的程序与设备通信的方法，主要有以下几种方式，
    1.  通过ioperm获取操作IO端口的权限，然后用inb/inw/ inl/ outb/outw/outl等函数，避开设备驱动程序，直接去操作IO端口。（没有用过）
    2.  用ioctl函数去操作/dev目录下对应的设备，这是设备驱动程序提供的接口。像键盘、鼠标和触摸屏等输入设备一般都是这样做的。
    3.  用write/read/mmap去操作/dev目录下对应的设备，这也是设备驱动程序提供的接口。像framebuffer等都是这样做的。
 
上面的方法在大多数情况下，都可以正常工作，但是对于热插拨(hotplug)的设备，比如像U盘，就有点困难了，因为你不知道：什么时候设备插上了，什么时候设备拔掉了。这就是所谓的hotplug问题了。
 
处理hotplug传统的方法是，在内核中执行一个称为hotplug的程序，相关参数通过环境变量传递过来，再由hotplug通知其它关注hotplug事件的应用程序。这样做不但效率低下，而且感觉也不那么优雅。
新的方法是采用NETLINK实现的，这是一种特殊类型的socket，专门用于内核空间与用户空间的异步通信。下面的这个简单的例子，可以监听来自内核hotplug的事件。
</rich_text><rich_text justification="left"></rich_text><rich_text>
 
编译：
gcc -g hotplug.c -o hotplug_monitor
 
运行后插/拔U盘，可以看到：
</rich_text><rich_text justification="left"></rich_text><rich_text>
 
udev的主体部分在udevd.c文件中，它主要监控来自4个文件描述符的事件/消息，并做出处理：
</rich_text><rich_text scale="h2" weight="heavy">1. 来自客户端的控制消息。</rich_text><rich_text>
    这通常由udevcontrol命令通过地址为/org/kernel/udev/udevd的本地socket，向udevd发送的控制消息。其中消息类型有：
    l         </rich_text><rich_text foreground="#00000000ffff">UDEVD_CTRL_STOP_EXEC_QUEUE</rich_text><rich_text> 停止处理消息队列。
    l         </rich_text><rich_text foreground="#00000000ffff">UDEVD_CTRL_START_EXEC_QUEUE</rich_text><rich_text> 开始处理消息队列。
    l         </rich_text><rich_text foreground="#00000000ffff">UDEVD_CTRL_SET_LOG_LEVEL</rich_text><rich_text> 设置LOG的级别。
    l         </rich_text><rich_text foreground="#00000000ffff">UDEVD_CTRL_SET_MAX_CHILDS</rich_text><rich_text> 设置最大子进程数限制。好像没有用。
    l         </rich_text><rich_text foreground="#00000000ffff">UDEVD_CTRL_SET_MAX_CHILDS_RUNNING</rich_text><rich_text> 设置最大运行子进程数限制(遍历proc目录下所有进程，根据session的值判断)。
    l         </rich_text><rich_text foreground="#00000000ffff">UDEVD_CTRL_RELOAD_RULES</rich_text><rich_text> 重新加载配置文件。

</rich_text><rich_text scale="h2" weight="heavy">2. 来自内核的hotplug事件。</rich_text><rich_text>
    如果有事件来源于hotplug，它读取该事件，创建一个udevd_uevent_msg对象，记录当前的消息序列号，设置消息的状态为EVENT_QUEUED,然后并放入running_list和exec_list两个队列中，稍后再进行处理。

</rich_text><rich_text scale="h2" weight="heavy">3. 来自signal handler中的事件。</rich_text><rich_text>
    signal handler是异步执行的，即使有signal产生，主进程的select并不会唤醒，为了唤醒主进程的select，它建立了一个管道，在signal handler中，向该管道写入长度为1个子节的数据，这样就可以唤醒主进程的select了。
    
</rich_text><rich_text scale="h2" weight="heavy">4.来自配置文件变化的事件。</rich_text><rich_text>
    udev通过文件系统inotify功能，监控其配置文件目录/etc/udev/rules.d，一旦该目录中文件有变化，它就重新加载配置文件。
 
其中最主要的事件，当然是来自内核的hotplug事件，如何处理这些事件是udev的关键。udev本身并不知道如何处理这些事件，也没有必要知道，因为它只实现机制，而不实现策略。
事件的处理是由配置文件决定的，这些配置文件即所谓的rule。
 
关于rule的编写方法可以参考《writing_udev_rules》，udev_rules.c实现了对规则的解析。
 
在规则中，可以让外部应用程序处理某个事件，这有两种方式，一种是直接执行命令，通常是让modprobe去加载驱动程序，或者让mount去加载分区。另外一种是通过本地socket发送消息给某个应用程序。
 
在udevd.c:udev_event_process函数中，我们可以看到，如果RUN参数以”socket:”开头则认为是发到socket，否则认为是执行指定的程序。
 
下面的规则是执行指定程序：
60-pcmcia.rules:                RUN+=&quot;/sbin/modprobe pcmcia&quot;
 
下面的规则是通过socket发送消息：
90-hal.rules:RUN+=&quot;socket:/org/freedesktop/hal/udev_event&quot; 
 
hal正是我们下一步要关心的，接下来我会分析HAL的实现原理。
 
 
</rich_text><codebox char_offset="1288" frame_height="1020" frame_width="840" highlight_brackets="False" show_line_numbers="False" syntax_highlighting="custom-colors" width_in_pixels="True">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;string.h&gt;
#include &lt;ctype.h&gt;
#include &lt;sys/un.h&gt;
#include &lt;sys/ioctl.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;linux/types.h&gt;
#include &lt;linux/netlink.h&gt;
#include &lt;errno.h&gt;
 
static int init_hotplug_sock(void)
{
    struct sockaddr_nl snl;
    const int buffersize = 16 * 1024 * 1024;
    int retval;
 
    memset(&amp;snl, 0x00, sizeof(struct sockaddr_nl));
    snl.nl_family = AF_NETLINK;
    snl.nl_pid = getpid();
    snl.nl_groups = 1;
 
    int hotplug_sock = socket(PF_NETLINK, SOCK_DGRAM, NETLINK_KOBJECT_UEVENT);
    if (hotplug_sock == -1) {
        printf(&quot;error getting socket: %s&quot;, strerror(errno));
        return -1;
    }
 
    /* set receive buffersize */
    setsockopt(hotplug_sock, SOL_SOCKET, SO_RCVBUFFORCE, &amp;buffersize, sizeof(buffersize));
 
    retval = bind(hotplug_sock, (struct sockaddr *) &amp;snl, sizeof(struct sockaddr_nl));
    if (retval &lt; 0) {
        printf(&quot;bind failed: %s&quot;, strerror(errno));
        close(hotplug_sock);
        hotplug_sock = -1;
        return -1;
    }
 
    return hotplug_sock;
}
 
#define UEVENT_BUFFER_SIZE      2048
 
int main(int argc, char* argv[])
{
         int hotplug_sock       = init_hotplug_sock();
         
         while(1)
         {
                   char buf[UEVENT_BUFFER_SIZE*2] = {0};
                   recv(hotplug_sock, &amp;buf, sizeof(buf), 0);  
                   printf(&quot;%s/n&quot;, buf);
         }
 
         return 0;
}</codebox><codebox char_offset="1349" frame_height="480" frame_width="840" highlight_brackets="False" show_line_numbers="False" syntax_highlighting="custom-colors" width_in_pixels="True">add@/devices/pci0000:00/0000:00:1d.1/usb2/2-1
add@/devices/pci0000:00/0000:00:1d.1/usb2/2-1/usbdev2.2_ep00
add@/devices/pci0000:00/0000:00:1d.1/usb2/2-1/2-1:1.0
add@/class/scsi_host/host2
add@/devices/pci0000:00/0000:00:1d.1/usb2/2-1/2-1:1.0/usbdev2.2_ep81
add@/devices/pci0000:00/0000:00:1d.1/usb2/2-1/2-1:1.0/usbdev2.2_ep02
add@/devices/pci0000:00/0000:00:1d.1/usb2/2-1/2-1:1.0/usbdev2.2_ep83
add@/class/usb_device/usbdev2.2
add@/devices/pci0000:00/0000:00:1d.1/usb2/2-1/2-1:1.0/host2/target2:0:0/2:0:0:0
add@/class/scsi_disk/2:0:0:0
add@/block/sda
add@/block/sda/sda1
add@/class/scsi_device/2:0:0:0
add@/class/scsi_generic/sg0
remove@/devices/pci0000:00/0000:00:1d.1/usb2/2-1/2-1:1.0/usbdev2.2_ep81
remove@/devices/pci0000:00/0000:00:1d.1/usb2/2-1/2-1:1.0/usbdev2.2_ep02
remove@/devices/pci0000:00/0000:00:1d.1/usb2/2-1/2-1:1.0/usbdev2.2_ep83
remove@/class/scsi_generic/sg0
remove@/class/scsi_device/2:0:0:0
remove@/class/scsi_disk/2:0:0:0
remove@/block/sda/sda1
remove@/block/sda
remove@/devices/pci0000:00/0000:00:1d.1/usb2/2-1/2-1:1.0/host2/target2:0:0/2:0:0:0
remove@/class/scsi_host/host2
remove@/devices/pci0000:00/0000:00:1d.1/usb2/2-1/2-1:1.0
remove@/class/usb_device/usbdev2.2
remove@/devices/pci0000:00/0000:00:1d.1/usb2/2-1/usbdev2.2_ep00
remove@/devices/pci0000:00/0000:00:1d.1/usb2/2-1</codebox><node name="维护" prog_lang="custom-colors" readonly="False" tags="" unique_id="64"><rich_text>如果你使用Linux比较长时间了，那你就知道，在对待设备文件这块，Linux改变了几次策略。在Linux早期，设备文件仅仅是是一些带有适当 的属性集的普通文件，它由mknod命令创建，文件存放在/dev目录下。后来，采用了devfs,  一个基于内核的动态设备文件系统，他首次出现在2.3.46内核中。Mandrake，Gentoo等Linux分发版本采用了这种方式。devfs创建  的设备文件是动态的。但是devfs有一些严重的限制，从2.6.13版本后移走了。目前取代他的便是文本要提到的udev－－一个用户空间程序。
目前很多的Linux分发版本采纳了udev的方式，因为它在Linux设备访问，特别是那些对设备有极端需求的站点(比如需要控制上千个硬盘)和热插拔设备(比如USB摄像头和MP3播放器)上解决了几个问题。下面我我们来看看如何管理udev设备。
实际上，对于那些为磁盘，终端设备等准备的标准配置文件而言，你不需要修改什么。但是，你需要了解udev配置来使用新的或者外来设备，如果不修改 配置，  这些设备可能无法访问，或者说Linux可能会采用不恰当的名字，属组或权限来创建这些设备文件。你可能也想知道如何修改RS－232串口，音频设备等文 件的属组或者权限。这点在实际的Linux实施中是会遇到的。

</rich_text><rich_text scale="h1" weight="heavy">为什么使用udev</rich_text><rich_text>
在此之前的设备文件管理方法(静态文件和devfs)有几个缺点：
*不确定的设备映射。特别是那些动态设备，比如USB设备，设备文件到实际设备的映射并不可靠和确定。举一个例子：如果你有两个USB打印机。一个 可能称  为/dev/usb/lp0,另外一个便是/dev/usb/lp1。但是到底哪个是哪个并不清楚，lp0,lp1和实际的设备没有一一对应的关系，因为   他可能因为发现设备的顺序，打印机本身关闭等原因而导致这种映射并不确定。理想的方式应该是：两个打印机应该采用基于他们的序列号或者其他标识信息的唯一  设备文件来映射。但是静态文件和devfs都无法做到这点。
*没有足够的主/辅设备号。我们知道，每一个设备文件是有两个8位的数字：一个是主设备号 ，另外一个是辅设备号来分配的。这两个8位的数字加上设备类型(块设备或者字符设备)来唯一标识一个设备。不幸的是，关联这些身边的的数字并不足够。
*/dev目录下文件太多。一个系统采用静态设备文件关联的方式，那么这个目录下的文件必然是足够多。而同时你又不知道在你的系统上到底有那些设备文件是激活的。
*命名不够灵活。尽管devfs解决了以前的一些问题，但是它自身又带来了一些问题。其中一个就是命名不够灵活；你别想非常简单的就能修改设备文件的名字。缺省的devfs命令机制本身也很奇怪，他需要修改大量的配置文件和程序。
*内核内存使用，devfs特有的另外一个问题是，作为内核驱动模块，devfs需要消耗大量的内存，特别当系统上有大量的设备时(比如上面我们提到的系统一个上有好几千磁盘时)
udev的目标是想解决上面提到的这些问题，他通采用用户空间(user-space)工具来管理/dev/目录树，他和文件系统分开。知道如何改变缺省配置能让你之大如何定制自己的系统，比如创建设备字符连接，改变设备文件属组，权限等。

</rich_text><rich_text scale="h1" weight="heavy">udev配置文件</rich_text><rich_text>
主要的udev配置文件是/etc/udev/udev.conf。这个文件通常很短，他可能只是包含几行#开头的注释，然后有几行选项：
</rich_text><rich_text background="#ccffff" foreground="#008080">udev_root</rich_text><rich_text background="#ccffff">=</rich_text><rich_text background="#ccffff" foreground="#804040">&quot;</rich_text><rich_text background="#ccffff" foreground="#ff00ff">/dev/</rich_text><rich_text background="#ccffff" foreground="#804040">&quot;
 </rich_text><rich_text background="#ccffff" foreground="#008080">udev_rules</rich_text><rich_text background="#ccffff">=</rich_text><rich_text background="#ccffff" foreground="#804040">&quot;</rich_text><rich_text background="#ccffff" foreground="#ff00ff">/etc/udev/rules.d/</rich_text><rich_text background="#ccffff" foreground="#804040">&quot;
 </rich_text><rich_text background="#ccffff" foreground="#008080">udev_log</rich_text><rich_text background="#ccffff">=</rich_text><rich_text background="#ccffff" foreground="#804040">&quot;</rich_text><rich_text background="#ccffff" foreground="#ff00ff">err</rich_text><rich_text background="#ccffff" foreground="#804040">&quot;</rich_text><rich_text> 
上面的第二行非常重要，因为他表示udev规则存储的目录，这个目录存储的是以.rules结束的文件。每一个文件处理一系列规则来帮助udev分配名字给设备文件以保证能被内核识别。
 你的/etc/udev/rules.d下面可能有好几个udev规则文件，这些文件一部分是udev包安装的，另外一部分则是可能是别的硬件或者软件包  生成的。比如在Fedora Core  5系统上，sane-backends包就会安装60-libsane.rules文件，另外initscripts包会安装60-net.rules文  件。这些规则文件的文件名通常是两个数字开头，它表示系统应用该规则的顺序。
规则文件里的规则有一系列的键/值对组成，键/值对之间用逗号(,)分割。每一个键或者是用户匹配键，或者是一个赋值键。匹配键确定规则是否被应 用，而赋 值键表示分配某值给该键。这些值将影响udev创建的设备文件。赋值键可以处理一个多值列表。匹配键和赋值键操作符解释见下表：

udev 键/值对操作符
操作符        匹配或赋值                             解释
 －－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
 ==             匹配                        相等比较
 !=              匹配                        不等比较
 =                赋值                       分配一个特定的值给该键，他可以覆盖之前的赋值。
 +=              赋值                       追加特定的值给已经存在的键
 :=               赋值                       分配一个特定的值给该键，后面的规则不可能覆盖它。
这有点类似我们常见的编程语言，比如C语言。只是这里的键一次可以处理多个值。有一些键在udev规则文件里经常出现，这些键的值可以使用通配符(*,?,甚至范围，比如[0-9])，这些常用键列举如下：
常用udev键
 键                 含义
 ACTION                     一个时间活动的名字，比如add，当设备增加的时候
 KERNEL                     在内核里看到的设备名字，比如sd*表示任意SCSI磁盘设备
 DEVPATH              内核设备录进，比如/devices/*
 SUBSYSTEM              子系统名字，比如sound,net
 BUS                     总线的名字，比如IDE,USB
 DRIVER                     设备驱动的名字，比如ide-cdrom
 ID                       独立于内核名字的设备名字
 SYSFS{ value}              sysfs属性值，他可以表示任意
 ENV{ key}              环境变量，可以表示任意
 PROGRAM              可执行的外部程序，如果程序返回0值，该键则认为为真(true)
 RESULT                     上一个PROGRAM调用返回的标准输出。
 NAME                     根据这个规则创建的设备文件的文件名。注意：仅仅第一行的NAME描述是有效的，后面的均忽略。 如果你想使用使用两个以上的名字来访问一个设备的话，可以考虑SYMLINK键。
 SYMLINK              根据规则创建的字符连接名
 OWNER                     设备文件的属组
 GROUP                     设备文件所在的组。
 MODE                     设备文件的权限，采用8进制
 RUN                     为设备而执行的程序列表
 LABEL                     在配置文件里为内部控制而采用的名字标签(下下面的GOTO服务)
 GOTO                     跳到匹配的规则（通过LABEL来标识），有点类似程序语言中的GOTO
 IMPORT{ type}           导入一个文件或者一个程序执行后而生成的规则集到当前文件
 WAIT_FOR_SYSFS         等待一个特定的设备文件的创建。主要是用作时序和依赖问题。
 PTIONS                     特定的选项： last_rule 对这类设备终端规则执行； ignore_device  忽略当前规则； ignore_remove 忽略接下来的并移走请求。all_partitions 为所有的磁盘分区创建设备文件。
 
我们给出一个列子来解释如何使用这些键。下面的例子来自Fedora Core 5系统的标准配置文件。
</rich_text><rich_text foreground="#008080">KERNEL</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">*</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#008080">OWNER</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text foreground="#ff00ff">root</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text> </rich_text><rich_text foreground="#008080">GROUP</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text foreground="#ff00ff">root</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#008080">MODE</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text foreground="#ff00ff">0600</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text> </rich_text><rich_text foreground="#008080">
KERNEL</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">tty</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#008080">NAME</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text foreground="#ff00ff">%k</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#008080">GROUP</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text foreground="#ff00ff">tty</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#008080">MODE</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text foreground="#ff00ff">0666</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#008080">OPTIONS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text foreground="#ff00ff">last_rule</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>
</rich_text><rich_text foreground="#008080">KERNEL</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">scd[0-9]*</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#008080">SYMLINK+</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text foreground="#ff00ff">cdrom cdrom-%k</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>
</rich_text><rich_text foreground="#008080">KERNEL</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">hd[a-z]</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#008080">BUS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">ide</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, SYSFS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>removable</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">1</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>,
               SYSFS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>device/media</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">cdrom</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#008080">SYMLINK+</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text foreground="#ff00ff">cdrom cdrom-%k</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text> </rich_text><rich_text foreground="#008080">
ACTION</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">add</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#008080">SUBSYSTEM</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">scsi_device</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#008080">RUN+</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text foreground="#ff00ff">/sbin/modprobe sg</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>
上面的例子给出了5个规则，每一个都是KERNEL或者ACTION键开头：
*第一个规则是缺省的，他匹配任意被内核识别到的设备，然后设定这些设备的属组是root，组是root，访问权限模式是0600(-rw-----)。这也是一个安全的缺省设置保证所有的设备在默认情况下只有root可以读写
*第二个规则也是比较典型的规则了。它匹配终端设备(tty)，然后设置新的权限为0600，所在的组是tty。它也设置了一个特别的设备文件名:%K。在这里例子里，%k代表设备的内核名字。
    那也就意味着内核识别出这些设备是什么名字，就创建什么样的设备文件名。
*第三行开始的KERNEL==&quot;scd[0-9]*&quot;,表示 SCSI CD-ROM 驱动. 它创建一对设备符号连接：cdrom和cdrom-%k。
*第四行，开始的 KERNEL==&quot;hd[a-z]&quot;, 表示ATA CDROM驱动器。这个规则创建和上面的规则相同的符号连接。ATA CDROM驱动器需要sysfs值以来区别别的ATA设备，因为SCSI CDROM可以被内核唯一识别。.
*第五行以 ACTION==&quot;add&quot;开始，它告诉udev增加 /sbin/modprobe sg 到命令列表，当任意SCSI设备增加到系统后，这些命令将执行。其效果就是计算机应该会增加sg内核模块来侦测新的SCSI设备。
    当然，上面仅仅是一小部分例子，如果你的系统采用了udev方式，那你应该可以看到更多的规则。如果你想修改设备的权限或者创建信的符号连接，那么你需要熟读这些规则，特别是要仔细注意你修改的那些与之相关的设备。

</rich_text><rich_text scale="h1" weight="heavy">修改你的udev配置</rich_text><rich_text>
在修改udev配置之前，我们一定要仔细，通常的考虑是：你最好不要修改系统预置的那些规则，特别不要指定影响非常广泛的配置，比如上面例子中的第一行。不正确的配置可能会导致严重的系统问题或者系统根本就无法这个正确的访问设备。
而我们正确的做法应该是在/etc/udev/rules.d/下创建一个信的规则文件。确定你给出的文件的后缀是rules文件名给出的数字序列 应该比  标准配置文件高。比如，你可以创建一个名为99-my-udev.rules的规则文件。
在你的规则文件中，你可以指定任何你想修改的配置，比如，假设你  修改修改floppy设备的所在组，还准备创建一个信的符号连接/dev/floppy，那你可以这么写：
</rich_text><rich_text foreground="#008080">KERNEL</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">fd[0-9]*</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#008080">GROUP</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text foreground="#ff00ff">users</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>,   </rich_text><rich_text foreground="#008080">SYMLINK+</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text foreground="#ff00ff">floppy</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>
有些发行版本，比如Fedora，采用了外部脚本来修改某些特定设备的属组，组关系和权限。因此上面的改动可能并不见得生效。如果你遇到了这个问题，你就需要跟踪和修改这个脚本来达到你的目的。或者你可以修改PROGRAM或RUN键的值来做到这点。
某些规则的修改可能需要更深的挖掘。比如，你可能想在一个设备上使用sysfs信息来唯一标识一个设备。这些信息最好通过udevinfo命令来获取。
$ udevinfo -a -p </rich_text><rich_text foreground="#ffffff">$(</rich_text><rich_text foreground="#6a5acd">udevinfo -q path      -n /dev/hda</rich_text><rich_text>
上面的命令两次使用udevinfo：一次是返回sysfs设备路径(他通常和我们看到的Linux设备文件名所在路径－－/dev/hda－－不 同)；
第二次才是查询这个设备路径，结果将是非常常的syfs信息汇总。你可以找到最够的信息来唯一标志你的设备，你可以采用适当的替换udev配置文件中的  SYSFS选项。下面的结果就是上面的命令输出
</rich_text><rich_text foreground="#804040">[</rich_text><rich_text>root@localhost rules.d</rich_text><rich_text foreground="#804040">]</rich_text><rich_text foreground="#0000ff"># udevinfo -a -p $(udevinfo -q path        -n      /dev/hda1)
</rich_text><rich_text>Udevinfo starts with the device specified by the devpath and </rich_text><rich_text foreground="#ffffff">then</rich_text><rich_text> walks up the chain of
parent devices. It prints </rich_text><rich_text foreground="#804040">for</rich_text><rich_text> every device found,all possible attributes </rich_text><rich_text foreground="#804040">in</rich_text><rich_text> the udev rules
key format. A rule to match, can be composed by the attributes of the device and the
attributes from one single parent device.

looking at device </rich_text><rich_text foreground="#804040">'</rich_text><rich_text foreground="#ff00ff">/block/hda/hda1</rich_text><rich_text foreground="#804040">'</rich_text><rich_text>:     </rich_text><rich_text foreground="#008080">
KERNEL</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">hda1</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>     </rich_text><rich_text foreground="#008080">SUBSYSTEM</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">block</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>     </rich_text><rich_text foreground="#008080">DRIVER</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;&quot;</rich_text><rich_text>        
ATTR</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>stat</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">        1133         2268            2            4</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>         ATTR</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>size</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">208782</rich_text><rich_text foreground="#804040">&quot;
</rich_text><rich_text>ATTR</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>start</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">63</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>         ATTR</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>dev</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">3:1</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>        

looking at parent device </rich_text><rich_text foreground="#804040">'</rich_text><rich_text foreground="#ff00ff">/block/hda</rich_text><rich_text foreground="#804040">'</rich_text><rich_text>:   </rich_text><rich_text foreground="#008080">
KERNELS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">hda</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>     </rich_text><rich_text foreground="#008080">SUBSYSTEMS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">block</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>     </rich_text><rich_text foreground="#008080">DRIVERS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;&quot;</rich_text><rich_text>        
ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>stat</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">28905 18814 1234781 302540 34087 133247 849708 981336 0 218340 1283968</rich_text><rich_text foreground="#804040">&quot;
</rich_text><rich_text>ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>size</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">117210240</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>         ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>removable</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">0</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>        
ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>range</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">64</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>         ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>dev</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">3:0</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>

looking at parent device </rich_text><rich_text foreground="#804040">'</rich_text><rich_text foreground="#ff00ff">/devices/pci0000:00/0000:00:1f.1/ide0/0.0</rich_text><rich_text foreground="#804040">'</rich_text><rich_text>:     </rich_text><rich_text foreground="#008080">
KERNELS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">0.0</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>     </rich_text><rich_text foreground="#008080">SUBSYSTEMS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">ide</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>     </rich_text><rich_text foreground="#008080">DRIVERS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">ide-disk</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>        
ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>modalias</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">ide:m-disk</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>         ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>drivename</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">hda</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>       
ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>media</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">disk</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>   
    
looking at parent device </rich_text><rich_text foreground="#804040">'</rich_text><rich_text foreground="#ff00ff">/devices/pci0000:00/0000:00:1f.1/ide0</rich_text><rich_text foreground="#804040">'</rich_text><rich_text>:     </rich_text><rich_text foreground="#008080">
KERNELS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">ide0</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>     </rich_text><rich_text foreground="#008080">SUBSYSTEMS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;&quot;</rich_text><rich_text>     </rich_text><rich_text foreground="#008080">DRIVERS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;&quot;</rich_text><rich_text>       

looking at parent device </rich_text><rich_text foreground="#804040">'</rich_text><rich_text foreground="#ff00ff">/devices/pci0000:00/0000:00:1f.1</rich_text><rich_text foreground="#804040">'</rich_text><rich_text>:     </rich_text><rich_text foreground="#008080">
KERNELS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">0000:00:1f.1</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>     </rich_text><rich_text foreground="#008080">SUBSYSTEMS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">pci</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>     </rich_text><rich_text foreground="#008080">DRIVERS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">PIIX_IDE</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>        
ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>broken_parity_status</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">0</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>         ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>enable</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">1</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>        
ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>modalias</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">pci:v00008086d000024CAsv0000144Dsd0000C009bc01sc01i8a</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>
ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>local_cpus</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">1</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>         ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>irq</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">11</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>         ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>class</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">0x01018a</rich_text><rich_text foreground="#804040">&quot;
</rich_text><rich_text>ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>subsystem_device</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">0xc009</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>         ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>subsystem_vendor</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">0x144d</rich_text><rich_text foreground="#804040">&quot;
</rich_text><rich_text>ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>device</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">0x24ca</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>         ATTRS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>vendor</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">0x8086</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text> 
      
looking at parent device </rich_text><rich_text foreground="#804040">'</rich_text><rich_text foreground="#ff00ff">/devices/pci0000:00</rich_text><rich_text foreground="#804040">'</rich_text><rich_text>:     </rich_text><rich_text foreground="#008080">
KERNELS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;</rich_text><rich_text foreground="#ff00ff">pci0000:00</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>     </rich_text><rich_text foreground="#008080">SUBSYSTEMS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;&quot;</rich_text><rich_text>     </rich_text><rich_text foreground="#008080">DRIVERS</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">=&quot;&quot;
</rich_text><rich_text>
  举一个例子：假设你想修改USB扫描仪的配置。通过一系列的尝试，你已经为这个扫描仪标识了Linux设备文件(每次打开扫描仪时，名字都会变)。你可以使用上面的命令替换这个正确的Linux设备文件名，
  然后定位输出的采用SYSFS{idVendor}行和SYSFS{idProduct}行。最后你可  以使用这些信息来为这个扫描仪创建新的选项。
    SYSFS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>idVendor</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">0686</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#804040"> </rich_text><rich_text> SYSFS</rich_text><rich_text foreground="#6a5acd">{</rich_text><rich_text>idProduct</rich_text><rich_text foreground="#6a5acd">}</rich_text><rich_text foreground="#804040">==&quot;</rich_text><rich_text foreground="#ff00ff">400e</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#804040"> 
</rich_text><rich_text>    </rich_text><rich_text foreground="#008080">SYMLINK+</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text foreground="#ff00ff">scanner</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#008080">MODE</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text foreground="#ff00ff">0664</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>, </rich_text><rich_text foreground="#804040"> </rich_text><rich_text> </rich_text><rich_text foreground="#008080">group</rich_text><rich_text>=</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text foreground="#ff00ff">scanner</rich_text><rich_text foreground="#804040">&quot;</rich_text><rich_text>
    上面的例子表示将扫描仪的组设置为scanner，访问权限设置为0664,同时创建一个/dev/scanner的符号连接。

</rich_text><rich_text scale="h1" weight="heavy">udev-FAQ</rich_text><rich_text>
问：udev是什么? 它的目的何在?
答：udev是一种工具，它能够根据系统中的硬件设备的状态动态更新设备文件，包括设备文件的创建，删除等。设备文件通常放在/dev目录下。使用udev后，在/dev目录下就只包含系统中真正存在的设备。

问：udev支持什么内核？
答：udev只支持linux-2.6内核，因为udev严重依赖于sysfs文件系统提供的信息，而sysfs文件系统只在linux-2.6内核中才有。

问：udev是一个内核程序还是用户程序？
答：udev是一个用户程序(user-mode daemon)。

问：udev和devfs有什么差别？
答：udev能够实现所有devfs实现的功能。但udev运行在用户模式中，而devfs运行在内核模式中。据称：devfs具有一些不太容易解决的先天缺陷。

问：udev的配置文件放在哪里？
答：udev是一个用户模式程序。它的配置文件是/etc/udev/udev.conf。这个文件一般缺省有这样几项：
udev_root=&quot;/dev&quot; ; udev产生的设备文件的根目录是/dev
 udev_db=&quot;/dev/.udevdb&quot; ; 通过udev产生的设备文件形成的数据库
 udev_rules=&quot;/etc/udev/rules.d&quot; ;用于指导udev工作的规则所在目录。
 udev_log=&quot;err&quot; ;当出现错误时，用syslog记录错误信息。

问：udev的工作过程是怎样的？
答：由于没有研究过udev的源程序，不敢贸然就说udev的工作过程。我只是通过一些网上的资料和udev的说明文档，大致猜测它的工作过程可能是这样的。
当内核检测到在系统中出现了新设备后，内核会在sysfs文件系统中为该新设备生成一项新的记录，一般sysfs文件系统会被mount到/sys目录中。新记录是以一个或多个文件或目录的方式来表示。每个文件都包含有特定的信息。(信息是如何表述的，还要另外研究？)
udev在系统中是以守护进程的方式udevd在运行，它通过某种途径(到底什么途径，目前还没搞懂。)检测到新设备的出现，通过查找设备对应的sysfs中的记录得到设备的一些信息。
udev会根据/etc/udev/udev.conf文件中的udev_rules指定的目录，逐个检查该目录下的文件，这个目录下的文件都是针 对某类或某个设备应该施行什么措施的规则文件。udev读取文件是按照文件名的ASCII字母顺序来读取的，如果udev一旦找到了与新加入的设备匹配的 规则，udev就会根据规则定义的措施对新设备进行配置。同时不再读后续的规则文件。

问：udev的规则文件的语法是怎样的？
答：udev的规则文件以行为单位，以&quot;#&quot;开头的行代表注释行。其余的每一行代表一个规则。每个规则分成一个或多个&quot;匹配&quot;和&quot;赋值&quot;部分。&quot;匹 配&quot;部分用&quot;匹配&quot;专用的关键字来表示，相应的&quot;赋值&quot;部分用&quot;赋值&quot;专用的关键字来表示。&quot;匹配&quot;关键字包 括：ACTION，KERNEL，BUS，SYSFS等等，&quot;赋值&quot;关键字包括：NAME，SYMLINK，OWNER等等。具体详细的描述可以阅读 udev的man文档。
下面举个例子来说明一下，有这样一条规则：SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, SYSFS{address}==&quot;00:0d:87:f6:59:f3″, IMPORT=&quot;/sbin/rename_netiface %k eth0″
 这个规则中的&quot;匹配&quot;部分有三项，分别是SUBSYSTEM，ACTION和SYSFS。而&quot;赋值&quot;部分有一项，是IMPORT。这个规则就是说，当系统 中出现的新硬件属于net子系统范畴，系统对该硬件采取的动作是加入这个硬件，且这个硬件在SYSFS文件系统中的&quot;address&quot;信息等于 &quot;00：0d...&quot;时，对这个硬件在udev层次施行的动作是调用外部程序/sbin/rename_netiface，传递的参数有两个，一个是 &quot;%k&quot;，代表内核对该新设备定义的名称。另一个是&quot;eth0&quot;。     从上面这个例子中可以看出，udev的规则的写法比较灵活的，尤其在&quot;匹配&quot;部分中，可以通过诸如&quot;*&quot;,  &quot;?&quot;,[a-c],[1-9]等shell通配符来灵活匹配多个匹配项。具体的语法可以参考udev的man文档。

问：udev怎样做到不管设备连接的顺序而维持一个统一的设备名？
答：实际上，udev是通过对内核产生的设备名增加别名的方式来达到上述目的的。前面说过，udev是用户模式程序，不会更改内核的行为。因此，内 核依然会我行我素地产生设备名如sda,sdb等。但是，udev可以根据设备的其他信息如总线（bus），生产商（vendor）等不同来区分不同的设 备，并产生设备文件。udev只要为这个设备文件取一个固定的文件名就可以解决这个问题。在后续对设备的操作中，只要引用新的设备名就可以了。但为了保证 最大限度的兼容，一般来说，新设备名总是作为一个对内核自动产生的设备名的符号链接（link）来使用的。
例如：内核产生了sda设备名，而根据信息，这个设备对应于是我的内置硬盘，那我就可以制定udev规则，让udev除了产生/dev/sda设备 文件外，另外创建一个符号链接叫/dev/internalHD。这样，我在fstab文件中，就可以用/dev/internalHD来代替原来的 /dev/sda了。下次，由于某些原因，这个硬盘在内核中变成了sdb设备名了，那也不用着急，udev还会自动产生/dev/internalHD这 个链接，并指向正确的/dev/sdb设备。所有其他的文件像fstab等都不用修改。

问：怎样才能找到这些设备信息，并把他们放到udev的规则文件中来匹配呢？
答：这个问题比较难，网上资料不多，我只找到一篇文章来介绍如何写udev的规则。他的基本方法是通过udevinfo这个实用程序来找到那些可以作为规则文件里的匹配项的项目。有这样两种情况可以使用这个工具：
第一种情况是，当你把设备插入系统后，系统为设备产生了设备名（如/dev/sda）。那样的
 话，你先用udevinfo -q path  -n/dev/sda，命令会产生一个该设备名对应的在sysfs下的路径，如/block/sda。然后，你再用udevinfo -a  -p/sys/block/sda，这个命令会显示一堆信息，信息分成很多块。这些信息实际来自于操作系统维护的sysfs链表，不同的块对应不同的路 径。你就可以用这些信息来作为udev规则文件中的匹配项。但需要注意的是，同一个规则只能使用同一块中显示的信息，不能跨块书写规则。
第二种情况是，不知道系统产生的设备名，那就只有到/sys目录下去逐个目录查找了，反复用udevinfo　-a -p/sys/path...这个命令看信息，如果对应的信息是这个设备的，那就恭喜你。否则就再换个目录。当然，在这种情况下，成功的可能性比较小。

问: udev和devfs是什么关系
 答:  udev完全在用户态(userspace)工作，利用设备加入或移除时内核所发送的hotplug事件(event)来工作。关于设备的详细信息是由内 核输出(export)到位于/sys的sysfs文件系统的。所有的设备命名策略、权限控制和事件处理都是在用户态下完成的。与此相反，devfs是作 为内核的一部分工作的。

问: 如果udev不能完成所有devfs的工作的话，为什么把devfs标记为OBSOLETE/removed?
答: 引用 Al Viro (Linux VFS 内核维护者):
-devfs所做的工作被确信可以在用户态来完成。
 -devfs被加入内核之时，大家寄望它的质量可以迎头赶上。
 -devfs被发现了一些可修复和无法修复的 bug。
 -对于可修复的 bug，几个月前就已经被修复了，其维护者认为一切良好。
 -对于后者，同样是相当常一段时间以来没有改观了。
 -devfs的维护者和作者对它感到失望并且已经停止了对代码的维护工作。

问: 但是当一个并不存在的/dev节点被打开的时候，udev并不能如devfs一样自动加载驱动程序。
 答: 的确如此，但Linux的设计是在设备被发现的时候加载模块，而不是当它被访问的时候。

问: 不过等等，我确实希望 udev 可以在不存在的节点被打开的时候自动加载驱动。这是我使用devfs的唯一原因了。给udev 增加这个功能吧。
 答: 不，udev 是用来管理/dev 的，不是用来加载内核驱动的。

问: 嗨，求你们了。这不难做到的。
 答: 这么个功能对于一个配置正确的计算机是多余的。系统中所有的设备都应该产生hotplug 事件、加载恰当的驱动，而 udev  将会注意到这点并且为它创建对应的设备节点。如果你不想让所有的设备驱动停留在内存之中，应该使用其它东西来管理你的模块(如脚本,  modules.conf, 等等) 这不是udev 的工作。

问: 但是我真的喜欢那个功能，还是加上吧
 答: devfs用的方法导致了大量无用的modprobe尝试，以此程序探测设备是否存在。每个试探性探测都新建一个运行 modprobe 的进程，而几乎所有这些都是无用的。

问: 我喜欢devfs的设备文件命名方式，udev 可以这样命名么?
 答: 可以，udev 可以使用 /dev 的命名策略来创建节点。通过一个配置文件，可以把内核缺省的名字映射到 devfs  的名字。可以看看udev 中带的 udev.rules.devfs 文件。注意: devfs  的命名方式是不被建议并且不被官方支持的，因为它所用的简单枚举设备的方式在设备可能被随时加入或删除的情况下确实是一个比较笨的方法。这些编号代给你的 将只有麻烦，而并不能用来确定设备。看看那个永久性磁盘 (persistentdisk)  的规则就知道如何在用户态下正确的做这件事，而不是傻傻地列出设备。

问: udev 可以为哪些设备创建节点?
 答: 所有在 sysfs 中显示的设备都可以由 udev 来创建节点。如果内核中增加了其它设备的支持，udev  也就自动地可以为它们工作了。现在所有的块设备都在被支持之列，大部分的主字符设备也是被支持的。内核开发者们正致力于让所有的字符设备都被支持。可以到 linux-kernel邮件列表上寻找补丁或是查看补丁的状态。

问: udev 是否会去掉匿名设备数量的限制?
 答: udev 完全工作于用户态。如果内核支持了更多的匿名设备，udev就会支持。

问: udev 是否会支持符号链接?
 答: udev 现在就支持符号链接，每个设备节点拥有多个符号链接也是被支持的。

问: udev如何处理/dev文件系统?
 答: 建议使用一个每次启动系统的时候重新创建的 tmpfs 作为 /dev 的文件系统。不过实际上udev并不关心那种文件系统在被使用。

问: 在 init 运行之前，udev 如何处理设备?
 答: udev 可以被放入 initramfs 之中，并在每个设备被发现的时候运行。也可以让udev 工作在一个真的根分区被加载之后根据 /sys 的内容创建的初始/dev目录之中。

问: 我是否可以利用 udev 在一个 USB 设备被加载的时候自动加载上这个设备?
 答: 技术上讲是可以的，但是 udev 不是用于这个工作的。所有的主流发布版 (distro)都包含了 HAL (</rich_text><rich_text link="webs http://freedesktop.org/wiki/Software_2fhal">http://freedesktop.org/wiki/Software_2fhal</rich_text><rich_text>) 用于这个工作，它也是专门用于监视设备变更的，并且集成进入了桌面软件。
换个角度说，这可以简单的通过 fstab 来实现:/dev/disk/by-label/PENDRIVE /media/PENDRIVE vfat user,noauto 0 0
 这样，用户可以用如下命令来访问设备:
 $mount /media/PENDRIVE
 同样不需要管理员权限，但却拥有了设备的全部访问权限。使用永久性磁盘链接(label, uuid) 将可以指定同一设备，无论其实际上的内核名字是什么。

问: 有什么我需要注意的安全问题么?
 答:  当使用动态设备编号的时候，一个给定的主/从设备号可能在不同时间对应不同的设备，如果一个用户拥有对这个节点的访问权限，并且可以创建一个到这个节点的 硬链接，他就可以如此得到一个这个设备节点的拷贝。当设备被移除之后，udev  删除了设备节点，但硬链接依然存在。如果这个设备节点之后被重新使用不同的访问权限被创建的时候，其硬链接仍然可以使用先前的访问权限来访问。(同样的问 题也存在在使用 PAM 改变访问权限的 login 上。)
简单的解决方案就是通过把 /dev 放在 tmpfs 这样的单独的文件系统之上来防止建立硬链接。

问: 我有其他的关于 udev 的问题，我应该问谁?
 答: linux-hotplug-devel 正是问这些的地方。邮件列表的地址是</rich_text><rich_text link="webs http://mailto:linux-hotplug-devel@lists.sourceforge.net">linux-hotplug-devel@lists.sourceforge.net</rich_text><rich_text> 。
</rich_text></node><node name="ubuntu bluetooth 调试" prog_lang="custom-colors" readonly="False" tags="" unique_id="65"><rich_text>源码：bluez_4.66.orig.tar.gz
</rich_text><rich_text scale="h2" weight="heavy">编译</rich_text><rich_text>
编译bluez-4.66时，在configure时，遇到如下dbus错误：
configure: error: D-Bus library is required

解决方法：
sudo apt-get install libdbus-1-dev libdbus-glib-1-dev
make -j4
最终产生bluetoothd，在src/.libs/目录下。

 
</rich_text><rich_text scale="h2" weight="heavy">运行</rich_text><rich_text>
    在ubuntu下，系统启动时默认已经启动里了bluetoothd，只是这个bluetoothd位于/usr/sbin/下。我们可以用killall -9 bluetoothd将默认启动的bluetoothd干掉，
然后手动
    启动我们自己编译的bluetoothd，经检验，自己编译的bluetoothd也是可以配合运行的，基本配对传文件功能也正常。
我们用./bluetoothd -h查看bluetoothd运行命令，结果如下：
Usage:
   bluetoothd [OPTION...]
 
 Help Options:
   -h, --help            Show help options
 
 Application Options:
   -n, --nodaemon        Don't run as daemon in background
   -d, --debug=DEBUG     Enable debug information output
   -u, --udev            Run from udev mode of operation
 
    最简单的情况下，我们用sudo ./bluetoothd去启动bluetoothd程序。用sudo的原因就不需要讲了，因为程序本身用到里很多root权限。我们用这个命令启动后，
发现程序马上
    就进入后台运行了。在看上面help出来的结果，在后面加上-n参数，这时候发现程序在控制台运行，并且可以用ctrl+c终止程序。这里我主要是为了调试蓝牙模块，
所以用
    控制台跑程序，以便打印一些我要的信息。其他两个参数后面在研究。
 
</rich_text><rich_text scale="h2" weight="heavy">代码解析</rich_text><rich_text>
</rich_text><rich_text foreground="#ff0000">代码解析之：start_sdp_server(mtu, main_opts.deviceid, SDP_SERVER_COMPAT);</rich_text><rich_text>
此部分代码在sdpd-server.c文件中，函数如下：
1. int start_sdp_server(uint16_t mtu, const char *did, uint32_t flags)  
2. {  
3.     int compat = flags &amp; SDP_SERVER_COMPAT;  
4.     int master = flags &amp; SDP_SERVER_MASTER;  
5.   
6.     info(&quot;Starting SDP server&quot;);  
7.   
8.     if (init_server(mtu, master, compat) &lt; 0) {  
9.         error(&quot;Server initialization failed&quot;);  
10.         return -1;  
11.     }  
12.   
13.     if (did &amp;&amp; strlen(did) &gt; 0) {  
14.         const char *ptr = did;  
15.         uint16_t vid = 0x0000, pid = 0x0000, ver = 0x0000;  
16.   
17.         vid = (uint16_t) strtol(ptr, NULL, 16);  
18.         ptr = strchr(ptr, ':');  
19.         if (ptr) {  
20.             pid = (uint16_t) strtol(ptr + 1, NULL, 16);  
21.             ptr = strchr(ptr + 1, ':');  
22.             if (ptr)  
23.                 ver = (uint16_t) strtol(ptr + 1, NULL, 16);  
24.             register_device_id(vid, pid, ver);  
25.         }  
26.     }  
27.   
28.     //create a channel according to socket, just like create a port according to the socket  
29.     //then add io_accept_event func listen to the channel if there are someone connect to  
30.     //the channel, just like we create a port on linux, then we will listen to the port because  
31.     //there maybe someone connect to the port, here we act as a server.  
32.     l2cap_io = g_io_channel_unix_new(l2cap_sock);  
33.     g_io_channel_set_close_on_unref(l2cap_io, TRUE);  
34.   
35.     g_io_add_watch(l2cap_io, G_IO_IN | G_IO_ERR | G_IO_HUP | G_IO_NVAL,  
36.                     io_accept_event, &amp;l2cap_sock);  
37.   
38.     if (compat &amp;&amp; unix_sock &gt; fileno(stderr)) {  
39.         unix_io = g_io_channel_unix_new(unix_sock);  
40.         g_io_channel_set_close_on_unref(unix_io, TRUE);  
41.   
42.         g_io_add_watch(unix_io, G_IO_IN | G_IO_ERR | G_IO_HUP | G_IO_NVAL,  
43.                     io_accept_event, &amp;unix_sock);  
44.     }  
45.   
46.     return 0;  
47. }  
    这个函数在最后创建l2cap_io，并用io_accept_event接口侦听此channel。这里我的理解就类似于linux下我们创建端口port后，
会用listen接口去侦听创建的端口，这样一旦有client连接上来，我们就可以用accept接口去接受连接。这里我觉得应该原理相同，这里无非是用glib库实现而已。

接下来看io_accept_event这个接口：
1. static gboolean io_accept_event(GIOChannel *chan, GIOCondition cond, gpointer data)  
2. {  
3.     GIOChannel *io;  
4.     int nsk;  
5.   
6.     if (cond &amp; (G_IO_HUP | G_IO_ERR | G_IO_NVAL)) {  
7.         g_io_channel_unref(chan);  
8.         return FALSE;  
9.     }  
10.   
11.     if (data == &amp;l2cap_sock) {  
12.         struct sockaddr_l2 addr;  
13.         socklen_t len = sizeof(addr);  
14.   
15.         nsk = accept(l2cap_sock, (struct sockaddr *) &amp;addr, &amp;len);  
16.     } else if (data == &amp;unix_sock) {  
17.         struct sockaddr_un addr;  
18.         socklen_t len = sizeof(addr);  
19.   
20.         nsk = accept(unix_sock, (struct sockaddr *) &amp;addr, &amp;len);  
21.     } else  
22.         return FALSE;  
23.   
24.     if (nsk &lt; 0) {  
25.         error(&quot;Can't accept connection: %s&quot;, strerror(errno));  
26.         return TRUE;  
27.     }  
28.   
29.     //here we accept the connect from client, and then generate a new socket, the new socket  
30.     //is for really data transfer, and here we can see we use io_session_event func to deal with   
31.     //the new socket for processing the coming data.  
32.     io = g_io_channel_unix_new(nsk);  
33.     g_io_channel_set_close_on_unref(io, TRUE);  
34.   
35.     g_io_add_watch(io, G_IO_IN | G_IO_ERR | G_IO_HUP | G_IO_NVAL,  
36.                     io_session_event, data);  
37.   
38.     g_io_channel_unref(io);  
39.   
40.     return TRUE;  
41. }  
这个接口实现接受client过来的连接，并且为这个连接创建新的socket，这个新创建的socket就是用来为这次连接传输数据的。对这次连接数据的处理函数
为其中注册的io_session_event接口。下面看io_session_event数据处理接口：

</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/jmhgg88/article/details/7588995#">view plaincopy</rich_text><rich_text>1. static gboolean io_session_event(GIOChannel *chan, GIOCondition cond, gpointer data)  
2. {  
3.     sdp_pdu_hdr_t hdr;  
4.     uint8_t *buf;  
5.     int sk, len, size;  
6.   
7.     if (cond &amp; G_IO_NVAL)  
8.         return FALSE;  
9.   
10.     sk = g_io_channel_unix_get_fd(chan);  
11.   
12.     if (cond &amp; (G_IO_HUP | G_IO_ERR)) {  
13.         sdp_svcdb_collect_all(sk);  
14.         return FALSE;  
15.     }  
16.   
17.     //first receive the sdp pdu hdr, connecting msg i guess  
18.     len = recv(sk, &amp;hdr, sizeof(sdp_pdu_hdr_t), MSG_PEEK);  
19.     if (len &lt;= 0) {  
20.         sdp_svcdb_collect_all(sk);  
21.         return FALSE;  
22.     }  
23.   
24.     size = sizeof(sdp_pdu_hdr_t) + ntohs(hdr.plen);  
25.     buf = malloc(size);  
26.     if (!buf)  
27.         return TRUE;  
28.   
29.     //then receive the real data  
30.     len = recv(sk, buf, size, 0);  
31.     if (len &lt;= 0) {  
32.         sdp_svcdb_collect_all(sk);  
33.         free(buf);  
34.         return FALSE;  
35.     }  
36.   
37.     //here we will process the data  
38.     handle_request(sk, buf, len);  
39.   
40.     return TRUE;  
41. }  
这里首先recv了sdp头结构数据，然后再recv其他数据。我们看到他真正处理的是第二次接收的数据。把数据传送给接口handle_request处理。handle_request接口将上面recv到的数据转化为
sdp_req_t结构体，然后辗转调用到process_request这个函数，并将sdp_req_t结构传入，sdp_req_t结构如下：
</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/jmhgg88/article/details/7588995#">view plaincopy</rich_text><rich_text>1. typedef struct request {  
2.     bdaddr_t device;  
3.     bdaddr_t bdaddr;  
4.     int      local;  
5.     int      sock;  
6.     int      mtu;  
7.     int      flags;  
8.     uint8_t  *buf;  
9.     int      len;  
10. } sdp_req_t;  
下面看一下process_request这个函数：
</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/jmhgg88/article/details/7588995#">view plaincopy</rich_text><rich_text>1. static void process_request(sdp_req_t *req)  
2. {  
3.     sdp_pdu_hdr_t *reqhdr = (sdp_pdu_hdr_t *)req-&gt;buf;  
4.     sdp_pdu_hdr_t *rsphdr;  
5.     sdp_buf_t rsp;  
6.     uint8_t *buf = malloc(USHRT_MAX);  
7.     int sent = 0;  
8.     int status = SDP_INVALID_SYNTAX;  
9.   
10.     //prepare the response struct, init the response data  
11.     memset(buf, 0, USHRT_MAX);  
12.     rsp.data = buf + sizeof(sdp_pdu_hdr_t);  
13.     rsp.data_size = 0;  
14.     rsp.buf_size = USHRT_MAX - sizeof(sdp_pdu_hdr_t);  
15.     rsphdr = (sdp_pdu_hdr_t *)buf;  
16.   
17.     if (ntohs(reqhdr-&gt;plen) != req-&gt;len - sizeof(sdp_pdu_hdr_t)) {  
18.         status = SDP_INVALID_PDU_SIZE;  
19.         goto send_rsp;  
20.     }  
21.     //here do all kinds of process according to the pdu id  
22.     switch (reqhdr-&gt;pdu_id) {  
23.     case SDP_SVC_SEARCH_REQ:  
24.         SDPDBG(&quot;Got a svc srch req&quot;);  
25.         status = service_search_req(req, &amp;rsp);  
26.         rsphdr-&gt;pdu_id = SDP_SVC_SEARCH_RSP;  
27.         break;  
28.     case SDP_SVC_ATTR_REQ:  
29.         SDPDBG(&quot;Got a svc attr req&quot;);  
30.         status = service_attr_req(req, &amp;rsp);  
31.         rsphdr-&gt;pdu_id = SDP_SVC_ATTR_RSP;  
32.         break;  
33.     case SDP_SVC_SEARCH_ATTR_REQ:  
34.         SDPDBG(&quot;Got a svc srch attr req&quot;);  
35.         status = service_search_attr_req(req, &amp;rsp);  
36.         rsphdr-&gt;pdu_id = SDP_SVC_SEARCH_ATTR_RSP;  
37.         break;  
38.     /* Following requests are allowed only for local connections */  
39.     case SDP_SVC_REGISTER_REQ:  
40.         SDPDBG(&quot;Service register request&quot;);  
41.         if (req-&gt;local) {  
42.             status = service_register_req(req, &amp;rsp);  
43.             rsphdr-&gt;pdu_id = SDP_SVC_REGISTER_RSP;  
44.         }  
45.         break;  
46.     case SDP_SVC_UPDATE_REQ:  
47.         SDPDBG(&quot;Service update request&quot;);  
48.         if (req-&gt;local) {  
49.             status = service_update_req(req, &amp;rsp);  
50.             rsphdr-&gt;pdu_id = SDP_SVC_UPDATE_RSP;  
51.         }  
52.         break;  
53.     case SDP_SVC_REMOVE_REQ:  
54.         SDPDBG(&quot;Service removal request&quot;);  
55.         if (req-&gt;local) {  
56.             status = service_remove_req(req, &amp;rsp);  
57.             rsphdr-&gt;pdu_id = SDP_SVC_REMOVE_RSP;  
58.         }  
59.         break;  
60.     default:  
61.         error(&quot;Unknown PDU ID : 0x%x received&quot;, reqhdr-&gt;pdu_id);  
62.         status = SDP_INVALID_SYNTAX;  
63.         break;  
64.     }  
65.   
66. send_rsp:  
67.     //fill in the response data and then send rsp the the client  
68.     if (status) {  
69.         rsphdr-&gt;pdu_id = SDP_ERROR_RSP;  
70.         bt_put_unaligned(htons(status), (uint16_t *)rsp.data);  
71.         rsp.data_size = sizeof(uint16_t);  
72.     }  
73.   
74.     SDPDBG(&quot;Sending rsp. status %d&quot;, status);  
75.   
76.     rsphdr-&gt;tid  = reqhdr-&gt;tid;  
77.     rsphdr-&gt;plen = htons(rsp.data_size);  
78.   
79.     /* point back to the real buffer start and set the real rsp length */  
80.     rsp.data_size += sizeof(sdp_pdu_hdr_t);  
81.     rsp.data = buf;  
82.   
83.     /* stream the rsp PDU */  
84.     sent = send(req-&gt;sock, rsp.data, rsp.data_size, 0);  
85.   
86.     SDPDBG(&quot;Bytes Sent : %d&quot;, sent);  
87.   
88.     free(rsp.data);  
89.     free(req-&gt;buf);  
90. }  
这个函数简单明了，首先初始化要返回的数据结构体，然后根据请求做出相应的动作，最后填充完rsp数据并发送给client。这里涉及到的客户端处理请求有以下几种：
</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/jmhgg88/article/details/7588995#">view plaincopy</rich_text><rich_text>1. /* 
2.  * The PDU identifiers of SDP packets between client and server 
3.  */  
4. #define SDP_ERROR_RSP       0x01  
5. #define SDP_SVC_SEARCH_REQ  0x02  
6. #define SDP_SVC_SEARCH_RSP  0x03  
7. #define SDP_SVC_ATTR_REQ    0x04  
8. #define SDP_SVC_ATTR_RSP    0x05  
9. #define SDP_SVC_SEARCH_ATTR_REQ 0x06  
10. #define SDP_SVC_SEARCH_ATTR_RSP 0x07  
有搜索请求，属性请求，搜索属性请求。怎么请求会回应在一起定义？今天到这里。。。

</rich_text><rich_text foreground="#ff0000">
 </rich_text><rich_text>
</rich_text><rich_text foreground="#ff0000">代码解析之：plugin_init(config);</rich_text><rich_text>
 
此函数定义在当前目录下plugin.c文件里面，主要的工作是将提供的plugins添加到plugins全局链表中，并初始化每个plugins：

</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/jmhgg88/article/details/7588995#">view plaincopy</rich_text><rich_text>1. gboolean plugin_init(GKeyFile *config)  
2. {  
3.     GSList *list;  
4.     GDir *dir;  
5.     const gchar *file;  
6.     gchar **disabled;  
7.     unsigned int i;  
8.   
9.     /* Make a call to BtIO API so its symbols got resolved before the 
10.      * plugins are loaded. */  
11.     bt_io_error_quark();  
12.   
13.     if (config)  
14.         disabled = g_key_file_get_string_list(config, &quot;General&quot;,  
15.                             &quot;DisablePlugins&quot;,  
16.                             NULL, NULL);  
17.     else  
18.         disabled = NULL;  
19.   
20.     DBG(&quot;Loading builtin plugins&quot;);  
21.   
22.     //add default plugins, those plugins always need for bluetoothd runing  
23.     //those plugins will add to the global link named plugins  
24.     for (i = 0; &lt;span style=&quot;color:#990000;&quot;&gt;&lt;strong&gt;__bluetooth_builtin&lt;/strong&gt;&lt;/span&gt;[i]; i++) {  
25.         if (is_disabled(__bluetooth_builtin[i]-&gt;name, disabled))  
26.             continue;  
27.   
28.         &lt;span style=&quot;color:#990000;&quot;&gt;&lt;strong&gt;add_plugin(NULL,  __bluetooth_builtin[i]);&lt;/strong&gt;&lt;/span&gt;  
29.     }  
30.   
31.     if (strlen(PLUGINDIR) == 0) {  
32.         g_strfreev(disabled);  
33.         goto start;  
34.     }  
35.   
36.     DBG(&quot;Loading plugins %s&quot;, PLUGINDIR);  
37.   
38.     dir = g_dir_open(PLUGINDIR, 0, NULL);  
39.     if (!dir) {  
40.         g_strfreev(disabled);  
41.         goto start;  
42.     }  
43.   
44.     //add user plugins, those plugins stored in PLUGINDIR path, and the   
45.     //PLUGINDIR = /usr/local/lib/bluetooth/plugins. The bluetoothd will  
46.     //find all those plugins which name *.so, and open them, get the method  
47.     //named bluetooth_plugin_desc, it will also add those plugins to the  
48.     //plugins links.  
49.     while ((file = g_dir_read_name(dir)) != NULL) {  
50.         struct bluetooth_plugin_desc *desc;  
51.         void *handle;  
52.         gchar *filename;  
53.   
54.         if (g_str_has_prefix(file, &quot;lib&quot;) == TRUE ||  
55.                 g_str_has_suffix(file, &quot;.so&quot;) == FALSE)  
56.             continue;  
57.   
58.         if (is_disabled(file, disabled))  
59.             continue;  
60.   
61.         filename = g_build_filename(PLUGINDIR, file, NULL);  
62.   
63.         handle = dlopen(filename, RTLD_NOW);  
64.         if (handle == NULL) {  
65.             error(&quot;Can't load plugin %s: %s&quot;, filename,  
66.                                 dlerror());  
67.             g_free(filename);  
68.             continue;  
69.         }  
70.   
71.         g_free(filename);  
72.   
73.         desc = dlsym(handle, &quot;bluetooth_plugin_desc&quot;);  
74.         if (desc == NULL) {  
75.             error(&quot;Can't load plugin description: %s&quot;, dlerror());  
76.             dlclose(handle);  
77.             continue;  
78.         }  
79.   
80.         if (add_plugin(handle, desc) == FALSE)  
81.             dlclose(handle);  
82.     }  
83.   
84.     g_dir_close(dir);  
85.   
86.     g_strfreev(disabled);  
87.   
88. start:  
89.     //init all of the plugins by calling the plugins init function  
90.     for (list = plugins; list; list = list-&gt;next) {  
91.         struct bluetooth_plugin *plugin = list-&gt;data;  
92.   
93.         if (plugin-&gt;desc-&gt;init() &lt; 0) {  
94.             error(&quot;Failed to init %s plugin&quot;, plugin-&gt;desc-&gt;name);  
95.             continue;  
96.         }  
97.   
98.         plugin-&gt;active = TRUE;  
99.     }  
100.   
101.     return TRUE;  
102. }  
可以看到，这个函数执行的最终结果会生成plugins全局链表。从函数中可以看到，它是通过add_plugin()函数将__bluetooth_builtin[]数组中的成员添加到plugins全局变量中的。__bluetooth_builtin具体是什么东西呢？看它的定义，这个数组定义在builtin.h文件中，如下：
</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/jmhgg88/article/details/7588995#">view plaincopy</rich_text><rich_text>1. extern struct bluetooth_plugin_desc __bluetooth_builtin_audio;  
2. extern struct bluetooth_plugin_desc __bluetooth_builtin_input;  
3. extern struct bluetooth_plugin_desc __bluetooth_builtin_serial;  
4. extern struct bluetooth_plugin_desc __bluetooth_builtin_network;  
5. extern struct bluetooth_plugin_desc __bluetooth_builtin_service;  
6. extern struct bluetooth_plugin_desc __bluetooth_builtin_hciops;  
7. extern struct bluetooth_plugin_desc __bluetooth_builtin_hal;  
8. extern struct bluetooth_plugin_desc __bluetooth_builtin_storage;  
9.   
10. static struct bluetooth_plugin_desc *__bluetooth_builtin[] = {  
11.   &amp;__bluetooth_builtin_audio,  
12.   &amp;__bluetooth_builtin_input,  
13.   &amp;__bluetooth_builtin_serial,  
14.   &amp;__bluetooth_builtin_network,  
15.   &amp;__bluetooth_builtin_service,  
16.   &amp;__bluetooth_builtin_hciops,  
17.   &amp;__bluetooth_builtin_hal,  
18.   &amp;__bluetooth_builtin_storage,  
19.   NULL  
20. };  
搜索整个代码工程，都无法找到__bluetooth_builtin_audio等等变量的定义。看这些成员都是extern应用，定义肯定在外部。要看看它们具体是怎么定义的，首先要知道如下#define定义：</rich_text><rich_text link="webs http://blog.csdn.net/jmhgg88/article/details/7605379">#define中的##使用</rich_text><rich_text>。在了解里这个定义后，看下其中一个（其他类似）如__bluetooth_builtin_audio，来看一下以下这个文件：audio/main.c。这个文件中最下面有个宏定义：
</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/jmhgg88/article/details/7588995#">view plaincopy</rich_text><rich_text>1. BLUETOOTH_PLUGIN_DEFINE(audio, VERSION,  
2.             BLUETOOTH_PLUGIN_PRIORITY_DEFAULT, audio_init, audio_exit)  
这个宏定义在src/plugin.h文件中，如下：
</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/jmhgg88/article/details/7588995#">view plaincopy</rich_text><rich_text>1. #ifdef BLUETOOTH_PLUGIN_BUILTIN  
2. #define BLUETOOTH_PLUGIN_DEFINE(name, version, priority, init, exit) \  
3.         struct bluetooth_plugin_desc __bluetooth_builtin_ ## name = { \  
4.             #name, version, priority, init, exit \  
5.         };  
6. #else  
7. #define BLUETOOTH_PLUGIN_DEFINE(name, version, priority, init, exit) \  
8.         extern struct bluetooth_plugin_desc bluetooth_plugin_desc \  
9.                 __attribute__ ((visibility(&quot;default&quot;))); \  
10.         struct bluetooth_plugin_desc bluetooth_plugin_desc = { \  
11.             #name, version, priority, init, exit \  
12.         };  
13. #endif  
根据</rich_text><rich_text link="webs http://blog.csdn.net/jmhgg88/article/details/7605379">#define中的##使用</rich_text><rich_text>这个语法，可以知道__bluetooth_builtin_audio结构体变量定义就是audio/main.c中这个宏，并且已经为这个结构体变量附好了初值（见audio/main.c宏定义中对应的参数值）。

 
代码解析之：adapter_ops_setup()
首先看函数定义：

</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/jmhgg88/article/details/7588995#">view plaincopy</rich_text><rich_text>1. int adapter_ops_setup(void)  
2. {  
3.     if (!adapter_ops)  
4.         return -EINVAL;  
5.   
6.     return adapter_ops-&gt;setup();  
7. }  
函数很简单，执行了setup函数指针。这里主要看adapter_ops这个全局变量何时被赋值。从上一个函数plugin_init介绍，提到在将全局__bluetooth_builtin[]数组加载到plugins后，最后会依次执行各个plugins的init函数。看下加载__bluetooth_builtin_hciops时，调用的init函数，这个函数定义在plugins/hciops.c中，即hciops_init函数。这个函数将传入的静态全局变量hci_ops赋值给了adapter_ops，所以变量adapter_ops即变量hci_ops。所以此处调用adapter_ops-&gt;setup()，即调用hciops.c中的hciops_setup函数。看hciops_setup函数定义如下：

</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/jmhgg88/article/details/7588995#">view plaincopy</rich_text><rich_text>1. static int hciops_setup(void)  
2. {  
3.     struct sockaddr_hci addr;  
4.     struct hci_filter flt;  
5.     GIOChannel *ctl_io, *child_io;  
6.     int sock, err;  
7.   
8. info(&quot;hciops_setup\n&quot;);  
9.   
10.     if (child_pipe[0] != -1)  
11.         return -EALREADY;  
12.   
13.     if (pipe(child_pipe) &lt; 0) {  
14.         err = errno;  
15.         error(&quot;pipe(): %s (%d)&quot;, strerror(err), err);  
16.         return -err;  
17.     }  
18.   
19.     child_io = g_io_channel_unix_new(child_pipe[0]);  
20.     g_io_channel_set_close_on_unref(child_io, TRUE);  
21.     child_io_id = g_io_add_watch(child_io,  
22.                 G_IO_IN | G_IO_ERR | G_IO_HUP | G_IO_NVAL,  
23.                 child_exit, NULL);  
24.     g_io_channel_unref(child_io);  
25.   
26.     /* Create and bind HCI socket */  
27.     sock = socket(AF_BLUETOOTH, SOCK_RAW, BTPROTO_HCI);  
28.     if (sock &lt; 0) {  
29.         err = errno;  
30.         error(&quot;Can't open HCI socket: %s (%d)&quot;, strerror(err),  
31.                                 err);  
32.         return -err;  
33.     }  
34.   
35.     /* Set filter */  
36.     hci_filter_clear(&amp;flt);  
37.     hci_filter_set_ptype(HCI_EVENT_PKT, &amp;flt);  
38.     hci_filter_set_event(EVT_STACK_INTERNAL, &amp;flt);  
39.     if (setsockopt(sock, SOL_HCI, HCI_FILTER, &amp;flt,  
40.                             sizeof(flt)) &lt; 0) {  
41.         err = errno;  
42.         error(&quot;Can't set filter: %s (%d)&quot;, strerror(err), err);  
43.         return -err;  
44.     }  
45.   
46.     memset(&amp;addr, 0, sizeof(addr));  
47.     addr.hci_family = AF_BLUETOOTH;  
48.     addr.hci_dev = HCI_DEV_NONE;  
49.     if (bind(sock, (struct sockaddr *) &amp;addr,  
50.                             sizeof(addr)) &lt; 0) {  
51.         err = errno;  
52.         error(&quot;Can't bind HCI socket: %s (%d)&quot;,  
53.                             strerror(err), err);  
54.         return -err;  
55.     }  
56.   
57.     ctl_io = g_io_channel_unix_new(sock);  
58.     g_io_channel_set_close_on_unref(ctl_io, TRUE);  
59.   
60.     ctl_io_id = g_io_add_watch(ctl_io, G_IO_IN, io_stack_event, NULL);  
61.   
62.     g_io_channel_unref(ctl_io);  
63.   
64.     /* Initialize already connected devices */  
65.     return init_known_adapters(sock);  
66. }  
这个函数首先创建里一个管道，这个管道通向哪里目前尚未知。然后为HCI层创建里一个sock，绑定一个channel：ctl_io，并用io_stack_event事件处理来处理从这个channel获取的数据。最后初始化HCI适配器，init_known_adapters。下面看以下初始化HCI适配器的函数：

</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/jmhgg88/article/details/7588995#">view plaincopy</rich_text><rich_text>1. static int init_known_adapters(int ctl)  
2. {  
3.     struct hci_dev_list_req *dl;  
4.     struct hci_dev_req *dr;  
5.     int i, err;  
6.   
7. info(&quot;init_known_adapters\n&quot;);  
8.   
9.     dl = g_try_malloc0(HCI_MAX_DEV * sizeof(struct hci_dev_req) + sizeof(uint16_t));  
10.     if (!dl) {  
11.         err = errno;  
12.         error(&quot;Can't allocate devlist buffer: %s (%d)&quot;,  
13.                             strerror(err), err);  
14.         return -err;  
15.     }  
16.   
17.     dl-&gt;dev_num = HCI_MAX_DEV;  
18.     dr = dl-&gt;dev_req;  
19.   
20.     if (ioctl(ctl, HCIGETDEVLIST, (void *) dl) &lt; 0) {  
21.         err = errno;  
22.         error(&quot;Can't get device list: %s (%d)&quot;,  
23.                             strerror(err), err);  
24.         g_free(dl);  
25.         return -err;  
26.     }  
27.   
28.     for (i = 0; i &lt; dl-&gt;dev_num; i++, dr++) {  
29.         device_event(HCI_DEV_REG, dr-&gt;dev_id);  
30.   
31.         if (hci_test_bit(HCI_UP, &amp;dr-&gt;dev_opt))  
32.             device_event(HCI_DEV_UP, dr-&gt;dev_id);  
33.     }  
34.   
35.     g_free(dl);  
36.     return 0;  
37. }  
从函数中可以看出，这里支持最大HCI设备个数为16个，即HCI_MAX_DEV的值。这里用ioctl从驱动部分取得真正HCI适配器，获取的HCI设备列表是hci_dev_req链表。然后循环链表，用device_event函数依次注册并启动HCI设备。


代码解析之：rfkill_init()

</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/jmhgg88/article/details/7588995#">view plaincopy</rich_text><rich_text>1. void rfkill_init(void)  
2. {  
3.     int fd;  
4.   
5.     if (!main_opts.remember_powered)  
6.         return;  
7.   
8.     fd = open(&quot;/dev/rfkill&quot;, O_RDWR);  
9.     if (fd &lt; 0) {  
10.         error(&quot;Failed to open RFKILL control device&quot;);  
11.         return;  
12.     }  
13.   
14.     channel = g_io_channel_unix_new(fd);  
15.     g_io_channel_set_close_on_unref(channel, TRUE);  
16.   
17.     g_io_add_watch(channel, G_IO_IN | G_IO_NVAL | G_IO_HUP | G_IO_ERR,  
18.                             rfkill_event, NULL);  
19. }  
这个函数打开了/dev/rfkill文件，该文件主要用来暂未知（猜测是控制上电吧）。对文件操作用rfkill_event事件处理函数来处理。要看rfkill_event事件处理函数，先看下如下结构体：

</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/jmhgg88/article/details/7588995#">view plaincopy</rich_text><rich_text>1. struct rfkill_event {  
2.     uint32_t idx;  
3.     uint8_t  type;  
4.     uint8_t  op;  
5.     uint8_t  soft;  
6.     uint8_t  hard;  
7. };  
</rich_text></node><node name="Udev描述" prog_lang="custom-colors" readonly="False" tags="" unique_id="77"><rich_text>现代Linux发行版可以在已经运行的系统里面识别一个新加入的硬件。有许多用户友好的发行版，比如Ubuntu，可以在像iPod这样的移动设备插入系统时自动运行指定的应用程序，比如Rhythmbox。 

 
Linux发行版里面的热插拔（这个词用于描述将设备插入已经运行的系统的过程）功能是三个组件的融合：Udev, HAL, and Dbus.


Udev为已经连接在系统上面的设备节点提供一个动态设备目录。当设备插入或移出系统的时候，Udev就在  /dev目录下面创建或者删除设备节点文件。Dbus类似于系统总线，主要用于进程间通信。HAL从Udev的服务中获取信息，当一个设备连接到系统时它   就创建关于这个设备的XML描述。然后它会通过Dbus通知相应的桌面应用程序，比如说Nautilus，Nautius则会打开这个新挂载设备上面的文  件。


本文只关注Udev, 是它完成了基本的设备识别。



</rich_text><rich_text scale="h2">什么是Udev?</rich_text><rich_text>
Udev是Linux 2.6内核的设备管理器，它在/dev目录下动态地创建/移除设备节点。它是devfs和hotplug的继承者，运行在用户空间，并且用户可以用Udev规则来改变设备的命名。


Udev依赖2.5内核引入的sysfs文件系统。sysfs是的设备在用户空间可见。每当一个设备被加入或移除，就会产生内核事件通知用户空间的Udev。


在早期的发行中常使用一个外部二进制文件/sbin/hotplug来将设备状态的改变通知Udev。现在这个工具已经被替换掉，Udev可以通过Netlink直接监听这些事件了。


</rich_text><rich_text scale="h2">为什么我们需要它 ?</rich_text><rich_text>
在早期的内核中/dev目录包括一些静态的设备文件。而使用动态设备创建后，只有那些真正存在于系统中的设备节点才会被创建。让我们来看看静态/dev目录的缺点，正是这些缺点导致了Udev的开发。


</rich_text><rich_text scale="h3">在/dev的设备节点中精确辨别一个硬件设备的问题</rich_text><rich_text>
在系统启动过程中，内核会为一个识别到的硬件设备分配一个主/次设备号对。让我们考虑两个硬盘，连接/校准的的方式是一个连接到主接口，另一个连接   到从接口。Linux系统会称它们为/dev/hda和/dev/hdb。现在，如果我们交换两个磁盘，那么它们的设备名也会改变。这使得将一个可用的动  态设备节点定位到正确的设备发生困难。当有一堆的硬盘连接在系统时，情况会变得更加糟糕。
Udev通过/dev目录提供了一个永久性设备命名系统，使得定位设备变得容易。
 
 下面是一个例子，显示了Udev为接入系统的硬盘创建的永久性符号链接。
 
$ ls -lR /dev/disk/
/dev/disk/by-id:
lrwxrwxrwx 1 root root 9 Jul 4 06:48 scsi-SATA_WDC_WD800JD-75M_WD-WMAM9UT48593 -&gt; ../../sda 
lrwxrwxrwx 1 root root 10 Jul 4 06:48 scsi-SATA_WDC_WD800JD-75M_WD-WMAM9UT48593-part1 -&gt; ../../sda1
lrwxrwxrwx 1 root root 10 Jul 4 06:48 scsi-SATA_WDC_WD800JD-75M_WD-WMAM9UT48593-part2 -&gt; ../../sda2
lrwxrwxrwx 1 root root 10 Jul 4 06:48 scsi-SATA_WDC_WD800JD-75M_WD-WMAM9UT48593-part3 -&gt; ../../sda3
lrwxrwxrwx 1 root root 10 Jul 4 06:48 scsi-SATA_WDC_WD800JD-75M_WD-WMAM9UT48593-part4 -&gt; ../../sda4
lrwxrwxrwx 1 root root 10 Jul 4 06:48 scsi-SATA_WDC_WD800JD-75M_WD-WMAM9UT48593-part5 -&gt; ../../sda5
lrwxrwxrwx 1 root root 10 Jul 4 06:48 scsi-SATA_WDC_WD800JD-75M_WD-WMAM9UT48593-part6 -&gt; ../../sda6
lrwxrwxrwx 1 root root 10 Jul 4 06:48 scsi-SATA_WDC_WD800JD-75M_WD-WMAM9UT48593-part7 -&gt; ../../sda7
/dev/disk/by-label:
lrwxrwxrwx 1 root root 10 Jul 4 06:48 1 -&gt; ../../sda6
lrwxrwxrwx 1 root root 10 Jul 4 06:48 boot1 -&gt; ../../sda2
lrwxrwxrwx 1 root root 10 Jul 4 06:48 project -&gt; ../../sda3
lrwxrwxrwx 1 root root 10 Jul 4 06:48 SWAP-sda7 -&gt; ../../sda7
/dev/disk/by-path:
lrwxrwxrwx 1 root root 9 Jul 4 06:48 pci-0000:00:1f.2-scsi-0:0:0:0 -&gt; ../../sda
lrwxrwxrwx 1 root root 10 Jul 4 06:48 pci-0000:00:1f.2-scsi-0:0:0:0-part1 -&gt; ../../sda1
lrwxrwxrwx 1 root root 10 Jul 4 06:48 pci-0000:00:1f.2-scsi-0:0:0:0-part2 -&gt; ../../sda2
lrwxrwxrwx 1 root root 10 Jul 4 06:48 pci-0000:00:1f.2-scsi-0:0:0:0-part3 -&gt; ../../sda3
lrwxrwxrwx 1 root root 10 Jul 4 06:48 pci-0000:00:1f.2-scsi-0:0:0:0-part4 -&gt; ../../sda4
lrwxrwxrwx 1 root root 10 Jul 4 06:48 pci-0000:00:1f.2-scsi-0:0:0:0-part5 -&gt; ../../sda5
lrwxrwxrwx 1 root root 10 Jul 4 06:48 pci-0000:00:1f.2-scsi-0:0:0:0-part6 -&gt; ../../sda6
lrwxrwxrwx 1 root root 10 Jul 4 06:48 pci-0000:00:1f.2-scsi-0:0:0:0-part7 -&gt; ../../sda7
/dev/disk/by-uuid:
lrwxrwxrwx 1 root root 10 Jul 4 06:48 18283DC6283DA422 -&gt; ../../sda1
lrwxrwxrwx 1 root root 10 Jul 4 06:48 25a4068c-e84a-44ac-85e6-461b064d08cd -&gt; ../../sda6
lrwxrwxrwx 1 root root 10 Jul 4 06:48 3ea7cf15-511b-407a-a56b-c6bfa046fd9f -&gt; ../../sda5
lrwxrwxrwx 1 root root 10 Jul 4 06:48 8878a0a4-604e-4ddf-b62c-637c4fa84d3f -&gt; ../../sda2
lrwxrwxrwx 1 root root 10 Jul 4 06:48 e50bcd6d-61ea-4b05-81a8-3cbe17ad6674 -&gt; ../../sda3永久性设备命名为识别硬件设备省去了很多麻烦。 

 

</rich_text><rich_text scale="h3">/dev中的巨多设备节点</rich_text><rich_text>
在设备节点的静态创建模型中，没有办法可以分辨出硬件设备是否真的存在于系统之中。因此，所有这会儿被Linux认识的设备都会创建好设备节点。/dev中巨大数目的设备节点使得鉴别一个系统中存在的设备变得困难。



</rich_text><rich_text scale="h3">主/次设备号对不够了</rich_text><rich_text>
近年来需要包含的静态设备节点的数目增加得太多，以至于以前所使用的8位模式用来处理所有的设备变得不够用了。因此主/次设备号对开始用光了。


字符设备和块设备拥有固定分配的主/次设备号对。分配主/次设备号对的官方机构是</rich_text><rich_text link="webs http://www.lanana.org/docs/device-list/devices.txt">Linux Assigned Name and Number Authority</rich_text><rich_text>。但是，一台机器不会使用所有可能的设备，因此一个系统中肯定有未使用的主/次设备号。在这种情况下，那台机器的内核就可以借用那些未使用设备的主/次设备号，给其他一些需要的设备。


有时候这样会产生问题。因为用户空间操作设备的应用程序未必会感知设备号的变化。对于用户空间的程序，LANANA分配的设备号非常重要。因此，主/次设备号的改变必须通知这些应用程序。这被称为主/次设备号的动态分配，Udev完成了这项任务。


</rich_text><rich_text scale="h2">Udev的目标</rich_text><rich_text>
    • 运行在用户空间.
    • 创建永久性设备名, 将设备命名葱内核空间剥离，并且基于设备命名实现一些规则.
    • 在/dev中为存在于系统的设备动态创建设备节点，并且为之动态分配主/次设备号.
    • 提供用户空间的API，用于访问系统中的设备信息.

</rich_text><rich_text scale="h2"> </rich_text><rich_text>

</rich_text><rich_text scale="h2">安装Udev</rich_text><rich_text>
Udev是2.6内核中的缺省设备管理器。几乎所有的现代Linux发行版都会将Udev作为默认安装的一部分。你也可以从</rich_text><rich_text link="webs http://www.kernel.org/pub/linux/utils/kernel/hotplug/">http://www.kernel.org/pub/linux/utils/kernel/hotplug/</rich_text><rich_text>这里获取Udev。最新版本的Udev需要2.6.25的内核，并且开启了sysfs, procfs, signalfd, inotify, Unix domain sockets, networking和 hotplug的支持。

CONFIG_HOTPLUG=y
CONFIG_UEVENT_HELPER_PATH=”&quot;
CONFIG_NET=y
CONFIG_UNIX=y
CONFIG_SYSFS=y
CONFIG_SYSFS_DEPRECATED*=n
CONFIG_PROC_FS=y
CONFIG_TMPFS=y
CONFIG_TMPFS_POSIX_ACL=y 
CONFIG_INOTIFY=y
CONFIG_SIGNALFD=y作为一个更加可靠的操作，内核必须不使用CONFIG_SYSFS_DEPRECATED*选项。
Udev依赖于proc和sys文件系统，并且它们必须挂载在/proc和/sys。



</rich_text><rich_text scale="h2">Udev的工作</rich_text><rich_text>
Udev守护进程监听一个netlink套接字，这个套接字是内核用来与用户空间的应用程序进行通信的。当一个设备被加入或移出系统时，内核可能会  通过这个netlink套接字发送一大堆的数据。Udev守护进程截取所有这些数据并完成剩下的工作，也就是创建设备节点，加载模块，等等。



</rich_text><rich_text scale="h2">内核设备事件管理</rich_text><rich_text>
    • 启动初始化时, /dev目录使用tmpfs挂载.
    • 然后, Udev拷贝/lib/udev/devices 的静态设备节点到 /dev 目录.
    • Udev守护进程开始运行，为所有连接到系统的设备收集来自内核的uevents.
    • Udev守护进程解析uevent数据，并且对/etc/udev/rules.d中指定的规则进行匹配.
    • 根据指定的规则为设备创建设备节点和符号链接.
    • Udev守护进程读取/etc/udev/rules.d/*.rules 中的规则并且保存到内存里面.
    • Udev接收接收inotify事件，如果某个规则发生了改变，读取这些改变并更新内存副本.

</rich_text><rich_text scale="h2"> </rich_text><rich_text>

</rich_text><rich_text scale="h2">设备驱动程序加载</rich_text><rich_text>

</rich_text><rich_text scale="h3">Udev使用modalias方法来加载设备驱动程序. 位于/lib/modules/`uname -r`/modules.alias 的modalias文件用于协助Udev加载设备驱动. modalias文件由depmod命令创建，包括了设备驱动的别名。</rich_text><rich_text>
让我们检查一个Linux设备驱动加载的例子：
我使用一个C程序来从netlink套接字收集数据，并且使用它们来创建设备节点以及加载模块。
[root@arch ~]# ./a.out
add@/devices/pci0000:00/0000:00:02.1/usb1/1-4
ACTION=add
DEVPATH=/devices/pci0000:00/0000:00:02.1/usb1/1-4
SUBSYSTEM=usb
MAJOR=189
MINOR=1
DEVTYPE=usb_device
DEVICE=/proc/bus/usb/001/002
PRODUCT=1058/1010/105
TYPE=0/0/0
BUSNUM=001
DEVNUM=002
SEQNUM=1163
add@/devices/pci0000:00/0000:00:02.1/usb1/1-4/1-4:1.0
ACTION=add
DEVPATH=/devices/pci0000:00/0000:00:02.1/usb1/1-4/1-4:1.0
SUBSYSTEM=usb
DEVTYPE=usb_interface
DEVICE=/proc/bus/usb/001/002
PRODUCT=1058/1010/105 …………………………………………
你可以看到它提供了很多关于这个设备的信息。这其中包括了用来告诉Udev加载某个特定模块的modalias变量。


modalias数据看起来像这样:
MODALIAS=pci:v000010ECd00008169sv00001385sd0000311Abc02sc00i00The modalias data contains all the information required to find the corresponding device driver :
pci :- 这是一个PCI设备 
v :- 设备的厂商ID. 在这里就是 000010EC ( 即 10EC )
d :- 设备的设备ID. 在这里就是 00008169 ( 即 8169 )
sv 和 sd 是厂商和设备的子系统版本号. 
依据ID查找一个PCI设备的厂商/产品的最好地方是 </rich_text><rich_text link="webs http://www.pcidatabase.com/">http://www.pcidatabase.com.</rich_text><rich_text>
Udev使用modalias数据来从/lib/modules/`uname -r`/modules.alias 查找正确的设备驱动。

 
$ grep -i 10EC /lib/modules/`uname -r`/modules.alias | grep -i 8169
alias pci:v000010ECd00008129sv*sd*bc*sc*i* r8169
alias pci:v000010ECd00008169sv*sd*bc*sc*i* r8169
你可以看到适合这个设备的模块是r8169. 让我们获取关于这个驱动程序的更多的信息.
$ /sbin/modinfo r8169
filename: /lib/modules/2.6.18-53.el5/kernel/drivers/net/r8169.ko
version: 2.2LK-NAPI
license: GPL
description: RealTek RTL-8169 Gigabit Ethernet driver
author: Realtek and the Linux r8169 crew 
srcversion: D5EDA4980B92CA2CF677B62
alias: pci:v00001737d00001032sv*sd00000024bc*sc*i*
alias: pci:v000016ECd00000116sv*sd*bc*sc*i*
alias: pci:v00001186d00004300sv*sd*bc*sc*i*
alias: pci:v000010ECd00008129sv*sd*bc*sc*i*
alias: pci:v000010ECd00008169sv*sd*bc*sc*i*
depends:
vermagic: 2.6.18-53.el5 SMP mod_unload 686 REGPARM 4KSTACKS gcc-4.1
parm: media:force phy operation. Deprecated by ethtool (8). (array of int)
parm: rx_copybreak:Copy breakpoint for copy-only-tiny-frames (int)
parm: use_dac:Enable PCI DAC. Unsafe on 32 bit PCI slot. (int)
parm: debug:Debug verbosity level (0=none, …, 16=all) (int)注意查看从&quot;depends”开始的那些行. 它描述了r8169这个模块所依赖的其他一些模块。因此Udev也会加载这些模块。



</rich_text><rich_text scale="h2">规则处理和设备节点创建</rich_text><rich_text>
如前所述，Udev会为内核中每个设备状态的改变解析/etc/udev/rules.d/ 中的规则。Udev规则可以用于在用户空间操作设备节点的名字/权限/符号链接。


让我们看一些示例规则，有利于帮助你更好地理解Udev规则。


内核通过netlink提供的数据可以被Udev用来创建设备节点。这些数据包括主/次设备号对和另外一些设备相关的数据，比如设备/厂商id，设备序列号等。Udev规则可以匹配所有的这些数据，并且用来改变设备节点的名字，创建符号链接，或者注册网络连接。


下面这个例子展示了怎样书写Udev规则来重命名系统中的一个网络设备。


我们需要得到一些用于创建规则的设备信息。
# udevadm info -a -p /sys/class/net/eth0/llooking at device '/devices/pci0000:00/0000:00:04.0/0000:01:06.0/net/eth0':
KERNEL==”eth0″
SUBSYSTEM==”net”
DRIVER==”&quot;
ATTR{addr_len}==”6″
ATTR{dev_id}==”0×0″
ATTR{ifalias}==”&quot;
ATTR{iflink}==”3″
ATTR{ifindex}==”3″
ATTR{features}==”0×829″
ATTR{type}==”1″
ATTR{link_mode}==”0″
ATTR{address}==”00:80:48:62:2a:33″
ATTR{broadcast}==”ff:ff:ff:ff:ff:ff”
ATTR{carrier}==”1″
ATTR{dormant}==”0″
ATTR{operstate}==”unknown”
ATTR{mtu}==”1500″
ATTR{flags}==”0×1003″
ATTR{tx_queue_len}==”1000″
looking at parent device ‘/devices/pci0000:00/0000:00:04.0/0000:01:06.0′:
KERNELS==”0000:01:06.0″
SUBSYSTEMS==”pci”
DRIVERS==”8139too”
ATTRS{vendor}==”0×10ec”
ATTRS{device}==”0×8139″
ATTRS{subsystem_vendor}==”0×10ec”
ATTRS{subsystem_device}==”0×8139″
ATTRS{class}==”0×020000″
ATTRS{irq}==”19″
ATTRS{local_cpus}==”ff”
ATTRS{local_cpulist}==”0-7″
ATTRS{modalias}==”pci:v000010ECd00008139sv000010ECsd00008139bc02sc00i00″
ATTRS{enable}==”1″
ATTRS{broken_parity_status}==”0″
ATTRS{msi_bus}==”&quot;
looking at parent device ‘/devices/pci0000:00/0000:00:04.0′:
KERNELS==”0000:00:04.0″
SUBSYSTEMS==”pci”
DRIVERS==”&quot;
ATTRS{vendor}==”0×10de”
ATTRS{device}==”0×03f3″
ATTRS{subsystem_vendor}==”0×0000″
ATTRS{subsystem_device}==”0×0000″
ATTRS{class}==”0×060401″
ATTRS{irq}==”0″
ATTRS{local_cpus}==”ff”
ATTRS{local_cpulist}==”0-7″
ATTRS{modalias}==”pci:v000010DEd000003F3sv00000000sd00000000bc06sc04i01″
ATTRS{enable}==”1″
ATTRS{broken_parity_status}==”0″
ATTRS{msi_bus}==”1″
looking at parent device ‘/devices/pci0000:00′:
KERNELS==”pci0000:00″
SUBSYSTEMS==”&quot;
DRIVERS==”&quot;


你可以发现Udev拥有大量关于这个网络设备的信息。让我们深入检查一下：
KERNEL==&quot;eth0&quot; :- 该设备的内核名字是eth0
DRIVERS==”8139too” :- 加载的驱动程序是8139too
ATTR{address}==”00:80:48:62:2a:33″ :- 该设备的硬件地址
ATTRS{vendor}==”0×10ec” :- 厂商 id
ATTRS{device}==”0×8139″ :- 设备 id
让我们创建一个规则来将这个网络设备重命名为eth1 (这个名字将是永久性的并且重启系统以后也不会复原).
&gt;[root@arch ~]# cat /etc/udev/rules.d/70-persistent-net.rules
SUBSYSTEM==”net”, ACTION==”add”, DRIVERS==”?*”, ATTR{address}==”00:80:48:62:2a:33″, ATTR{type}==”1″, KERNEL==”eth*”, NAME=”eth1″
这个规则就将这个设备重命名成了eth1. 用这种方式我们可以很容易地管理系统中的网络设备或者其他设备节点。



</rich_text><rich_text scale="h2">Udev 实用工具</rich_text><rich_text>
Udev提供了一些用户空间的实用程序，用于管理系统中的设备和设备节点。在所有最近的Linux发行版中都可以找到的这样的一个命令就是'udevadm'，udevadm这个命令在功能上可以实现上面提到的各个命令完成的所有任务。


这个工具可以用来在正在运行的系统里面重新生成设备节点，如下所示：
[root@arch ~]# ls -l /dev/ | wc -l
150
[root@arch ~]# rm -rf /dev/*
rm: cannot remove `/dev/pts/0′: Operation not permitted
rm: cannot remove directory `/dev/shm’: Device or resource busy
[root@arch ~]# ls -l /dev/ | wc -l
4
[root@arch ~]# udevadm trigger
[root@arch ~]# ls -l /dev/ | wc -l
150有更多的其他有用的操作都可以通过udevadm命令完成。你可以通过udevadm的man手册页来获取更多的信息。



</rich_text><rich_text scale="h2">Udev的未来会怎样 ?</rich_text><rich_text>
预测Linux子系统的将来是不可能的。Linux正在快速开发的过程当中，因此预测Linux的内核的未来是不明智的。DEVfs曾经被当作静态 设备节点的一个解决方案被引入，但是在经历一小段时间之后就消失了。而Udev则被证明是现代Linux内核中一个成功的设备管理器，并且有希望在未来的  发布中成为一个更加稳定，多功能的设备管理系统。



</rich_text><rich_text scale="h2">关于作者</rich_text><rich_text>
Unnikrishnan A, 是一个Linux服务器管理的专家。  Linux让他着迷是因为这是一个主要的开源开创性平台，能够让任何人深入学习。他还经常赞赏一个事实，就是Linux有庞大的社区驱动的支持，可以有更 多的机会来展示新思想和解决办法。除了Linux，Unnikrishnan还喜爱电子学和天文学。在他的空余时间，Unnikrishnan喜欢在网络设计的世界中探索。本文最初来源于t </rich_text><rich_text link="webs http://bobcares.com/blog/?p=483">Bobcares</rich_text><rich_text>.
</rich_text></node></node><node name="Linux3.0.6内核task_struct注释 " prog_lang="custom-colors" readonly="False" tags="" unique_id="61"><rich_text justification="left"></rich_text><rich_text>
</rich_text><codebox char_offset="0" frame_height="1360" frame_width="940" highlight_brackets="True" show_line_numbers="False" syntax_highlighting="chdr" width_in_pixels="True">struct task_struct {
	volatile long state;	/* -1 unrunnable, 0 runnable, &gt;0 stopped */
	void *stack;	//stack should points to a threadinfo struct
	atomic_t usage; //有几个进程正在使用该结构
	unsigned int flags;	/* per process flags, defined below *///反应进程状态的信息，但不是运行状态
        unsigned int ptrace;

#ifdef CONFIG_SMP
	struct task_struct *wake_entry;
	int on_cpu;   //在哪个CPU上运行
#endif
	int on_rq;  //on_rq denotes whether the entity is currently scheduled on a run queue or not.


	int prio, static_prio, normal_prio;  //静态优先级，动态优先级
/*
the task structure employs three elements to denote the priority of a process: prio
and normal_prio indicate the dynamic priorities, static_prio the static priority of a process.
The static priority is the priority assigned to the process when it was started. It can be modified
with the nice and sched_setscheduler system calls, but remains otherwise constant during the
process’ run time.
normal_priority denotes a priority that is computed based on the static priority and the
scheduling policy of the process. Identical static priorities will therefore result in different
normal priorities depending on whether a process is a regular or a real-time process. When a
process forks, the child process will inherit the normal priority.
However, the priority considered by the scheduler is kept in prio. A third element is required
because situations can arise in which the kernel needs to temporarily boost the priority of a pro-
cess. Since these changes are not permanent, the static and normal priorities are unaffected by
this.
*/
	unsigned int rt_priority;  //实时任务的优先级
	const struct sched_class *sched_class;  //与调度相关的函数
	struct sched_entity se; //调度实体
	struct sched_rt_entity rt; //实时任务调度实体

#ifdef CONFIG_PREEMPT_NOTIFIERS
	/* list of struct preempt_notifier: */
	struct hlist_head preempt_notifiers; //与抢占有关的
#endif

	/*
	 * fpu_counter contains the number of consecutive context switches
	 * that the FPU is used. If this is over a threshold, the lazy fpu
	 * saving becomes unlazy to save the trap. This is an unsigned char
	 * so that after 256 times the counter wraps and the behavior turns
	 * lazy again; this to deal with bursty apps that only use FPU for
	 * a short time
	 */
	unsigned char fpu_counter;
#ifdef CONFIG_BLK_DEV_IO_TRACE
	unsigned int btrace_seq;
#endif

	unsigned int policy;  //调度策略
	cpumask_t cpus_allowed;//多核体系结构中管理CPU的位图：Cpumasks provide a bitmap suitable 
                               //for representing the set of CPU's in a system, one bit position per CPU number. 
                               // In general, only nr_cpu_ids (&lt;= NR_CPUS) bits are valid.

#ifdef CONFIG_PREEMPT_RCU
	int rcu_read_lock_nesting; //RCU是一种新型的锁机制可以参考博文：http://blog.csdn.net/sunnybeike/article/details/6866473。
	char rcu_read_unlock_special;
#if defined(CONFIG_RCU_BOOST) &amp;&amp; defined(CONFIG_TREE_PREEMPT_RCU)
	int rcu_boosted;
#endif /* #if defined(CONFIG_RCU_BOOST) &amp;&amp; defined(CONFIG_TREE_PREEMPT_RCU) */
	struct list_head rcu_node_entry;
#endif /* #ifdef CONFIG_PREEMPT_RCU */
#ifdef CONFIG_TREE_PREEMPT_RCU
	struct rcu_node *rcu_blocked_node;
#endif /* #ifdef CONFIG_TREE_PREEMPT_RCU */
#ifdef CONFIG_RCU_BOOST
	struct rt_mutex *rcu_boost_mutex;
#endif /* #ifdef CONFIG_RCU_BOOST */

#if defined(CONFIG_SCHEDSTATS) || defined(CONFIG_TASK_DELAY_ACCT)
	struct sched_info sched_info;   //调度相关的信息，如在CPU上运行的时间/在队列中等待的时间等。
#endif

	struct list_head tasks;   //任务队列
#ifdef CONFIG_SMP
	struct plist_node pushable_tasks;
#endif

	struct mm_struct *mm, *active_mm;   //mm是进程的内存管理信息
/*关于mm和active_mm
lazy TLB应该是指在切换进程过程中如果下一个执行进程不会访问用户空间，就没有必要flush TLB；
kernel thread运行在内核空间，它的mm_struct指针mm是0，它不会访问用户空间。 if (unlikely(!mm))是判断切换到的新进程是否是kernel thread，
如果是，那么由于内核要求所有进程都需要一个mm_struct结构，所以需要把被切换出去的进程（oldmm）的mm_struct借过来存储在
active_mm（ next-&gt;active_mm = oldmm;），这样就产生了一个anomymous user， atomic_inc(&amp;oldmm-&gt;mm_count)就用于增加被切换进程的mm_count，
然后就利用 enter_lazy_tlb标志进入lazeTLB模式（MP），对于UP来说就这个函数不需要任何动作；
if (unlikely(!prev-&gt;mm))这句话是判断被切换出去的进程是不是kernel thread，如果是的话就要释放它前面借来的mm_struct。
而且如果切换到的进程与被切换的kernel thread的page table相同，那么就要flush与这些page table 相关的entry了。
注意这里的连个if都是针对mm_struct结构的mm指针进行判断，而设置要切换到的mm_struct用的是active_mm;
对于MP来说，假如某个CPU＃1发出需要flushTLB的要求，对于其它的CPU来说如果该CPU执行kernel thread，那么由CPU设置其进入lazyTLB模式，
不需要flush TLB,当从lazyTLB模式退出的时候，如果切换到的下个进程需要不同的PageTable，那此时再flush TLB；如果该CPU运行的是普通的进程和＃1相同，
它就要立即flush TLB了

大多数情况下mm和active_mm中的内容是一样的；但是在这种情况下是不一致的，就是创建的进程是内核线程的时候，active_mm = oldmm(之前进程的mm)， mm = NULL,
（具体的请参考深入Linux内核的78页。）
 参考文章：http://www.linuxsir.org/bbs/thread166288.html
*/
#ifdef CONFIG_COMPAT_BRK
	unsigned brk_randomized:1;
#endif
#if defined(SPLIT_RSS_COUNTING)
	struct task_rss_stat	rss_stat;  //RSS is the total memory actually held in RAM for a process.
                                           //请参考博文：http://blog.csdn.net/sunnybeike/article/details/6867112
#endif
/* task state */
	int exit_state;  //进程退出时的状态
	int exit_code, exit_signal; //进程退出时发出的信号
	int pdeath_signal;  /*  The signal sent when the parent dies  */
	unsigned int group_stop;	/* GROUP_STOP_*, siglock protected */
	/* ??? */
	unsigned int personality;  //由于Unix有许多不同的版本和变种，应用程序也有了适用范围。
                                   //所以根据执行程序的不同，每个进程都有其个性，在personality.h文件中有相应的宏定义
	unsigned did_exec:1;	//根据POSIX程序设计的标准，did_exec是用来表示当前进程是在执行原来的代码还是在执行由execve调度的新的代码。
	unsigned in_execve:1;	/* Tell the LSMs that the process is doing an
				 * execve */
	unsigned in_iowait:1; 


	/* Revert to default priority/policy when forking */
	unsigned sched_reset_on_fork:1;
	unsigned sched_contributes_to_load:1;

	pid_t pid;  //进程ID
	pid_t tgid; //线程组ID

#ifdef CONFIG_CC_STACKPROTECTOR
	/* Canary value for the -fstack-protector gcc feature */
	unsigned long stack_canary;
#endif

	/* 
	 * pointers to (original) parent process, youngest child, younger sibling,
	 * older sibling, respectively.  (p-&gt;father can be replaced with 
	 * p-&gt;real_parent-&gt;pid)
	 */
	struct task_struct *real_parent; /* real parent process */ 
	struct task_struct *parent; /* recipient of SIGCHLD, wait4() reports */
	/*
	 * children/sibling forms the list of my natural children
	 */
	struct list_head children;	/* list of my children */
	struct list_head sibling;	/* linkage in my parent's children list */
	struct task_struct *group_leader;	/* threadgroup leader */

	/*
	 * ptraced is the list of tasks this task is using ptrace on.
	 * This includes both natural children and PTRACE_ATTACH targets.
	 * p-&gt;ptrace_entry is p's link on the p-&gt;parent-&gt;ptraced list.
	 */
	struct list_head ptraced; 
	struct list_head ptrace_entry;

	/* PID/PID hash table linkage. */
	struct pid_link pids[PIDTYPE_MAX];
	struct list_head thread_group;

	struct completion *vfork_done;		/* for vfork() */
/*

If the vfork mechanism was used (the kernel recognizes this by the fact that the CLONE_VFORK
flag is set), the completions mechanism of the child process must be enabled. The vfork_done
element of the child process task structure is used for this purpose. 


*/ 
        int __user *set_child_tid; /* CLONE_CHILD_SETTID */
        int __user *clear_child_tid; /* CLONE_CHILD_CLEARTID */c
        putime_t utime, stime, utimescaled, stimescaled;  // utime是进程用户态耗费的时间，stime是用户内核态耗费的时间。                                                       
         //而后边的两个值应该是不同单位的时间cputime_t gtime;   //？？
        #ifndef CONFIG_VIRT_CPU_ACCOUNTING 
        cputime_t prev_utime, prev_stime;
        #endif
        unsigned long nvcsw, nivcsw; /* context switch counts */
        struct timespec start_time; /* monotonic time */
        struct timespec real_start_time; /* boot based time */
        /* mm fault and swap info: this can arguably be seen as either mm-specific or thread-specific */
        unsigned long min_flt, maj_flt; 
        struct task_cputime cputime_expires;  //进程到期的时间？
        struct list_head cpu_timers[3];  //？？？/* process credentials */                    //请参考cred结构定义文件的注释说明

const struct cred __rcu *real_cred; /* objective and real subjective task * credentials (COW) */
        const struct cred __rcu *cred; /* effective (overridable) subjective task * credentials (COW) */
        struct cred *replacement_session_keyring; /* for KEYCTL_SESSION_TO_PARENT */
        char comm[TASK_COMM_LEN]; /* executable name excluding path - access with [gs]et_task_comm (which lock it with task_lock()) - initialized normally by setup_new_exec */
        /* file system info */
        int link_count, total_link_count;  //硬连接的数量？
        #ifdef CONFIG_SYSVIPC/* ipc stuff */  //进程间通信相关的东西
        struct sysv_sem sysvsem;  //
        #endif
        #ifdef CONFIG_DETECT_HUNG_TASK/* hung task detection */ 
        unsigned long last_switch_count;
        #endif/* CPU-specific state of this task */
struct thread_struct thread; /*因为task_stcut是与硬件体系结构无关的，因此用thread_struct这个结构来包容不同的体系结构*/
        /* filesystem information */
        struct fs_struct *fs;
        /* open file information */
        struct files_struct *files;
        /* namespaces */  //关于命名空间深入讨论，参考深入Professional Linux® Kernel Architecture  2.3.2节
                         // 或者http://book.51cto.com/art/201005/200881.htm
        struct nsproxy *nsproxy;/* signal handlers */
        struct signal_struct *signal;
        struct sighand_struct *sighand;
        sigset_t blocked, real_blocked;
        sigset_t saved_sigmask; /* restored if set_restore_sigmask() was used */
        struct sigpending pending;  //表示进程收到了信号但是尚未处理。
        unsigned long sas_ss_sp;size_t sas_ss_size;
        /*Although signal handling takes place in the kernel, the installed signal handlers run in usermode — otherwise,
          it would be very easy to introduce malicious or faulty code into the kernel andundermine the system security mechanisms.
          Generally, signal handlers use the user mode stack ofthe process in question.
          However, POSIX mandates the option of running signal handlers on a stackset up specifically for this purpose (using the
          sigaltstack system call). The address and size of this additional stack (which must be explicitly allocated by the
          user application) are held in sas_ss_sp andsas_ss_size, respectively. （Professional Linux® Kernel Architecture Page384）*/
        int (*notifier)(void *priv);
        void *notifier_data;
        sigset_t *notifier_mask;
        struct audit_context *audit_context; //请参看 Professional Linux® Kernel Architecture Page1100
        #ifdef CONFIG_AUDITSYSCALL
        uid_t loginuid;
        unsigned int sessionid;
        #endif
        seccomp_t seccomp;
        /* Thread group tracking */ 
        u32 parent_exec_id; 
        u32 self_exec_id;/* Protection of (de-)allocation: mm, files, fs, tty, keyrings, mems_allowed, * mempolicy */
        spinlock_t alloc_lock;
        #ifdef CONFIG_GENERIC_HARDIRQS/* IRQ handler threads */
        struct irqaction *irqaction;#endif/* Protection of the PI data structures: */   //PI --&gt; Priority Inheritanceraw_spinlock_t pi_lock;
        #ifdef CONFIG_RT_MUTEXES    //RT--&gt;  RealTime Task 实时任务/* PI waiters blocked on a rt_mutex held by this task */
        struct plist_head pi_waiters;/* Deadlock detection and priority inheritance handling */
        struct rt_mutex_waiter *pi_blocked_on;
        #endif
        #ifdef CONFIG_DEBUG_MUTEXES/* mutex deadlock detection */
        struct mutex_waiter *blocked_on;
        #endif
        #ifdef CONFIG_TRACE_IRQFLAGS
        unsigned int irq_events;
        unsigned long hardirq_enable_ip;
        unsigned long hardirq_disable_ip;
        unsigned int hardirq_enable_event;
        unsigned int hardirq_disable_event;
        int hardirqs_enabled;
        int hardirq_context;
        unsigned long softirq_disable_ip;
        unsigned long softirq_enable_ip;
        unsigned int softirq_disable_event;
        unsigned int softirq_enable_event;
        int softirqs_enabled; 
        int softirq_context;
        #endif
        #ifdef CONFIG_LOCKDEP
        # define MAX_LOCK_DEPTH 48UL
        u64 curr_chain_key;
        int lockdep_depth; //锁的深度
        unsigned int lockdep_recursion;
        struct held_lock held_locks[MAX_LOCK_DEPTH];
        gfp_t lockdep_reclaim_gfp;
        #endif
        /* journalling filesystem info */
        void *journal_info; //文件系统日志信息
        /* stacked block device info */
        struct bio_list *bio_list; //块IO设备表
        #ifdef CONFIG_BLOCK
        /* stack plugging */
        struct blk_plug *plug;
        #endif
        /* VM state */ 
        struct reclaim_state *reclaim_state;
        struct backing_dev_info *backing_dev_info;
        struct io_context *io_context;
        unsigned long ptrace_message;
        siginfo_t *last_siginfo;
        /* For ptrace use. */
        struct task_io_accounting ioac; //a structure which is used for recording a single task's IO statistics.
        #if defined(CONFIG_TASK_XACCT)
        u64 acct_rss_mem1; 
        /* accumulated rss usage */
        u64 acct_vm_mem1; 
        /* accumulated virtual memory usage */
        cputime_t acct_timexpd;
        /* stime + utime since last update */
        #endif
        #ifdef CONFIG_CPUSETS
        nodemask_t mems_allowed; 
       /* Protected by alloc_lock */
        int mems_allowed_change_disable;
        int cpuset_mem_spread_rotor;
        int cpuset_slab_spread_rotor;
        #endif
        #ifdef CONFIG_CGROUPS
        /* Control Group info protected by css_set_lock */
        struct css_set __rcu *cgroups;
        /* cg_list protected by css_set_lock and tsk-&gt;alloc_lock */
        struct list_head cg_list;
        #endif
        #ifdef CONFIG_FUTEX
        struct robust_list_head __user *robust_list;
        #ifdef CONFIG_COMPAT
        struct compat_robust_list_head __user *compat_robust_list;
        #endifstruct list_head pi_state_list;
        struct futex_pi_state *pi_state_cache;
        #endif
        #ifdef CONFIG_PERF_EVENTS
        struct perf_event_context *perf_event_ctxp[perf_nr_task_contexts];
        struct mutex perf_event_mutex;
        struct list_head perf_event_list;
        #endif
        #ifdef CONFIG_NUMA
        struct mempolicy *mempolicy;
        /* Protected by alloc_lock */
        short il_next;
        short pref_node_fork;
        #endifatomic_t fs_excl; /* holding fs exclusive resources *///是否允许进程独占文件系统。为0表示否。
        struct rcu_head rcu;/* * cache last used pipe for splice */
        struct pipe_inode_info *splice_pipe;
        #ifdef CONFIG_TASK_DELAY_ACCT
        struct task_delay_info *delays;
        #endif
        #ifdef CONFIG_FAULT_INJECTION
        int make_it_fail;
        #endif
        struct prop_local_single dirties;
        #ifdef CONFIG_LATENCYTOP
        int latency_record_count;
        struct latency_record latency_record[LT_SAVECOUNT];
        #endif
        /* * time slack values; these are used to round up poll() and * select() etc timeout values.
           These are in nanoseconds. */
        unsigned long timer_slack_ns;
        unsigned long default_timer_slack_ns;
        struct list_head *scm_work_list;
        #ifdef CONFIG_FUNCTION_GRAPH_TRACER
        /* Index of current stored address in ret_stack */
        int curr_ret_stack;/* Stack of return addresses for return function tracing */
        struct ftrace_ret_stack *ret_stack;/* time stamp for last schedule */
        unsigned long long ftrace_timestamp;
        /* * Number of functions that haven't been traced * because of depth overrun. */
        atomic_t trace_overrun;
        /* Pause for the tracing */
        atomic_t tracing_graph_pause;
        #endif
        #ifdef CONFIG_TRACING
        /* state flags for use by tracers */
        unsigned long trace;/* bitmask and counter of trace recursion */
        unsigned long trace_recursion;
        #endif /* CONFIG_TRACING */
        #ifdef CONFIG_CGROUP_MEM_RES_CTLR 
        /* memcg uses this to do batch job */
        struct memcg_batch_info {int do_batch; /* incremented when batch uncharge started */
        struct mem_cgroup *memcg; /* target memcg of uncharge */
        unsigned long nr_pages; /* uncharged usage */
        unsigned long memsw_nr_pages; /* uncharged mem+swap usage */
        } memcg_batch;
        #endif
        #ifdef CONFIG_HAVE_HW_BREAKPOINT
        atomic_t ptrace_bp_refcnt;
        #endif
     };
</codebox></node><node name="精通initramfs构建" prog_lang="custom-colors" readonly="False" tags="" unique_id="48"><rich_text>
</rich_text><node name="（一）：hello world" prog_lang="custom-colors" readonly="False" tags="" unique_id="57"><rich_text scale="h2" weight="heavy">一、initramfs是什么</rich_text><rich_text scale="h2"> </rich_text><rich_text>
在2.6版本的linux内核中，都包含一个压缩过的cpio格式的打包文件。当内核启动时，会从这个打包文件中导出文件到内核的rootfs文件系统，然后内核检查rootfs中是否包含有init文件，如果有则执行它，作为PID为1的第一个进程。这个init进程负责启动系统后续的工作，包括定位、挂载“真正的”根文件系统设备（如果有的话）。如果内核没有在rootfs中找到init文件，则内核会按以前版本的方式定位、挂载根分区，然后执行/sbin/init程序完成系统的后续初始化工作。 
这个压缩过的cpio格式的打包文件就是initramfs。编译2.6版本的linux内核时，编译系统总会创建initramfs，然后把它与编译好的内核连接在一起。内核源代码树中的usr目录就是专门用于构建内核中的initramfs的，其中的initramfs_data.cpio.gz文件就是initramfs。缺省情况下，initramfs是空的，X86架构下的文件大小是134个字节。 

</rich_text><rich_text scale="h2" weight="heavy">二、构建第一个initramfs：hello world </rich_text><rich_text>
从C语言开始，学习计算机编程语言的第一个程序几乎都是hello world，因此我们也构建一个最简单的hello world式的initramfs，以说明initramfs的基本构建方法。 
initramfs的灵魂是init文件（或者叫程序，因为它会被内核第一个执行），我们先写一个简单的init程序，它会在内核的console中打印出经典的hello world信息。 
</rich_text><rich_text foreground="#0000ff">hello.c： 
#include  &lt;stdio.h&gt; 
#include &lt;unistd.h&gt; 
int main(int argc,char  argv[]) 
{ 
printf(&quot;hello world, from initramfs.\n&quot;); 
sleep(9999999);  
return 0; 
}</rich_text><rich_text> 
其中的sleep（）函数语句是为了避免执行时内核很快打出panic的信息，并非功能上的需要。 

接着把hello.c编译成静态连接程序： 
</rich_text><rich_text foreground="#0000ff">gcc -o  hello_static -static -s hello.c 
</rich_text><rich_text>命令行中的-s参数表示编译后的程序不包含调试定位信息，目的是减少编译出来的程序文件的大小。 
再创建一个initramfs的构建源文件目录image，把hello_static程序拷入这个目录，并改名为init。 
在image目录下，创建一个dev/console的设备文件，否init程序无法在内核console中输出信息： 
</rich_text><rich_text foreground="#0000ff">mknod -m 600 dev/console c 5 1 
</rich_text><rich_text>注意，执行这个命令需要有root权限。 

好了，现在可以设置内核配置参数，进行initramfs的构建了： 
在general setup配置目录下的initramfs sources配置项下输入image的路径名，比如我的路径就是/home/wyk/initramfs-test/image。因为我们的init程序是ELF格式的，所以内核需要支持ELF的可执行文件，否则启动这个init程序会失败。在内核的 Executable file formats配置目录下，选择 kernel support for ELF binaries，则可使内核支持ELF格式的可执行文件。其他内核配置参数根据实际需要设置即可，不过，为了减少内核编译时间，可参考这篇文章</rich_text><rich_text link="webs http://linuxman.blog.ccidnet.com/blog-htm-do-showone-uid-60710-type-blog-itemid-293122.html">http://linuxman.blog.ccidnet.com/blog-htm-do-showone-uid-60710-type-blog-itemid-293122.html</rich_text><rich_text>设置一个最简单的内核配置。 
内核配置参数设置完成后，按常规的内核编译方法进行编译，initramfs就自动连接到编译好的内核映像文件中了。 

</rich_text><rich_text scale="h2" weight="heavy">三、试验环境搭建 </rich_text><rich_text>
试验initramfs需要经常重启系统，所以使用CPU模拟器是不错的选择。我们可以选用qemu，它支持直接启动linux内核，无需在模拟器中安装OS。从方便使用的角度考虑，我们采用qemu launcher设置qemu的各项参数，它的安装可参考</rich_text><rich_text link="webs http://linuxman.blog.ccidnet.com/blog-htm-do-showone-uid-60710-type-blog-itemid-612280.html">http://linuxman.blog.ccidnet.com/blog-htm-do-showone-uid-60710-type-blog-itemid-612280.html</rich_text><rich_text>。 
在qemu launcher的linux配置标签中，打勾直接启动linux，然后在下面的文本框中填上刚才编译好的内核映像文件的路径名。因为qemu的运行还需要设置硬盘映像文件，所以还需要在左边的配置标签中新建一个硬盘映像文件，但实际上我们并不使用硬盘。 
配置好qemu的参数后，点击launcher按钮，内核就开始在qemu中运行了。内核输出一堆内核运行信息后，最后打出了 
</rich_text><rich_text foreground="#0000ff">hello  world, from initramfs.</rich_text><rich_text> 
哈哈，我们构建的initramfs已经能够正常工作了！</rich_text></node><node name="（二）：initramfs的前世今生" prog_lang="custom-colors" readonly="False" tags="" unique_id="55"><rich_text scale="h2" weight="heavy">四、什么是rootfs和ramfs</rich_text><rich_text>
所有的2.6版本linux内核都有一个特殊的文件系统rootfs，是内核启动的初始始根文件系统，initramfs的文件会复制到rootfs。如果把initramfs比作种子，那么rootfs就是它生长的土壤。大部分linux系统正常运行后都会安装另外的文件系统，然后忽略rootfs。
rootfs是ramfs文件系统的一个特殊实例。ramfs是一种非常简单的文件系统，是基于内存的文件系统。ramfs文件系统没有容量大小的限制，它可以根据需要动态增加容量。
ramfs直接利用了内核的磁盘高速缓存机制。所有的文件的读写数据都会在内存中做高速缓存（cache），当系统再次使用文件数据时，可以直接从内存中读写，以提供系统的I/O性能。高速缓存中的写入数据会在适当的时候回写到对应的文件系统设备（如磁盘等）中，这时它的状态就标识为clean，这样系统在必要时可以释放掉这些内存。ramfs没有对应文件系统设备，所以它的数据永远都不会回写回去，也就不会标识为clean，因此系统也永远不会释放ramfs所占用的内存。
因为ramfs直接使用了内核已有的磁盘高速缓存机制，所以它的实现代码非常小。也由于这个原因，ramfs特性不能通过内核配置参数删除，它是内核的天然特性。

</rich_text><rich_text scale="h2" weight="heavy">五、ramfs不是ramdisk</rich_text><rich_text>
ramdisk是在一块内存区域中创建的块设备，用于存放文件系统。ramdisk的容量是固定的，不能象ramfs一样动态增长。ramdisk需要内核的文件系统驱动程序（如ext2）来操作其上的数据，而ramfs则是内核的天然特性，无需额外的驱动程序。ramdisk也象其他文件系统设备一样，需要在块设备和内存中的磁盘高速缓存之间复制数据，而这种数据复制实际不必要的。

</rich_text><rich_text scale="h2" weight="heavy">六、从ramfs派生的文件系统tmpfs</rich_text><rich_text>
ramfs的一个缺点是它可能不停的动态增长直到耗尽系统的全部内存，所以只有root或授权用户允许使用ramfs。为了解决这个问题，从ramfs派生出了tmpfs文件系统，增加了容量大小的限制，而且允许把数据写入交换分区。由于增加了这两个特性，所以tmpfs允许普通用户使用。
关于tmpfs文件系统更多的信息，可以看内核源码中的 Documentation/filesystems/tmpfs.txt 文档。

综上所述，initramfs是一种ramfs文件系统，在内核启动完成后把它复制到rootfs中，作为内核初始的根文件系统，它的任务是挂载系统真正的根文件系统。这就是initramfs的前世今生。</rich_text></node><node name="（三）：busybox" prog_lang="custom-colors" readonly="False" tags="" unique_id="56"><rich_text scale="h2" weight="heavy">七、什么是busybox </rich_text><rich_text>
busybox号称是嵌入式Linux中的瑞士军刀——小巧、功能齐全。它把许多常用的Linux命令都集成到一个单一的可执行程序中，只用这一个可执行程序（即busybox）加上Linux内核就可以构建一个基本的Linux系统。busybox程序非常小巧，包含全部命令可执行文件大小也只有750多K。busybox是完全模块化的，可以很容易地在编译时增加、删除其中包含的命令。 
由于busybox的这些特点，它广泛应用于LiveCD、应急修复盘、安装盘等系统中。我们也是以它为基础，构建initramfs。 

</rich_text><rich_text scale="h2" weight="heavy">八、busybox的配置、编译和安装</rich_text><rich_text scale="h2"> </rich_text><rich_text>
（1）去</rich_text><rich_text link="webs http://busybox.net/">http://busybox.net</rich_text><rich_text> 去下载最新的源码，解压展开。 
（2）用 
</rich_text><rich_text foreground="#0000ff">make menuconfig</rich_text><rich_text> 
命令启动配置界面配置，配置busybox的特性、选择要包含在busybox的命令（busybox称为applet）； 
也可以用 
</rich_text><rich_text foreground="#0000ff">make  defconfig</rich_text><rich_text> 
命令做缺省配置，包含全部的applet。 
另外两个配置命令是 
</rich_text><rich_text foreground="#0000ff">make allyesconfig</rich_text><rich_text>——最大配置 
</rich_text><rich_text foreground="#0000ff">make  allnoconfig</rich_text><rich_text>——最小配置 
它们和make defconfig命令都可以用来作为自定义配置的初始配置，然后再用make menuconfing命令做定制化配置。 
为了简单，我们用make defconfig做缺省配置。 
（3）用 
</rich_text><rich_text foreground="#0000ff">make</rich_text><rich_text> 
命令编译busybox软件。 
（4）用 
</rich_text><rich_text foreground="#0000ff">make  CONFIG_PREFIX=&lt;安装目录&gt; install</rich_text><rich_text> 
命令安装。如果在命令行中省略CONFIG_PREFIX变量的赋值，则会安装缺省值 ./_install 目录下。CONFIG_PREFIX可以在make menuconfig的配置界面中修改。 
我们用make CONFIG_PREFIX=~/initramfs-test/image 命令把busybox安装到initramfs的构建目录中。 
（5）缺省配置下，busybox动态链接到glibc，所以要把它用到的动态库复制到initramfs的构建目录中。用ldd命令查看busybox用到了哪些动态库文件及相应的文件路径，然后把它们复制到相应的目录下即可。 
我们编译的busybox需要向image/lib目录下复制 
ld-linux.so.2 
libc.so.6 
libcrypt.so.1 
libm.so.6 
动态库文件。 

</rich_text><rich_text foreground="#000000" scale="h2" weight="heavy">九、在image下创建必要 的目录和设备文件</rich_text><rich_text scale="h2" weight="heavy"> </rich_text><rich_text>
（1）在imgae目录下创建 
</rich_text><rich_text foreground="#0000ff">proc ，  sys ， etc ，mnt</rich_text><rich_text> 
四个目录 
（2）hello world 已经创建了console 设备文件，我们再用 
</rich_text><rich_text foreground="#0000ff">mknod -m 600 dev/null c 1 3</rich_text><rich_text> 
命令创建另一个基本的设备文件。 

</rich_text><rich_text scale="h2" weight="heavy">十、试验一下 </rich_text><rich_text>
busybox的构建和准备工作做完了，我们试验一下吧： 
在image目录下以root用户权限—— 
（1）用 
</rich_text><rich_text foreground="#0000ff">mount -vt proc  proc =proc 
mount -vt sysfs sysfs =sys</rich_text><rich_text> 
命令安装内核虚拟文件系统 
（2）用 
</rich_text><rich_text foreground="#0000ff">mount -v -o bind /dev dev 
</rich_text><rich_text>命令绑定/dev的设备文件到image/dev 
（3）用 
</rich_text><rich_text foreground="#0000ff">chroot . /bin/sh</rich_text><rich_text> 
命令进入busybox的环境。出现shell的命令提示符，可以试着输入几个命令，看看执行结果。例如，输入 fdisk -l 命令看看是否能显示硬盘的分区。 
</rich_text></node><node name="（四）：mini linux" prog_lang="custom-colors" readonly="False" tags="" unique_id="54"><rich_text scale="h2" weight="heavy">十一、自动生成/dev下的设备文件 </rich_text><rich_text>
上节用chroot方法试验busybox时，为了简单，是用“绑定”的方式把主机的/dev中的设备文件映射到image目录下的dev目录。在initramfs上，这种方法显然不能使用。 
生成系统的设备文件，现在通常都是用udev动态生成，而initramfs为了做到通用，动态生成的要求是必须的。在busybox中有一个mdev命令，就是用来动态生成设备文件，填充到/dev目录的。 
在系统启动时，用 
</rich_text><rich_text foreground="#0000ff">mdev -s</rich_text><rich_text> 
命令可以根据内核的sysfs文件系统在/dev目录中自动生成相应的设备文件。命令执行前，需要先挂载内核的proc和sysfs虚拟文件系统。 

</rich_text><rich_text scale="h2" weight="heavy">十二、初始身手 </rich_text><rich_text>
解决了自动生成设备文件的问题后，我们可以试着做一个最简单的可运行的linux系统了： 
（1）在image目录下写一个最简单的init脚本。 
</rich_text><rich_text foreground="#0000ff">#!/bin/sh</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">mount -t proc proc /proc</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">mount -t sysfs sysfs /sys</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">mdev -s</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">/bin/sh</rich_text><rich_text> 
（2）为init脚本设置可执行权限，否则内核不会去执行它。 
</rich_text><rich_text foreground="#0000ff">chmod +x init</rich_text><rich_text> 
（3）有些busybox配置中，mdev命令需要读取/etc/mdev.conf文件，为了避免出错信息，我们创建一个空文件。mdev.conf文件是用来控制mdev生成的设备文件的读写权限的，在这里我们不需要对设备文件设置特别的权限，就使用mdev缺省的660的权限设置。有关mdev的设备文件权限的控制详细信息，可参考busybox源码树docs目录下的mdev.txt文件。 
</rich_text><rich_text foreground="#0000ff">touch etc/mdev.conf</rich_text><rich_text> 
（4）在内核源码目录下，执行 
</rich_text><rich_text foreground="#0000ff">make</rich_text><rich_text> 
命令，重新编译内核，生成新的initramfs。 

好了，在QEMU模拟环境下启动这个新的内核，系统初始化后，会进入SHELL环境。在这个SHELL环境下，试验一些常用命令，看看是否可以正常运行。 

</rich_text><rich_text foreground="#000000" scale="h2" weight="heavy">十三、can't access tty</rich_text><rich_text scale="h2" weight="heavy"> </rich_text><rich_text>
上一步创建的简单linux系统在进入SHELL环境时，会打出下面这一句出错信息： 
</rich_text><rich_text foreground="#0000ff">/bin/sh: can't access  tty; job controll off</rich_text><rich_text> 
虽然不影响使用，但终究不够完美。 
产生这个错误的原因是我们的SHELL是直接运行在内核的console上的，而console是不能提供控制终端（terminal）功能的，所以必须把SHELL运行在tty设备上，才能消除这个错误。解决问题的办法是使用正规init机制，在执行SHELL前打开tty设备。 
另外，这个简单系统的reboot、halt等命令是不起作用的，也必须通过init方式解决。 

</rich_text><rich_text foreground="#000000" scale="h2" weight="heavy">十四、busybox的缺省init 模式</rich_text><rich_text scale="h2" weight="heavy"> </rich_text><rich_text>
busybox支持init功能，当系统没有/etc/inittab文件时，它有一套缺省的模式，按下面配置执行： 
</rich_text><rich_text foreground="#0000ff">::sysinit:/etc/init.d/rcS 
::askfirst:/bin/sh  
::ctrlaltdel:/sbin/reboot 
::shutdown:/sbin/swapoff -a 
::shutdown:/bin/umount  -a -r 
::restart:/sbin/init</rich_text><rich_text> 
</rich_text><rich_text foreground="#000000">如果 busybox检测到/dev/console不是串口控制台，init还要执行下面的动作：</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">tty2::askfirst:/bin/sh 
tty3::askfirst:/bin/sh 
tty4::askfirst:/bin/sh</rich_text><rich_text> 
我们试试这种模式是否可以解决我们的问题。 
（1）写/etc/init.d/rcS脚本 
这个脚本实际是要执行系统的初始化操作。我们把前面的init脚本改造一下，将最后的/bin/sh命令删除，然后移到 etc/init.d目录下，改名为rcS。 
（2）initramfs不需要linuxrc，而且如果没有init文件，内核就不认为它是一个有效的initramfs，因而不安装它，导致内核panic。于是，我们在image目录下，把busybox安装的linuxrc改名为init： 
</rich_text><rich_text foreground="#0000ff">mv linuxrc  init 
</rich_text><rich_text>（3）重新编译内核，生成新的initramfs 
（4）用QEMU试验一下新编译的内核。系统启动后，会打出一句话“please press Enter to active this console”——感觉还不错。但是按下回车键后，系统依然会打出错误信息“-/bin/sh: 
</rich_text><rich_text foreground="#000000">can't  access tty; job controll off</rich_text><rich_text> ”。用tty命令看看当前的终端设备文件名： 
</rich_text><rich_text foreground="#0000ff"># tty</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">/dev/console</rich_text><rich_text> 
它还是console，不是tty设备，所以问题没有解决。不过，reboot和halt命令倒是可以正常工作了。 

经过验证，busybox的缺省init模式无法满足我们的要求，我们还是要写inittab，定制自己的init初始化流程。 

</rich_text><rich_text scale="h2" weight="heavy">十五、busybox的inittab文件格式说明 </rich_text><rich_text>
要写自己的inittab，需要理解busybox的inittab文件格式。 
busybox的inittab文件与通常的inittab不同，它没有runlevel的概念，语句功能上也有限制。inittab语句的标准格式是 
</rich_text><rich_text foreground="#0000ff">&lt;id&gt;:&lt;runlevels&gt;:&lt;action&gt;:&lt;process&gt;</rich_text><rich_text> 
各字段的含义如下 
</rich_text><rich_text foreground="#0000ff">&lt;id&gt;:</rich_text><rich_text> 
id字段与通常的inittab中的含义不同，它代表的是这个语句中process执行所在的tty设备，内容就是/dev目录中tty设备的文件名。由于是运行process的tty设备的文件名，所以也不能象通常的inittab那样要求每条语句id的值唯一。 
</rich_text><rich_text foreground="#0000ff">&lt;runlevels&gt;:</rich_text><rich_text> 
</rich_text><rich_text foreground="#000000">busybox 不支持runlevel，所以此字段完全被忽略。</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">&lt;action&gt;:</rich_text><rich_text> 
为下列这些值之一： 
sysinit, respawn, askfirst, wait,once, restart, ctrlaltdel, shutdown 
其含义与通常的inittab的定义相同。特别提一下askfirst，它的含义与respawn相同，只是在运行process前，会打出一句话“please press Enter to active this console”，然后等用户在终端上敲入回车键后才运行process。
下表列举了这</rich_text><rich_text foreground="#ff0000">8种action的含义</rich_text><rich_text>：
</rich_text><rich_text scale="h3"> </rich_text><rich_text justification="left"></rich_text><rich_text>
 
</rich_text><rich_text foreground="#0000ff">&lt;process&gt;</rich_text><rich_text foreground="#000000">：</rich_text><rich_text> 
指定要运行的process的命令行。 

</rich_text><rich_text scale="h2" weight="heavy">十六、写mini linux的inittab </rich_text><rich_text>
理解了busybox的inittab格式，我们就可以写mini linux的inittab： 
</rich_text><rich_text foreground="#0000ff">::sysinit:/etc/init.d/rcS</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">tty1::askfirst:/bin/sh</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">tty2::askfirst:/bin/sh</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">tty3::askfirst:/bin/sh</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">tty4::askfirst:/bin/sh</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">tty5::askfirst:/bin/sh</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">tty6::askfirst:/bin/sh</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">::restart:/sbin/init</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">::ctrlaltdel:/sbin/reboot</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">::shutdown:/bin/umount -a -r</rich_text><rich_text> 

把这个文件放到image的etc目录下。为了执行reboot命令时避免提示找不到/etc/fstab文件，我们再在etc目录下创建一个空文件： 
</rich_text><rich_text foreground="#0000ff">touch fstab</rich_text><rich_text> 

做好了这些，就可以重新编译内核，生成新的initramfs了。在QEMU试验环境下验证新生成的mini linux，系统运行正常，而且象通常的linux系统一样，用ALT＋F1～F6键可以在6个终端间切换。 
由于mini linux系统不需要登录，所以用askfirst的方式来模拟登录，用户敲回车键后，init进程才会启动shell。
</rich_text><table char_offset="2734" col_max="400" col_min="40"><row><cell>  action
 </cell><cell>  含义
 </cell></row><row><cell>  sysinit
 </cell><cell>  为init提供初始化命令脚本的路径
 </cell></row><row><cell>  respawn
 </cell><cell>  每当相应的进程终止执行时，重新启动该进程
 </cell></row><row><cell>  askfirst
 </cell><cell>  类似respawn，主要用途是减少系统上执行的终端应用程序的数量。它将会促使init在控制台上显示“Please press Enter to active this console”的信息，并在重新启动进程之前等待用户按下“enter”键
 </cell></row><row><cell>  wait
 </cell><cell>  告诉init必须等到相应的进程执行完成之后才能继续执行
 </cell></row><row><cell>  once
 </cell><cell>  仅执行相应的进程一次，而且不会等待它执行完成
 </cell></row><row><cell>  ctratldel
 </cell><cell>  当按下Ctrl+Alt+Delete组合键时，执行相应的进程
 </cell></row><row><cell>  shutdown
 </cell><cell>  当系统关机时，执行相应的进程
 </cell></row><row><cell>  restart
 </cell><cell>  当init重新启动时，执行相应的进程，通常此处所执行的进程就是init本身
</cell></row><row><cell>点击这里</cell><cell>点击这里</cell></row></table></node><node name="（五）：initrd" prog_lang="custom-colors" readonly="False" tags="" unique_id="50"><rich_text scale="h2" weight="heavy">十七、配置内核支持initrd </rich_text><rich_text>
到目前为止，我们的initramfs都由内核编译系统生成的，并链接到内核中。其实 我们也可以用cpio命令生成单独的initramfs，与内核编译脱钩，在内核运行时以initrd的形式加载到内核，以增加灵活性。 
首先配 置内核使用单独的initrd：在 Device Driver / Block device / 配置目录下，选择 RAM filesystem  and RAMdisk ( initramfs/initrd ) support 配置项；再到 General Setup 配置目录项下，将  initramfs source file(s)  配置项原有的内容清空。然后把内核源码树的usr目录下已由内核编译生成的initramfs文件initramfs_data.cpio.gz拷贝到  ~/initramfs-test 目录下，我们先直接用这个文件试验一下 initrd  方式的initramfs的效果。最后，执行make命令重新编译内核后，在QEMU试验环境中，把initrd配置框（linux配置框的下面）的内容 写为 ~/initramfs-test/initramfs_data.cpio.gz，指定initrd的文件路径。 
好了，试验一下新的 initrd方式的initramfs吧，效果跟先前的完全一样。 

</rich_text><rich_text scale="h2" weight="heavy">十八、用cpio命令生成initramfs </rich_text><rich_text>
cpio 命令有三种操作模式：copy－out、copy－in、copy－pass，生成initramfs用的是它的copy－out模式，即把文件打包的操 作模式。cpio的copy－out操作模式使用 -o 命令行选项指定。缺省情况下，cpio从标准输入读取输入数据，向标准输出写入输出数据。使用  -I 选项可以指定文件名代替标准输入，使用 -O 选项可以指定文件名代替标准输出，而 -F  选项指定的文件名则根据cpio操作模式的不同可代替标准输入或标准输出。 
把~/initramfs-test/image目录下的文件打包成 initramfs，执行下面的命令： 
</rich_text><rich_text foreground="#0000ff">find . | cpio -o -H newc |  gzip &gt; ../image.cpio.gz</rich_text><rich_text> 
命令执行完毕后，在~/initramfs-test目录下就会生成文件 名为imgae.cpio.gz的initramfs。 
上面cpio命令的 -H  选项指定打包文件的具体格式，要生成initramfs，只能用newc 格式，如果使用其他格式，内核会打出这样的出错信息：Unpacking  initramfs...&lt;0&gt; kernel panic - not syncing: no cpio magic 

在 QEMU试验环境下试验一下新的initrd方式的initramfs，效果跟先前的完全一样。 

</rich_text><rich_text scale="h2" weight="heavy">十九、cpio命令的其他用法  </rich_text><rich_text>
如果我们要解开一个cpio格式的打包文件，则要使用cpio命令的copy－in操作模式。cpio的copy－out操作模式使用 -i  命令行选项指定。例如，我们想把前一步从内核源码树 usr目录下拷贝的initramfs_data.cpio.gz  展开到~/initramfs-test/initramfs_data目录下，则使用下列命令： 
</rich_text><rich_text foreground="#0000ff">mkdir  ~/initramfs-test/initramfs_data</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">cd  ~/initramfs-test/initramfs_data</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">cpio -i  -F ../initramfs_data.cpio.gz --no-absolute-filename</rich_text><rich_text> 
命令执行完毕 后，initramfs_data目录下出现多个目录和文件，用diff命令比较initramfs_data与image目录，两者的完全一样。 
上 面cpio命令的</rich_text><rich_text foreground="#000000"> --no-absolute-filename  选项的作用是展开文件时，去掉文件路径最前面的&quot;/&quot;，把绝对路径名变为相对路径名。内核编译时生成的initramfs使用了绝对路径名，所以这个选项 必须使用，否则initramfs内文件展开到&quot;/&quot;目录去了，如果你是root用户或有&quot;/&quot;目录的写权限，那么展开的文件就有可能覆盖同名的文件（在 文件修改时间新于原有文件），那就糟糕了！</rich_text><rich_text> 
展开文件前，你可能会想先看看打包文件里都有哪些文件，这时就要用 -t  选项了。例如，我们想看看内核编译时生成的initramfs_data.cpio.gz中都有哪些文件，我们就可以用下面的命令： 
</rich_text><rich_text foreground="#0000ff">zcat initramfs_data.cpio.gz | cpio -t</rich_text><rich_text> 
在标准输出中 打出文件名列表。 
使用 -v 选项可以在cpio命令执行时输出详细信息：在打包或展开文件时，输出已处理的文件名；与 -t  选项连用时，则显示文件的详细信息，类似 ls -l 的输出内容。-V  选项则用打点的方式，显示cpio命令的执行进度信息，一个点代表处理一个文件。 

</rich_text></node><node name="（六）：switch_root " prog_lang="custom-colors" readonly="False" tags="" unique_id="49"><rich_text scale="h2" weight="heavy">二十、switch_root 命令</rich_text><rich_text scale="h2"> </rich_text><rich_text>
除了基于initramfs的系统（如第四节的mini  linux），通常initramfs都是为安装最终的根文件系统做准备工作，它的最后一步需要安装最终的根文件系统，然后切换到新根文件系统上去。以往 的基于ramdisk 的initrd  使用pivot_root命令切换到新的根文件系统，然后卸载ramdisk。但是initramfs是rootfs，而rootfs既不能 pivot_root，也不能umount。为了从initramfs中切换到新根文件系统，需要作如下处理： 
（1）删除rootfs的全部内容，释放空间 
find -xdev / -exec rm '{}' ';' 
（2）安装新的根文件系统，并切换 
cd  /newmount; mount --move . /; chroot . 
（3）把stdin/stdout/stderr  附加到新的/dev/console，然后执行新文件系统的init程序 

上述步骤比较麻烦，而且要解决一个重要的问题：第一步删除 rootfs的所有内容也删除了所有的命令，那么后续如何再使用这些命令完成其他步骤？busybox的解决方案是，提供了switch_root命令， 完成全部的处理过程，使用起来非常方便。 
switch_root命令的格式是： 
</rich_text><rich_text foreground="#0000ff">switch_root  [-c /dev/console] NEW_ROOT NEW_INIT [ARGUMENTS_TO_INIT]</rich_text><rich_text> 
其中NEW_ROOT是实际的根文件系统的挂载目录，执行switch_root命令前需要挂载到系统中；NEW_INIT是实际根文件系统的init程序 的路径，一般是/sbin/init；</rich_text><rich_text foreground="#000000">-c  /dev/console是可选参数，用于重定向实际的根文件系统的设备文件，一般情况我们不会使用；而ARGUMENTS_TO_INIT则是传递给实际的根文件系统的init程序的参数，也是可选的。</rich_text><rich_text> 
</rich_text><rich_text foreground="#000000">
需要特别注意的是：switch_root命令必须由PID=1的进程调用，也就是必须由 initramfs的init程序直接调用，不能由init派生的其他进程调用，否则会出错，提示： 
switch_root: not  rootfs</rich_text><rich_text> 
也是同样的原因，init脚本调用switch_root命令必须用exec命令调用，否则也会出错，提示： 
</rich_text><rich_text foreground="#0000ff">switch_root: not rootfs</rich_text><rich_text> 

1). switch_root的功能相当于脚本：
</rich_text><rich_text foreground="#ffff00000000"> find / -xdev | xargs rm -rf
 cd &quot;$1&quot;
 shift
 mount --move . /
 exec chroot . &quot;$@&quot;
</rich_text><rich_text> 
2).
  

</rich_text><rich_text scale="h2" weight="heavy">二十一、实践：用 initramfs安装CLFS根文件系统 </rich_text><rich_text>
现在实践一下switch_root命令，用它切换一个CLFS的根文件系统硬盘分区。我的 CLFS安装在/dev/sda8硬盘分区，我们就以此为例说明。 
我们还是在以前的image目录中构建 
（1）改写init脚本 
</rich_text><rich_text foreground="#0000ff">#!/bin/sh</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">mount -t  proc proc /proc</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">mount -t sysfs sysfs  /sys</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">mdev -s</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">mount /dev/sda8 /mnt</rich_text><rich_text>  （注意：为了简单，我们直接把CLFS分区写死在init脚本中了） 
</rich_text><rich_text foreground="#0000ff">exec  switch_root /mnt /sbin/init   </rich_text><rich_text>
（2）生成新的initrd 
按上一节</rich_text><rich_text link="webs http://linuxman.blog.ccidnet.com/blog-htm-do-showone-uid-60710-type-blog-itemid-646221.html">“精通initramfs构建step by step （五）：initrd”</rich_text><rich_text>描述的cpio命令生成新的 initrd。 
（3）把新的initrd拷贝到CLFS分区的/boot目录下，改名为clfs-initrd 
（4）在GRUB的 menu.lst配置文件中增加一个启动项 
</rich_text><rich_text foreground="#0000ff">#test for initramfs of  CLFS 
title test for initramfs of CLFS (on /dev/sda8) 
root  (hd0,7) 
kernel /boot/clfskernel-2.6.17.13 （注意：并没有向内核传递root参数信息）</rich_text><rich_text>  
</rich_text><rich_text foreground="#00000000ffff">initrd /boot/clfs-initrd </rich_text><rich_text>

全部做完后，重启机器，选择 </rich_text><rich_text foreground="#000000">test for initramfs of CLFS  启动项，机器顺利进入了CLFS系统，我们构建的initramfs用switch_root命令完成了CLFS实际根文件系统的安装和切换。</rich_text><rich_text>  

</rich_text></node><node name="（七）：modules" prog_lang="custom-colors" readonly="False" tags="" unique_id="51"><rich_text scale="h2" weight="heavy">二十二、内核模块支持 </rich_text><rich_text>
到目前为止，我们在构建initramfs时还没有涉及内核模块的支持，所用到的硬件驱动程序都是直接编译到内核中。现在我们就看看如何使initramfs支持内核模块。 
首先，内核配置要支持模块，并支持内核模块的自动加载功能：在内核配置菜单中的激活下面的配置项，编译进内核 Load module support / Enable loadable module support / Automatic kernel loading ；
然后把需要的硬件驱动程序配置模块形式，比如把我的机器上的硬盘控制器的驱动编译成模块，则选择
Device Driver 
|----&gt;SCSI device support 
|----&gt;SCSI disk support 
|-----&gt;verbose SCSI error reporting (不是必须的，但可方便问题定位) 
|-----&gt;SCSI low-level drivers 
    |----&gt;Serial ATA (SATA) support 
    |----&gt;intel PIIX/ICH SATA support 
把它们配置成模块。
最后，编译内核，并把编译好的内核模块安装到image的目录下：
</rich_text><rich_text foreground="#0000ff">make</rich_text><rich_text>
</rich_text><rich_text foreground="#0000ff">make  INSTALL_MOD_PATH=~/initramfs-test/image modules_install</rich_text><rich_text>
命令执行完毕后，在image/lib/modules/2.6.17.13/kernel/drivers/scsi目录下安装了4个内核模文件：scsi_mod.ko、sd_mod.ko、ata_piix.ko、libata.ko，它们就是所需的硬盘控制器的驱动程序。 

好了，都准备好了，可以用cpio命令生成inintramfs了。不过，为了方便后面的试验，我们再把init脚本改成
</rich_text><rich_text foreground="#0000ff">#!/bin/sh</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">mount -t proc  proc /proc</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">mount -t sysfs sysfs /sys</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">mdev -s</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">exec  /bin/sh</rich_text><rich_text>
使系统启动后进入shell环境，并且用exec调用的方式，使shell的pid为1，能够执行switch_root命令。

</rich_text><rich_text scale="h2" weight="heavy">二十三、试验：用initramfs中的内核模块安装硬盘文件系统</rich_text><rich_text>
用新生成的initramfs启动系统，内核并没有自动加载硬盘控制器的驱动程序，所以 /dev目录下也没有sda等硬盘设备文件。好吧，我们自己加载内核模块文件。不幸的是，busybox的modprobe命令执行不正常，不能加载内核模块。怀疑是busybox的modprobe命令配置或编译有问题，后续再花时间定位吧，先用insmod命令依次加载。查看/lib/modules/2.6.17.13/modules.dep，弄清楚了4个模块的依赖关系，执行下面的命令加载：
</rich_text><rich_text foreground="#0000ff">insmod   scsi_mod</rich_text><rich_text>
</rich_text><rich_text foreground="#0000ff">insmod  libata</rich_text><rich_text>
</rich_text><rich_text foreground="#0000ff">insmod  ata_piix</rich_text><rich_text>
</rich_text><rich_text foreground="#0000ff">insmod   sd_mod</rich_text><rich_text>
然后再用
</rich_text><rich_text foreground="#0000ff">mdev -s</rich_text><rich_text>
命令生成硬盘的设备文件。
好了，可以安装CLFS的硬盘分区，并把根文件系统切换到CLFS的硬盘分区：
</rich_text><rich_text foreground="#0000ff">mount /dev/sda8 /mnt</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">exec  switch_root /mnt /sbin/init   </rich_text><rich_text>
系统正常启动到了CLFS，我们可以做到用initramfs中的硬盘控制器的驱动模块安装硬盘分区了。

</rich_text><rich_text scale="h2" weight="heavy">二十四、mdev的hotplug模式</rich_text><rich_text>
上面的试验中，我们在加载完驱动模块后调用了mdev -s 命令来生成硬盘的设备文件。其实，可以使用mdev的hotplug模式在加载内核时自动生成对应的设备文件：
在执行insmod命令前，用
</rich_text><rich_text foreground="#0000ff">echo /sbin/mdev &gt;  /proc/sys/kernel/hotplug</rich_text><rich_text>
命令设置系统的hotplug程序为mdev。
后续使用insmod命令加载模块时，系统自动调用mdev生成相应的设备文件。
注意：内核必须配置支持hotplug功能，而前面提到的CLFS最简内核配置方案是没有配置hotplug支持的。
</rich_text></node><node name="（八）：coldplug" prog_lang="custom-colors" readonly="False" tags="" unique_id="53"><rich_text scale="h2" weight="heavy">二十五、udev的coldplug模式 </rich_text><rich_text>
内核在启动时已经检测到了系统的硬件设备，并把硬件设备信息通过sysfs内核虚拟文件系统导出。sysfs文件系统由系统初始化脚本挂载到/sys上。udev扫描sysfs文件系统，根据硬件设备信息生成热插拔（hotplug）事件，udev再读取这些事件，生成对应的硬件设备文件。由于没有实际的硬件插拔动作，所以这一过程被称为coldplug。我们的initramfs就是利用这一机制，加载硬件设备的驱动程序模块。 

udev完成coldplug操作，需要下面三个程序： 
udevd——作为deamon，记录hotplug事件，然后排队后再发送给udev，避免事件冲突（race conditions）。 
udevtrigger——扫描sysfs文件系统，生成相应的硬件设备hotplug事件。 
udevsettle——查看udev事件队列，等队列内事件全部处理完毕才退出。 

在initramfs的init脚本中可以执行下面的语句实现coldplug功能： 
</rich_text><rich_text foreground="#0000ff">mkdir -p /dev/.udev/db</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">udevd  --daemon</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">mkdir -p /dev/.udev/queue</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">udevtrigger</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">udevsettle</rich_text><rich_text> 
许多文档提到的在udevd --daemon 命令前要执行 
echo &gt; /proc/sys/kernel/hotplug 
命令，经验证，在我们的initramfs环境下的coldplug功能中并不需要。 

</rich_text><rich_text scale="h2" weight="heavy">二十六、试验：用udev自动加载设备驱动模块 </rich_text><rich_text>
了解了udev的coldplug的机理，我们就试验一下用udev自动加载设备驱动模块，并生成硬件设备文件。 
（1）从 /sbin 目录下拷贝udevd、udevtrigger、udevsettle程序到image目录下的sbin目录下，并用ldd命令找到它们所需要的动态库文件，拷贝到image目录下的lib目录下。 

（2）修改init脚本，增加coldplug功能： 
</rich_text><rich_text foreground="#0000ff">#!/bin/sh 
mount -t proc proc /proc 
mount -t  sysfs sysfs /sys 
mdev -s 
#using udev autoload hard disk driver  module 
mkdir -p /dev/.udev/db 
udevd --daemon 
mkdir -p  /dev/.udev/queue 
udevtrigger 
udevsettle 
mount /dev/sda8 /mnt  
killall udevd 
exec switch_root /mnt /sbin/init</rich_text><rich_text> 
注意：在切换到真正根文件系统前，要把udevd进程杀掉，否则会和真正根文件系统中的udev脚本的执行相冲突。这就是上面killall udevd 语句的作用。 

（3）编写udev规则文件 
规则文件是udev的灵魂，没有规则文件，udev无法自动加载硬件设备的驱动模块。为了简单，我们直接使用CLFS中的40-modprobe.rules，把它拷贝到image目录下的etc/udev/rules.d目录。有关udev的规则文件编写，已超出了本文的范围，后续我有可能专文描述。 
</rich_text><rich_text foreground="#0000ff">########################################################################  
# 
# Description : 40-modprobe.rules 
# 
# Authors   :  Based on Open Suse Udev Rules 
#     </rich_text><rich_text>[url=mailto:kay.sievers@suse.de]</rich_text><rich_text foreground="#0000ff">kay.sievers@suse.de</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff"># 
#  Adapted to : Jim Gifford 
# LFS   : Alexander E. Patrakov 
# 
#  Version   : 00.01 
# 
# Notes   : 
# 
########################################################################</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff"># hotplug 
ENV{MODALIAS}==&quot;?*&quot;,  RUN+=&quot;/sbin/modprobe $env{MODALIAS}&quot;</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">
#  scsi 
SUBSYSTEM==&quot;scsi_device&quot;, ACTION==&quot;add&quot;,  SYSFS{device/type}==&quot;0|7|14&quot;, RUN+=&quot;/sbin/modprobe sd_mod&quot; 
SUBSYSTEM==&quot;scsi_device&quot;,  ACTION==&quot;add&quot;, SYSFS{device/type}==&quot;1&quot;,  SYSFS{device/vendor}==&quot;On[sS]tream&quot;, RUN+=&quot;/sbin/modprobe osst&quot; 
SUBSYSTEM==&quot;scsi_device&quot;,  ACTION==&quot;add&quot;, SYSFS{device/type}==&quot;1&quot;, RUN+=&quot;/sbin/modprobe st&quot; 
SUBSYSTEM==&quot;scsi_device&quot;,  ACTION==&quot;add&quot;, SYSFS{device/type}==&quot;[45]&quot;, RUN+=&quot;/sbin/modprobe sr_mod&quot;  
SUBSYSTEM==&quot;scsi_device&quot;, ACTION==&quot;add&quot;, RUN+=&quot;/sbin/modprobe sg&quot;</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">
# floppy 
KERNEL==&quot;nvram&quot;,  ACTION==&quot;add&quot;, RUN+=&quot;load_floppy_module.sh&quot;</rich_text><rich_text> 
</rich_text><rich_text foreground="#000000">注意：上面的</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">ENV{MODALIAS}==&quot;?*&quot;,  RUN+=&quot;/sbin/modprobe $env{MODALIAS}&quot;</rich_text><rich_text> 
</rich_text><rich_text foreground="#000000">语 句是实现自动加载硬件设备驱动模块功能的关键，它根据sysfs文件系统中记录的模块aliases数据，用modprobe命令加载对应的内核模块。有 关模块aliases的进一步说明，可参考CLFS手册（CLFS-1.0.0-x86）中的11.5.2.4. Module  Loading一节的描述。</rich_text><rich_text> 

（4）拷贝modprobe命令 
前一节提到过，busybox的modprobe命令不能正常使用，所以我们需要拷贝 /sbin 目录下的modprobe命令到image目录下的sbin目录，供udev加载内核模块使用。再用ldd命令检查一下 /sbin/modprobe 命令所需的动态库文件，如果有则拷贝到image/lib目录下。（我的检查结果是，除了libc6外，不需要其他动态库，所以不需要拷贝） 

好了，重新生成initramfs，启动CLFS系统，initramfs能够自动加载硬盘设备的驱动模块，系统顺利地从initramfs切换到了真正的CLFS的根文件系统。 
</rich_text></node><node name="（九）：内核编译时构建initramfs补遗" prog_lang="custom-colors" readonly="False" tags="" unique_id="52"><rich_text scale="h2" weight="heavy">二十七、直接把cpio打包文件编译进内核 </rich_text><rich_text>
如果我们有一个已经做好的cpio格式的initramfs，可以在内核编译时直接编译进内核。回忆一下</rich_text><rich_text link="webs http://linuxman.blog.ccidnet.com/blog-htm-do-showone-uid-60710-type-blog-itemid-625106.html">第一节</rich_text><rich_text>的内容，我们在内核配置参数中的initramfs sources配置项下输入构建initramfs的目录路径。其实我们也可以直接输出现成的initramfs的文件名，这样在内核编译时，就可以把它编译进内核了。 
使用这种方法，有两点需要注意： 
（1）cpio文件不能压缩。一般作为initrd的cpio文件都经过了压缩，所以编译前需要先把压缩过的文件解压。 
（2）cpio文件的后缀名必须是 .cpio。内核编译通过 .cpio的后缀名来识别此文件是cpio打包文件，而其他文件后缀名则会被认为是initramfs构建的描述文件（关于描述文件，下面后详细说明）。 

</rich_text><rich_text scale="h2" weight="heavy">二十八、用描述文件构建initramfs </rich_text><rich_text>
用内核编译工具构建initramfs的第三种方法是使用描述文件。在内核配置参数中的initramfs sources配置项下可以输入initramfs构建描述文件的文件名，内核编译工具根据描述文件完成initramfs的构建。 
描述文件的语法格式的说明如下：
</rich_text><rich_text foreground="#0000ff"># a comment
file &lt;name&gt;  &lt;location&gt; &lt;mode&gt; &lt;uid&gt; &lt;gid&gt;
dir  &lt;name&gt; &lt;mode&gt; &lt;uid&gt; &lt;gid&gt;
nod &lt;name&gt;  &lt;mode&gt; &lt;uid&gt; &lt;gid&gt; &lt;dev_type&gt; &lt;maj&gt;  &lt;min&gt;
slink &lt;name&gt; &lt;target&gt; &lt;mode&gt;  &lt;uid&gt; &lt;gid&gt;
pipe &lt;name&gt; &lt;mode&gt; &lt;uid&gt;  &lt;gid&gt;
sock &lt;name&gt; &lt;mode&gt; &lt;uid&gt; &lt;gid&gt;</rich_text><rich_text>
</rich_text><rich_text foreground="#0000ff">
&lt;name&gt;      name of the file/dir/nod/etc in  the archive
&lt;location&gt;  location of the file in the current  filesystem
&lt;target&gt;    link target
&lt;mode&gt;       mode/permissions of the file
&lt;uid&gt;       user id (0=root)
&lt;gid&gt;        group id (0=root)
&lt;dev_type&gt;  device type (b=block,  c=character)
&lt;maj&gt;       major number of nod
&lt;min&gt;        minor number of nod</rich_text><rich_text>

例子：
我们用描述文件的方式，构建第一节中的hello world的initramfs。
</rich_text><rich_text foreground="#0000ff">hello-init.desp:</rich_text><rich_text>
</rich_text><rich_text foreground="#0000ff">dir /dev 0755 0 0
nod /dev/console 0600 0 0 c 5 1
file  /init /home/wyk/initramfs-test/hello_static 0755 0 0</rich_text><rich_text>
在内核配置项initramfs sources中指定描述文件hello-init.desp，编译内核时就会生成hello world的initramfs，运行效果与第一节用指定构建目录的方法构建的initramfs的完全相同。

注意：在内核帮助文件中，提到initramfs sources配置项可以指定多个目录或描述文件，内核会汇集这些目录或文件生成一个initramfs。但从我的试验来看，initramfs sources只接受单一的目录名或文件名，输出多个目录名或文件名（之间用空格分隔），内核编译时就会出错。也许是我的方法有误，还望读者指正。</rich_text></node><node name="（十）：uclibc" prog_lang="custom-colors" readonly="False" tags="" unique_id="58"><rich_text scale="h2" weight="heavy">二十九、toolchain </rich_text><rich_text>
在initramfs中使用uclibc库，关键是构建uclibc的工具链toolchain。构建uclibc 的 toolchain 有两种主要方式：（1）用buildroot工具（ </rich_text><rich_text link="webs http://buildroot.uclibc.org/">http://buildroot.uclibc.org/</rich_text><rich_text>）自动构建，这也是uclibc的官方标准做法。（2）用CLFS Embedded手册的方法手工创建。目前CLFS Embedded还在开发中，可在</rich_text><rich_text link="webs http://cross-lfs.org/view/clfs-embedded/x86/">http://cross-lfs.org/view/clfs-embedded/x86/</rich_text><rich_text>中查阅。 

我们简单地说明用buildroot工具构建uclbic的toolchain的步骤： 
（1）获取buildroot。 
推荐用svn命令从它的版本库中下载： 
</rich_text><rich_text foreground="#0000ff">svn co  svn://uclibc.org/trunk/buildroot</rich_text><rich_text> 
要求使用svn命令，需要先安装subversion软件包。下载过程中，可能会出现连接异常中断的情况，这时重新执行上述命令，继续进行下载，有可能要重复多次。 
（2）配置buildroot 
因为我们只是创建toolchain，所以需要做相应的配置。在buildroot的顶层目录下，执行 
</rich_text><rich_text foreground="#0000ff">make menuconfig</rich_text><rich_text> 
命令，在缺省配置的基础上做如下配置 
</rich_text><rich_text foreground="#0000ff">Target Architecture: i386</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">Target Architecture Variant: i686</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">Package Selection for the target: 取消BusyBox的选项（缺省是选中的）</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">Target filesystem options: 取消 ext2 root  filesystem（缺省是选中的）</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">Toolchain --&gt;  Toolchain type: Buildroot toolchain</rich_text><rich_text> 
（3）编译 
执行 
</rich_text><rich_text foreground="#0000ff">make</rich_text><rich_text> 
命令，buildroot工具会自动下载所需要的源文件并自动编译，等一两个小时后，toolchain就编译好了。编译好的toolchain位于 
buildroot/build_i686/staging_dir/usr/bin/ 
目录下。工具命令的前缀是 i686-linux- 。 

</rich_text><rich_text scale="h2" weight="heavy">三十、编译Busybox静态连接uclibc库 </rich_text><rich_text>
一般而言，使用uclibc库是为了把它静态连接到busybox中。具体步骤是： 
（1）把uclibc toolchain的目录添加到PATH中。 
在~/.bash_profile文件中添加： 
</rich_text><rich_text foreground="#0000ff">#set PATH so it includes uclibc toolchain if it exist 
if  [ -d ~/buildroot/build_i686/staging_dir/usr/bin ] ; then 
PATH=&quot;${PATH}&quot;:~/buildroot/build_i686/staging_dir/usr/bin  
fi</rich_text><rich_text> 
（2）配置busybox静态连接库。 
在busybox的配置界面中，选择： 
</rich_text><rich_text foreground="#0000ff">Build Options --&gt; Build BusyBox as a static binary  (no shared libs)</rich_text><rich_text> 
（3）编译 
执行 
</rich_text><rich_text foreground="#0000ff">make  CROSS_COMPILE=i686-linux-</rich_text><rich_text> 
命令“交叉编译”busybox。 
最后编译生成的是静态连接的可执行文件，不需要在initramfs中拷贝库文件。 

</rich_text><rich_text scale="h2" weight="heavy">三十一、用buildroot自动构建initramfs </rich_text><rich_text>
buildroot工具实际是一个功能强大的根文件系统构建工具，它以uclibc和busybox作为系统构建的基础，toolchain只是它构建系统的中间产品。initramfs是一种特殊的根文件系统，当然也可以用buildroot工具自动构建，下面是构建方法的简要描述： 
（1）配置 
在buildroot的配置界面下做如下的配置： 
</rich_text><rich_text foreground="#0000ff">Package Selection for  the target: 选择 </rich_text><rich_text>
</rich_text><rich_text foreground="#0000ff">  Busybox 
  Run  Busybox's own full installation</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">  Use  minimal target skeleton</rich_text><rich_text> 
</rich_text><rich_text foreground="#0000ff">Target  filesystem options --&gt; cpio the root filesystem --&gt; comprassion  method: gzip</rich_text><rich_text> 
（2）编译 
执行 
</rich_text><rich_text foreground="#0000ff">make</rich_text><rich_text> 
命令，进行编译。 
（3）输出 
构建好的cpio文件是 
buildroot/binaries/rootfs.i686.cpio.gz 
同一目录下还包含一个未压缩的文件：rootfs.i686.cpio 
构建目录则是 
buildroot/project_build_i686/uclibc/root 
可以在这个目录下对原始的initramfs进行修改调整，然后自己用cpio命令打包生成新的initramfs。 
（4）调整 
直接用buildroot生成的root.i686.cpio.gz作为initramfs，运行时会出现 
</rich_text><rich_text foreground="#0000ff">can't open /dev/tty1: No such file or directory 
can't  open /dev/tty2: No such file or directory 
can't open /dev/tty3: No  such file or directory 
</rich_text><rich_text>错误信息的循环输出，系统不能正常运行。 
错误的原因是没有在initramfs的/dev目录下生成相应的设备文件。需要做如下的调整： 
1）在构建目录（buildroot/project_build_i686/uclibc/root）下的etc/init.d目录中新增一个初始化脚本文件S10mountfs 
</rich_text><rich_text foreground="#0000ff">#!/bin/sh 
mount -t proc proc  /proc 
mount -t sysfs sysfs /sys 
mdev -s</rich_text><rich_text> 
2）更改busybox的setuid属性，否则无法执行mount命令。在构建目录（buildroot/project_build_i686/uclibc/root）下执行 
</rich_text><rich_text foreground="#0000ff">chmod -s bin/busybox</rich_text><rich_text> 
命令。 
这两项调整工作做完后，在构建目录（buildroot/project_build_i686/uclibc/root）下执行 
</rich_text><rich_text foreground="#0000ff">find . | cpio -o -H newc |gzip &gt; ../initramfs.cpio.gz</rich_text><rich_text> 
命令，重新生成initramfs的cpio打包文件。 
（5）运行效果 
运行新的initramfs，系统出现登录提示。输入用户名 root，密码为空，即可进入一个mini的linux系统。 

buildroot是功能强大、配置灵活的自动化构建工具，它的详细使用和配置方法超出了本文的范围，后续可能会专文描述，此处就从略了。 
</rich_text></node><node name="（十一）：klibc" prog_lang="custom-colors" readonly="False" tags="" unique_id="59"><rich_text scale="h2" weight="heavy">三十二、编译klibc </rich_text><rich_text>
（1）在</rich_text><rich_text link="webs http://www.kernel.org/pub/linux/libs/klibc/">http://www.kernel.org/pub/linux/libs/klibc/</rich_text><rich_text>下载klibc的源码，目前最新版本是1.5。 
（2）解开源码，并在顶层目录建立一个符号链接linux，指向linux的内核源码。注意，内核源码必须已通过make menuconfig等命令配置好。 
（3）执行 
</rich_text><rich_text foreground="#0000ff">make</rich_text><rich_text> 
命令，编译klibc。编译完成后，在klibc源码目录树中的usr/dash 和 usr/utils 目录中有shell和一些常用的命令， 它们分成静态链接和动态链接的2种版本，分别在static和shared目录下。为了简单，我们的initramfs就使用静态编译的版本。动态链接的程序需要使用klibc的动态库文件，位于 usr/klibc/目录下。 

</rich_text><rich_text scale="h2" weight="heavy">三十三、run-init命令 </rich_text><rich_text>
与busybox类似，klibc中也有一个切换到真实根文件系统的命令，它就是run-init命令。run-init命令的使用格式与busybox中的switch_root 命令一样，它有2个参数：第一个是已挂载了真实根文件系统的目录；第二个是真实根文件系统中的init程序路径名，一般是 /sbin/init 。即 
run-init /newroot /sbin/init 
语句即可从initramfs切换到挂载在/newroot目录下的真实根文件系统，并执行其中的 /sbin/init 初始化程序。 

</rich_text><rich_text scale="h2" weight="heavy">三十四、试一试 </rich_text><rich_text>
现在我们已经有了编译好的klibc，也了解了关键的run-init命令，那么就可以试试用klibc来构建initramfs。我们用QEMU作为试验环境，并假设在/dev/hda8上有linux系统，根文件系统是ext3。
（1） 拷贝所需的命令到image构建目录
把klibc中的usr/dash/sh、usr/utils/static目录下的mount、mknod命令拷贝到image/bin目录下。把usr/kinit/run-init/static/run-init命令拷贝到image/sbin目录下。
klibc的静态编译版本命令不需要库文件，所以不需要拷贝。
（2）创建硬盘的设备文件
为了简单，我们不使用udev的方式创建设备文件，而是直接用mknod命令创建硬盘的设备文件。对于IDE硬盘/dev/hda，它的主设备号是3，次设备号是0，是块设备类型，所以用下面的命令在image/dev目录下创建它对应的设备文件
</rich_text><rich_text foreground="#0000ff">mknod dev/hda b 3 0</rich_text><rich_text>
/dev/hda上的分区的主设备号也是3，次设备号与分区号相同，据此可以创建/dev/hda1 ~ /dev/hda8的设备文件。
（3）创建/init脚本
</rich_text><rich_text foreground="#0000ff">#!/bin/sh</rich_text><rich_text>
</rich_text><rich_text foreground="#0000ff">/bin/mount -t  sysfs sysfs /sys</rich_text><rich_text>
</rich_text><rich_text foreground="#0000ff">/bin/mount -t proc  proc /proc</rich_text><rich_text>
</rich_text><rich_text foreground="#0000ff">/bin/mount -t ext3 /dev/hda6   /mnt</rich_text><rich_text>
</rich_text><rich_text foreground="#0000ff">exec  /sbin/run-init  /mnt  /sbin/init</rich_text><rich_text>
（4）用cpio命令构建initramfs，然后在QEMU环境下进行试验。如果不出意外，试验系统可以正确地从initramfs切换到真实的linux系统上。</rich_text></node><node name="（十二）：大结局 － 测试一下" prog_lang="custom-colors" readonly="False" tags="" unique_id="60"><rich_text scale="h2" weight="heavy">三十五、测试一下</rich_text><rich_text>
通过前十一节的内容，我们可以说已经完全掌握了initramfs构建的方法，那么现在就测试一下，拿一个实际的 initramfs来分析，看我们是否能理解多少。
我们选择Debian 4.0 AMD64  版本的initramfs作为目标进行分析，它的initramfs文件是initrd.img-2.6.18-6-amd64。首先用cpio命令把 initramfs文件解开，然后打开其中的init脚本文件具体分析。好了，大家利用前面各节的知识开始吧。

作为提示，在这里转载一篇 文章，来自</rich_text><rich_text link="webs http://blog.chinaunix.net/u/12679/showart_429816.html">http://blog.chinaunix.net/u/12679/showart_429816.html</rich_text><rich_text>：

initrd 执行顺序

这是安装过程中的笔记，放这里希望对大家有用。错误之处请指正。

(系统为debian etch,  以安装后默认的initrd.img-2.6.18-5为例)

解开initrd文件：
例如有initrd文件/boot /initrd.img, 用file命令看到这是个gzip压缩的文件，可以用下面的命令解开查看：


代码:
mkdir  /boot/myinit
cd /boot/myinit
zcat ../initrd.img | cpio  -id(注：用mkinitrd命令默认产生的是cramfs格式的。如果文件格式是压缩的ramfs文件系统，可以直接mount之后查看：mount  -t cramfs /boot/initrd.img /mnt/)

如果是2.6内核，因为采用的是cpio压缩，方法如下：
cp  /boot/initrd-***.img initrd.img.gz
gunzip initrd.img.gz
mkdir  initrd
mv initrd.img initrd
cd initrd
cpio -mdiv &lt;  initrd.img


在当前目录下就有一些目录和文件init，其中文件init是启动时加载initrd之后执行的脚本。

目 录结构：

/bin/: 文件有busybox, mknod, sh, uname, cat, mount, pivot_root等

--------/sbin/:  文件有modprobe, depmod, udevd, udevdtrigger

--------/lib/: 文件有: 
----------------(1)  可执行文件需要的动态库
----------------(2) modules/: 内核模块
----------------(3)  udev/: udev需要的可执行文件

--------/lib64/: 文件有：x86_64程序装载器

--------/etc/:  与modprobe, udev相关的配置文件

--------/conf/: 有如下的文件
----------------(1)  modules: 列出了需要加载的模块
----------------(2) arch.conf:  设置变量DPKG_ARCH=amd64
----------------(3) initramfs.conf: 定义了一些变量

--------/scripts/:  
----------------有如下的文件:
----------------functions: 定义了一些方便使用的函数
----------------local 和nfs: mount根目录时执行的脚本，一般mount本地系统，执行local
----------------
---------------- 有如下的目录，其中放置各阶段执行的脚本：
----------------init_top/
----------------init_premount/
----------------init_bottom/
----------------local_top/
----------------local_premount/
----------------local_bottom/

--------/init:  启动时加载initrd之后执行的脚本


生成initrd文件：

find . |cpio -o  --dereference -H newc | gzip -9 &gt; ../initrd.img


init文件执行流 程：

--------1) 创建目录/dev, /root, /sys, /proc, /tmp,  /var/lock，其中/root是下面根文件系统要mount的位置

--------2) mount系统proc和sys

--------3)  执行脚本/etc/udev/udev.conf，仅定义变量

--------4) mount udev设备：mount -t  tmpfs -o size=&lt;xx&gt; udev /dev

--------5) 创建/dev/console,  /dev/null, /dev/.initramfs

--------6) 导入/conf目录下的initramfs.conf,  /conf/conf.d/目录以及/scripts/functions定义的变量和函数,  并且根据传递的内核参数设置相应的变量，其中比较重要的变量有：
----------------a)  rootdelay=&lt;时间&gt;,  加载根文件系统前等待的时间。如果根文件系统在U盘上，一定要在这里或在grub的kernel后加上这个参数，等待发现U盘后再mount根文件系统， 否则会出现找不到根文件系统的错误.
----------------b) panic=&lt;时间&gt;  系统panic后，隔多长时间再reboot。当你试验新内核或新initrd，经常panic而不想按开机按钮时可以加上这个参数

--------7)  depmod -a 在/lib/modules/&lt;内核版本号&gt;/目录下产生modules.dep文件

--------8)  执行init_top目录下的脚本文件。这里只有一个framebuffer，它处理内核参数video=,vga=,splash等参数,  另外创建节点/dev/tty[0-8]

--------9)  用modprobe按顺序加载/conf/modules列出的模块。注意，udev需要unix模块，否则会出现错误: udevd[606]:  error initializing udev socket

--------10)  执行/scripts/init-premount/下的脚本文件。
-------------10.1) 文件thermal:  它根据DPKG_ARCH的不同值加载相应需要的模块，并且加载fan和thermal模块。
-------------10.2)  文件udev: 执行如下过程：
------------------------a) mkdir -p /dev/.udev/db
------------------------b)  udevd --daemon 以daemon形式启动udevd，大概用于监视hotplug设备的插拔
------------------------c)  mkdir -p /dev/.udev/queue/ (不知道这两个mkdir的用途)
------------------------d)  udevtrigger 对于coldplug的设备，（也就是开机前插入的设备），触发设备的uevents,以便内核处理
------------------------e)  udevsettle 等待，直到内核uevents事件处理完

--------11) 执行/scripts/local,  它完成mount根文件系统的过程：
----------------11.1) 首先执行local-top/目录下的脚本
------------------------11.1.1)  文件udev_helper: 
----------------------------------a)  针对根文件系统设备(如通常的/dev/sda1,  /dev/sda2等)不存在的情况，加载了模块ide_generic。我可以针对找不到硬盘的情况，加载模块aic94xx, sd_mod.
----------------11.2)  如果根文件系统设备还不存在，则年等待一段时间（默认180s），过了这段时间还找不到根文件系统设备就panic.
----------------11.3)   取得根文件系统的类型：先看有没有传递参数rootfstype=，如果没有就执行/bin/fstype，如果还不知道文件系统类型就执行/lib /udev/vol_id来取得文件系统类型。
----------------11.4) 执行local-premount/ 下的脚本：
-------------------------11.4.1)  文件resume: （没看太懂）
------------------------------a)  处理传递的resume参数，它指定的是一个分区，格式为resume=LABEL=/dev/sda1或resume=UUID=xxx,  用于suspend to disk
----------------11.5)  根据文件系统类型加载相应的模块，例如如果根文件系统是ext2类型的，就加载ext2（如果没编译进内核）。
----------------11.6）mount 根文件系统到/root上
----------------11.7) 执行local-bottom/下的脚本(这里没有脚本)。

--------12)  执行init-bottom/下的脚本：
---------------12.1) 文件udev: 
------------------------a)  kill掉udevd
------------------------b) nuke /dev/.udev/queue/ (不知啥意思)
------------------------c)  执行/etc/udev/udev.conf 设置变量tmpfs_size=10M
------------------------d)  mkdir /dev/.static/dev (注意，这个目录不是在硬盘上创建的)
------------------------e)  mount -n -o bind /root/dev /dev/.static/dev 把真实文件系统的/dev目录下的node(在硬盘上)  bind到/dev/.static/dev/下
------------------------f) mount -n -o move  /dev /root/dev 把tmpfs类型的udev移到真实的文件系统的/dev下，(注意前面一开始就在/dev上mount了udev),  这时真实文件系统的/dev上mount了udev，而原来在硬盘的/dev目录下的node到了/dev/.static/dev下，实际上在硬盘上没 有/dev/.static这个目录. (这个不太好理解)
------------------------g) nuke /dev  (不知啥意思)
------------------------h) ln -s /root/dev /dev 前面mount -o  move之后，目录/dev下什么也没了，这时/root还没真正成为根。这一步使得，如果其它脚本要使用/dev/下的设备文件时不至于找不到。

--------13)  mount -n -o move /sys /root/sys 

--------14) mount -n -o move  /proc /root/proc

--------15) exec run-init /root /sbin/init &quot;$@&quot;  &lt;/root/dev/console &gt; /root/dev/console  这一步应该是使真实文件系统成为根，并执行它的/sbin/init(没看懂)

注：加载aic94xx时，需要从目录/usr/lib /hotplug/firmware或者/lib/udev/firmware下读入firmware数据，所以还要建立目录usr/lib /hotplug/firmware或者lib/udev/firmware (在initrd的根目录下，即/boot/myinit)  ，然后，把aic94xx-seq.fw拷到任何一个目录中。  可以看出，如果把aic94xx编译进内核，就应把firmware数据也放进内核，但这个功能还没实现。参见内核文档 Documentation/firmware_class/README的末尾。
</rich_text></node></node><node name="CMake 使用方法" prog_lang="custom-colors" readonly="False" tags="" unique_id="47"><rich_text>CMake是一个跨平台的安装(编译)工具,可以用简单的语句来描述所有平台的安装(编译过程)。他能够输出各种各样的makefile或者project文件,能测试编译器所支持的C++特性,类似UNIX下的automake。 
CMake 使用方法 CMake 的所有的语句都写在一个叫:CMakeLists.txt 的文件中。当CMakeLists.txt文件确定后,可以用ccmake命令对相关  的变量值进行配置。这个命令必须指向CMakeLists.txt所在的目录。配置完成之后,应用cmake命令生成相应的makefile（在Unix  like系统下）或者 project文件（指定用window下的相应编程工具编译时）。 
    其基本操作流程为： 
 1.  $&gt; ccmake directory
 
2.  $&gt; cmake directory
 
3.  $&gt; make

   其中directory为CMakeList.txt所在目录； 
 • 第一条语句用于配置编译选项，如VTK_DIR目录 ，一般这一步不需要配置，直接执行第二条语句即可，但当出现错误时，这里就需要认为配置了，这一步才真正派上用场；  
• 第二条命令用于根据CMakeLists.txt生成Makefile文件；  
• 第三条命令用于执行Makefile文件，编译程序，生成可执行文件； 
 CMake的执行就是这么简单，其难点在于如何编写CMakeLists.txt文件，下面结合例子简单介绍CMakeLists.txt的编写，看下面这个CMakeLists.txt 
 1.  #project name
 
2.  PROJECT(test_math)
 
3.  #head file path
 
4.  INCLUDE_DIRECTORIES(
 
5.  include
 
6.  )
 
7.  #source directory
 
8.  AUX_SOURCE_DIRECTORY(src DIR_SRCS)
 
9.  #set environment variable
 
10.  SET(TEST_MATH
 
11.  ${DIR_SRCS}
 
12.  )
 
13.  #set extern libraries
 
14.  SET(LIBRARIES
 
15.  libm.so
 
16.  )
 
17.  #add executable file
 
18.  ADD_EXECUTABLE(../bin/bin ${TEST_MATH})
 
19.  #add link library
 
20.  TARGET_LINK_LIBRARIES(../bin/bin ${LIBRARIES})
 
21. 
或者用下面这个CMakeLists.txt 
 1.  #project name
 
2.  PROJECT(test_math)
 
3.  #head file path
 
4.  INCLUDE_DIRECTORIES(
 
5.  include
 
6.  )
 
7.  #source directory
 
8.  AUX_SOURCE_DIRECTORY(src DIR_SRCS)
 
9.  #set environment variable
 
10.  SET(TEST_MATH
 
11.  ${DIR_SRCS}
 
12.  )
 
13.  #add executable file
 
14.  ADD_EXECUTABLE(../bin/bin ${TEST_MATH})
 
15.  #add link library
 
16.  TARGET_LINK_LIBRARIES(../bin/bin m)

  这是一个测试数学函数的程序的CMakeLists.txt，&quot;#&quot;后面为注释的内容，CMake的命令全部为大写 
第2行指定生成的工程名为test_math 
第4行指定头文件目录为include 
第8行指定源文件目录为src，并将其赋值给环境变量DIR_SRCS 
第10行设定环境变量TEST_MATH的值为环境变量DIR_SRCS的值，此处用于显示如何用环境变量对环境变量进行赋值 
第14行将数学函数库赋值给环境变量LIBRARIES，当然，可以不用这个环境变量，而在后面直接使用该库名 
第18行用于指定生成文件，将环境变量TEST_MATH目录下的所有文件编译生成../bin目录下的可执行文件bin 
第20行指定../bin/bin执行时的链接库为环境变量LIBRARIES的值－libm.so 
下面给出源文件
/src/main.c: 
 1.  #include&lt;stdio.h&gt;
 
2.  #include&quot;../include/a.h&quot;
 
3.  int main()
 
4.  {
 
5.  double b=25.0;
 
6.  double a=0.0;
 
7.      a=get_sqrt(b);
 
8.  
9.  </rich_text><rich_text link="webs http://www.opengroup.org/onlinepubs/009695399/functions/printf.html">printf</rich_text><rich_text>(&quot;a is %lf, b is %lf\n&quot;,a,b);
 
10.  return 0;
 
11.  }
 
12. 
 /src/a.c 
 1.  #include&quot;../include/a.h&quot;
 
2.  double get_sqrt(double var1)
 
3.  {
 
4.  return sqrt(var1);
 
5.  }
 
6. 
 /include/a.h 
#ifndef  A_FILE_HEADER_INC 
 1.  
2.  #define  A_FILE_HEADER_INC
 
3.  #include&lt;math.h&gt;
 
4.  
5.  double get_sqrt(double var1);
 
6.  
7.  #endif 

 将CMakeLists.txt放在当前目录下，执行CMakeLists.txt 
 1.  $&gt; cmake .
 
2.  $&gt; make

 即可生成可执行文件，在目录/bin下的bin文件，好了运行看其效果是否和所想一样。
</rich_text></node><node name="工具" prog_lang="custom-colors" readonly="False" tags="" unique_id="43"><rich_text>
</rich_text><node name="pahole" prog_lang="custom-colors" readonly="False" tags="" unique_id="44"><rich_text>新的git地址：git://git.kernel.org/pub/scm/devel/pahole/pahole.git
From: </rich_text><rich_text link="webs http://lwn.net/Articles/206805/">http://lwn.net/Articles/206805/</rich_text><rich_text>

Hi,

        I've been working on some DWARF2 utilities and thought that it
is about time I announce it to the community, so that what is already
available can be used by people interested in reducing structure sizes
and otherwise taking advantage of the information available in the elf
sections of files compiled with 'gcc -g' or in the case of the kernel
with CONFIG_DEBUG_INFO enabled, so here it goes the description of said
tools:

pahole: Poke-a-Hole is a tool to find out holes in structures, holes
being defined as the space between members of functions due to alignemnt
rules that could be used for new struct entries or to reorganize
existing structures to reduce its size, without more ado lets see what
that means:

[acme@newtoy net-2.6]$ pahole kernel/sched.o task_struct
/* include2/asm/system.h:11 */
struct task_struct {
        volatile long int       state;          /*     0     4 */
        struct thread_info *    thread_info;    /*     4     4 */
        atomic_t                usage;          /*     8     4 */
        long unsigned int       flags;          /*    12     4 */

        &lt;SNIP&gt;

        short unsigned int         ioprio;      /*    52     2 */

        /* XXX 2 bytes hole, try to pack */

        long unsigned int          sleep_avg;   /*    56     4 */ */
        unsigned char              fpu_counter; /*   388     1 */

        /* XXX 3 bytes hole, try to pack */

        int                        oomkilladj;  /*   392     4 */

        &lt;SNIP&gt;

}; /* size: 1312, sum members: 1287, holes: 3, sum holes: 13, padding: 12 */

        It doesn't uses any source code files, just the DWARF2
information in ELF sections, inserted by 'gcc -g', to print out the
above information, current goodies being just to show where are holes
that can be used to reduce the struct size, which is even more useful as
we transition to 64bit architectures, where such holes are more
frequent, as we can see in this example:

[acme@newtoy ~]$ file kdump.debug
kdump.debug: ELF 64-bit LSB executable, AMD x86-64, version 1 (SYSV),
dynamically linked (uses shared libs), not stripped
[acme@newtoy ~]$ pahole kdump.debug _IO_FILE | head -7
/* /usr/include/stdio.h:46 */
struct _IO_FILE {
        int   _flags;               /*     0     4 */

        /* XXX 4 bytes hole, try to pack */

        char *_IO_read_ptr;         /*     8     8 */
[acme@newtoy ~]$


        The columns in the comments are (offset, sizeof(member).

        Tons more information is available in the DWARF2 ELF sections,
making it possible to use it for other purposes, and thats where the
next dwarf comes in, pfunct:

[acme@newtoy net-2.6]$ pfunct net/ipv4/tcp_ipv4.o tcp_v4_rcv
/* /pub/scm/linux/kernel/git/acme/net-2.6/net/ipv4/tcp_ipv4.c:1054 */
int tcp_v4_rcv(struct sk_buff * skb);
/* size: 2175 */

        pfunct uses the DWARF2 information to get function details, such
as its full prototype and function size, that allows us to do some more
interesting queries, such as:

[acme@newtoy net-2.6]$ pfunct --size net/ipv4/netfilter/ip_conntrack.ko
| sort -k 2 -nr | head -10
tcp_packet: 3349
ip_conntrack_in: 1146
icmp_error: 874
ip_conntrack_expect_related: 804
__ip_conntrack_confirm: 586
tcp_new: 527
ip_conntrack_init: 525
tcp_error: 508
ip_conntrack_helper_unregister: 482
ip_conntrack_alloc: 469
[acme@newtoy net-2.6]$

        The top ten functions by size (in bytes) in any ELF file with
debugging information!

        The code is available in a git repository at:

git://git.kernel.org/pub/scm/linux/kernel/git/acme/pahole.git

        Just for browsing the cset comments that may well provide hints
on how this thingy can be useful:

</rich_text><rich_text link="webs http://www.kernel.org/git/?p=linux/kernel/git/acme/pahole...">http://www.kernel.org/git/?p=linux/kernel/git/acme/pahole...</rich_text><rich_text>

        Further ideas on how to use the DWARF2 information include tools
that will show where inlines are being used, how much code is added by
inline functions, possibly rewriting asm-offsets.c, converting ostra
(callgraph tool) to use this information, correlate valgrind's
cachegrind information to suggest struct member reorganization to
exploit cacheline locality and more.

        Documentation is very much a disaster, but I guess the current
state of things is useful for interested hackers, so that I thought it
was time got announce this.

        Ideas for additional tools are more than welcome!</rich_text></node><node name="使用ptrace跟踪进程" prog_lang="custom-colors" readonly="False" tags="" unique_id="45"><rich_text>    系统调用ptrace对gdb这种调试器来说是非常重要的,杯具的是,相关的文档却残缺不详–除非你觉得最好的文档就是内核源码!!下面,我会试着向大家展示ptrace在gdb这类工具中的作用.

</rich_text><rich_text scale="h1" weight="heavy">1. 介绍</rich_text><rich_text>
ptrace()是一个系统调用,它允许一个进程控制另外一个进程的执行.不仅如此,我们还可以借助于ptrace修改某个进程的空间(内存或寄存 器),任何传递给一个进程(即被跟踪进程)的信号(除了会直接杀死进程的SIGKILL信号)都会使得这个进程进入暂停状态,这时系统通过wait()通 知跟踪进程,这样,跟踪进程就可以修改被跟踪进程的行为了.
如果跟踪进程在被跟踪进程的内存中设置了相关的事件标志位,那么运行中被跟踪进程也可能因为特殊的事件而暂停.跟踪结束后,跟踪进程甚至可以通过设置被跟踪进程的退出码(exit code)来杀死它,当然也可以让它继续运行.
注意: ptrace()是高度依赖于底层硬件的.使用ptrace的程序通常不容易在个钟体系结构间移植.

</rich_text><rich_text scale="h1" weight="heavy">2. 细节</rich_text><rich_text>
ptrace的原型如下:
    #include &lt;sys/ptrace.h&gt;
    long int ptrace(enum __ptrace_request request, pid_t pid, void * addr, void * data)
    我们可以看到,ptrace有4个参数,其中,request决定ptrace做什么,pid是被跟踪进程的ID,data存储从进程空间偏移量为addr的地方开始将被读取/写入的数据.
父进程可以通过将request设置为PTRACE_TRACEME,以此跟踪被fork出来的子进程,它同样可以通过使用PTRACE_ATTACH来跟踪一个已经在运行的进程.

</rich_text><rich_text scale="h2" weight="heavy">2.1 ptrace如何工作</rich_text><rich_text>
    不管ptrace是什么时候被调用的,它首先做的就是锁住内核.在ptrace返回前,内核会被解锁.在这个过程中,ptrace是如何工作的呢, 我们看看request值(译注: request的可选值值是定义在/usr/include/sys/ptrace.h中的宏)代表的含义吧.

PTRACE_TRACEME:
    PTRACE_TRACEME是被父进程用来跟踪子进程的.正如前面所说的,任何信号(除了SIGKILL),不管是从外来的还是由exec系统调 用产生的,都将使得子进程被暂停,由父进程决定子进程的行为.在request为PTRACE_TRACEME情况下,ptrace()只干一件事,它检 查当前进程的ptrace标志是否已经被设置,没有的话就设置ptrace标志,除了request的任何参数(pid,addr,data)都将被忽 略.

PTRACE_ATTACH:
    request为PTRACE_ATTACH也就意味着,一个进程想要控制另外一个进程.需要注意的是,任何进程都不能跟踪控制起始进程init, 一个进程也不能跟踪自己.某种意义上,调用ptrace的进程就成为了ID为pid的进程的’父’进程.但是,被跟踪进程的真正父进程是ID为 getpid()的进程.

PTRACE_DETACH:
    用来停止跟踪一个进程.跟踪进程决定被跟踪进程的生死.PTRACE_DETACH会恢复PTRACE_ATTACH和 PTRACE_TRACEME的所有改变.父进程通过data参数设置子进程的退出状态(exit  code).子进程的ptrace标志就被复位,然后子进程被移到它原来所在的任务队列中.这时候,子进程的父进程的ID被重新写回子进程的父进程标志 位.可能被修改了的single-step标志位也会被复位.最后,子进程被唤醒,貌似神马都没有发生过;参数addr会被忽略.

PTRACE_PEEKTEXT, PTRACE_PEEKDATA, PTRACE_PEEKUSER:
    这些宏用来读取子进程的内存和用户态空间(user  space).PTRACE_PEEKTEXT和PTRACE_PEEKDATA从子进程内存读取数据,两者功能是相同 的.PTRACE_PEEKUSER从子进程的user  space读取数据.它们读一个字节的数据,保存在临时的数据结构中,然后使用put_user()(它从内核态空间读一个字符串到用户态空间)将需要的 数据写入参数data,返回0表示成功.
    对PTRACE_PEEKTEXT和PTRACE_PEEKDATA而言,参数addr是子进程内存中将被读取的数据的地址.对PTRACE_PEEKUSER来说,参数addr是子进程用户态空间的偏移量,此时data被无视.

PTRACE_POKETEXT, PTRACE_POKEDATA, PTRACE_POKEUSER:
    这些宏行为与上面的几个是类似的.唯一的不同是它们用来写入data.(译注: 这段文字与上面的描述差不多,为免繁复,不译.)
PTRACE_SYSCALL, PTRACE_CONT:
    这些宏用来唤醒暂停的子进程.在每次系统调用之后,PTRACE_SYSCALL使子进程暂停,而PTRACE_CONT让子进程继续运行.子进程 的返回状态都是由ptrace()参数data设置的.但是,这只限于返回状态是有效的情况.ptrace()重置子进程的single-step位,设 置/复位syscall-trace位,然后唤醒子进程;参数addr被无视.

PTRACE_SINGLESTEP:
    PTRACE_SINGLESTEP的行为与PTRACE_SYSCALL无异,除了子进程在每次机器指令后都被暂停 (PTRACE_SYSCALL是使子进程每次在系统调用后被暂停).single-step会被设置,跟PTRACE_SYSCALL一样,参数 data包含返回状态,参数addr被无视.

PTRACE_KILL:
    PTRACE_KILL被用来终止子进程.”谋杀”是这样进行的: 首先ptrace() 查看子进程是不是已经死了.如果不是, 子进程的返回码被设置为sigkill. single-step位被复位.然后子进程被唤醒,运行到返回码时子进程就死掉了.

</rich_text><rich_text scale="h2" weight="heavy">2.2 更加依赖于硬件的调用.</rich_text><rich_text>
    上面讨论的request可选值是依赖于操作系统所在的体系结构和实现的.下面讨论的request可选值可以用来get/set子进程的寄存器,这更加依赖于系统架构.对寄存器的设置包括通用寄存器,浮点寄存器和扩展的浮点寄存器.

PTRACE_GETREGS, PTRACE_GETFPREGS, PTRACE_GETFPXREGS:
    这些宏用来读子进程的寄存器.寄存器的值通过getreg()和__put_user()被读入data中;参数addr被无视.

PTRACE_SETREGS, PTRACE_SETFPREGS, PTRACE_SETFPXREGS:
    跟上面的描述相反,这些宏被用来设置寄存器.

</rich_text><rich_text scale="h2" weight="heavy">2.3 ptrace()的返回值</rich_text><rich_text>
    成功的,ptrace()调用返回0.如果出错,将返回-1，errno也将被设置.PEEKDATA/PEEKTEXT,即使ptrace()调用成功,返回值也可能是-1,所以我们最好检查一下errno,它的可能值如下:
EPERM: 权限错误,进程无法被跟踪.
ESRCH: 目标进程不存在或者已经被跟踪.
EIO: 参数request的值无效,或者从非法的内存读/写数据.
EFAULT: 需要读/写数据的内存未被映射.
EIO和EFAULT真的很难区分,它们代表很严重的错误.

</rich_text><rich_text scale="h1" weight="heavy">3. 小例子</rich_text><rich_text>
    如果你觉得上面的说明太枯燥了,好吧,我保证再也不这么干了.下面举个小例子,演示一下吧.
这是第一个,父进程对子进程中发生的每一次机器指令计数.
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;signal.h&gt;
#include &lt;syscall.h&gt;
#include &lt;sys/ptrace.h&gt;
#include &lt;sys/types.h&gt;
#include &lt;sys/wait.h&gt;
#include &lt;unistd.h&gt;
#include &lt;errno.h&gt;

int main(void)
{
        long long counter = 0;  /*  machine instruction counter */
        int wait_val;           /*  child's return value        */
        int pid;                /*  child's process id          */

        puts(&quot;Please wait&quot;);

        switch (pid = fork()) {
        case -1:
                perror(&quot;fork&quot;);
                break;
        case 0: /*  child process starts        */
                ptrace(PTRACE_TRACEME, 0, 0, 0);
                /* 
                 *  must be called in order to allow the
                 *  control over the child process
                 */ 
                execl(&quot;/bin/ls&quot;, &quot;ls&quot;, NULL);
                /*
                 *  executes the program and causes
                 *  the child to stop and send a signal 
                 *  to the parent, the parent can now
                 *  switch to PTRACE_SINGLESTEP   
                 */ 
                break;
                /*  child process ends  */
        default:/*  parent process starts       */
                wait(&amp;wait_val); 
                /*   
                 *   parent waits for child to stop at next 
                 *   instruction (execl()) 
                 */
                while (wait_val == 1407 ) {
                        counter++;
                        if (ptrace(PTRACE_SINGLESTEP, pid, 0, 0) != 0)
                                perror(&quot;ptrace&quot;);
                        /* 
                         *   switch to singlestep tracing and 
                         *   release child
                         *   if unable call error.
                         */
                        wait(&amp;wait_val);
                        /*   wait for next instruction to complete  */
                }
                /*
                 * continue to stop, wait and release until
                 * the child is finished; wait_val != 1407
                 * Low=0177L and High=05 (SIGTRAP)
                 */
        }
        printf(&quot;Number of machine instructions : %lld\n&quot;, counter);
        return 0;
}

    运行一下代码吧(可能程序会很慢,哈哈.).
    
    </rich_text><rich_text foreground="#999999">译注:  小小的解释下吧,子进程开始运行,调用exec后移花栽木,这时子进程的原进程(未调用exec之前的进程)因为要死了,会向父进程发送SIGTRAP信 号.父进程一直阻塞等待(第一条wait(&amp;wait_val);语句).父进程捕获到SIGTRAP信号,由此知道子进程已经结束了.接下来发 生的就是最有趣的事情了,父进程通过request值为PTRACE_SINGLESTEP的ptrace调用,告诉操作系统,重新唤醒子进程,但是在每 条机器指令运行之后暂停.再一次的,父进程阻塞等待子进程暂停(wait_val == 1407等价于WIFSTOPPED(wait_val)  (个人看法,我还没有查到子进程状态的编码资料,求~))并计数,子进程结束(非暂停,对应的是WIFEXITED)后,父进程跳出loop循环.</rich_text><rich_text>

</rich_text><rich_text scale="h1" weight="heavy">4. 结论</rich_text><rich_text>
    ptrace()在调试器中是被用得很多的,它也可以被用来跟踪系统调用.调试器fork一个子进程并跟踪它,然后子进程exec调用要被调试的目 标程序,在目标程序的每一次机器指令之后父进程都可以查看它的寄存器的值.在下一篇文章中,我会尽情展示ptrace的牛逼之处,春节快乐.

作者: Sandeep S
    I am a final year student of Government Engineering College in   Thrissur, Kerala, India. My areas of interests include FreeBSD,  Networking and  also Theoretical Computer Science.
                                           
</rich_text><rich_text scale="h1" weight="heavy">5. 补充</rich_text><rich_text scale="h1">                                           </rich_text><rich_text>
用法： 
#include &lt;sys/ptrace.h&gt;
long ptrace(enum __ptrace_request request, pid_t pid, void *addr, void *data);  
 
参数： 
request：请求执行的行为，可能选择有
PTRACE_TRACEME   //指示父进程跟踪某个子进程的执行。任何传给子进程的信号将导致其停止执行，同时父进程调用wait()时会得到通告。之后，子进程调用exec() 时，核心会给它传送SIGTRAP信号，在新程序开始执行前，给予父进程控制的机会。pid, addr, 和 data参数被忽略。
以上是唯一由子进程使用的请求，剩下部分将由父进程使用的请求。
PTRACE_PEEKTEXT, PTRACE_PEEKDATA //从子进程内存空间addr指向的位置读取一个字，并作为调用的结果返回。Linux内部对文本段和数据段不加区分，所以目前这两个请求相等。data参数被忽略。
PTRACE_PEEKUSR //从子进程的用户区addr指向的位置读取一个字，并作为调用的结果返回。
PTRACE_POKETEXT, PTRACE_POKEDATA //将data指向的字拷贝到子进程内存空间由addr指向的位置。
PTRACE_POKEUSR //将data指向的字拷贝到子进程用户区由addr指向的位置。
PTRACE_GETREGS, PTRACE_GETFPREGS //将子进程通用和浮点寄存器的值拷贝到父进程内由data指向的位置。addr参数被忽略。
PTRACE_GETSIGINFO //获取导致子进程停止执行的信号信息，并将其存放在父进程内由data指向的位置。addr参数被忽略。
PTRACE_SETREGS, PTRACE_SETFPREGS //从父进程内将data指向的数据拷贝到子进程的通用和浮点寄存器。addr参数被忽略。
PTRACE_SETSIGINFO //将父进程内由data指向的数据作为siginfo_t结构体拷贝到子进程。addr参数被忽略。
PTRACE_SETOPTIONS //将父进程内由data指向的值设定为ptrace选项，data作为位掩码来解释，由下面的标志指定
 PTRACE_O_TRACESYSGOOD //当转发syscall陷阱(traps)时，在信号编码中设置位7，即第一个字节的最高位。例如：SIGTRAP | 0x80。这有利于追踪者识别一般的陷阱和那些由syscall引起的陷阱。
  PTRACE_O_TRACEFORK //通过 (SIGTRAP | PTRACE_EVENT_FORK &lt;&lt; 8)  使子进程下次调用fork()时停止其执行，并自动跟踪开始执行时就已设置SIGSTOP信号的新进程。新进程的PID可以通过 PTRACE_GETEVENTMSG获取。 
 PTRACE_O_TRACEVFORK //通过 (SIGTRAP |  PTRACE_EVENT_VFORK &lt;&lt; 8)  使子进程下次调用vfork()时停止其执行，并自动跟踪开始执行时就已设置SIGSTOP信号的新进程。新进程的PID可以通过 PTRACE_GETEVENTMSG获取。
 PTRACE_O_TRACECLONE //通过 (SIGTRAP |  PTRACE_EVENT_CLONE &lt;&lt; 8)  使子进程下次调用clone()时停止其执行，并自动跟踪开始执行时就已设置SIGSTOP信号的新进程。新进程的PID可以通过 PTRACE_GETEVENTMSG获取。
 PTRACE_O_TRACEEXEC //通过 (IGTRAP | PTRACE_EVENT_EXEC &lt;&lt; 8) 使子进程下次调用exec()时停止其执行。
 PTRACE_O_TRACEVFORKDONE //通过 (SIGTRAP | PTRACE_EVENT_VFORK_DONE &lt;&lt; 8) 使子进程下次调用exec()并完成时停止其执行。
 PTRACE_O_TRACEEXIT //通过 (SIGTRAP | PTRACE_EVENT_EXIT &lt;&lt; 8) 使子进程退出时停止其执行。子进程的退出状态可通过PTRACE_GETEVENTMSG。
PTRACE_GETEVENTMSG //获取刚发生的ptrace事件消息，并存放在父进程内由data指向的位置。addr参数被忽略。
PTRACE_CONT //重启动已停止的进程。如果data指向的数据并非0，同时也不是SIGSTOP信号，将会作为传递给子进程的信号来解释。那样，父进程可以控制是否将一个信号发送给子进程。 addr参数被忽略。
PTRACE_SYSCALL, PTRACE_SINGLESTEP //如同PTRACE_CONT一样重启子进程的执行，但指定子进程在下个入口或从系统调用退出时，或者执行单个指令后停止执行，这可用于实现单步调试。addr参数被忽略。
PTRACE_SYSEMU, PTRACE_SYSEMU_SINGLESTEP //用于用户模式的程序仿真子进程的所有系统调用。
PTRACE_KILL //给子进程发送SIGKILL信号，从而终止其执行。data，addr参数被忽略。
PTRACE_ATTACH //衔接到pid指定的进程，从而使其成为当前进程的追踪目标。
PTRACE_DETACH //PTRACE_ATTACH的反向操作。 
pid：目标进程标识。
addr：执行peek和poke操作的目标地址。 
data：对于poke操作，存放数据的地方。对于peek操作，获取数据的地方。
 
返回说明： 
成功执行时，PTRACE_PEEK*请求返回所请求的数据，其它返回0。失败返回-1，errno被设为以下的某个值。由于一个成功的PTRACE_PEEK*请求可能返回-1，决定错误是否发生前，调用者应检查errno。
EBUSY：分配和释放调试寄存器时出错
EFAULT：读写不可访问的内存空间
EINVAL：尝试设置无效选项
EIO：请求无效，或者尝试读写父子进程不可访问的空间
EPERM：没有权限追踪指定的进程
ESRCH：指定的子进程不存在，或者当前正由调用者追踪
                                           
</rich_text><node name=" Linux中使用ptrace获取pthread线程的寄存器信息 " prog_lang="custom-colors" readonly="False" tags="" unique_id="46"><rich_text scale="h2" weight="heavy">1.与本文相关的有这几个重要的函数：</rich_text><rich_text>
pthread_create：创建线程
pthread_self：获取当前运行的线程的线程ID (The pthread_self() function returns the ID of the calling thread.)
getpid：获取当前进程ID
gettid：获取当前运行的线程的线程ID(gettid() returns the caller’s thread ID (TID) )
ptrace：跟踪一个指定的进程

 
</rich_text><rich_text scale="h2" weight="heavy">2.getpid、gettid和pthread_self的区别：</rich_text><rich_text>
 pthread_self属于POSIX线程库的函数，Linux下POSIX的pthread线程库是用进程来实现的，pthread_create是通过系统调用
 clone创建一个子进程作为线程的。下面是这两个函数的声明：
 

1. #include &lt;sys/types.h&gt;  
2. #include &lt;unistd.h&gt;  
3. pid_t getpid(void);  
4.   
5. #include &lt;sys/types.h&gt;  
6. pid_t gettid(void);  
7.   
8. #include &lt;pthread.h&gt;  
9. pthread_t pthread_self(void);  
    可以很容易发现pthread_self获取的是pthread_t（占用8Byte），而其他两个函数返回的都是pid_t（占用4Byte），上面我
们讲了，pthread_create创建的线程实际上是一个子进程，而这个子进程的Handle的地址为pthread_t，子进程ID通过gettid
获取，该子进程的父进程ID通过getpid获取。

</rich_text><rich_text scale="h2" weight="heavy">3.ptrace函数：</rich_text><rich_text>
    1. #include &lt;sys/ptrace.h&gt;  
    2. long ptrace(enum __ptrace_request request, pid_t pid, void *addr, void *data);  
这个函数比较复杂，具体的一些介绍，大家可以看这个：

</rich_text><rich_text link="webs http://linux.die.net/man/2/ptrace">man ptrace</rich_text><rich_text>
 
</rich_text><rich_text link="webs http://www.cnblogs.com/wangkangluo1/archive/2012/06/05/2535484.html">ptrace用法</rich_text><rich_text>
 

 
</rich_text><rich_text scale="h2" weight="heavy">4.通过ptrace获取指定pthread线程的寄存器信息：</rich_text><rich_text>
 这个是被跟踪的进程的程序：
 

1. #include &lt;stdio.h&gt;  
2. #include &lt;unistd.h&gt; //for sleep  
3. #include &lt;stdlib.h&gt; //for exit  
4. #include &lt;pthread.h&gt;//for pthread  
5. #include &lt;errno.h&gt;  //for errno  
6. #include &lt;sys/syscall.h&gt; //for gettid  
7. #define gettid() syscall(__NR_gettid)  
8.   
9. void *func(void *para)  
10. {  
11.     printf(&quot;Hello world.\n&quot;);  
12.     printf(&quot;child process tid: %u\n&quot;, gettid());  
13.     sleep(-1);  // 该进程一直sleep，等待  
14.     return NULL;  
15. }  
16.   
17. int main()  
18. {   
19.     pthread_t tid;  
20.     int ret = pthread_create(&amp;tid, NULL, func, NULL);  
21.     if(ret != 0)  
22.     {     
23.         exit(errno);  
24.     }     
25.     printf(&quot;parent process pid: %u\n&quot;, getpid());  
26.   
27.     pthread_join(tid, NULL);  
28.     return 0;  
29. }  
输出为（注意不要结束此进程，不然没办法跟踪）：


</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/cjfeii/article/details/9314927#">view plaincopyprint?</rich_text><rich_text>1. [biz@localhost test]$ g++ main.cpp -lpthread  
2. [biz@localhost test]$ ./a.out   
3. parent process pid: 14396  
4. child process tid: 14397  
5. sleep ...  

下面是跟踪程序：


</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/cjfeii/article/details/9314927#">view plaincopyprint?</rich_text><rich_text>1. #include &lt;sys/ptrace.h&gt;  
2. #include &lt;stdlib.h&gt;     // for atoi  
3. #include &lt;stdio.h&gt;  
4. #include &lt;sys/types.h&gt;  
5. #include &lt;sys/wait.h&gt;  
6. #include &lt;unistd.h&gt;  
7. #include &lt;sys/user.h&gt; /* For user_regs_struct */  
8. int main(int argc, char *argv[])  
9. {   
10.     pid_t traced_process;  
11.     struct user_regs_struct regs;  
12.     long ins;  
13.     if(argc != 2) {  
14.         printf(&quot;Usage: %s &lt;pid to be traced&gt; &quot;,  
15.                argv[0], argv[1]);  
16.         exit(1);  
17.     }     
18.     traced_process = atoi(argv[1]);  
19.     ptrace(PTRACE_ATTACH, traced_process,   
20.            NULL, NULL);  
21.     wait(NULL);  
22.     ptrace(PTRACE_GETREGS, traced_process,   
23.            NULL, ®s);  
24.     ins = ptrace(PTRACE_PEEKTEXT, traced_process,   
25.                  regs.rip, NULL);  
26.     printf(&quot;EIP: %lx Instruction executed: %lx \n&quot;,   
27.            regs.rip, ins);  
28.     ptrace(PTRACE_DETACH, traced_process,   
29.            NULL, NULL);  
30.     return 0;  
31. }  

输出为：


</rich_text><rich_text weight="heavy">[cpp]</rich_text><rich_text> </rich_text><rich_text link="webs http://blog.csdn.net/cjfeii/article/details/9314927#">view plaincopyprint?</rich_text><rich_text>1. [biz@localhost test]$ g++ attach.cpp -o attach  
2. [biz@localhost test]$ ./attach 14397  
3. EIP: 33d98ab91d Instruction executed: e8c28948243c8b48  

</rich_text></node></node></node><node name="更改用户ID和组ID -- setuid、setgid、seteuid、setegid" prog_lang="custom-colors" readonly="False" tags="" unique_id="40"><rich_text scale="h1" weight="heavy">一、概述</rich_text><rich_text>

在UNIX系统中， 特权（如更改日期时间及访问控制等）是基于用户ID和组ID的，当程序需要增加特权，或许要访问当前并不允许访问的资源时，我们需要更换自己的用户ID或 组ID，使得新ID具有合适的特权或访问权限，当程序需要降低其特权或阻止对某些资源的访问时，也需要更换用户ID或组ID，从而使ID不具有相应的特权 或访问这些资源的能力
一般而言，在设计应用程序时，我们总是试图使用“最小特权”模型，程序应该只具有给定任务所需的最小特权，这减小了安全性受到损害的可能


</rich_text><rich_text scale="h1" weight="heavy">二、更改用户ID和组ID函数 -- setuid、setgid </rich_text><rich_text>
可以使用 setuid 函数设置实际用户ID和有效用户ID，使用 setgid 函数设置实际组ID和有效组ID
          int setuid (uid_t uid);
          int setgid (gid_t gid);
两个函数都定义在 &lt;unistd.h&gt; 头文件中，若调用成功则返回0，否则返回-1


</rich_text><rich_text scale="h1" weight="heavy">三、更改ID规则</rich_text><rich_text>
关于是否能更改用户ID有如下若干条规则：
1. 首先要保证 _POSIX_SAVED_IDS 为真，否则无法保存设置用户ID

2. 若进程具有超级用户特权，则 setuid 函数将实际用户ID、有效用户ID，以及保存的设置用户ID设置为 uid

3. 若进程没有超级用户特权，但是 uid 等于实际用户ID或者保存的设置用户ID，则 setuid 只讲有效用户ID设置为 uid，而不改变实际用户ID和保存的设置用户ID

4. 如果上面两个条件都不满足，则将 errno 设置为EPERM，并返回-1

需要注意以下几点：
1. 只有超级用户进程可以更改实际用户ID，实际用户ID是在用户登录时，由 login(1) 程序设置的，而且永远不会改变，因为 login 是一个超级用户进程，当他调用 setuid 时，会设置所有的三个用户ID

2. 只有当对程序文件设置了设置用户ID位时，exec 函数才会设置有效用户ID，否则不会改变有效用户ID
http://b.hiphotos.bdimg.com/album/pic/item/9d82d158ccbf6c81012d3149bd3eb13533fa407c.jpg?
3. 任何时候都可以调用 setuid 将有效用户ID设置为实际用户ID或保存的设置用户ID，然而不能将有效用户ID设置为任意随机值

4. 保存的设置用户ID是由 exec 复制有效用户ID而得来的，如果设置了文件的设置用户ID位，则 exec 根据文件的用户ID设置了进程的有效用户ID后，就将这个副本保存起来



• 下表列出了改变三种ID的不同方法

</rich_text><rich_text justification="left"></rich_text><rich_text>


下面用一个例子来说明上面的情况：
man 程 序可能需要执行许多其他命令，以处理包含需要显示的手册页的文件，为了防止被欺骗运行错误的命令或重写错误的文件，man 命令不得不在两种权限之间切 换：运行 man 命令用户的权限，以及拥有 man 可执行文件用户的权限，下面列出了 man 的工作步骤：
1. man 程序文件是由名为 man 的用户拥有的，并且其设置用户ID位已设置，当我们 exec 此程序时，则关于用户ID得到：实际用户ID=我们的用户ID，有效用户ID=man，保存的设置用户ID=man

2. man 程序访问需要的配置文件和手册页，这些文件是由名为 man 的用户拥有的，因为有效用户ID是 man，所以可以访问这些文件

3. 在 man 代 表我们运行任一命令之前，他调用 setuid ( getuid() )，因为我们不是超级用户进程，所以仅仅会改变有效用户ID，有效用户ID变成我 们的ID，这样 man 进程就是由我们的ID作为其有效用户ID而运行，这就意味着能够访问的只有我们通常可以访问的，而没有额外的权限，它可以代表我 们安全地执行任一过滤器程序

4. 当执行完过滤器后，man 调用 setuid ( euid )，euid是用户 man 的数值用户ID，因为 setuid 的参数等于保存的设置用户ID，所以这种调用是许可的（这正是保存的设置用户ID存在的原因），有效的用户ID恢复到了 man

5. 因为 man 程序的有效用户ID是 man，所以现在它可以对其文件进行操作



有效用户ID和有效组ID的更改 -- seteuid、setegid
POSIX.1包含了两个函数，seteuid与setegid，这两个函数与setuid和setgid用法相同，只是他们至改变有效用户ID和有效组ID
          int seteuid (uid_t uid);
          int setegid (gid_t gid);
两个函数都定义于 &lt;unistd.h&gt; 头文件中，调用成功返回0，否则返回-1


一个非特权用户调用上述两个函数会将其有效用户/组ID设置为其实际用户ID或保存的设置用户ID，而只有特权用户才可以将有效用户/组ID设置为参数所提供的ID

#####################################################
</rich_text><rich_text scale="h2" weight="heavy">setresuid, setresgid</rich_text><rich_text scale="h2"> 
    set real, effective and saved user or group ID</rich_text><rich_text>
#####################################################
    </rich_text><rich_text weight="heavy">#include &lt;</rich_text><rich_text link="webs http://file:/usr/include/unistd.h" weight="heavy">unistd.h</rich_text><rich_text weight="heavy">&gt;</rich_text><rich_text> 
    </rich_text><rich_text weight="heavy">int setresuid(uid_t </rich_text><rich_text style="italic">ruid</rich_text><rich_text weight="heavy">, uid_t </rich_text><rich_text style="italic">euid</rich_text><rich_text weight="heavy">, uid_t </rich_text><rich_text style="italic">suid</rich_text><rich_text weight="heavy">);</rich_text><rich_text>  
    </rich_text><rich_text weight="heavy">int setresgid(gid_t </rich_text><rich_text style="italic">rgid</rich_text><rich_text weight="heavy">, gid_t </rich_text><rich_text style="italic">egid</rich_text><rich_text weight="heavy">, gid_t </rich_text><rich_text style="italic">sgid</rich_text><rich_text weight="heavy">);</rich_text><rich_text>    

    </rich_text><rich_text scale="h2">DESCRIPTION</rich_text><rich_text>
   </rich_text><rich_text weight="heavy">setresuid</rich_text><rich_text> sets the real user ID, the effective user ID, and the saved set-user-IDof the current process. Unprivileged user processes (i.e., processes with each of real, effective and saved user ID nonzero) may change the real, effective and saved user ID, each to one of: the current uid, the current effective uid or the current saved uid. 
    The super-user may set real, effective and saved user ID to arbitrary values. 
    If one of the parameters equals -1, the corresponding value is not changed. 
 Completely analogously, </rich_text><rich_text weight="heavy">setresgid</rich_text><rich_text>  sets the real, effective and saved group ID's of the current process, with the same restrictions for processes with each of real, effective and saved user ID nonzero. 
   

    </rich_text><rich_text scale="h2">RETURN VALUE</rich_text><rich_text>
    On success, zero is returned.  On error, -1 is returned, and</rich_text><rich_text style="italic">errno</rich_text><rich_text>is set appropriately.
     

</rich_text><encoded_png char_offset="1148"></encoded_png></node><node name="如何在程序中升高和降低权限 " prog_lang="custom-colors" readonly="False" tags="" unique_id="39"><rich_text>    在做LinuxFtp项目进行权限管理时，如果是某个非root用户登录，则必须进行降权限处理。而有些系统调用又只能以root权限调用，所以那时又需要进行升权限处理。
    降低权限单调用setegid和seteuid是不够的，因为进程还有个supplementary group IDs（附加进程组id），这个可用setgroups来改变。

    下面举个简单的例子吧：
    1. #include &lt;unistd.h&gt;  
    2. #include &lt;stdio.h&gt;  
    3. #include &lt;sys/types.h&gt;  
    4. #include &lt;grp.h&gt;  
    5.   
    6. int main()  
    7. {  
    8.       gid_t gid = 500; //500是study用户的id  
    9.   
    10.     //降低权限  
    11.     setgroups(1, &amp;gid); //将当前进程的附加进程组id设为500  
    12.     setegid(gid);  
    13.     seteuid(gid);  
    14.     printf(&quot;%d\n&quot;, chdir(&quot;/root&quot;));  
    15.   
    16.     //升高权限  
    17.     gid = 0; //0是root用户的id  
    18.     setegid(gid);  
    19.     seteuid(gid);  
    20.     setgroups(1, &amp;gid); //将当前进程的附加进程组id设为500  
    21.     printf(&quot;%d\n&quot;, chdir(&quot;/root&quot;));  
    22.     return 0;  
    23. }  

    以root权限来编译运行这个例子，会输出-1，0。
    注意，由于setgroups需要root权限，所以降低权限时要放在前面，而升高权限则放在后面。
</rich_text></node><node name="lirc" prog_lang="custom-colors" readonly="False" tags="" unique_id="35"><rich_text>1、红外通信协议
红外通信是传统的线缆通信方式的替代，被用来进行设备之间点对点的数据传输。目前作为一种广泛使用的无线连接技术，被众多的硬件和软件平台支 持。它具有小角度、短距离、传输速率高等特点。
红外通信技术发展的早期，存在有几种不同的通信标准，不同标准之间的通信设备并不能进行红外通信，为了统一红外通信标准，于1993年，一些厂商成立了IrDA（红外数据协会）。IrDA是目前红外无线通信的工业标准，你可以使用它 与打印机、传真机、modem、其它计算机进行通信。按照速率IrDA红外通信可以分为下面四种：
l         SIR：2.4 kbit/s 到 115.2 kbit/s，最基本的红外标准。串口连接时必定使用的是SIR。
l         MIR：576 kbit/s 到 1152 kbit/s
l         FIR：4 Mbit/s
l         VFIR：16 Mbit/s
2、红外通信装置
         为了进行红外通信，我们需要有发送和接收红外 信号的装置，笔记本一般都带有IrDA的红外接口，而台式机一般需要购买专门的红外适配器。目前市场上的红外适配器主要有串口红外适配器、USB红外适配器、主板接口红外适配器等。
         利用我们的计算机进行红外通信的方式主要有：
l         利用IrDA接口与其它具有红外通信接口的设备，如打印 机、传真机、计算机等通信。
l         使用专用的红外遥控器和接收器。
l         使用红外接收器再加上普通的电视、DVD等的遥控器。还需要专门的控制软件。
第一种主要是不同设备之间的红外数据传输，后两种是对计算机的红外遥控。Linux针对这两种使用方式有不同的驱动和软件包。
3、  Linux红外支持
Linux/IrDA  project于1997年开始，因为与IrDA协会的名称产生冲突，项目名称更改为Linux/IR，并从1999年开始成为IrDA的官方成员之一。相关的软件包主要有IrDA-Utils。
LIRC project（Linux Infrared Remote  Control）的主要目标是通过红外红外信号进行计算机的远程控制。LIRC包支持解码并发送最普通的IR远程控制信号。早期版本只支持串口和并口接口 的硬件，但是现在已经能够支持很多不同的硬件。LIRC包包括了针对不同接口硬件的设备驱动，不过最重要的还是 lircd 后台程序，它负责解码设备驱动接收到的IR信号并将解码后的信息通过 socket 进行发送，另外还有一个 lircmd 后台程序，负责连接 lircd  并将解码后的IR信号转换为鼠标移动信息。此外LIRC还包括了一些用户空间的应用程序，为我们使用IR来控制计算机提供方便。因为这里讨论的是红外 远程控制驱动，所以LIRC将是下面阐述的重点。的有关LIRC  project的详细信息可以浏览它的项目主页</rich_text><rich_text foreground="#800080" link="webs http://www.lirc.org/">http://www.lirc.org/</rich_text><rich_text> 

4、LIRC结构
下图是LIRC包的驱动模型（Driver  Model）
 
</rich_text><rich_text justification="left"></rich_text><rich_text>
 

主要涉及了三个devfs接口，/dev/lirc、/dev/lircd、/dev/lircmd。
l         /dev/lirc
依赖于使用的ioctl
</rich_text><rich_text style="italic">LIRC_MODE_MODE2  </rich_text><rich_text>输出的packet包括了描述IR信号的整型值。这个整型值的位0-23表示pulse/space的长度；位24为0时表示space，为1时表示pulse；所有剩余的位没有意义。
</rich_text><rich_text style="italic">LIRC_MODE_CODE</rich_text><rich_text>  outputs chars (8 bits)
</rich_text><rich_text style="italic">LIRC_MODE_LIRCCODE </rich_text><rich_text>outputs  codes of configurable length in big endian byte order
可参考文件drivers/lirc_serial/lirc_serial.c、drivers/lirc_parallel/lirc_parallel.c、tools/mode2.c（mode工具，将这个驱动的输出显示在终端上）。
l         /dev/lircd
输出包括了所有remote和pressed button信息的字符串。
l         /dev/lircm
鼠标后台。支持三种鼠标协议：MouseSystems, IntelliMouse 和 IMPS/2。可参考文件daemons/lircmd.c
4、LIRC配置
         LIRC的配置主要涉及到三个配置文件，lircd.conf、lircmd.conf、.lircrc。
l         lircd.conf
lircd.conf是lircd后台程序的配置文件。LIRC项目主页上已经有很多针对不同牌子遥控器的配 置文件，如果在上面找不到匹配自己遥控器的lircd.conf文件，则需要使用irrecord工具进行手工配置。配置过程在另一篇文章“</rich_text><rich_text link="webs http://blog.chinaunix.net/u1/34190/showart_275743.html">Linux下 遥控器的配置与使用</rich_text><rich_text>”里已经有所阐述，下面的示例是一个典型的配置文件，其中定 义了1~9，上、下、左、右和开关键的矩形脉冲信息。
begin remote
   name  test
   bits           16
   flags SPACE_ENC|CONST_LENGTH
   eps            30
   aeps          100
   header       9092  4460
   one           632  1628
   zero          632   496
   ptrail        630
   repeat       9118  2181
   pre_data_bits   16
   pre_data       0xFF
   gap          108483
   toggle_bit      0
 
       begin codes
           1                        0x906F
           2                        0xB847
           3                        0xF807
           4                        0x9867
           5                        0xD827
           6                        0x8877
           7                        0xE817
           8                        0x48B7
           9                        0x9A65
           up                     0x609F
           down                0x22DD
           left                    0xE21D
           right                  0x02FD
          power                0x28D7
          mute                  0x08F7
       end codes
end remote
l         lircmd.conf
lircmd后台程序的配置文件，主要配置了遥控按键与鼠标消息的对应关系。
l         .lircrc
LIRC的客户端应用使用的配置文件，应该位于你的用户目录下面。也可以命名为为/etc/lircrc，此时它为所有应用所共用。
begin
    prog  = lirckeyd
    remote  = new.conf
    button  = power
    repeat  = 0
    config  = power
end
begin~end表示一个独立的配置块。
prog域的值表示使用该配置块的程序名称。
Remote的值表示使用的遥控器名称（参见</rich_text><rich_text link="webs http://blog.chinaunix.net/article_new.php?FolderID=51444#lircd">lircd.conf</rich_text><rich_text>中的定义）。
Button  的值表示遥控器按键名称（参见</rich_text><rich_text link="webs http://blog.chinaunix.net/article_new.php?FolderID=51444#lircd">lircd.conf</rich_text><rich_text>中的定义）。
Repeat  的值表示按键的重复次数。
Config  的值表示该按键对应的字符串，该字符串可以被prog定义的应用程序获得。

5、编写LIRC的客户端应用
         有两种类型的LIRC应用，一种为发送IR命令的应用，比如</rich_text><rich_text style="italic">xrc、irsend</rich_text><rich_text>等，另一种为接收IR命令的应用，比如</rich_text><rich_text style="italic">irexec</rich_text><rich_text>,  </rich_text><rich_text style="italic">irxevent</rich_text><rich_text> 和 </rich_text><rich_text style="italic">irpty</rich_text><rich_text>等。它们都将通过位于/dev/lircd的socket连接到lircd后台，通信的数据为普通的可读格式。
         无论什么时候lircd接收到一个IR信号，它将广播下面的字符串到每个客户端（client）：
         &lt;code&gt; &lt; repeat count &gt; &lt;button  name&gt; &lt;remote control name&gt;
code是IR信号的64位编码。repeat count表示用户按下按键的时间，每当接收到一个新的IR信号时，它将增加1。button name和remote control name在lircd的配置文件里定义。
         如果你仅仅希望使自己的应用接收IR命令，可以使用lirc_client库，通常是/usr/lib/liblirc_client.a。可以使用它编写LIRC的客户端应用，要记得包含lirc/lirc_client.h文件。lirc_client库比较重要的函数有：
l         int lirc_init(char *prog,int verbose)</rich_text><rich_text underline="single">
</rich_text><rich_text>库的初始化，它连接lircd后台做一些内部的初始化。prog与.lircrc中的prog项对应，verbose表示是否打印错误信息 到stderr，0表示不打印，1表示打印。返回值为连接到lircd的socket描述符，有错误发生时 返回-1。
l          int  lirc_readconfig(char *file,struct lirc_config **config,int (check)(char  *s))</rich_text><rich_text underline="single">
</rich_text><rich_text>读取配置文件。file表示配置文件名称，NULL表示使用默认的.lircrc，也可以进行多次调用加载多个配置文件。config表示配置文件数据结构（struct config）的指针，将在函数内部 填充，lirc_code2char函数将需要它。check函数指针指向一个对file进行解析的用户自定义函数。
l          int  lirc_nextcode(char **code)
阻塞直到socket上有数据可用。可以在程序的主循环里使用。如果有错误发生返回-1，否则返回0和指向数据流里下一个 字符串的指针code，注意code必须使用free函数释放。此函数使得code中获得prog对应的配置信息，若无 按键信息则阻塞进程。
l          int  lirc_code2char(struct lirc_config *config,char *code,char **string)</rich_text><rich_text underline="single">
</rich_text><rich_text>获得配置文件里与按键 对应的配置字符串。config和code分别由是前面两个函数填充的，string中将被.lircrc中的config域值填充。
l          void  lirc_freeconfig(struct lirc_config *config)</rich_text><rich_text underline="single">
</rich_text><rich_text>释放config结构。
l          int  lirc_deinit()</rich_text><rich_text underline="single">
</rich_text><rich_text>lirc销毁函数。
下面是LIRC项目主页上的一个简单示例
/*   $Id: technical.html,v 1.26 2005/12/10 22:12:02 lirc  Exp $      */
 
/****************************************************************************
 ** irexec.c  ****************************************************************
 ****************************************************************************
 *
 * irexec  - execute programs  according to the pressed remote control buttons
 *
 * Copyright (C) 1998 Trent Piepho  &lt;xyzzy@u.washington.edu&gt;
 * Copyright (C) 1998 Christoph Bartelmus  &lt;lirc@bartelmus.de&gt;
 */
 
#ifdef  HAVE_CONFIG_H
#  include &lt;config.h&gt;
#endif
 
#include  &lt;errno.h&gt;
#include  &lt;unistd.h&gt;
#include  &lt;stdarg.h&gt;
#include  &lt;stdio.h&gt;
#include  &lt;stdlib.h&gt;
#include  &lt;string.h&gt;
#include  &quot;lirc_client.h&quot;
 
char  *progname;
 
int  main(int argc, char *argv[])
{
         struct lirc_config *config;
 
         progname=argv[0];
         if(argc&gt;2)
         {
                   fprintf(stderr,&quot;Usage: %s &lt;config  file&gt;\n&quot;,progname);
                   exit(EXIT_FAILURE);
         }
         if(lirc_init(&quot;irexec&quot;,1)==-1)  exit(EXIT_FAILURE);
 
         if(lirc_readconfig(argc==2 ?  argv[1]:NULL,&amp;config,NULL)==0)
         {
                   char *code;
                   char *c;
                   int ret;
 
                   while(lirc_nextcode(&amp;code)==0)
                   {
                            if(code==NULL) continue;
                            while((ret=lirc_code2char(config,code,&amp;c))==0  &amp;&amp;
                                  c!=NULL)
                            {
#ifdef  DEBUG
                                     printf(&quot;Execing  command \&quot;%s\&quot;\n&quot;,c);
#endif
                                     system(c);
                            }
                            free(code);
                            if(ret==-1) break;
                   }
                   lirc_freeconfig(config);
         }
 
         lirc_deinit();
         exit(EXIT_SUCCESS);
}
6、红外信号映射为X事件
         如果我们希望使用遥控器远程遥控进行视频、音频等播放操作，则需 要将上面解码后的红外信号映射为X事件（当然指的是针对基于X的图形应用时）。这个过程主要涉及到下面几个函数：
l         </rich_text><rich_text link="webs http://tronche.com/gui/x/xlib/input/keyboard-encoding.html">KeyCode</rich_text><rich_text> XKeysymToKeycode(</rich_text><rich_text link="webs http://tronche.com/gui/x/xlib/display/opening.html#Display">Display</rich_text><rich_text> *display, </rich_text><rich_text link="webs http://tronche.com/gui/x/xlib/input/keyboard-encoding.html#KeySym">KeySym</rich_text><rich_text> keysym)
将</rich_text><rich_text link="webs http://tronche.com/gui/x/xlib/input/keyboard-encoding.html#KeySym">KeySym</rich_text><rich_text>转换为</rich_text><rich_text link="webs http://tronche.com/gui/x/xlib/input/keyboard-encoding.html">KeyCode</rich_text><rich_text>。Display指定连接的X server。</rich_text><rich_text link="webs http://tronche.com/gui/x/xlib/input/keyboard-encoding.html#KeySym">KeySym</rich_text><rich_text>表示键盘按键的字符编码，如XK_Up、XK_Down等，定义的</rich_text><rich_text link="webs http://tronche.com/gui/x/xlib/input/keyboard-encoding.html#KeySym">KeySym</rich_text><rich_text>列表在X11/keysymdef.h文件里，多数应用通常 只包括X11/keysym.h文件。</rich_text><rich_text link="webs http://tronche.com/gui/x/xlib/input/keyboard-encoding.html">KeyCode</rich_text><rich_text>代表了物理按键。如果指定的</rich_text><rich_text link="webs http://tronche.com/gui/x/xlib/input/keyboard-encoding.html#KeySym">KeySym</rich_text><rich_text>没有对应任何</rich_text><rich_text link="webs http://tronche.com/gui/x/xlib/input/keyboard-encoding.html">KeyCode</rich_text><rich_text>，则返回0。
l         XTestFakeKeyEvent(display, keycode, True, 0);
使用XTEST扩展发送按键事件的接 口。第三个参数表示按键被按下或释放，如果按下，则发送KeyPress事件，否则发送KeyRelease。使用这个函数时，不能够指定事件发送的目的地，它将按照真实 键盘按键的事件传送机制来传送。
l         XSync(</rich_text><rich_text link="webs http://tronche.com/gui/x/xlib/display/opening.html#Display">Display</rich_text><rich_text> *display, Bool discard)
flush输出缓冲，并等待所有 的请求已经被X server接收和处理。对于X server接收到的每个协议错误，XSync将调用客户端应用的错误处理函数。server生成的都依次添加在xlib的事件队列里。如果设置discard为False，则XSync不丢弃这个事件队列里 的事件，否则，丢弃所有队列里的事件。
在前面示例里添加下面的定义：
static struct KeyMapEntry {
    char  *config;
    KeySym  keysym;
} keymap[] = {
    {&quot;Escape&quot;,     XK_Escape},
    {&quot;Backspace&quot;,   XK_BackSpace},
    {&quot;1&quot;,      XK_1},
    {&quot;2&quot;,      XK_2},
    {&quot;3&quot;,      XK_3},
    {&quot;4&quot;,      XK_4},
    {&quot;5&quot;,      XK_5},
    {&quot;6&quot;,      XK_6},
    {&quot;7&quot;,      XK_7},
    {&quot;8&quot;,      XK_8},
    {&quot;9&quot;,      XK_9},
    {&quot;0&quot;,      XK_0},
    {&quot;Up&quot;,            XK_Up},
    {&quot;Down&quot;,       XK_Down},
    {&quot;Left&quot;,          XK_Left},
    {&quot;Right&quot;,        XK_Right},
};
 
void
dispatchEvent(char *msg)
{
    struct  KeyMapEntry entry;
    KeyCode   keycode;
    int  i;
 
    for (  i = 0; keymap[i].config; i++) {
        entry  = keymap[i];
        if  (strcmp(entry.config, msg) == 0) {
            keycode  = XKeysymToKeycode(display, entry.keysym);
            XTestFakeKeyEvent(display,  keycode, True, 0);
            XTestFakeKeyEvent(display,  keycode, False, 0);
            XSync(display,  False);
 
            break;
        }
    }
    if  (!keymap[i].config)
        print(&quot;&lt;WARNING&gt;  Unknown config string: %s\n&quot;, msg);
}
然后将lirc_code2char循环里的语句
system(c);
         替换为
dispatchEvent(c);
</rich_text><encoded_png char_offset="1300"></encoded_png><node name="ir-lirc-codec" prog_lang="custom-colors" readonly="False" tags="" unique_id="36"><rich_text>
</rich_text></node></node><node name="关于UNIX和Linux系统下SUID、SGID的解析" prog_lang="custom-colors" readonly="False" tags="" unique_id="34"><rich_text>由于用户在UNIX下经常会遇到 SUID、SGID的概念，而且SUID和SGID涉及到系统安全，所以用户也比较关心这个问题。关于SUID、SGID的问题也经常有人提问，但回答的 人一般答得不够详细，加上曾经回答过两个网友的问题，还查了一些资料，决定整理成本文，以供大家参考。限于本人的水平问题，文章中如果有不当之处，请广大 网友指正。 
  
</rich_text><rich_text scale="h1" weight="heavy"> 一、UNIX下关于文件权限的表示方法和解析 </rich_text><rich_text>
  
 SUID 是 Set User ID, SGID 是 Set Group ID的意思。 
  
 UNIX下可以用ls -l 命令来看到文件的权限。用ls命令所得到的表示法的格式是类似这样的：-rwxr-xr-x 。下面解析一下格式所表示的意思。这种表示方法一共有十位： 
  
 9 8 7 6 5 4 3 2 1 0 
 - r w x r - x r - x 
 第9位表示文件类型,可以为p、d、l、s、c、b和-： 
 p表示命名管道文件 
 d表示目录文件 
 l表示符号连接文件 
 -表示普通文件 
 s表示socket文件 
 c表示字符设备文件 
 b表示块设备文件 
  
 第8-6位、5-3位、2-0位分别表示文件所有者的权限，同组用户的权限，其他用户的权限，其形式为rwx： 
  
 r表示可读，可以读出文件的内容 
 w表示可写，可以修改文件的内容 
 x表示可执行，可运行这个程序 
 没有权限的位置用-表示 
 例子： 
    ls -l myfile显示为： 
    -rwxr-x--- 1 foo staff 7734 Apr 05 17:07 myfile 
  
 表示文件myfile是普通文件，文件的所有者是foo用户，而foo用户属于staff组，文件只有1个硬连接，长度是7734个字节，最后修改时间4月5日17:07。 
  
 所有者foo对文件有读写执行权限，staff组的成员对文件有读和执行权限，其他的用户对这个文件没有权限。 
  
 如果一个文件被设置了SUID或SGID位，会分别表现在所有者或同组用户的权限的可执行位上。例如： 
 1、-rwsr-xr-x 表示SUID和所有者权限中可执行位被设置 
  
 2、-rwSr--r-- 表示SUID被设置，但所有者权限中可执行位没有被设置 
  
 3、-rwxr-sr-x 表示SGID和同组用户权限中可执行位被设置 
  
 4、-rw-r-Sr-- 表示SGID被设置，但同组用户权限中可执行位没有被社 
  
 其实在UNIX的实现中，文件权限用12个二进制位表示，如果该位置上的值是 
  
 1，表示有相应的权限： 
 11 10 9 8 7 6 5 4 3 2 1 0 
 S G T r w x r w x r w x 
 第11位为SUID位，第10位为SGID位，第9位为sticky位，第8-0位对应于上面的三组rwx位。 
 11 10 9 8 7 6 5 4 3 2 1 0 
 上面的-rwsr-xr-x的值为： 1 0 0 1 1 1 1 0 1 1 0 1 
             -rw-r-Sr--的值为： 0 1 0 1 1 0 1 0 0 1 0 0 
  
 给文件加SUID和SUID的命令如下： 
 chmod u+s filename 设置SUID位 
 chmod u-s filename 去掉SUID设置 
 chmod g+s filename 设置SGID位 
 chmod g-s filename 去掉SGID设置 
 另外一种方法是chmod命令用八进制表示方法的设置。如果明白了前面的12位权限表示法也很简单。 
  
</rich_text><rich_text scale="h1" weight="heavy"> 二、SUID和SGID的详细解析 </rich_text><rich_text>
    由于SUID和SGID是在执行程序（程序的可执行位被设置）时起作用，而可执行位只对普通文件和目录文件有意义，所以设置其他种类文件的SUID和SGID位是没有多大意义的。 
    首先讲普通文件的SUID和SGID的作用。例子： 
    如果普通文件myfile是属于foo用户的，是可执行的，现在没设SUID位，
    ls命令显示如下： 
    -rwxr-xr-x 1 foo staff 7734 Apr 05 17:07  myfile
    任何用户都可以执行这个程序。UNIX的内核是根据什么来确定一个进程对资源的访问权限的呢？是这个进程的运行用户的（有效）ID，包括 user id和group id。用户可以用id命令来查到自己的或其他用户的user id和group id。 
    除了一般的user id 和group id外，还有两个称之为effective 的id，就是有效id，上面的四个id表示为：uid，gid，euid，egid。内核主要是根据euid和egid来确定进程对资源的访问权限。 
    一个进程如果没有SUID或SGID位，则euid=uid  egid=gid，分别是运行这个程序的用户的uid和gid。例如kevin用户的uid和gid分别为204和202，foo用户的uid和gid为 200，201，kevin运行myfile程序形成的进程的euid=uid=204，egid=gid=202，内核根据这些值来判断进程对资源访问 的限制，其实就是kevin用户对资源访问的权限，和foo没关系。 
    如果一个程序设置了SUID，则euid和egid变成被运行的程序的所有者的uid和gid，例如kevin用户运行myfile，euid=200，egid=201，uid=204，gid=202，则这个进程具有它的属主foo的资源访问权限。 
    SUID的作用就是这样：让本来没有相应权限的用户运行这个程序时，可以访问他没有权限访问的资源。passwd就是一个很鲜明的例子。 
    SUID的优先级比SGID高，当一个可执行程序设置了SUID，则SGID会自动变成相应的egid。 
    下面讨论一个例子： 
    UNIX系统有一个/dev/kmem的设备文件，是一个字符设备文件，里面存储了核心程序要访问的数据，包括用户的口令。所以这个文件不能给一般的用户读写，权限设为：
    cr--r----- 1 root system 2, 1 May 25 1998 kmem 
    但ps等程序要读这个文件，而ps的权限设置如下： 
    -r-xr-sr-x 1 bin system 59346 Apr 05 1998 ps 
    这是一个设置了SGID的程序，而ps的用户是bin，不是root，所以不能设置SUID来 访问kmem，但大家注意了，bin和root都属于system组，而且ps设置了SGID，一般用户执行ps，就会获得system组用户的权限，而 文件kmem的同组用户的权限是可读，所以一般用户执行ps就没问题了。但有些人说，为什么不把ps程序设置为root用户的程序，然后设置SUID位， 不也行吗？这的确可以解决问题，但实际中为什么不这样做呢？因为SGID的风险比SUID小得多，所以出于系统安全的考虑，应该尽量用SGID代替 SUID的程序，如果可能的话。下面来说明一下SGID对目录的影响。SUID对目录没有影响。如果一个目录设置了SGID位，那么如果任何一个用户对这 个目录有写权限的话，他在这个目录所建立的文件的组都会自动转为这个目录的属主所在的组，而文件所有者不变，还是属于建立这个文件的用户。 
  
  
  
</rich_text><rich_text scale="h1" weight="heavy"> 三、关于SUID和SGID的编程 </rich_text><rich_text>
 和SUID和SGID编程比较密切相关的有以下的头文件和函数： 
  
 #include &lt;stdio.h&gt;
 #include &lt;unistd.h&gt;

  
 uid_t getuid(void); 
  
 uid_t geteuid(void); 
  
 gid_t getgid (void); 
  
 gid_t getegid (void); 
  
 int setuid (uid_t UID); 
  
 int setruid (uid_t RUID); 
  
 int seteuid (uid_t EUID); 
  
 int setreuid (uid_t RUID,uid_t EUID); 
  
 int setgid (gid_t GID); 
  
 int setrgid (gid_t RGID); 
  
 int setegid (git_t EGID); 
  
 int setregid (gid_t RGID, gid_t EGID); 
  
 具体这些函数的说明在这里就不详细列出来了,要用到的可以用man查。 
  
  
 SUID/SGID : 
 假如你有文件a.txt 
 #ls -l a.txt 
 -rwxrwxrwx 
 #chmod 4777 a.txt 
 -rwsrwxrwx ======&gt;注意s位置 
 #chmod 2777 a.txt 
 -rwxrwsrwx ======&gt;注意s位置 
 #chmod 7777 a.txt 
 -rwsrwxswt ======&gt;出现了t,t的作用在内存中尽量保存a.txt,节省系统再加载的时间. 
  
 现在再看前面设置 SUID/SGID作用: 
 #cd /sbin 
 #./lsusb 
 ... 
 #su aaa(普通用户) 
 $./lsusb 
 ... 
 是不是现在显示出错？ 
 $su 
 #chmod 4755 lsusb 
 #su aaa 
 $./lsusb 
  
 ... 现在明白了吗？本来是只有root用户才能执行的命令，加了SUID后,普通用户就可以像root一样的用，权限提升了。上面是对于文件来说的，对于目录也差不多！ 
 目录的S属性使得在该目录下创建的任何文件及子目录属于该目录所拥有的组，目录的T属性使得该目录的所有者及root才能删除该目录。还有对于s与S，设置SUID/SGID需要有运行权限，否则用ls -l后就会看到S,证明你所设置的SUID/SGID没有起作用。 
  
 Why we need suid,how do we use suid? 
          r -- 读访问 
 　　 w -- 写访问 
 　　 x -- 执行许可 
 　　 s -- SUID/SGID 
 　　 t -- sticky位 
  
 那么 suid/sgid是做什么的？ 为什么会有suid位呢？ 
 要想明白这个，先让我们看个问题：如果让每个用户更改自己的密码？ 
 用户修改密码，是通过运行命令passwd来实现的。最终必须要修改/etc/passwd文件，而passwd的文件的属性是： 
  
    #ls -l /etc/passwd 
        -rw-r--r-- 1 root root 2520 Jul 12 18:25 passwd 
  
 我们可以看到passwd文件只有对于root用户是可写的，而对于所有的他用户来说都是没有写权限的。 那么一个普通的用户如何能够通过运行passwd命令修改这个passwd文件呢？ 
  
 为了解决这个问题，SUID/SGID便应运而生。而且AT&amp;T对它申请了专利。 呵呵。 
  
</rich_text><rich_text scale="h2" weight="heavy"> SUID和SGID是如何解决这个问题呢？ </rich_text><rich_text>
 首先，我们要知道一点：进程在运行的时候，有一些属性，其中包括 实际用户ID,实际组ID,有效用户ID,有效组ID等。 实际用户ID和实际组ID标识我们是谁，谁在运行这个程序,一般这2个字段在登陆时决定，在一个登陆会话期间， 这些值基本上不改变。 
  
 而有效用户ID和有效组ID则决定了进程在运行时的权限。内核在决定进程是否有文件存取权限时，是采用了进程的有效用户ID来进行判断的。 
  
 知道了这点，我们来看看SUID的解决途径： 
  
 当一个程序设置了为SUID位时，内核就知道了运行这个程序的时候，应该认为是文件的所有者在运行这个程序。即该程序运行的时候，有效用户ID是该程序的所有者。举个例子： 
  
 [root@sgrid5 bin]# ls -l passwd 
  
 -r-s--s--x 1 root root 16336 Feb 14 2003 passwd 
  
 虽然你以test登陆系统，但是当你输入passwd命令来更改密码的时候，由于passwd 设置了SUID位，因此虽然进程的实际用户ID是test对应的ID，但是进程的有效用户ID则是passwd文件的所有者root的ID,因此可以修改 /etc/passwd文件。 
  
 让我们看另外一个例子。 
  
 ping命令应用广泛，可以测试网络是否连接正常。ping在运行中是采用了ICMP协议，需要发送ICMP报文。但是只有root用户才能建立ICMP报文，如何解决这个问题呢？同样，也是通过SUID位来解决。 
  
 [root@sgrid5 bin]# ls -l /bin/ping 
  
 -rwsr-sr-x 1 root root 28628 Jan 25 2003 /bin/ping 
  
 我们可以测试一下，如果去掉ping的SUID位，再用普通用户去运行命令，看会怎么样。 
  
 [root@sgrid5 bin]#chmod u-s /bin/ping 
  
 [root@sgrid5 bin]# ls -l ping 
  
 -rwxr-xr-x 1 root root 28628 Jan 25 2003 ping 
  
 [root@sgrid5 bin]#su test 
  
 [test@sgrid5 bin]$ ping byhh.net 
  
 ping: icmp open socket: Operation not permitted 
  
 SUID虽然很好了解决了一些问题，但是同时也会带来一些安全隐患。 
  
 因为设置了 SUID 位的程序如果被攻击(通过缓冲区溢出等方面),那么hacker就可以拿到root权限。 
  
 因此在安全方面特别要注意那些设置了SUID的程序。 
  
 通过以下的命令可以找到系统上所有的设置了suid的文件： 
  
 [root@sgrid5 /]# find / -perm -04000 -type f -ls 
  
 对于这里为什么是4000，大家可以看一下前面的st_mode的各bit的意义就明白了。 
  
 在这些设置了suid的程序里，如果用不上的，就最好取消该程序的suid位。
</rich_text></node><node name="从 2.4 到 2.6：Linux 内核可装载模块机制的改变对设备驱动的影响" prog_lang="custom-colors" readonly="False" tags="" unique_id="27"><rich_text>
</rich_text><rich_text scale="h1">从 2.4 到 2.6：Linux 内核可装载模块机制的改变对设备驱动的影响</rich_text><rich_text>
        从 2.4 到 2.6，Linux 内核在可装载模块机制、设备模型、一些核心 API  等方面发生较大改变，设备驱动开发人员面临着将驱动从 2.4 移植到 2.6 内核，或是使驱动同时支持2.4 与 2.6  内核的任务。站在设备驱动开发人员的角度，驱动由一个或几个外部可加载内核模块组成，本文针对 2.6  内核里模块机制的改变对编写设备驱动程序的影响，从内核模块的编译、装载时的版本检查、初始化与退出、模块使用计数、输出内核符号、命令行输入参数、许可 证声明等方面比较了 2.4 与 2.6 内核的区别；并总结了使设备驱动同时支持 2.4 与 2.6 

</rich_text><rich_text scale="h2">1． 获取内核版本</rich_text><rich_text>
当设备驱动需要同时支持不同版本内核时，在编译阶段，内核模块需要知道当前使用的内核源码的版本，从而使用相应的内核 API。2.4 与 2.6 内核下，源码头文件 linux/version.h  定义有：
LINUX_VERSION_CODE ― 内核版本的二进制表示，主、从、修订版本号各对应一个字节；
KERNEL_VERSION(major, minor, release) － 由主、从、修订版本号构造二进制版本号。
在同时支持2.4与2.6 内核的设备驱动程序中，经常可以看到以下代码段：
清单1：判断内核版本的代码段。
    #include &lt;linux/version.h&gt;
    #if LINUX_VERSION_CODE &gt;= KERNEL_VERSION(2, 6, 0)
    #define LINUX26
    #endif
    #ifdef LINUX26
    /*code in 2.6 kernel*/
    #else
    /*code in 2.4 kernel */
    #endif

</rich_text><rich_text scale="h2">2．内核模块机制的改变</rich_text><rich_text>

</rich_text><rich_text scale="h3">2.1模块编译</rich_text><rich_text>
从2.4到2.6，外部可装载内核模块的编译、连接过程以及Makefile的书写都发生了改变。
2.4内核中，模块的编译只需内核源码头文件；需要在包含linux/modules.h之前定义MODULE；编译、连接后生成的内核模块后缀为.o。
2.6内核中，模块的编译需要配置过的内核源码；编译、连接后生成的内核模块后缀为.ko；编译过程首先会到内核源码目录下，读取顶层的Makefile文件，然后再返回模块源码所在目录。
清单2：2.4 内核模块的Makefile模板 
    #Makefile2.4
    KVER=$(shell uname -r)
    KDIR=/lib/modules/$(KVER)/build
    OBJS=mymodule.o
    CFLAGS=-D__KERNEL__ -I$(KDIR)/include -DMODULE 
        -D__KERNEL_SYSCALLS__ -DEXPORT_SYMTAB
      -O2 -fomit-frame-pointer  -Wall  -DMODVERSIONS 
              -include $(KDIR)/include/linux/modversions.h
    all: $(OBJS)
    mymodule.o: file1.o file2.o
	    ld -r -o $@ $^
    clean:
	    rm -f *.o
	在2.4  内核下，内核模块的Makefile与普通用户程序的Makefile在结构和语法上都相同，但是必须在CFLAGS中定义-D__KERNEL__ -DMODULE，指定内核头文件目录-I$(KDIR)/include。  有一点需注意，之所以在CFLAGS中定义变量，而不是在模块源码文件中定义，一方面这些预定义变量可以被模块中所有源码文件可见，另一方面等价于将这些 预定义变量定义在源码文件的起始位置。在模块编译中，对于这些全局的预定义变量，一般在CFLAGS中定义。
清单3：2.6 内核模块的Makefile模板
    # Makefile2.6
    ifneq ($(KERNELRELEASE),)
    #kbuild syntax. dependency relationshsip of files and target modules are listed here.
    mymodule-objs := file1.o file2.o
    obj-m := mymodule.o 
    else
    PWD  := $(shell pwd)
    KVER ?= $(shell uname -r)
    KDIR := /lib/modules/$(KVER)/build
    all:
	    $(MAKE) -C $(KDIR) M=$(PWD) 
    clean:
    rm -rf .*.cmd *.o *.mod.c *.ko .tmp_versions
    endif
    KERNELRELEASE是在内核源码的顶层Makefile中定义的一个变量，在第一次读取执行此 Makefile时，KERNELRELEASE没有被定义，  所以make将读取执行else之后的内容。如果make的目标是clean，直接执行clean操作，然后结束。当make的目标为all时，-C  $(KDIR) 指明跳转到内核源码目录下读取那里的Makefile；M=$(PWD)  表明然后返回到当前目录继续读入、执行当前的Makefile。当从内核源码目录返回时，KERNELRELEASE已被被定义，kbuild也被启动去 解析kbuild语法的语句，make将继续读取else之前的内容。else之前的内容为kbuild语法的语句,  指明模块源码中各文件的依赖关系，以及要生成的目标模块名。
    mymodule-objs := file1.o  file2.o表示mymoudule.o 由file1.o与file2.o 连接生成。obj-m :=  mymodule.o表示编译连接后将生成mymodule.o模块。
    补充一点，&quot;$(MAKE) -C $(KDIR) M=$(PWD)&quot;与&quot;$(MAKE) -C $(KDIR) SUBDIRS =$(PWD)&quot;的作用是等效的，后者是较老的使用方法。推荐使用M而不是SUBDIRS，前者更明确。    
通过以上比较可以看到，从Makefile编写来看，在2.6内核下，内核模块编译不必定义复杂的CFLAGS，而且模块中各文件依赖关系的表示简洁清晰。

清单4： 可同时在2.4 与 2.6 内核下工作的Makefile
＃Makefile for 2.4 &amp; 2.6
VERS26=$(findstring 2.6,$(shell uname -r))
MAKEDIR?=$(shell pwd)
ifeq ($(VERS26),2.6)
include $(MAKEDIR)/Makefile2.6
else
include $(MAKEDIR)/Makefile2.4
endif

</rich_text><rich_text scale="h3">2.2模块装载时的版本检查</rich_text><rich_text>
    Linux内核一直在更新、完善，在a版本内核源码下编译的模块在b版本内核下通常不能运行，所以必须有一种机制，限制在a版本内核下编译生成的模块在b版本内核下被加载。
2.4与2.6内核在可装载内核模块的版本检查机制方面发生了根本性的改变，不过这些改变对设备驱动开发人员而言基本是透明的。为了使模块装载时的版本检查机制生效，2.4 内核下，只需在CFLAGS中定义
    -DMODVERSIONS -include $(KDIR)/include/linux/modversions.h；
    2.6内核下，开发人员无须采用任何操作。
    不过，在此仍有必要阐明2.4与2.6内核对可加载模块的版本检查机制。
    2.4 内核下， 执行`cat  /proc/ksyms`可看到内核符号在名字后还跟随着一串校验字符串，此校验字符串与内核版本有关。在内核源码头文件linux/modules  目录下存在许多*.ver文件，这些文件起着为内核符号添加校验后缀的作用，如ksyms.ver 文件里有一行 #define printk _set_ver(printk)。linux/modversions.h 文件会包含全部的 ver文件  。所以当模块包含linux/modversions.h文件后，编译时，模块里使用的内核符号实质是带有校验后缀的内核符号。在加载模块时，如果模块中 所使用内核符号的校验字符串与当前运行内核所导出的相应的内核符号的校验字符串不一致，即当前内核空间并不存在模块所使用的内核符号，就会出 现&quot;Invalid module format &quot;的错误。
为内核符号添加校验字符串来验证模块的版本与内核的版本是否匹配是繁杂和浪费 内核空间的；而且随着SMP（对称多处理器）、PREEMPT（可抢占内核）等机制在2.6内核的引入和完善，模块运行时对内核的依赖不仅取决于内核版 本，还取决于内核的配置，此时内核符号的校验码是否一致不能成为判断模块可否被加载的充分条件。2.6  内核下，在linux/vermagic.h中定义有VERMAGIC_STRING，VERMAGIC_STRING不仅包含内核版本号，还包含有内核 使用的gcc版本，SMP与PREEMPT等配置信息。模块在编译时，我们可以看到屏幕上会显示&quot;MODPOST&quot;。在此阶段，  VERMAGIC_STRING会添加到模块的modinfo段。  在内核源码目录下scripts\mod\modpost.c文件中可以看到模块后续处理部分的代码。模块编译生成后，通过`modinfo  mymodule.ko`命令可以查看此模块的vermagic等信息。2.6  内核下的模块装载器里保存有内核的版本信息，在装载模块时，装载器会比较所保存的内核vermagic与此模块的modinfo段里保存的 vermagic信息是否一致，两者一致时，模块才能被装载。譬如Fedora core 4 与core 2 使用的都是2.6 版本内核，  在Fedore Core 2下去加载Fedora Core4下编译生成的hello.ko，会出现&quot;invalid module format&quot;  错误。
    ＃insmod hello.ko
    Invalid module format 
    hello: version magic '2.6.11-1.1369_FC4 686 REGPARM 4KSTACKS gcc-4.0' 
    should be '2.6.5-1.358 686 REGPARM 4KSTACKS gcc-3.3'
    
</rich_text><rich_text scale="h3">2.3模块的初始化与退出</rich_text><rich_text>
在 2.6内核中，内核模块必须调用宏module_init 与module_exit() 去注册初始化与退出函数。在2.4  内核中，如果初始化函数命名为init_module()、退出函数命名为cleanup_module()，可以不必使用module_init  与module_exit 宏。推荐使用module_init 与module_exit宏，使代码在2.4与2.6内核中都能工作。
清单5：适用于2.4与2.6内核的模块的初始化与退出模板
    #include &lt;linux/module.h&gt;  /* Needed by all modules */
    #include &lt;linux/init.h&gt;    /* Needed for init&amp;exit macros */
    static int mod_init_func(void)
    {
        /*code here*/
        return 0;
    }
    static void mod_exit_func(void)
    {
        /*code here*/
    }
    module_init(mod_init_func);
    module_exit(mod_exit_func);
    需要注意的是初始化与退出函数必须在宏module_init和module_exit使用前定义，否则会出现编译错误。

</rich_text><rich_text scale="h3">2.4 模块使用计数</rich_text><rich_text>
模 块在被使用时，是不允许被卸载的。2.4内核中，模块自身通过MOD_INC_USE_COUNT、MOD_DEC_USE_COUNT宏来管理自己被使 用的计数。2.6内核提供了更健壮、灵活的模块计数管理接口try_module_get(&amp;module)及 module_put(&amp;module)取代2.4中的模块使用计数管理宏；模块的使用计数不必由自身管理，而且在管理模块使用计数时考虑到 SMP与PREEMPT机制的影响。
    int try_module_get(struct module *module)：用于增加模块使用计数；若返回为0，表示调用失败，希望使用的模块没有被加载或正在被卸载中。
    void module_put(struct module *module)：减少模块使用计数。
    
    try_module_get 与module_put的引入与使用与2.6内核下的设备模型密切相关。模块是用来管理硬件设备的，2.6 内核为不同类型的设备定义了struct module *owner 域，用来指向管理此设备的模块。如字符设备的定义：
    struct cdev {
	    struct kobject kobj;
	    struct module *owner;
	    struct file_operations *ops;
	    struct list_head list;
	    dev_t dev;
	    unsigned int count;
    };
    从设备使用的角度出发，当需要打开、开始使用某个设备时，使用 try_module_get(dev-&gt;owner)去增加管理此设备的owner模块的使用计数；当关闭、不再使用此设备时，使用 module_put(dev-&gt;owner)减少对管理此设备的owner模块的使用计数。这样，当设备在使用时，管理此设备的模块就不能被卸 载；只有设备不再使用时模块才能被卸载。
2.6内核下，对于为具体设备写驱动的开发人员而言，基本无需使用try_module_get与 module_put，因为此时开发人员所写的驱动通常为支持某具体设备的owner模块，对此设备owner模块的计数管理由内核里更底层的代码如总线 驱动或是此类设备共用的核心模块来实现，从而简化了设备驱动开发。

</rich_text><rich_text scale="h2">2.5 模块输出的内核符号</rich_text><rich_text>
2.4 内核下，缺省情况时模块中的非静态全局变量及函数在模块加载后会输出到内核空间。
2.6  内核下，缺省情况时模块中的非静态全局变量及函数在模块加载后不会输出到内核空间，需要显式调用宏EXPORT_SYMBOL才能输出。所以在2.6  内核的模块下，EXPORT_NO_SYMBOLS宏的调用没有意义，是空操作。在同时支持2.4与2.6内核的设备驱动中，可以通过以下代码段来输出模 块的内核符号
清单6： 同时支持2.4与2.6的输出内核符号代码段
    #include &lt;linux/module.h&gt;
    #ifndef LINUX26
    EXPORT_NO_SYMBOLS;
    #endif	
    EXPORT_SYMBOL(var);
    EXPORT_SYMBOL(func);
    需要注意的是如需在2.4内核下使用 EXPORT_SYMBOL，必须在 CFLAGS中定义 EXPORT_SYMTAB，否则编译将会失败。
从良好的代码风格角度出发，模块中不需要输出到内核空间且不需为模块中其它文件所用的全局变量及函数最好显式申明为static类型，需要输出的内核符号以模块名为前缀。
模块加载后，2.4内核下可通过 /proc/ksyms、 2.6 内核下可通过/proc/kallsyms查看模块输出的内核符号

</rich_text><rich_text scale="h2">2.6 模块的命令行输入参数</rich_text><rich_text>
    在装载内核模块时，用户可以向模块传递一些参数，如`modprobe modname var=value`，否则，var将使用模块内定义的缺省值。

    2.4 内核下，linux/module.h中定义有宏MODULE_PARM(var,type)  用于向模块传递命令行参数。var为接受参数值的变量名，type为采取如下格式的字符串[min[-max]]{b,h,i,l,s}。min及max 用于表示当参数为数组类型时，允许输入的数组元素的个数范围；b：byte；h：short；i：int；l：long；s：string。 
    2.6内核下，宏MODULE_PARM(var,type)不再被支持。在头文件linux/moduleparam.h里定义了如下宏：
    module_param(name, type, perm)	
    module_param_array(name, type, nump, perm)
    type  类型可以是byte、short,、ushort、 int、 uint、long、ulong、charp, bool or invbool,  不再采用2.4内核中的字符串形式，而且在模块编译时会将此处申明的type与变量定义的类型进行比较，判断是否一致。
    perm表示此参数 在sysfs文件系统中所对应的文件节点的属性。2.6内核使用sysfs文件系统，这是一个建立在内存中比proc更强大的文件系统。sysfs文件系 统可以动态、实时，有组织层次地反应当前系统中的硬件、驱动等状态。当perm为0时，表示此参数不存在sysfs文件系统下对应的文件节点。  模块被加载后，在/sys/module/  目录下将出现以此模块名命名的目录。如果此模块存在perm不为0的命令行参数，在此模块的目录下将出现parameters目录，包含一系列以参数名命 名的文件节点，这些文件的权限值等于perm，文件的内容为参数的值。
    nump为保存输入的数组元素个数的变量的指针。当不需保存实际输入的数组元素个数时，可以设为NULL。从2.6.0至2.6.10  版本，须将变量名赋给nump；从2.6.10  版本开始，须将变量的引用赋给nump，这更易为开发人员理解。加载模块时，使用逗号分隔输入的数组元素。
    
清单7： 适用于2.4与2.6内核的模块输入参数模板
    #include &lt;linux/module.h&gt;
    #ifdef LINUX26
    #include &lt;linux/moduleparam.h&gt;
    #endif 
    int debug = 0;
    char *mode = &quot;800x600&quot;;
    int tuner[4] = {1, 1, 1, 1};
    #ifdef LINUX26
    int tuner_c = 1;  
    #endif 
    #ifdef LINUX26
    MODULE_PARM(debug, &quot;i&quot;);
    MODULE_PARM(mode, &quot;s&quot;);
    MODULE_PARM(tuner,&quot;1-4i&quot;);
    #else
    module_param(debug, int, 0644);
    module_param(mode, charp, 0644);
    #if LINUX_VERSION_CODE &gt;= KERNEL_VERSION(2, 6, 10)
    module_param_array(tuner, int, &amp;tuner_c, 0644);
    #else
    module_param_array(tuner, int, tuner_c, 0644);
    #endif 
    #endif
    模块编译生成后，加载模块时可以输入：`modprobe  my_module   mode=1024x768 debug=1 tuner=22,33`。 
    在linux/moduleparam.h还定义有：
    module_param_array_named(name, array, type, nump, perm)		
    module_param_call(name, set, get, arg, perm)	
    module_param_named(name, value, type, perm)
    读者可以参阅linux/moduleparam.h查看这些宏的详细描述，有一点需注意，在2.6内核里，module_param这一系列宏使用的都是小写名字。

</rich_text><rich_text scale="h3">2.7 模块的许可证声明</rich_text><rich_text>
    从 2.4.10版本内核开始，模块必须通过MODULE_LICENSE宏声明此模块的许可证，否则在加载此模块时，会收到内核被污染&quot;kernel  tainted&quot; 的警告。从linux/module.h文件中可以看到，被内核接受的有意义的许可证有 &quot;GPL&quot;，&quot;GPL v2&quot;，&quot;GPL  and additional rights&quot;，&quot;Dual BSD/GPL&quot;，&quot;Dual MPL/GPL&quot;，&quot;Proprietary&quot;。
在同时支持2.4与2.6内核的设备驱动中，模块可按如下方式声明自己的许可证。
    清单8： 适用于2.4与2.6内核的模块许可证声明模板
    #if LINUX_VERSION_CODE &gt;= KERNEL_VERSION(2,4,10)
    MODULE_LICENSE(&quot;GPL&quot;);
    #endif
    
</rich_text><rich_text scale="h3">2.8 小结</rich_text><rich_text>
    此外，2.6内核里还有一些模块机制的改变，不常为 驱动开发人员用到。如加载内核模块的接口request_module在2.4 下为request_module(const char *  module_name)；在2.6内核下为request_module(const char *fmt, ...)。在2.6  内核下，驱动开发人员可以通过调用
    request_module(&quot;msp3400&quot;);
    request_module(&quot;char-major-%d-%d&quot;, MAJOR(dev), MINOR(dev))；
    这种更灵活的方式加载其它内核模块。

2.6内核在linux/module.h中还提供了MODULE_ALIAS(alias)宏，模块可以通过调用此宏为自己定义一或若干个别称。而在2.4内核下，用户只能在/etc/modules.conf中为模块定义别称。
通过以上比较可以看到，从2.4到2.6内核，可装载模块管理机制的改变使设备驱动的开发变得更加简洁、灵活、健壮

</rich_text></node><node name="Linux 内核的同步机制" prog_lang="custom-colors" readonly="False" tags="" unique_id="29"><rich_text>
</rich_text><node name="第1部分" prog_lang="custom-colors" readonly="False" tags="" unique_id="31"><rich_text scale="h1">一、 引言</rich_text><rich_text>
在现代操作系统里，同一时间可能有多个内核执行流在执行，因此内核其实象多进程多线程编程一样也需要一些同步机制来同步各执行单元对共享数据的访 问。尤其是在多处理器系统上，更需要一些同步机制来同步不同处理器上的执行单元对共享的数据的访问。在主流的Linux内核中包含了几乎所有现代的操作系 统具有的同步机制，这些同步机制包括：原子操作、信号量（semaphore）、读写信号量（rw_semaphore）、spinlock、 BKL(Big Kernel  Lock)、rwlock、brlock（只包含在2.4内核中）、RCU（只包含在2.6内核中）和seqlock（只包含在2.6内核中）。
本文的下面各章节将详细讲述每一种同步机制的原理、用途、API以及典型应用示例。

</rich_text><rich_text scale="h1">二、原子操作</rich_text><rich_text>
所谓原子操作，就是该操作绝不会在执行完毕前被任何其他任务或事件打断，也就说，它的最小的执行单位，不可能有比它更小的执行单位，因此这里的原子实际是使用了物理学里的物质微粒的概念。
原子操作需要硬件的支持，因此是架构相关的，其API和原子类型的定义都定义在内核源码树的include/asm/atomic.h文件中，它们都使用汇编语言实现，因为C语言并不能实现这样的操作。
原子操作主要用于实现资源计数，很多引用计数(refcnt)就是通过原子操作实现的。
原子类型定义如下：

typedef struct { volatile int counter; } atomic_t;
volatile修饰字段告诉gcc不要对该类型的数据做优化处理，对它的访问都是对内存的访问，而不是对寄存器的访问。

</rich_text><rich_text scale="h2">原子操作API包括：</rich_text><rich_text>

atomic_read(atomic_t * v);
该函数对原子类型的变量进行原子读操作，它返回原子类型的变量v的值。

atomic_set(atomic_t * v, int i);
该函数设置原子类型的变量v的值为i。

void atomic_add(int i, atomic_t *v);
该函数给原子类型的变量v增加值i。

atomic_sub(int i, atomic_t *v);
该函数从原子类型的变量v中减去i。

int atomic_sub_and_test(int i, atomic_t *v);
该函数从原子类型的变量v中减去i，并判断结果是否为0，如果为0，返回真，否则返回假。

void atomic_inc(atomic_t *v);
该函数对原子类型变量v原子地增加1。

void atomic_dec(atomic_t *v);
该函数对原子类型的变量v原子地减1。

int atomic_dec_and_test(atomic_t *v);
该函数对原子类型的变量v原子地减1，并判断结果是否为0，如果为0，返回真，否则返回假。

int atomic_inc_and_test(atomic_t *v);
该函数对原子类型的变量v原子地增加1，并判断结果是否为0，如果为0，返回真，否则返回假。

int atomic_add_negative(int i, atomic_t *v);
该函数对原子类型的变量v原子地增加I，并判断结果是否为负数，如果是，返回真，否则返回假。

int atomic_add_return(int i, atomic_t *v);
该函数对原子类型的变量v原子地增加i，并且返回指向v的指针。

int atomic_sub_return(int i, atomic_t *v);
该函数从原子类型的变量v中减去i，并且返回指向v的指针。

int atomic_inc_return(atomic_t * v);
该函数对原子类型的变量v原子地增加1并且返回指向v的指针。

int atomic_dec_return(atomic_t * v);
该函数对原子类型的变量v原子地减1并且返回指向v的指针。

    原子操作通常用于实现资源的引用计数，在TCP/IP协议栈的IP碎片处理中，就使用了引用计数，碎片队列结构struct  ipq描述了一个IP碎片，字段refcnt就是引用计数器，它的类型为atomic_t，当创建IP碎片时（在函数ip_frag_create中）， 使用atomic_set函数把它设置为1，当引用该IP碎片时，就使用函数atomic_inc把引用计数加1，当不需要引用该IP碎片时，就使用函数 ipq_put来释放该IP碎片，ipq_put使用函数atomic_dec_and_test把引用计数减1并判断引用计数是否为0，如果是, 就释放IP碎片。函数ipq_kill把IP碎片从ipq队列中删除，并把该删除的IP碎片的引用计数减1（通过使用函数atomic_dec实现）。

</rich_text><rich_text scale="h1">三、信号量（semaphore）</rich_text><rich_text>
    Linux内核的信号量在概念和原理上与用户态的System V的IPC机制信号量是一样的，但是它绝不可能在内核之外使用，因此它与System V的IPC机制信号量毫不相干。
信号量在创建时需要设置一个初始值，表示同时可以有几个任务可以访问该信号量保护的共享资源，初始值为1就变成互斥锁（Mutex），即同时只能有一个任务可以访问信号量保护的共享资源。一个任务要想访问共享资源，首先必须得到信号量，获取信号量的操作将把信号量的值减1，若当前信号量的值为负数， 表明无法获得信号量，该任务必须挂起在该信号量的等待队列等待该信号量可用；若当前信号量的值为非负数，表示可以获得信号量，因而可以立刻访问被该信号量 保护的共享资源。当任务访问完被信号量保护的共享资源后，必须释放信号量，释放信号量通过把信号量的值加1实现，如果信号量的值为非正数，表明有任务等待 当前信号量，因此它也唤醒所有等待该信号量的任务。

</rich_text><rich_text scale="h2">信号量的API有：</rich_text><rich_text>

DECLARE_MUTEX(name)
该宏声明一个信号量name并初始化它的值为0，即声明一个互斥锁。

DECLARE_MUTEX_LOCKED(name)
该宏声明一个互斥锁name，但把它的初始值设置为0，即锁在创建时就处在已锁状态。因此对于这种锁，一般是先释放后获得。

void sema_init (struct semaphore *sem, int val);
该函用于数初始化设置信号量的初值，它设置信号量sem的值为val。

void init_MUTEX (struct semaphore *sem);
该函数用于初始化一个互斥锁，即它把信号量sem的值设置为1。

void init_MUTEX_LOCKED (struct semaphore *sem);
该函数也用于初始化一个互斥锁，但它把信号量sem的值设置为0，即一开始就处在已锁状态。

void down(struct semaphore * sem);
该函数用于获得信号量sem，它会导致睡眠，因此不能在中断上下文（包括IRQ上下文和softirq上下文）使用该函数。该函数将把sem的值减1，如果信号量sem的值非负，就直接返回，否则调用者将被挂起，直到别的任务释放该信号量才能继续运行。

int down_interruptible(struct semaphore * sem);
该函数功能与down类似，不同之处为，down不会被信号（signal）打断，但down_interruptible能被信号打断，因此该函数有返回值来区分是正常返回还是被信号中断，如果返回0，表示获得信号量正常返回，如果被信号打断，返回-EINTR。

int down_trylock(struct semaphore * sem);
该函数试着获得信号量sem，如果能够立刻获得，它就获得该信号量并返回0，否则，表示不能获得信号量sem，返回值为非0值。因此，它不会导致调用者睡眠，可以在中断上下文使用。

void up(struct semaphore * sem);
该函数释放信号量sem，即把sem的值加1，如果sem的值为非正数，表明有任务等待该信号量，因此唤醒这些等待者。

    信号量在绝大部分情况下作为互斥锁使用，下面以console驱动系统为例说明信号量的使用。
    在内核源码树的kernel/printk.c中，使用宏DECLARE_MUTEX声明了一个互斥锁console_sem，它用于保护console驱动列表console_drivers以及同步对整个console驱动系统的访问，其中定义了函数 acquire_console_sem来获得互斥锁console_sem，定义了release_console_sem来释放互斥锁 console_sem，定义了函数try_acquire_console_sem来尽力得到互斥锁console_sem。这三个函数实际上是分别对函数down，up和down_trylock的简单包装。需要访问console_drivers驱动列表时就需要使用 acquire_console_sem来保护console_drivers列表，当访问完该列表后，就调用release_console_sem释 放信号量console_sem。函数 console_unblank，console_device，console_stop，console_start，register_console 和unregister_console都需要访问console_drivers，因此它们都使用函数对acquire_console_sem和 release_console_sem来对console_drivers进行保护。

</rich_text><rich_text scale="h1">四、读写信号量（rw_semaphore）</rich_text><rich_text>
    读写信号量对访问者进行了细分，或者为读者，或者为写者，读者在保持读写信号量期间只能对该读写信号量保护的共享资源进行读访问，如果一个任务除了需要读，可能还需要写，那么它必须被归类为写者，它在对共享资源访问之前必须先获得写者身份，写者在发现自己不需要写访问的情况下可以降级为读者。读写信号量同时拥有的读者数不受限制，也就说可以有任意多个读者同时拥有一个读写信号量。如果一个读写信号量当前没有被写者拥有并且也没有写者等待读者释放信号 量，那么任何读者都可以成功获得该读写信号量；否则，读者必须被挂起直到写者释放该信号量。如果一个读写信号量当前没有被读者或写者拥有并且也没有写者等待该信号量，那么一个写者可以成功获得该读写信号量，否则写者将被挂起，直到没有任何访问者。因此，写者是排他性的，独占性的。
    读写信号量有两种实现，一种是通用的，不依赖于硬件架构，因此，增加新的架构不需要重新实现它，但缺点是性能低，获得和释放读写信号量的开销大；另一种是架构相关的，因此性能高，获取和释放读写信号量的开销小，但增加新的架构需要重新实现。在内核配置时，可以通过选项去控制使用哪一种实现。
    
</rich_text><rich_text scale="h2">读写信号量的相关API有：</rich_text><rich_text>

DECLARE_RWSEM(name)
该宏声明一个读写信号量name并对其进行初始化。

void init_rwsem(struct rw_semaphore *sem);
该函数对读写信号量sem进行初始化。

void down_read(struct rw_semaphore *sem);
读者调用该函数来得到读写信号量sem。该函数会导致调用者睡眠，因此只能在进程上下文使用。

int down_read_trylock(struct rw_semaphore *sem);
该函数类似于down_read，只是它不会导致调用者睡眠。它尽力得到读写信号量sem，如果能够立即得到，它就得到该读写信号量，并且返回1，否则表示不能立刻得到该信号量，返回0。因此，它也可以在中断上下文使用。

void down_write(struct rw_semaphore *sem);
写者使用该函数来得到读写信号量sem，它也会导致调用者睡眠，因此只能在进程上下文使用。

int down_write_trylock(struct rw_semaphore *sem);
该函数类似于down_write，只是它不会导致调用者睡眠。该函数尽力得到读写信号量，如果能够立刻获得，就获得该读写信号量并且返回1，否则表示无法立刻获得，返回0。它可以在中断上下文使用。

void up_read(struct rw_semaphore *sem);
读者使用该函数释放读写信号量sem。它与down_read或down_read_trylock配对使用。如果down_read_trylock返回0，不需要调用up_read来释放读写信号量，因为根本就没有获得信号量。

void up_write(struct rw_semaphore *sem);
写者调用该函数释放信号量sem。它与down_write或down_write_trylock配对使用。如果down_write_trylock返回0，不需要调用up_write，因为返回0表示没有获得该读写信号量。

void downgrade_write(struct rw_semaphore *sem);
该函数用于把写者降级为读者，这有时是必要的。因为写者是排他性的，因此在写者保持读写信号量期间，任何读者或写者都将无法访问该读写信号量保护的 共享资源，对于那些当前条件下不需要写访问的写者，降级为读者将，使得等待访问的读者能够立刻访问，从而增加了并发性，提高了效率。
    读写信号量适于在读多写少的情况下使用，在linux内核中对进程的内存映像描述结构的访问就使用了读写信号量进行保护。在Linux中，每一个进程都用一个类型为task_t或struct task_struct的结构来描述，该结构的类型为struct  mm_struct的字段mm描述了进程的内存映像，特别是mm_struct结构的mmap字段维护了整个进程的内存块列表，该列表将在进程生存期间被大量地遍历或修改，因此mm_struct结构就有一个字段mmap_sem来对mmap的访问进行保护，mmap_sem就是一个读写信号量，在 proc文件系统里有很多进程内存使用情况的接口，通过它们能够查看某一进程的内存使用情况，命令free、ps和top都是通过proc来得到内存使用信息的，proc接口就使用down_read和up_read来读取进程的mmap信息。当进程动态地分配或释放内存时，需要修改mmap来反映分配或释放后的内存映像，因此动态内存分配或释放操作需要以写者身份获得读写信号量mmap_sem来对mmap进行更新。系统调用brk和munmap就使用了down_write和up_write来保护对mmap的访问。

</rich_text><rich_text scale="h1">五、自旋锁（spinlock）</rich_text><rich_text>
    自旋锁与互斥锁有点类似，只是自旋锁不会引起调用者睡眠，如果自旋锁已经被别的执行单元保持，调用者就一直循环在那里看是否该自旋锁的保持者已经释放了锁，&quot;自旋&quot;一词就是因此而得名。由于自旋锁使用者一般保持锁时间非常短，因此选择自旋而不是睡眠是非常必要的，自旋锁的效率远高于互斥锁。
    信号量和读写信号量适合于保持时间较长的情况，它们会导致调用者睡眠，因此只能在进程上下文使用（_trylock的变种能够在中断上下文使用）， 而自旋锁适合于保持时间非常短的情况，它可以在任何上下文使用。如果被保护的共享资源只在进程上下文访问，使用信号量保护该共享资源非常合适，如果对共享资源的访问时间非常短，自旋锁也可以。但是如果被保护的共享资源需要在中断上下文访问（包括底半部即中断处理句柄和顶半部即软中断），就必须使用自旋锁。
    自旋锁保持期间是抢占失效的，而信号量和读写信号量保持期间是可以被抢占的。自旋锁只有在内核可抢占或SMP的情况下才真正需要，在单CPU且不可抢占的内核下，自旋锁的所有操作都是空操作。
    跟互斥锁一样，一个执行单元要想访问被自旋锁保护的共享资源，必须先得到锁，在访问完共享资源后，必须释放锁。如果在获取自旋锁时，没有任何执行单元保持该锁，那么将立即得到锁；如果在获取自旋锁时锁已经有保持者，那么获取锁操作将自旋在那里，直到该自旋锁的保持者释放了锁。
    无论是互斥锁，还是自旋锁，在任何时刻，最多只能有一个保持者，也就说，在任何时刻最多只能有一个执行单元获得锁。

</rich_text><rich_text scale="h2">自旋锁的API有：</rich_text><rich_text>

spin_lock_init(x)
该宏用于初始化自旋锁x。自旋锁在真正使用前必须先初始化。该宏用于动态初始化。

DEFINE_SPINLOCK(x)
该宏声明一个自旋锁x并初始化它。该宏在2.6.11中第一次被定义，在先前的内核中并没有该宏。

SPIN_LOCK_UNLOCKED
该宏用于静态初始化一个自旋锁。

DEFINE_SPINLOCK(x)等同于spinlock_t x = SPIN_LOCK_UNLOCKED; spin_is_locked(x)
该宏用于判断自旋锁x是否已经被某执行单元保持（即被锁），如果是，返回真，否则返回假。

spin_unlock_wait(x)
该宏用于等待自旋锁x变得没有被任何执行单元保持，如果没有任何执行单元保持该自旋锁，该宏立即返回，否则将循环在那里，直到该自旋锁被保持者释放。

spin_trylock(lock)
该宏尽力获得自旋锁lock，如果能立即获得锁，它获得锁并返回真，否则不能立即获得锁，立即返回假。它不会自旋等待lock被释放。

spin_lock(lock)
该宏用于获得自旋锁lock，如果能够立即获得锁，它就马上返回，否则，它将自旋在那里，直到该自旋锁的保持者释放，这时，它获得锁并返回。总之，只有它获得锁才返回。

spin_lock_irqsave(lock, flags)
该宏获得自旋锁的同时把标志寄存器的值保存到变量flags中并失效本地中断。

spin_lock_irq(lock)
该宏类似于spin_lock_irqsave，只是该宏不保存标志寄存器的值。

spin_lock_bh(lock)
该宏在得到自旋锁的同时失效本地软中断。

spin_unlock(lock)
该宏释放自旋锁lock，它与spin_trylock或spin_lock配对使用。如果spin_trylock返回假，表明没有获得自旋锁，因此不必使用spin_unlock释放。

spin_unlock_irqrestore(lock, flags)
该宏释放自旋锁lock的同时，也恢复标志寄存器的值为变量flags保存的值。它与spin_lock_irqsave配对使用。

spin_unlock_irq(lock)
该宏释放自旋锁lock的同时，也使能本地中断。它与spin_lock_irq配对应用。

spin_unlock_bh(lock)
该宏释放自旋锁lock的同时，也使能本地的软中断。它与spin_lock_bh配对使用。

spin_trylock_irqsave(lock, flags)
该宏如果获得自旋锁lock，它也将保存标志寄存器的值到变量flags中，并且失效本地中断，如果没有获得锁，它什么也不做。因此如果能够立即获 得锁，它等同于spin_lock_irqsave，如果不能获得锁，它等同于spin_trylock。如果该宏获得自旋锁lock，那需要使用 spin_unlock_irqrestore来释放。

spin_trylock_irq(lock)
该宏类似于spin_trylock_irqsave，只是该宏不保存标志寄存器。如果该宏获得自旋锁lock，需要使用spin_unlock_irq来释放。

spin_trylock_bh(lock)
该宏如果获得了自旋锁，它也将失效本地软中断。如果得不到锁，它什么也不做。因此，如果得到了锁，它等同于spin_lock_bh，如果得不到锁，它等同于spin_trylock。如果该宏得到了自旋锁，需要使用spin_unlock_bh来释放。

spin_can_lock(lock)
该宏用于判断自旋锁lock是否能够被锁，它实际是spin_is_locked取反。如果lock没有被锁，它返回真，否则，返回假。该宏在2.6.11中第一次被定义，在先前的内核中并没有该宏。
    获得自旋锁和释放自旋锁有好几个版本，因此让读者知道在什么样的情况下使用什么版本的获得和释放锁的宏是非常必要的。
    如果被保护的共享资源只在进程上下文访问和软中断上下文访问，那么当在进程上下文访问共享资源时，可能被软中断打断，从而可能进入软中断上下文来对被保护的共享资源访问，因此对于这种情况，对共享资源的访问必须使用spin_lock_bh和spin_unlock_bh来保护。当然使用 spin_lock_irq和spin_unlock_irq以及spin_lock_irqsave和spin_unlock_irqrestore也可以，它们失效了本地硬中断，失效硬中断隐式地也失效了软中断。但是使用spin_lock_bh和spin_unlock_bh是最恰当的，它比其他两个快。
    如果被保护的共享资源只在进程上下文和tasklet或timer上下文访问，那么应该使用与上面情况相同的获得和释放锁的宏，因为tasklet和timer是用软中断实现的。
如果被保护的共享资源只在一个tasklet或timer上下文访问，那么不需要任何自旋锁保护，</rich_text><rich_text foreground="#00000000ffff">因为同一个tasklet或timer只能在一个 CPU上运行，即使是在SMP环境下也是如此。实际上tasklet在调用tasklet_schedule标记其需要被调度时已经把该tasklet绑定到当前CPU，因此同一个tasklet决不可能同时在其他CPU上运行。timer也是在其被使用add_timer添加到timer队列中时已经被帮定到当前CPU，所以同一个timer绝不可能运行在其他CPU上。当然同一个tasklet有两个实例同时运行在同一个CPU就更不可能了</rich_text><rich_text>。
    如果被保护的共享资源只在两个或多个tasklet或timer上下文访问，那么对共享资源的访问仅需要用spin_lock和 spin_unlock来保护，不必使用_bh版本，因为当tasklet或timer运行时，不可能有其他tasklet或timer在当前CPU上运行。 如果被保护的共享资源只在一个软中断（tasklet和timer除外）上下文访问，那么这个共享资源需要用spin_lock和spin_unlock 来保护，因为同样的软中断可以同时在不同的CPU上运行。
    如果被保护的共享资源在两个或多个软中断上下文访问，那么这个共享资源当然更需要用spin_lock和spin_unlock来保护，不同的软中断能够同时在不同的CPU上运行。
    如果被保护的共享资源在软中断（包括tasklet和timer）或进程上下文和硬中断上下文访问，那么在软中断或进程上下文访问期间，可能被硬中断打断，从而进入硬中断上下文对共享资源进行访问，因此，在进程或软中断上下文需要使用spin_lock_irq和spin_unlock_irq来保护对共享资源的访问。而在中断处理句柄中使用什么版本，需依情况而定，如果只有一个中断处理句柄访问该共享资源，那么在中断处理句柄中仅需要spin_lock和spin_unlock来保护对共享资源的访问就可以了。因为在执行中断处理句柄期间，不可能被同一CPU上的软中断或进程打断。但是如果有不同的中断处理句柄访问该共享资源，那么需要在中断处理句柄中使用spin_lock_irq和spin_unlock_irq来保护对共享资源的访问。
    在使用spin_lock_irq和spin_unlock_irq的情况下，完全可以用spin_lock_irqsave和 spin_unlock_irqrestore取代，那具体应该使用哪一个也需要依情况而定，如果可以确信在对共享资源访问前中断是使能的，那么使用spin_lock_irq更好一些，因为它比spin_lock_irqsave要快一些，但是如果你不能确定是否中断使能，那么使用 spin_lock_irqsave和spin_unlock_irqrestore更好，因为它将恢复访问共享资源前的中断标志而不是直接使能中断。当然，有些情况下需要在访问共享资源时必须中断失效，而访问完后必须中断使能，这样的情形使用spin_lock_irq和spin_unlock_irq最好。
    需要特别提醒读者，spin_lock用于阻止在不同CPU上的执行单元对共享资源的同时访问以及不同进程上下文互相抢占导致的对共享资源的非同步访问，而中断失效和软中断失效却是为了阻止在同一CPU上软中断或中断对共享资源的非同步访问。
    本系列文章的第二部分将详细介绍Linux内核中的其他一些同步机制，包括大内核锁、读写锁、大读者锁、RCU和顺序锁。
    </rich_text></node><node name="第2部分" prog_lang="custom-colors" readonly="False" tags="" unique_id="30"><rich_text scale="h1">六、大内核锁（BKL--Big Kernel Lock）</rich_text><rich_text>
    大内核锁本质上也是自旋锁，但是它又不同于自旋锁，自旋锁是不可以递归获得锁的，因为那样会导致死锁。但大内核锁可以递归获得锁。大内核锁用于保护 整个内核，而自旋锁用于保护非常特定的某一共享资源。进程保持大内核锁时可以发生调度，具体实现是：在执行schedule时，schedule将检查进 程是否拥有大内核锁，如果有，它将被释放，以致于其它的进程能够获得该锁，而当轮到该进程运行时，再让它重新获得大内核锁。注意在保持自旋锁期间是不运行 发生调度的。
需要特别指出，整个内核只有一个大内核锁，其实不难理解，内核只有一个，而大内核锁是保护整个内核的，当然有且只有一个就足够了。
还需要特别指出的是，大内核锁是历史遗留，内核中用的非常少，一般保持该锁的时间较长，因此不提倡使用它。从2.6.11内核起，大内核锁可以通过配置内核使其变得可抢占（自旋锁是不可抢占的），这时它实质上是一个互斥锁，使用信号量实现。

</rich_text><rich_text scale="h2">大内核锁的API包括：</rich_text><rich_text>

void lock_kernel(void);
该函数用于得到大内核锁。它可以递归调用而不会导致死锁。

void unlock_kernel(void);
该函数用于释放大内核锁。当然必须与lock_kernel配对使用，调用了多少次lock_kernel，就需要调用多少次unlock_kernel。
大内核锁的API使用非常简单，按照以下方式使用就可以了：

lock_kernel();
//对被保护的共享资源的访问
…
unlock_kernel()；

</rich_text><rich_text scale="h1">七、读写锁（rwlock）</rich_text><rich_text>
    读写锁实际是一种特殊的自旋锁，它把对共享资源的访问者划分成读者和写者，读者只对共享资源进行读访问，写者则需要对共享资源进行写操作。这种锁相 对于自旋锁而言，能提高并发性，因为在多处理器系统中，它允许同时有多个读者来访问共享资源，最大可能的读者数为实际的逻辑CPU数。写者是排他性的，一 个读写锁同时只能有一个写者或多个读者（与CPU数相关），但不能同时既有读者又有写者。
在读写锁保持期间也是抢占失效的。
    如果读写锁当前没有读者，也没有写者，那么写者可以立刻获得读写锁，否则它必须自旋在那里，直到没有任何写者或读者。如果读写锁没有写者，那么读者可以立即获得该读写锁，否则读者必须自旋在那里，直到写者释放该读写锁。
读写锁的API看上去与自旋锁很象，只是读者和写者需要不同的获得和释放锁的API。下面是读写锁API清单：

rwlock_init(x)
该宏用于动态初始化读写锁x。

DEFINE_RWLOCK(x)
该宏声明一个读写锁并对其进行初始化。它用于静态初始化。

RW_LOCK_UNLOCKED
它用于静态初始化一个读写锁。

DEFINE_RWLOCK(x)等同于rwlock_t x = RW_LOCK_UNLOCKED

read_trylock(lock)
读者用它来尽力获得读写锁lock，如果能够立即获得读写锁，它就获得锁并返回真，否则不能获得锁，返回假。无论是否能够获得锁，它都将立即返回，绝不自旋在那里。

write_trylock(lock)
写者用它来尽力获得读写锁lock，如果能够立即获得读写锁，它就获得锁并返回真，否则不能获得锁，返回假。无论是否能够获得锁，它都将立即返回，绝不自旋在那里。

read_lock(lock)
读者要访问被读写锁lock保护的共享资源，需要使用该宏来得到读写锁lock。如果能够立即获得，它将立即获得读写锁并返回，否则，将自旋在那里，直到获得该读写锁。

write_lock(lock)
写者要想访问被读写锁lock保护的共享资源，需要使用该宏来得到读写锁lock。如果能够立即获得，它将立即获得读写锁并返回，否则，将自旋在那里，直到获得该读写锁。

read_lock_irqsave(lock, flags)
读者也可以使用该宏来获得读写锁，与read_lock不同的是，该宏还同时把标志寄存器的值保存到了变量flags中，并失效了本地中断。

write_lock_irqsave(lock, flags)
写者可以用它来获得读写锁，与write_lock不同的是，该宏还同时把标志寄存器的值保存到了变量flags中，并失效了本地中断。

read_lock_irq(lock)
读者也可以用它来获得读写锁，与read_lock不同的是，该宏还同时失效了本地中断。该宏与read_lock_irqsave的不同之处是，它没有保存标志寄存器。

write_lock_irq(lock)
写者也可以用它来获得锁，与write_lock不同的是，该宏还同时失效了本地中断。该宏与write_lock_irqsave的不同之处是，它没有保存标志寄存器。

read_lock_bh(lock)
读者也可以用它来获得读写锁，与与read_lock不同的是，该宏还同时失效了本地的软中断。

write_lock_bh(lock)
写者也可以用它来获得读写锁，与write_lock不同的是，该宏还同时失效了本地的软中断。

read_unlock(lock)
读者使用该宏来释放读写锁lock。它必须与read_lock配对使用。

write_unlock(lock)
写者使用该宏来释放读写锁lock。它必须与write_lock配对使用。

read_unlock_irqrestore(lock, flags)
读者也可以使用该宏来释放读写锁，与read_unlock不同的是，该宏还同时把标志寄存器的值恢复为变量flags的值。它必须与read_lock_irqsave配对使用。

write_unlock_irqrestore(lock, flags)
写者也可以使用该宏来释放读写锁，与write_unlock不同的是，该宏还同时把标志寄存器的值恢复为变量flags的值，并使能本地中断。它必须与write_lock_irqsave配对使用。

read_unlock_irq(lock)
读者也可以使用该宏来释放读写锁，与read_unlock不同的是，该宏还同时使能本地中断。它必须与read_lock_irq配对使用。

write_unlock_irq(lock)
写者也可以使用该宏来释放读写锁，与write_unlock不同的是，该宏还同时使能本地中断。它必须与write_lock_irq配对使用。

read_unlock_bh(lock)
读者也可以使用该宏来释放读写锁，与read_unlock不同的是，该宏还同时使能本地软中断。它必须与read_lock_bh配对使用。

write_unlock_bh(lock)
写者也可以使用该宏来释放读写锁，与write_unlock不同的是，该宏还同时使能本地软中断。它必须与write_lock_bh配对使用。
    读写锁的获得和释放锁的方法也有许多版本，具体用哪个与自旋锁一样，因此参考自旋锁部分就可以了。只是需要区分读者与写者，读者要用读者版本，而写者必须用写者版本。
    
</rich_text><rich_text scale="h1">八、大读者锁（brlock-Big Reader Lock）</rich_text><rich_text>
    大读者锁是读写锁的高性能版，读者可以非常快地获得锁，但写者获得锁的开销比较大。大读者锁只存在于2.4内核中，在2.6中已经没有这种锁（提醒 读者特别注意）。它们的使用与读写锁的使用类似，只是所有的大读者锁都是事先已经定义好的。这种锁适合于读多写少的情况，它在这种情况下远好于读写锁。
大读者锁的实现机制是：每一个大读者锁在所有CPU上都有一个本地读者写者锁，一个读者仅需要获得本地CPU的读者锁，而写者必须获得所有CPU上的锁。
    大读者锁的API非常类似于读写锁，只是锁变量为预定义的锁ID。

void br_read_lock (enum brlock_indices idx);
读者使用该函数来获得大读者锁idx，在2.4内核中，预定义的idx允许的值有两个：BR_GLOBALIRQ_LOCK和BR_NETPROTO_LOCK，当然，用户可以添加自己定义的大读者锁ID 。

void br_read_unlock (enum brlock_indices idx);
读者使用该函数释放大读者锁idx。

void br_write_lock (enum brlock_indices idx);
写者使用它来获得大读者锁idx。

void br_write_unlock (enum brlock_indices idx);
写者使用它来释放大读者锁idx。

br_read_lock_irqsave(idx, flags)
读者也可以使用该宏来获得大读者锁idx，与br_read_lock不同的是，该宏还同时把寄存器的值保存到变量flags中，并且失效本地中断。

br_read_lock_irq(idx)
读者也可以使用该宏来获得大读者锁idx，与br_read_lock不同的是，该宏还同时失效本地中断。与br_read_lock_irqsave不同的是，该宏不保存标志寄存器。

br_read_lock_bh(idx)
读者也可以使用该宏来获得大读者锁idx，与br_read_lock不同的是，该宏还同时失效本地软中断。

br_write_lock_irqsave(idx, flags)
写者也可以使用该宏来获得大读者锁idx，与br_write_lock不同的是，该宏还同时把寄存器的值保存到变量flags中，并且失效本地中断。

br_write_lock_irq(idx)
写者也可以使用该宏来获得大读者锁idx，与br_write_lock不同的是，该宏还同时失效本地中断。与br_write_lock_irqsave不同的是，该宏不保存标志寄存器。

br_write_lock_bh(idx)
写者也可以使用该宏来获得大读者锁idx，与br_write_lock不同的是，该宏还同时失效本地软中断。

br_read_unlock_irqrestore(idx, flags)
读者也使用该宏来释放大读者锁idx，它与br_read_unlock不同之处是，该宏还同时把变量flags的值恢复到标志寄存器。

br_read_unlock_irq(idx)
读者也使用该宏来释放大读者锁idx，它与br_read_unlock不同之处是，该宏还同时使能本地中断。

br_read_unlock_bh(idx)
读者也使用该宏来释放大读者锁idx，它与br_read_unlock不同之处是，该宏还同时使能本地软中断。

br_write_unlock_irqrestore(idx, flags)
写者也使用该宏来释放大读者锁idx，它与br_write_unlock不同之处是，该宏还同时把变量flags的值恢复到标志寄存器。

br_write_unlock_irq(idx)
写者也使用该宏来释放大读者锁idx，它与br_write_unlock不同之处是，该宏还同时使能本地中断。

br_write_unlock_bh(idx)
写者也使用该宏来释放大读者锁idx，它与br_write_unlock不同之处是，该宏还同时使能本地软中断。
这些API的使用与读写锁完全一致。

</rich_text><rich_text scale="h1">九、RCU(Read-Copy Update)</rich_text><rich_text>
    RCU(Read-Copy  Update)，顾名思义就是读-拷贝修改，它是基于其原理命名的。对于被RCU保护的共享数据结构，读者不需要获得任何锁就可以访问它，但写者在访问它 时首先拷贝一个副本，然后对副本进行修改，最后使用一个回调（callback）机制在适当的时机把指向原来数据的指针重新指向新的被修改的数据。这个时 机就是所有引用该数据的CPU都退出对共享数据的操作。
RCU也是读写锁的高性能版本，但是它比大读者锁具有更好的扩展性和性能。 RCU既允许多个读者同时访问被保护的数据，又允许多个读者和多个写者同时访问被保护的数据（注意：是否可以有多个写者并行访问取决于写者之间使用的同步 机制），读者没有任何同步开销，而写者的同步开销则取决于使用的写者间同步机制。但RCU不能替代读写锁，因为如果写比较多时，对读者的性能提高不能弥补 写者导致的损失。

RCU的API如下；

rcu_read_lock()
读者在读取由RCU保护的共享数据时使用该函数标记它进入读端临界区。

rcu_read_unlock()
该函数与rcu_read_lock配对使用，用以标记读者退出读端临界区。

synchronize_rcu()
该函数由RCU写端调用，它将阻塞写者，直到经过grace period后，即所有的读者已经完成读端临界区，写者才可以继续下一步操作。如果有多个RCU写端调用该函数，他们将在一个grace period之后全部被唤醒。

synchronize_kernel()
其他非RCU的内核代码使用该函数来等待所有CPU处在可抢占状态，目前功能等同于synchronize_rcu，但现在已经不建议使用，而使用synchronize_sched。

synchronize_sched()
该函数用于等待所有CPU都处在可抢占状态，它能保证正在运行的中断处理函数处理完毕，但不能保证正在运行的softirq处理完毕。注意，synchronize_rcu只保证所有CPU都处理完正在运行的读端临界区。

void fastcall call_rcu(struct rcu_head *head,                                
        void (*func)(struct rcu_head *rcu))
    struct rcu_head {        
        struct rcu_head *next;        
        void (*func)(struct rcu_head *head);
    };
函数call_rcu也由RCU写端调用，它不会使写者阻塞，因而可以在中断上下文或softirq使用。该函数将把函数func挂接到RCU回调 函数链上，然后立即返回。一旦所有的CPU都已经完成端临界区操作，该函数将被调用来释放删除的将绝不在被应用的数据。参数head用于记录回调函数 func，一般该结构会作为被RCU保护的数据结构的一个字段，以便省去单独为该结构分配内存的操作。需要指出的是，函数synchronize_rcu 的实现实际上使用函数call_rcu。

void fastcall call_rcu_bh(struct rcu_head *head,                                
        void (*func)(struct rcu_head *rcu))
函数call_ruc_bh功能几乎与call_rcu完全相同，唯一差别就是它把softirq的完成也当作经历一个quiescent state，因此如果写端使用了该函数，在进程上下文的读端必须使用rcu_read_lock_bh。

#define rcu_dereference(p)     ({ \                                
    typeof(p) _________p1 = p; \                                
    smp_read_barrier_depends(); \                                
    (_________p1);
该宏用于在RCU读端临界区获得一个RCU保护的指针，该指针可以在以后安全地引用，内存栅只在alpha架构上才使用。
除了这些API，RCU还增加了链表操作的RCU版本，因为对于RCU，对共享数据的操作必须保证能够被没有使用同步机制的读者看到，所以内存栅是非常必要的。

static inline void list_add_rcu(struct list_head *new, struct list_head *head)
该函数把链表项new插入到RCU保护的链表head的开头。使用内存栅保证了在引用这个新插入的链表项之前，新链表项的链接指针的修改对所有读者是可见的。

static inline void list_add_tail_rcu(struct list_head *new,                                        
        struct list_head *head)
该函数类似于list_add_rcu，它将把新的链表项new添加到被RCU保护的链表的末尾。

static inline void list_del_rcu(struct list_head *entry)
该函数从RCU保护的链表中移走指定的链表项entry，并且把entry的prev指针设置为LIST_POISON2，但是并没有把entry的next指针设置为LIST_POISON1，因为该指针可能仍然在被读者用于便利该链表。

static inline void list_replace_rcu(struct list_head *old, struct list_head *new)
该函数是RCU新添加的函数，并不存在非RCU版本。它使用新的链表项new取代旧的链表项old，内存栅保证在引用新的链表项之前，它的链接指针的修正对所有读者可见。

list_for_each_rcu(pos, head)
该宏用于遍历由RCU保护的链表head，只要在读端临界区使用该函数，它就可以安全地和其它_rcu链表操作函数（如list_add_rcu）并发运行。

list_for_each_safe_rcu(pos, n, head)
该宏类似于list_for_each_rcu，但不同之处在于它允许安全地删除当前链表项pos。

list_for_each_entry_rcu(pos, head, member)
该宏类似于list_for_each_rcu，不同之处在于它用于遍历指定类型的数据结构链表，当前链表项pos为一包含struct list_head结构的特定的数据结构。

list_for_each_continue_rcu(pos, head)
该宏用于在退出点之后继续遍历由RCU保护的链表head。

static inline void hlist_del_rcu(struct hlist_node *n)
它从由RCU保护的哈希链表中移走链表项n，并设置n的ppre指针为LIST_POISON2，但并没有设置next为LIST_POISON1,因为该指针可能被读者使用用于遍利链表。

static inline void hlist_add_head_rcu(struct hlist_node *n,                                        
        struct hlist_head *h)
该函数用于把链表项n插入到被RCU保护的哈希链表的开头，但同时允许读者对该哈希链表的遍历。内存栅确保在引用新链表项之前，它的指针修正对所有读者可见。

hlist_for_each_rcu(pos, head)
该宏用于遍历由RCU保护的哈希链表head，只要在读端临界区使用该函数，它就可以安全地和其它_rcu哈希链表操作函数（如hlist_add_rcu）并发运行。

hlist_for_each_entry_rcu(tpos, pos, head, member)
类似于hlist_for_each_rcu，不同之处在于它用于遍历指定类型的数据结构哈希链表，当前链表项pos为一包含struct list_head结构的特定的数据结构。
    对于RCU更详细的原理、实现机制以及应用请参看作者专门针对RCU发表的一篇文章,&quot;Linux 2.6内核中新的锁机制--RCU(Read-Copy Update)&quot;。

</rich_text><rich_text scale="h1">十、顺序锁（seqlock）</rich_text><rich_text>
    顺序锁也是对读写锁的一种优化，对于顺序锁，读者绝不会被写者阻塞，也就说，读者可以在写者对被顺序锁保护的共享资源进行写操作时仍然可以继续读， 而不必等待写者完成写操作，写者也不需要等待所有读者完成读操作才去进行写操作。但是，写者与写者之间仍然是互斥的，即如果有写者在进行写操作，其他写者 必须自旋在那里，直到写者释放了顺序锁。
    这种锁有一个限制，它必须要求被保护的共享资源不含有指针，因为写者可能使得指针失效，但读者如果正要访问该指针，将导致OOPs。
如果读者在读操作期间，写者已经发生了写操作，那么，读者必须重新读取数据，以便确保得到的数据是完整的。
这种锁对于读写同时进行的概率比较小的情况，性能是非常好的，而且它允许读写同时进行，因而更大地提高了并发性。
顺序锁的API如下：

void write_seqlock(seqlock_t *sl);
写者在访问被顺序锁s1保护的共享资源前需要调用该函数来获得顺序锁s1。它实际功能上等同于spin_lock，只是增加了一个对顺序锁顺序号的加1操作，以便读者能够检查出是否在读期间有写者访问过。

void write_sequnlock(seqlock_t *sl);
写者在访问完被顺序锁s1保护的共享资源后需要调用该函数来释放顺序锁s1。它实际功能上等同于spin_unlock，只是增加了一个对顺序锁顺序号的加1操作，以便读者能够检查出是否在读期间有写者访问过。
写者使用顺序锁的模式如下：

write_seqlock(&amp;seqlock_a);
//写操作代码块
…
write_sequnlock(&amp;seqlock_a);

因此，对写者而言，它的使用与spinlock相同。

int write_tryseqlock(seqlock_t *sl);
写者在访问被顺序锁s1保护的共享资源前也可以调用该函数来获得顺序锁s1。它实际功能上等同于spin_trylock，只是如果成功获得锁后，该函数增加了一个对顺序锁顺序号的加1操作，以便读者能够检查出是否在读期间有写者访问过。

unsigned read_seqbegin(const seqlock_t *sl);
读者在对被顺序锁s1保护的共享资源进行访问前需要调用该函数。读者实际没有任何得到锁和释放锁的开销，该函数只是返回顺序锁s1的当前顺序号。

int read_seqretry(const seqlock_t *sl, unsigned iv);
读者在访问完被顺序锁s1保护的共享资源后需要调用该函数来检查，在读访问期间是否有写者访问了该共享资源，如果是，读者就需要重新进行读操作，否则，读者成功完成了读操作。
因此，读者使用顺序锁的模式如下：

do {   
    seqnum = read_seqbegin(&amp;seqlock_a);
    //读操作代码块
    ...
} while (read_seqretry(&amp;seqlock_a, seqnum));

write_seqlock_irqsave(lock, flags)
写者也可以用该宏来获得顺序锁lock，与write_seqlock不同的是，该宏同时还把标志寄存器的值保存到变量flags中，并且失效了本地中断。

write_seqlock_irq(lock)
写者也可以用该宏来获得顺序锁lock，与write_seqlock不同的是，该宏同时还失效了本地中断。与write_seqlock_irqsave不同的是，该宏不保存标志寄存器。

write_seqlock_bh(lock)
写者也可以用该宏来获得顺序锁lock，与write_seqlock不同的是，该宏同时还失效了本地软中断。

write_sequnlock_irqrestore(lock, flags)
写者也可以用该宏来释放顺序锁lock，与write_sequnlock不同的是，该宏同时还把标志寄存器的值恢复为变量flags的值。它必须与write_seqlock_irqsave配对使用。

write_sequnlock_irq(lock)
写者也可以用该宏来释放顺序锁lock，与write_sequnlock不同的是，该宏同时还使能本地中断。它必须与write_seqlock_irq配对使用。

write_sequnlock_bh(lock)
写者也可以用该宏来释放顺序锁lock，与write_sequnlock不同的是，该宏同时还使能本地软中断。它必须与write_seqlock_bh配对使用。

read_seqbegin_irqsave(lock, flags)
读者在对被顺序锁lock保护的共享资源进行访问前也可以使用该宏来获得顺序锁lock的当前顺序号，与read_seqbegin不同的是，它同 时还把标志寄存器的值保存到变量flags中，并且失效了本地中断。注意，它必须与read_seqretry_irqrestore配对使用。

read_seqretry_irqrestore(lock, iv, flags)
读者在访问完被顺序锁lock保护的共享资源进行访问后也可以使用该宏来检查，在读访问期间是否有写者访问了该共享资源，如果是，读者就需要重新进 行读操作，否则，读者成功完成了读操作。它与read_seqretry不同的是，该宏同时还把标志寄存器的值恢复为变量flags的值。注意，它必须与 read_seqbegin_irqsave配对使用。
因此，读者使用顺序锁的模式也可以为：

do {   
    seqnum = read_seqbegin_irqsave(&amp;seqlock_a, flags);
    //读操作代码块
    ...
} while (read_seqretry_irqrestore(&amp;seqlock_a, seqnum, flags));

读者和写者所使用的API的几个版本应该如何使用与自旋锁的类似。
如果写者在操作被顺序锁保护的共享资源时已经保持了互斥锁保护对共享数据的写操作，即写者与写者之间已经是互斥的，但读者仍然可以与写者同时访问，那么这种情况仅需要使用顺序计数（seqcount），而不必要spinlock。
顺序计数的API如下：

unsigned read_seqcount_begin(const seqcount_t *s);
读者在对被顺序计数保护的共享资源进行读访问前需要使用该函数来获得当前的顺序号。

int read_seqcount_retry(const seqcount_t *s, unsigned iv);
读者在访问完被顺序计数s保护的共享资源后需要调用该函数来检查，在读访问期间是否有写者访问了该共享资源，如果是，读者就需要重新进行读操作，否则，读者成功完成了读操作。
因此，读者使用顺序计数的模式如下：

do {   
seqnum = read_seqbegin_count(&amp;seqcount_a);
//读操作代码块
...
} while (read_seqretry(&amp;seqcount_a, seqnum));

void write_seqcount_begin(seqcount_t *s);
写者在访问被顺序计数保护的共享资源前需要调用该函数来对顺序计数的顺序号加1，以便读者能够检查出是否在读期间有写者访问过。

void write_seqcount_end(seqcount_t *s);
写者在访问完被顺序计数保护的共享资源后需要调用该函数来对顺序计数的顺序号加1，以便读者能够检查出是否在读期间有写者访问过。
写者使用顺序计数的模式为：

write_seqcount_begin(&amp;seqcount_a);
//写操作代码块
…
write_seqcount_end(&amp;seqcount_a);

需要特别提醒，顺序计数的使用必须非常谨慎，只有确定在访问共享数据时已经保持了互斥锁才可以使用。

</rich_text><rich_text scale="h1">小结</rich_text><rich_text>
自linux 2.4以来，内核对SMP的支持越来越好，很大程度上，对SMP的支持，这些锁机制是非常必要和重要的。基本上，内核开发者在开发中都会需要使用一些同步机制，本文通过详细地讲解内核中所有的同步机制，使得读者能够对内核锁机制有全面的了解和把握。
</rich_text><rich_text scale="h1">
参考资料 </rich_text><rich_text>
    1. Kernel Locking Techniques,</rich_text><rich_text link="webs http://www.linuxjournal.com/article/5833">http://www.linuxjournal.com/article/5833</rich_text><rich_text>    
    2. Redhat 9.0 kernel source tree
    3. kernel.org 2.6.12 source tree
    4. Linux 2.6内核中新的锁机制--RCU(Read-Copy Update), </rich_text><rich_text link="webs http://www.ibm.com/developerworks/cn/linux/l-rcu/">http://www.ibm.com/developerworks/cn/linux/l-rcu/</rich_text><rich_text>    
    5. Unreliable Guide To Locking.
    
</rich_text><rich_text scale="h1">关于作者</rich_text><rich_text>
 杨燚，计算机科学硕士，毕业于中科院计算技术研究所，有4年的Linux内核编程经验，目前从事嵌入式实时Linux的开发与性能测试。您可以通过</rich_text><rich_text link="webs http://mailto:yang.yi@bmrtech.com?cc=">yang.yi@bmrtech.com</rich_text><rich_text>或</rich_text><rich_text link="webs http://mailto:yyang@ch.mvista.com?cc=">yyang@ch.mvista.com</rich_text><rich_text>与作者联系。
</rich_text></node></node><node name="rfkill" prog_lang="custom-colors" readonly="False" tags="" unique_id="79"><rich_text scale="h3" weight="heavy">1、介绍</rich_text><rich_text>
    rfkill子系统在系统对于禁止无线设备工作提供了一个通用的接口，当无线设备被阻止工作时，它就不会在消耗功率。这个子系统在用户开关按钮上提供了一 个方法去阻止某种无线设备的工作。这是用于某些环境下(比如飞机)  ，无线设备就必须被关闭。子系统有硬件和软件模块的概念。在概念上这些意义很小，关于在于它能否被改变。

</rich_text><rich_text scale="h3" weight="heavy">2、实现细节</rich_text><rich_text>
    rfkill核心为内核驱动提供了API，这是为了在内核中注册这些无线设备。这种方法的打开或者关闭  是为了让系统知道硬件设备的工作状态。当设备是硬件模块（可以被rfkill_set_hw_state() 或者from  query_hw_block调用），set_block()可以被其他的软件模块调用，驱动程序忽视这个方法的调用，他们可以用 rfkill_set_hw_state()的返回值去同步软件的状态而不是一直在调用set_block()，实际上，驱动程序应该用 rfkill_set_hw_state()的返回值，除非硬件实际上一直保持软件和硬件的独立。
 
</rich_text><rich_text scale="h3" weight="heavy">3、内核API</rich_text><rich_text>
    无线设备的驱动基本上实现了rfkill的驱动。如果rfkill开关只是一个按钮，平台驱动可能实现输入设备驱动。这个开关影响硬件的工作，所以你需要 实现rfkill的驱动。平台需要提供一个方法去开（关）设备的方法。当一个状态改变的时候，除非他们分配了poll_hw_block()回 调，rfkill_set_hw_state()就会被调用。

</rich_text><rich_text scale="h3" weight="heavy">4、userspace 支持</rich_text><rich_text>
    被推荐使用的用户接口是/dev/rfkill,这是一个混合的字符设备，他允许用户空间使用和设置rfkill设备的状态。这也通知用户空间关于设备的 增加和移除。在linux/rfkill.h中的API也就是一般简单的读/写API，对于打开或者关闭的过渡时期，ioctl需要传入关闭的状态。
    除了ioctl，和内核通信通过read()和write(),而不是struct  rfkill_event。在这个结构体中，软件和硬件模块被分开。用户空间在系统中能得到rfkill驱动的状态。当然rfkill驱动的状态同事也得 更新默认热插设备的状态。当一个应用打开/dev/rfkill,他可以读取到当前所有设备的状态。通过查询设备变化的消息和监听rfkill  core发出的uevent，设备状态的变化可以被获得。另外，每个 rfkill的设备在sysfs和 emits uevents 中被注册。
 
Linux 中的 rfkill 是用来管理无线模块的命令， 参考
</rich_text><rich_text link="webs http://blog.free-abc.com.cn/?tag=rfkill">http://blog.free-abc.com.cn/?tag=rfkill</rich_text><rich_text>
查看无线设备情况
    rfkill list
 
启用无线网卡命令为
    rfkill unblock 0

其中0为设备对应的id，可以是1、2……
echo 0 &gt; /dev/bt_rfkill       echo 1 &gt; /dev/bt_rfkill
static int bt_rfkill_set_block(void *data, bool blocked)
{
    unsigned int ret = 0;
    ret = bluetooth_set_power(data, blocked ?RFKILL_USER_STATE_SOFT_BLOCKED :RFKILL_USER_STATE_UNBLOCKED);
    return ret;
}
</rich_text></node><node name="bluetooth" prog_lang="custom-colors" readonly="False" tags="" unique_id="80"><rich_text>
</rich_text><node name="蓝牙底层HCI驱动的实现 " prog_lang="custom-colors" readonly="False" tags="" unique_id="82"><rich_text>
</rich_text><rich_text scale="h2" weight="heavy">Overview</rich_text><rich_text>
蓝牙协议栈与蓝牙底层设备一般是通过串口连接，两者之间通过HCI协议通讯。这就要求实现一个串口tty驱动。而对于Bluez协议栈来说，它是通过建立蓝牙的socket来发送、接收数据。因此，在蓝牙通信中，对上层应用是socket通信，对底层则一般是通过一个tty驱动实现。本文以 HCIUART_LL为例，讨论了蓝牙底层的tty驱动部分，代码在drivers\bluetooth\hci_ll.c和hci_ldis.c。
Hci_ldis.c实现一个蓝牙专用的线路规程，disc id为N_HCI，结构体如下：
static struct tty_ldisc_ops hci_uart_ldisc;
      memset(&amp;hci_uart_ldisc, 0, sizeof (hci_uart_ldisc));
      hci_uart_ldisc.magic       = TTY_LDISC_MAGIC;
      hci_uart_ldisc.name        = &quot;n_hci&quot;;
      hci_uart_ldisc.open        = hci_uart_tty_open;
      hci_uart_ldisc.close        = hci_uart_tty_close;
      hci_uart_ldisc.read         = hci_uart_tty_read;
      hci_uart_ldisc.write         = hci_uart_tty_write;
      hci_uart_ldisc.ioctl          = hci_uart_tty_ioctl;
      hci_uart_ldisc.poll          = hci_uart_tty_poll;
      hci_uart_ldisc.receive_buf     = hci_uart_tty_receive;
      hci_uart_ldisc.write_wakeup  = hci_uart_tty_wakeup;
      hci_uart_ldisc.owner       = THIS_MODULE;
在这个结构中，hci_uart_tty_read与hci_uart_tty_write这两个函数为空函数。由此可见，一旦对tty串口设置了 N_HCI线路规程，那么上层就不能再通过读写tty设备的方式发送、接收HCI数据。取而代之的，N_HCI中实现了对上层的socket接口，即与 /net/bluetooth/目录下的代码交互数据的接口。

</rich_text><rich_text scale="h2" weight="heavy">初始化</rich_text><rich_text>
初始化由hci_uart_init函数完成，里面注册了N_HCI，另外调用了ll_init函数。
static int __init hci_uart_init(void)
      static struct tty_ldisc_ops hci_uart_ldisc;
      memset(&amp;hci_uart_ldisc, 0, sizeof (hci_uart_ldisc));
      hci_uart_ldisc.magic       = TTY_LDISC_MAGIC;
      hci_uart_ldisc.name        = &quot;n_hci&quot;;
      hci_uart_ldisc.open        = hci_uart_tty_open;
      hci_uart_ldisc.close        = hci_uart_tty_close;
      hci_uart_ldisc.read         = hci_uart_tty_read;
      hci_uart_ldisc.write         = hci_uart_tty_write;
      hci_uart_ldisc.ioctl          = hci_uart_tty_ioctl;
      hci_uart_ldisc.poll          = hci_uart_tty_poll;
      hci_uart_ldisc.receive_buf     = hci_uart_tty_receive;
      hci_uart_ldisc.write_wakeup  = hci_uart_tty_wakeup;
      hci_uart_ldisc.owner       = THIS_MODULE;
      tty_register_ldisc(N_HCI, &amp;hci_uart_ldisc)；
      。。。
      ll_init();
ll_init函数很简单，仅仅是调用了hci_uart_register_proto(&amp;llp)。其中llp是一个hci_uart_proto结构。
static struct hci_uart_proto llp = {
      .id        = HCI_UART_LL,
      .open         = ll_open,
      .close         = ll_close,
      .recv          = ll_recv,
      .enqueue     = ll_enqueue,
      .dequeue     = ll_dequeue,
      .flush          = ll_flush,
};
hci_uart_register_proto函数将会把llp注册到全局数组hup[HCI_UART_LL]中。

</rich_text><rich_text scale="h2" weight="heavy">初始配置</rich_text><rich_text>
一般来说，应用程序初始化并使用蓝牙设备的配置步骤如下：
1.    应用程序打开一个tty设备，该tty物理上与蓝牙芯片连接，两者之间使用HCI通信。
2.    调用该tty的ioctl，设置线路规程为N_HCI。此时会调用到hci_uart_tty_open函数。
3.    调用IOCTL HCIUARTSETPROTO，设置proto，此ioctl最终会调用到N_HCI线路规程中的hci_uart_tty_ioctl函数。下文将详细讨论。
4.    应用程序打开蓝牙socket，发送、接收数据。这些数据在内核中最终会转到N_HCI线路规程，并最终通过tty串口驱动与蓝牙芯片交互。
hci_uart_tty_open函数的代码如下：
static int hci_uart_tty_open(struct tty_struct *tty)
      struct hci_uart *hu；
      hu = kzalloc(sizeof(struct hci_uart), GFP_KERNEL)；
      tty-&gt;disc_data = hu;
      hu-&gt;tty = tty;
      tty-&gt;receive_room = 65536;
      。。。
应用程序调用ioctl HCIUARTSETPROTO之后，内核最终会转到hci_uart_tty_ioctl函数处理：
static int hci_uart_tty_ioctl(struct tty_struct *tty, struct file * file,
                            unsigned int cmd, unsigned long arg)
      struct hci_uart *hu = (void *)tty-&gt;disc_data;
      。。。
      Case HCIUARTSETPROTO:
           hci_uart_set_proto(hu, arg); // arg为proto id
      。。。
static int hci_uart_set_proto(struct hci_uart *hu, int id)
      // 得到hci_uart_proto。本文中id值是HCI_UART_LL，即p指向前面提到的llp
struct hci_uart_proto *p = hup[id];
      // 在本文讨论的HCI_UART_LL中，p-&gt;open会调用到ll_open函数
p-&gt;open(hu);      
      hu-&gt;proto = p;
      // 注册一个抽象的蓝牙串口设备
      err = hci_uart_register_dev(hu);
 ll_open函数的代码如下：
static int ll_open(struct hci_uart *hu)
      struct ll_struct *ll;
      ll = kzalloc(sizeof(*ll), GFP_ATOMIC);
      skb_queue_head_init(&amp;ll-&gt;txq);
      skb_queue_head_init(&amp;ll-&gt;tx_wait_q);
ll-&gt;hcill_state = HCILL_AWAKE;
hu-&gt;priv = ll;
hci_uart_register_dev函数用于注册一个抽象的蓝牙设备到蓝牙socket层：
static int hci_uart_register_dev(struct hci_uart *hu)
      struct hci_dev *hdev = hci_alloc_dev();
      hu-&gt;hdev = hdev;
      hdev-&gt;bus = HCI_UART;
      hdev-&gt;driver_data = hu;
      hdev-&gt;open  = hci_uart_open;
      hdev-&gt;close = hci_uart_close;
      hdev-&gt;flush = hci_uart_flush;
      hdev-&gt;send  = hci_uart_send_frame;
      hdev-&gt;destruct = hci_uart_destruct;
 
      // 这里调用到了蓝牙socket层的函数，本文暂不讨论
      hci_register_dev(hdev);

</rich_text><rich_text scale="h2" weight="heavy">数据的接收</rich_text><rich_text>
当tty驱动接收到数据后，会调用到线路规程的receive函数。对于蓝牙，就是N_HCI线路规程中的hci_uart_tty_receive函数。
static void hci_uart_tty_receive(struct tty_struct *tty, const u8 *data, char *flags, int count)
      struct hci_uart *hu = (void *)tty-&gt;disc_data;
      hu-&gt;proto-&gt;recv(hu, (void *) data, count);
      hu-&gt;hdev-&gt;stat.byte_rx += count;
      // 通知tty驱动清空接收缓冲区
      tty_unthrottle(tty);
如果是HCI_UART_LL，上面recv函数会指向ll_recv函数。ll_recv的逻辑比较复杂，但大意就是从数据流中提取出hci帧， 然后调用hci_recv_frame发送给蓝牙socket层。此外，HCI_UART_LL还实现了一些特殊操作，比如蓝牙芯片的休眠、唤醒等，具体 可查看代码。

</rich_text><rich_text scale="h2" weight="heavy">数据的发送</rich_text><rich_text>
当有数据需要发送时，网络层会调用到hdev-&gt;send函数指针。在这里，此指针指向的是hci_uart_send_frame 函数。
static int hci_uart_send_frame(struct sk_buff *skb)
struct hci_dev* hdev = (struct hci_dev *) skb-&gt;dev;
      struct hci_uart *hu = (struct hci_uart *) hdev-&gt;driver_data;
      hu-&gt;proto-&gt;enqueue(hu, skb);
      hci_uart_tx_wakeup(hu);
enqueue指针指向ll_enqueue，作用是将数据挂到一个发送队列中。然后，hci_uart_tx_wakeup函数会执行真正的发送 操作。发送操作使用的是tty-&gt;ops-&gt;write(tty, skb-&gt;data,  skb-&gt;len)，即tty底层驱动的write函数。
</rich_text></node><node name="linux HID驱动分析 " prog_lang="custom-colors" readonly="False" tags="" unique_id="83"><rich_text>最近研究蓝牙的键盘鼠标，所以粗略看了一下Linux的HID框架。

</rich_text><rich_text scale="h2" weight="heavy">HID 总线</rich_text><rich_text>
HID的总线在hid-core.c的hid-init中初始化：
bus_register(&amp;hid_bus_type);
hid_bus_type的定义：
static struct bus_type hid_bus_type = {
       .name            = &quot;hid&quot;,
       .match           = hid_bus_match,
       .probe           = hid_device_probe,
       .remove  = hid_device_remove,
       .uevent          = hid_uevent,
};
一般来说，HID驱动很少定义自己的probe函数，所以HID设备的匹配基本都是由总线probe和match函数完成。

</rich_text><rich_text scale="h2" weight="heavy">HID的匹配</rich_text><rich_text>
hid_bus_match用于检查设备和驱动的VID、PID是否匹配，代码如下：
static int hid_bus_match(struct device *dev, struct device_driver *drv)
       struct hid_driver *hdrv = container_of(drv, struct hid_driver, driver);
       struct hid_device *hdev = container_of(dev, struct hid_device, dev);
       // 匹配hdev和hdrv的vendorID和productID
if (!hid_match_device(hdev, hdrv))
              return 0;
       // 如果是generic-开头的驱动，那么只要不在黑名单中即可匹配
       if (!strncmp(hdrv-&gt;name, &quot;generic-&quot;, 8))
              return !hid_match_id(hdev, hid_blacklist);
       return 1;
匹配了PID、VID之后，就进入到hid_device_probe函数：
static int hid_device_probe(struct device *dev)
       struct hid_driver *hdrv = container_of(dev-&gt;driver, struct hid_driver, driver);
       struct hid_device *hdev = container_of(dev, struct hid_device, dev);
       const struct hid_device_id *id;
       int ret = 0;
       if (!hdev-&gt;driver) {
              // 再匹配一次，这里似乎与前面的hid_bus_match有些重复
id = hid_match_device(hdev, hdrv);
              if (id == NULL)
                     return -ENODEV;
              hdev-&gt;driver = hdrv;
              if (hdrv-&gt;probe) { // 若驱动定义了自己的probe函数则调用该probe，但一般HID驱动不会定义
                     ret = hdrv-&gt;probe(hdev, id);
              } else { // 默认的probe过程
                     ret = hid_parse(hdev);
                     if (!ret)
                            ret = hid_hw_start(hdev, HID_CONNECT_DEFAULT);
              }
              if (ret)
                     hdev-&gt;driver = NULL;
       }
       return ret;
hid_parse函数的作用是解析HID描述符，具体实现由hid_device-&gt;ll_driver-&gt;parse函数完成。关于HID描述符的文档可在</rich_text><rich_text link="webs http://www.usb.org/">www.usb.org</rich_text><rich_text>下载。
static inline int __must_check hid_parse(struct hid_device *hdev)
       ret = hdev-&gt;ll_driver-&gt;parse(hdev);
由于HID描述符的解析是通用操作，所以HID框架中实现了一个解析函数hid_parse_report。一般来说，hdev-&gt;ll_driver-&gt;parse函数中只要调用hid_parse_report即可。
hid_parse_report比较复杂，其功能是解析HID描述符，然后把解析出的结果放在 hid_device-&gt;report_enum[type]-&gt;  report_list中。每个解析出的HID结构由一个hid_report描述。report_enum中的type可以是 HID_INPUT_REPORT、HID_OUTPUT_REPORT或者HID_FEATURE_REPORT。
parse之后，probe函数又会调用hid_hw_start启动HID设备：
       hid_hw_start(hdev, HID_CONNECT_DEFAULT);
注意这里的HID_CONNECT_DEFAULT被定义为：
#define HID_CONNECT_DEFAULT       (HID_CONNECT_HIDINPUT|HID_CONNECT_HIDRAW| \
              HID_CONNECT_HIDDEV|HID_CONNECT_FF)
在hid_hw_start中，首先会调用hdev-&gt;ll_driver-&gt;start启动设备，然后是hid_connect将设备与HID框架关联起来。
hdev-&gt;ll_driver-&gt;start函数由hid的具体设备提供，由该设备所属的总线提供，用于底层的初始化，这里暂不讨论。
hid_connect会将hid_dev与具体驱动关联起来。
int hid_connect(struct hid_device *hdev, unsigned int connect_mask)
       if (hdev-&gt;quirks &amp; HID_QUIRK_HIDDEV_FORCE)  // 一般不会到这里
              connect_mask |= (HID_CONNECT_HIDDEV_FORCE | HID_CONNECT_HIDDEV);
       if (hdev-&gt;bus != BUS_USB) // 如果不是USB总线，那么去掉HID_CONNECT_HIDDEV标记
              connect_mask &amp;= ~HID_CONNECT_HIDDEV;
       if (hid_hiddev(hdev))  // 匹配某些特定vendorID和productID
              connect_mask |= HID_CONNECT_HIDDEV_FORCE;
 
       if ((connect_mask &amp; HID_CONNECT_HIDINPUT) &amp;&amp; !hidinput_connect(hdev,
                            connect_mask &amp; HID_CONNECT_HIDINPUT_FORCE))
              hdev-&gt;claimed |= HID_CLAIMED_INPUT;
       if ((connect_mask &amp; HID_CONNECT_HIDDEV) &amp;&amp; hdev-&gt;hiddev_connect &amp;&amp;
                     !hdev-&gt;hiddev_connect(hdev,
                            connect_mask &amp; HID_CONNECT_HIDDEV_FORCE))
              hdev-&gt;claimed |= HID_CLAIMED_HIDDEV;
       if ((connect_mask &amp; HID_CONNECT_HIDRAW) &amp;&amp; !hidraw_connect(hdev))
              hdev-&gt;claimed |= HID_CLAIMED_HIDRAW;
 
由此可见，hid_connect共支持3种设备，首先是input设备，调用hidinput_connect登记；其次是hid_dev设备，调用hdev-&gt;hiddev_connect登记；最后是raw设备，调用hidraw_connect登记。

</rich_text><rich_text scale="h3" weight="heavy">HID input</rich_text><rich_text>
HID中最常用的是input设备，使用hidinput_connect登记到系统。hidinput_connect的主要作用是对hiddev中的每一个report，都建立一个input_dev设备，并登记到input框架中。
int hidinput_connect(struct hid_device *hid, unsigned int force)
       // 对每一个report，建立一个input设备
for (k = HID_INPUT_REPORT; k &lt;= max_report_type; k++)
              list_for_each_entry(report, &amp;hid-&gt;report_enum[k].report_list, list) {
                     if (!hidinput) {
                            hidinput = kzalloc(sizeof(*hidinput), GFP_KERNEL);
                            input_dev = input_allocate_device();
                            。。。
                            input_set_drvdata(input_dev, hid);
                            input_dev-&gt;event = hid-&gt;ll_driver-&gt;hidinput_input_event;
                            input_dev-&gt;open = hidinput_open;
                            input_dev-&gt;close = hidinput_close;
                            input_dev-&gt;setkeycode = hidinput_setkeycode;
                            input_dev-&gt;getkeycode = hidinput_getkeycode;
                            input_dev-&gt;name = hid-&gt;name;
                            input_dev-&gt;phys = hid-&gt;phys;
                            input_dev-&gt;uniq = hid-&gt;uniq;
                            input_dev-&gt;id.bustype = hid-&gt;bus;
                            input_dev-&gt;id.vendor  = hid-&gt;vendor;
                            input_dev-&gt;id.product = hid-&gt;product;
                            input_dev-&gt;id.version = hid-&gt;version;
                            input_dev-&gt;dev.parent = hid-&gt;dev.parent;
                            hidinput-&gt;input = input_dev;
                            list_add_tail(&amp;hidinput-&gt;list, &amp;hid-&gt;inputs);
                     }
                     for (i = 0; i &lt; report-&gt;maxfield; i++)
                            for (j = 0; j &lt; report-&gt;field[i]-&gt;maxusage; j++)
                                   hidinput_configure_usage(hidinput, report-&gt;field[i],
                                                         report-&gt;field[i]-&gt;usage + j);
              }

</rich_text><rich_text scale="h3" weight="heavy">HID dev</rich_text><rich_text>
HID dev设备目前仅在USB总线中用到，其用于登记的hiddev_connect函数指针目前仅有一个实例hiddev_connect，在usbhid_probe函数中被赋值。
hid-&gt;hiddev_connect = hiddev_connect;

</rich_text><rich_text scale="h3" weight="heavy">HID raw dev</rich_text><rich_text>
hidraw.c中定义了一个class hidraw，并创建设备设备驱动
alloc_chrdev_region(&amp;dev_id, HIDRAW_FIRST_MINOR, HIDRAW_MAX_DEVICES, &quot;hidraw&quot;);
cdev_init(&amp;hidraw_cdev, &amp;hidraw_ops);
hidraw_ops中定义了一个基本的字符设备驱动
static const struct file_operations hidraw_ops = {
       .owner =        THIS_MODULE,
       .read =         hidraw_read,
       .write =        hidraw_write,
       .poll =         hidraw_poll,
       .open =         hidraw_open,
       .release =      hidraw_release,
       .unlocked_ioctl = hidraw_ioctl,
};
由于是raw设备，所以这个驱动中不会解析任何数据，只是简单的将应用层数据传给下层设备，以及将设备产生的数据传给应用层。具体实现可查看代码。

</rich_text><rich_text scale="h2" weight="heavy">数据的传输</rich_text><rich_text>
HID中数据的传输有两部分，一部分是从应用层到设备，另一部分是从设备到应用层。
对于HID input设备，从设备到应用层走的是标准的input框架，底层设备通过hid_input_report函数将收到的数据送入HID框架，由HID框架解析并最终调用input_report_key之类的函数将数据上传。
从应用层到设备也由input框架完成：
hidinput_connect
input_dev-&gt;event = hid-&gt;ll_driver-&gt;hidinput_input_event;
</rich_text></node><node name="bluez HID" prog_lang="custom-colors" readonly="False" tags="" unique_id="81"><rich_text weight="heavy">
</rich_text><rich_text scale="h1" weight="heavy">Bluez HID分析（一）         </rich_text><rich_text>

本文介绍蓝牙协议栈Bluez在linux中实现HID功能的kernel部分。
在linux  kernel中，Bluez对HID的实现代码在/net/bluetooth/hidp文件夹中，主要包括sock.c，core.c和hidp.h三 个文件。Bluez提供了一个socket接口，用户空间程序通过使用该socket控制HID。该socket使用的协议编号为 BTPROTO_HIDP。

</rich_text><rich_text scale="h2" weight="heavy">1.  初始化</rich_text><rich_text>
HIDP的初始化在sock.c的hidp_init_sockets函数。
int __init hidp_init_sockets(void)
err = proto_register(&amp;hidp_proto, 0); // 注册proto，可忽略
// 注册一个BTPROTO_HIDP协议号
err = bt_sock_register(BTPROTO_HIDP, &amp;hidp_sock_family_ops);
bt_sock_register是bluez内部的函数，其作用是将传入到net_proto_family结构体登记到全局数组bt_proto中。
int bt_sock_register(int proto, const struct net_proto_family *ops)
      。。。
      bt_proto[proto] = ops;
      。。。
这里用到的思想与字符设备驱动中的misc驱动类似，不再赘述。注册完成之后，用户空间就能够通过标准socket操作得到HIDP的socket：
Int sk = socket(AF_BLUETOOTH, SOCK_RAW, BTPROTO_HIDP);
下面再看一下结构体hidp_sock_family_ops的内容：
static const struct net_proto_family hidp_sock_family_ops = {
            .family  = PF_BLUETOOTH,
            .owner  = THIS_MODULE,
            .create  = hidp_sock_create
};
这里最重要的是hidp_socke_create函数，该函数中会指定socket的proto_ops。
static int hidp_sock_create(struct net *net, struct socket *sock, int protocol,
                     int kern)
      struct sock *sk;
      if (sock-&gt;type != SOCK_RAW)
           return -ESOCKTNOSUPPORT;
      sk = sk_alloc(net, PF_BLUETOOTH, GFP_ATOMIC, &amp;hidp_proto);
      sock_init_data(sock, sk);
      sock-&gt;ops = &amp;hidp_sock_ops;
      sock-&gt;state = SS_UNCONNECTED;
      sock_reset_flag(sk, SOCK_ZAPPED);
      sk-&gt;sk_protocol = protocol;
      sk-&gt;sk_state     = BT_OPEN;
      。。。
hidp_sock_ops的定义：
static const struct proto_ops hidp_sock_ops = {
      .family        = PF_BLUETOOTH,
      .owner        = THIS_MODULE,
      .release = hidp_sock_release,
      .ioctl          = hidp_sock_ioctl,
      .bind          = sock_no_bind,
      .getname    = sock_no_getname,
      .sendmsg    = sock_no_sendmsg,
      .recvmsg     = sock_no_recvmsg,
      .poll           = sock_no_poll,
      .listen         = sock_no_listen,
      .shutdown   = sock_no_shutdown,
      .setsockopt = sock_no_setsockopt,
      .getsockopt = sock_no_getsockopt,
      .connect     = sock_no_connect,
      .socketpair  = sock_no_socketpair,
      .accept       = sock_no_accept,
      .mmap       = sock_no_mmap
};
从Hidp_sock_ops中可以看出，BTPROTO_HIDP的socket不支持通常的socket操作，比如bind、connnect、sendmsg、recvmsg等等。该socket真正支持的仅ioctl这一个操作。IOCTL中支持的命令列表如下：
HIDPCONNADD         // 增加一个HID设备
HIDPCONNDEL          // 删除指定的HID设备
HIDPGETCONNLIST         // 得到当前所有HID设备的列表
HIDPGETCONNINFO        // 得到指定HID设备的信息

</rich_text><rich_text scale="h2" weight="heavy">2.  HIDPCONNADD</rich_text><rich_text>
HIDPCONNADD命令用于添加一个HID设备，用户空间传下来的参数为结构体struct hidp_connadd_req：
struct hidp_connadd_req {
      int   ctrl_sock;        // control socket，类似USB中control pipe
      int   intr_sock;        // interrupt socket，类似USB中int pipe
      __u16 parser;
      __u16 rd_size;         // report descriptor的大小
      __u8 __user *rd_data; // report descriptor
      __u8  country;    // 国家码，比如键盘就需要区分是美式键盘还是法式键盘
      __u8  subclass;
      __u16 vendor;
      __u16 product;
      __u16 version;
      __u32 flags;
      __u32 idle_to;
      char  name[128];
};
从结构体中可以看出，该socket发送/接收外部数据都通过ctrl_sock和intr_sock完成，这两个socket由用户空间创建后传入。
HIDPCONNADD的过程如下：
      struct socket *csock;
      struct socket *isock;
      struct hidp_connadd_req ca;
      。。。
      csock = sockfd_lookup(ca.ctrl_sock, &amp;err);
      isock = sockfd_lookup(ca.intr_sock, &amp;err);
      hidp_add_connection(&amp;ca, csock, isock);
 
int hidp_add_connection(struct hidp_connadd_req *req, struct socket *ctrl_sock, struct socket *intr_sock)
      。。。
      // 确保ctrl socket和intr socket的源地址、目的地址相同
      if (bacmp(&amp;bt_sk(ctrl_sock-&gt;sk)-&gt;src, &amp;bt_sk(intr_sock-&gt;sk)-&gt;src) ||
           bacmp(&amp;bt_sk(ctrl_sock-&gt;sk)-&gt;dst, &amp;bt_sk(intr_sock-&gt;sk)-&gt;dst))
            return -ENOTUNIQ;
      // 初始化hidp_session结构
      session-&gt;ctrl_sock = ctrl_sock;
      session-&gt;intr_sock = intr_sock;
      session-&gt;state     = BT_CONNECTED;
      setup_timer(&amp;session-&gt;timer, hidp_idle_timeout, (unsigned long)session);
      skb_queue_head_init(&amp;session-&gt;ctrl_transmit);
      skb_queue_head_init(&amp;session-&gt;intr_transmit);
      。。。
      // 如果有report描述符，那么创建HID设备，通过HID框架解析该描述符
      if (req-&gt;rd_size &gt; 0) 
           err = hidp_setup_hid(session, req);
           。。。
      // 如果req中没有report描述符，那么就没有创建hid设备，这时创建一个input设备。这种情况只对HID  Boot Protocol  Device有效，对于这种设备不需要report描述符。具体可参考HID设备的文档。由于input设备的情况比较简单，这里不再讨论
if (!session-&gt;hid)
           err = hidp_setup_input(session, req);
           。。。
      // 将session挂入hidp_session_list链表
      。。。
      // 建立一个内核任务
      kernel_thread(hidp_session, session, CLONE_KERNEL);
到这里，还剩下两个函数需要进一步分析，一个是hidp_setup_hid，另一个是hidp_session。Hidp_session比较简单：
static int hidp_session(void *arg)
      LOOP
           // 如果ctrl socket接收到数据，则接收并处理。Ctrl通道中的数据内容建立连接、对方断开连接的通知、以及通过ctrl通道接收到的用户面数据等。
           //  如果int通道接收到数据，则接收并处理。Int通道中传送用户面数据。比如鼠标移动，或者键盘按下等。如果此session使用hid设备，那么调用 hid_input_report将数据发送到HID框架，由hid框架发送到用户空间程序；如果使用的是input设备，那么最终调用 input_report_key等发送数据到用户空间。
            // 如果控制通道有数据要发送，则发送到ctrl socket，比如主动发起的连接断开、连接建立等。
           // 如果int通道有数据要发送，则发送。这里发送用户面数据，比如控制键盘上的LED灯等。
 
下面再分析一下hidp_setup_hid函数，此函数初始化一个HID设备并登记到HID系统。
static int hidp_setup_hid(struct hidp_session *session, struct hidp_connadd_req *req)
      struct hid_device *hid;
      。。。
      hid = hid_allocate_device();
      session-&gt;hid = hid;
      hid-&gt;driver_data = session;
      。。。
      // 设置该hid的父设备为所属的HCI设备
      hid-&gt;dev.parent = hidp_get_device(session);
      // 设置HID设备对应的物理层驱动
      hid-&gt;ll_driver = &amp;hidp_hid_driver;
        // 当HID框架需要发送数据到设备时，会调用这里的hid_output_raw_report，
      // 这里发送的数据会走ctrl socket
hid-&gt;hid_output_raw_report = hidp_output_raw_report;
      hid_add_device(hid);
      。。。
hidp_hid_driver是一个结构体，用来描述HID设备对应的物理层驱动。
static struct hid_ll_driver hidp_hid_driver = {
      // 最终会调用HID框架的hid_parse_report完成report描述符的解析
.parse = hidp_parse, 
      // start函数比较奇怪，可能是按照HID的协议规范实现的，没有细看
.start = hidp_start,
// 清除缓存的待发送数据
      .stop = hidp_stop,
      .open  = hidp_open,     // 空函数
      .close = hidp_close, // 空函数
      // 这里的input_event是从本地到设备，即发送数据时调用的函数，走int socket通道
      .hidinput_input_event = hidp_hidinput_event,
};
 
综上，当从设备到本机有数据要接收时，会在hidp_session这个内核任务中处理；当从本机到设备有数据要发送时，HID框架会调用 hidp_hidinput_event或者hidp_output_raw_report，视该数据是ctrl数据还是int通道数据而定。所有数据的 发送、接收都通过ctrl socket和int socket完成，而这两个socket由用户空间创建后通过调用BTPROTO_HIDP  socket的ioctl HIDPCONNADD传入。

</rich_text><rich_text scale="h1" weight="heavy">Bluez HID分析（二）</rich_text><rich_text scale="h1">  </rich_text><rich_text>
本文分析了蓝牙bluez协议栈中HID协议的实现。

</rich_text><rich_text scale="h2" weight="heavy">1.  基本概念</rich_text><rich_text>
HID协议用于人机输入设备。Bluez中关于HID的实现代码在其根目录下的input目录。蓝牙规范中包含关于HID的profile，里面重用了USB中关于HID的一些协议规范。
Bluez协议栈与上层应用之间使用dbus接口。
Bluez与kernel之间使用AF_BLUETOOTH协议族的socket通信，并使用了gtk+中的glib库。

</rich_text><rich_text scale="h2" weight="heavy">2.  初始化</rich_text><rich_text>
HID的初始化在input目录的main.c中，input_manager_init函数。该函数会调用input_manager_init。在input_manager_init中，主要是做了三个操作：
      btd_register_adapter_driver(&amp;input_server_driver);
      btd_register_device_driver(&amp;input_hid_driver);
      btd_register_device_driver(&amp;input_headset_driver);
下面分别讨论。

</rich_text><rich_text scale="h3" weight="heavy">2.1 btd_register_adapter_driver</rich_text><rich_text>
btd_register_adapter_driver(&amp;input_server_driver);
static struct btd_adapter_driver input_server_driver = {
      .name   = &quot;input-server&quot;,
      .probe  = hid_server_probe,
      .remove = hid_server_remove,
};
这个调用的作用是注册一个adapter driver。系统启动后对每一个本地蓝牙的硬件实例，即每一个HCI设备，都会调用里面的probe函数hid_server_probe。
static int hid_server_probe(struct btd_adapter *adapter)
      // 得到hci设备的本地蓝牙地址
adapter_get_address(adapter, &amp;src);
// 启动hid服务
server_start(&amp;src);
。。。
 
int server_start(const bdaddr_t *src)
      struct input_server *server = g_new0(struct input_server, 1);
      // 在ctrl通道（L2CAP_PSM_HIDP_CTRL）上listen，回调函数connect_event_cb
      server-&gt;ctrl = bt_io_listen(BT_IO_L2CAP, connect_event_cb, NULL,
                 server, NULL, &amp;err,
                 BT_IO_OPT_SOURCE_BDADDR, src,
                 BT_IO_OPT_PSM, L2CAP_PSM_HIDP_CTRL,
                 BT_IO_OPT_SEC_LEVEL, BT_IO_SEC_LOW,
                 BT_IO_OPT_INVALID);
      // 在intr通道（L2CAP_PSM_HIDP_INTR）listen，回调函数confirm_event_cb
server-&gt;intr = bt_io_listen(BT_IO_L2CAP, NULL, confirm_event_cb,
                 server, NULL, &amp;err,
                 BT_IO_OPT_SOURCE_BDADDR, src,
                 BT_IO_OPT_PSM, L2CAP_PSM_HIDP_INTR,
                 BT_IO_OPT_SEC_LEVEL, BT_IO_SEC_LOW,
                 BT_IO_OPT_INVALID);
上面的ctrl通道和intr通道都是由蓝牙的HID spec规定。
对于control通道，当设备端有主动连接本机时，会由glib调用回调函数connect_event_cb：
static void connect_event_cb(GIOChannel *chan, GError *err, gpointer data)
      // 得到该设备的源地址和目的地址，psm等
      bt_io_get(chan, BT_IO_L2CAP, &amp;gerr, BT_IO_OPT_SOURCE_BDADDR, &amp;src,
           BT_IO_OPT_DEST_BDADDR, &amp;dst, BT_IO_OPT_PSM, &amp;psm,
           BT_IO_OPT_INVALID);
      // 设置input_device
      input_device_set_channel(&amp;src, &amp;dst, psm, chan);
      // 如果是非法设备，并且当前是控制通道，那么根据HID协议，需要向对方发送“unplug virtual cable”消息
      if (ret == -ENOENT &amp;&amp; psm == L2CAP_PSM_HIDP_CTRL) {
           unsigned char unplug = 0x15;
           int err, sk = g_io_channel_unix_get_fd(chan);
           err = write(sk, &amp;unplug, sizeof(unplug));
      }
下面继续研究input_device_set_channel函数。
int input_device_set_channel(const bdaddr_t *src, const bdaddr_t *dst, int psm, GIOChannel *io)
      // 根据对方设备的地址，从HID设备链表中找到对应的input_dev设备。这里有一个问题，就是对应的input_dev设备是什么时候登记到链表中的，这一点稍后再讨论
      struct input_device *idev = find_device(src, dst);
      // 在该设备中，查找名为”hid”的连接
      struct input_conn * iconn = find_connection(idev-&gt;connections, &quot;hid&quot;);
      switch (psm) {
            case L2CAP_PSM_HIDP_CTRL:
                 if (iconn-&gt;ctrl_io)
                       return -EALREADY;
                 iconn-&gt;ctrl_io = g_io_channel_ref(io);
                 break;
            case L2CAP_PSM_HIDP_INTR:
                  if (iconn-&gt;intr_io)
                       return -EALREADY;
                 iconn-&gt;intr_io = g_io_channel_ref(io);
                 break;
      }
      // 当ctrl通道和intr通道都被设置后，才会进入input_device_connadd。目前我们是沿着L2CAP_PSM_HIDP_CTRL的回调函数connect_event_cb看到这里的，所以暂时先不深入研究
      if (iconn-&gt;intr_io &amp;&amp; iconn-&gt;ctrl_io)
           input_device_connadd(idev, iconn);
      。。。
下面再看一下server_start函数中对L2CAP_PSM_HIDP_INTR的情况，此时会调用到confirm_event_cb函 数。关于bt_io_listen中关于connect和confirm这两个函数的区别，可以自行查看glib的文档或者bluez的源代码。
static void confirm_event_cb(GIOChannel *chan, gpointer user_data)
      bt_io_get(chan, BT_IO_L2CAP, &amp;err, BT_IO_OPT_SOURCE_BDADDR, &amp;src,
           BT_IO_OPT_DEST_BDADDR, &amp;dst, BT_IO_OPT_INVALID);
      server-&gt;confirm = g_io_channel_ref(chan);
      // 请求authorization操作，并指定完成后的回调函数为auth_callback
      btd_request_authorization(&amp;src, &amp;dst, HID_UUID, auth_callback, server);
static void auth_callback(DBusError *derr, void *user_data)
      bt_io_get(server-&gt;confirm, BT_IO_L2CAP, &amp;err, 
           BT_IO_OPT_SOURCE_BDADDR, &amp;src,
           BT_IO_OPT_DEST_BDADDR, &amp;dst,
           BT_IO_OPT_INVALID);
      bt_io_accept(server-&gt;confirm, connect_event_cb, server, NULL, &amp;err)
由此可见，authorization结束后，会调用bt_io_accept，并同样指定回调函数为connect_event_cb。此时connect_event_cb会设置intr通道，并最终调用input_device_connadd函数。
static int input_device_connadd(struct input_device *idev, struct input_conn *iconn)
      input_device_connected(idev, iconn)
      。。。
static int input_device_connected(struct input_device *idev, struct input_conn *iconn)
      hidp_add_connection(idev, iconn)
      。。。
connected = TRUE;
      // 通过dbus发送已连接的信号
emit_property_changed(idev-&gt;conn, idev-&gt;path, INPUT_DEVICE_INTERFACE,
                       &quot;Connected&quot;, DBUS_TYPE_BOOLEAN, &amp;connected);
      。。。
static int hidp_add_connection(const struct input_device *idev,            const struct input_conn *iconn)
      struct hidp_connadd_req *req；
      sdp_record_t *rec;
      req = g_new0(struct hidp_connadd_req, 1);
      req-&gt;ctrl_sock = g_io_channel_unix_get_fd(iconn-&gt;ctrl_io);
      req-&gt;intr_sock = g_io_channel_unix_get_fd(iconn-&gt;intr_io);
      req-&gt;flags     = 0;
      req-&gt;idle_to   = iconn-&gt;timeout;
      ba2str(&amp;idev-&gt;src, src_addr);
      ba2str(&amp;idev-&gt;dst, dst_addr);
      // 查找该设备对应的SDP
rec = fetch_record(src_addr, dst_addr, idev-&gt;handle);
// 从SDP record中得到一些属性从而设置req中某些域，具体可看代码，包括HID的设备描述符等都在这里设置
extract_hid_record(rec, req);
sdp_record_free(rec);
// 根据SDP得到设备的vendor、product等信息
read_device_id(src_addr, dst_addr, NULL,
             &amp;req-&gt;vendor, &amp;req-&gt;product, &amp;req-&gt;version);
// 下面是支持fakehid的代码，目前仅有PS3的设备支持，所以这里不分析
struct fake_hid *fake_hid = get_fake_hid(req-&gt;vendor, req-&gt;product);
。。。
if (req-&gt;subclass &amp; 0x40) // 如果是键盘，则启动加密
  bt_acl_encrypt(&amp;idev-&gt;src, &amp;idev-&gt;dst, encrypt_completed, req);
  。。。
//  ioctl_connadd中会建立一个BTPROTO_HIDP的socket，并调用HIDPCONNADD新建一个连接。到这里，与远端设备的连接 就建立了。建立之后，kernel会建立一个HID设备，此HID设备与bluez之间通过ctrl sock和intr sock进行数据交互
ioctl_connadd(req);
 

</rich_text><rich_text scale="h3" weight="heavy">2.2 btd_register_device_driver</rich_text><rich_text>
btd_register_device_driver用于注册设备驱动，在bluez中使用这个函数注册的设备有两个，分别是input_headset_driver和input_hid_driver。
其中input-headset与蓝牙耳机有关；input-hid则用于普通的HID设备。
下面先看一下input_hid_driver设备。
input_hid_driver
static struct btd_device_driver input_hid_driver = {
      .name   = &quot;input-hid&quot;,
      .uuids   = BTD_UUIDS(HID_UUID),
      .probe  = hid_device_probe,
      .remove      = hid_device_remove,
};
当bluez检测到有一个hid设备，即uuid中包含HID_UUID的设备连接上时，就会调用其中的probe函数。
static int hid_device_probe(struct btd_device *device, GSList *uuids)
      。。。
      input_device_register(connection, device, path, &amp;src, &amp;dst,
                      HID_UUID, rec-&gt;handle, idle_timeout * 60);
 
int input_device_register(DBusConnection *conn, struct btd_device *device,
                 const char *path, const bdaddr_t *src,
                 const bdaddr_t *dst, const char *uuid,
                 uint32_t handle, int timeout)
      。。。
      // 分配一个新的input_device结构体，并添加到全局链表devices中
      // 前文分析input_device_set_channel函数时，提到的添加idev的地方，就在这里
idev = input_device_new(conn, device, path, src, dst, handle);
      devices = g_slist_append(devices, idev);
      。。。
      // 添加一个名为”hid”的连接
      iconn = input_conn_new(idev, uuid, &quot;hid&quot;, timeout);
      idev-&gt;connections = g_slist_append(idev-&gt;connections, iconn);
在函数input_device_new中，除了新建设备之外，还添加了一个dbus接口：
g_dbus_register_interface(conn, idev-&gt;path, INPUT_DEVICE_INTERFACE,
                            device_methods, device_signals, NULL,
                            idev, device_unregister)
static GDBusMethodTable device_methods[] = {
      { &quot;Connect&quot;,           &quot;&quot;,  &quot;&quot;,  input_device_connect,
                                  G_DBUS_METHOD_FLAG_ASYNC },
      { &quot;Disconnect&quot;,        &quot;&quot;,  &quot;&quot;,  input_device_disconnect },
      { &quot;VirtualUnplug&quot;,     &quot;&quot;,  &quot;&quot;,  input_device_unplug },
      { &quot;GetProperties&quot;,    &quot;&quot;,  &quot;a{sv}&quot;,input_device_get_properties },
      { }
};
前文分析HID连接的建立时，都是本机作为服务器，等待远端设备连接。有了这个dbus接口之后，本地应用程序就可以主动连接远端设备，只要调用”Connect”方法即可，此方法会被链接到input_device_connect函数。
Input_device_connect中的流程与前文中本机作为服务器的流程基本相同。在此函数中，会先建立ctrl通道的连接，然后再建立 intr通道的连接。最终通过调用函数hidp_add_connection通知内核建立一个HID设备或者input设备(HID boot  protocol设备)。
input-headset
static struct btd_device_driver input_headset_driver = {
      .name   = &quot;input-headset&quot;,
      .uuids   = BTD_UUIDS(HSP_HS_UUID),
      .probe  = headset_probe,
      .remove      = headset_remove,
};
Input-headset的流程比较特殊，与input-hid的区别至少有以下几点：
1.    HID设备的连接建立在l2cap上，headset的连接建立在rfcomm上。
2.    HID设备会通知内核建立一个HID设备或input设备，headset则只是实例化一个uinput设备。
3.    前文提到的ctrl通道、intr通道都不能适用于headset，因为他们都是在l2cap上的连接。
如果是本地主动连接远端的headset设备，同样是由应用程序调用”connect”方法启动连接过程，具体实现可查看代码。
</rich_text></node><node name="hcid" prog_lang="custom-colors" readonly="False" tags="" unique_id="97"><rich_text scale="h2" weight="heavy">hcid运行</rich_text><rich_text>
#dbus-dameon --system
然后再试
#hcid -f /etc/bluetooth/hcid.conf
 
</rich_text><rich_text scale="h2" weight="heavy">bluez-hcid用途</rich_text><rich_text>
</rich_text><rich_text foreground="#3366FF">为什么叫它demon程序，demon程序的用途，基本工作原理。
我猜hcid有一个无限循环，等待什么我就不知道了？
hcid/main.c-&gt;main
     ......
     ctl_io = g_io_channel_unix_new(hcid.sock);
     g_io_add_watch(ctl_io, G_IO_IN, io_stack_event, NULL);</rich_text><rich_text>
</rich_text><rich_text foreground="#3366FF">
     g_main_run(event_loop);
     ......
 watch这个结构的由来，因为一个蓝牙设备最多可以建立7条hci连接；watch是个链表，针对每一条hci链路都会有一个watch结构连在链表中。
  g_io_add_watch函数在hcid.sock上连接了io_stack_event函数，而这个函数主要的功能就是从这个sock缓冲区中读数据；
  g_main_run函数去socket缓冲区中读数据，使用result = read (fd, buf, count);//read系统调用一个服务记录可以有很多的服务属性，bluez的实现是链表的形式；
 typedef struct {//服务记录
     uint32_t handle; //服务句柄
     sdp_list_t *pattern;
     sdp_list_t *attrlist; //属性链表
     //书上的表现形式向一个数组，可以用链表完成；
 } sdp_record_t;

 typedef struct _sdp_list sdp_list_t;
 
 struct _sdp_list {
     sdp_list_t *next;
     void *data; //实际上data指针将指向一个sdp_data_t结构；
 };
 
 typedef struct sdp_data_struct sdp_data_t;
 
 struct sdp_data_struct {//属性值是一个数据元，
     uint8_t dtd; //数据元的类型描述符
     uint16_t attrId;//属性id
     union {
        int8_t     int8;
        int16_t    int16;
        int32_t    int32;
        int64_t    int64;
        uint128_t int128;
        uint8_t    uint8;
        uint16_t   uint16;
        uint32_t   uint32;
        uint64_t   uint64;
        uint128_t uint128;
        uuid_t     uuid;
        char      *str;
        sdp_data_t *dataseq;
     } val;
     sdp_data_t *next;
     int unitSize; //数据元的数据尺寸描述符
 };</rich_text><rich_text>
 
</rich_text><rich_text scale="h2" weight="heavy">继续蓝牙耳机-a2play的连接问题</rich_text><rich_text>
# ./a2play -s -d -r 44100 00:15:83:09:B2:52 /dev/sound/dsp
 subbands = 8 blocks = 16 bitpool = 32
 cannot set format on input /dev/sound/dsp
 Sample Rate:44100
 Channels:2
 Using address: 00:15:83:09:B2:52
 Found A2DP Sink
 Found A2DP Sink at the destination
 Can't connect to 52:B2:09:83:15:00. Connection refused(111)
 cannot open psm_cmd = 25
本来认为是配对问题，现在hcid守护进程能守护了，为何还不能响应呢，是配对问题吗，
一切都是因为不能看到syslog/message
 
</rich_text><rich_text scale="h2" weight="heavy">Linux下蓝牙耳机</rich_text><rich_text>
简单的提纲一下：
</rich_text><rich_text weight="heavy">• Linux平台选择</rich_text><rich_text>
Fedora 8 test
Fedora 7是不行的
</rich_text><rich_text weight="heavy">• 安装</rich_text><rich_text>
bluez-gnome-0.14-8.fc8
bluez-utils-alsa-3.20-4.fc8
bluez-utils-3.20-4.fc8
bluez-libs-devel-3.20-1.fc8
bluez-libs-3.20-1.fc8
kdebluetooth-1.0-0.34.beta8.fc8
</rich_text><rich_text weight="heavy">• 配对＆连接</rich_text><rich_text>
打开耳机，至搜索模式
用hcitool scan搜索出耳机的MAC地址
在自己的home目录下创建.asoundrc文件，内容如下
pcm.bluetooth {
    type bluetooth
    device 00:0D:FD:0C:23:71 #根据你的耳机的实际MAC地址修改
}
K菜单-&gt;管理-&gt;Kbluetooth
scan
确定，输入pin配对
打开bluez的Audio服务：运行/usr/lib/bluetooth/bluetoothd-service-audio
OK. Everything is Ready.
</rich_text><rich_text weight="heavy">• 使用</rich_text><rich_text>
所有播放软件使用设备alsa:bluetooth。
</rich_text><rich_text weight="heavy">• 评测</rich_text><rich_text>
Mplayer：播放一段时间后，会出现画面以及声音断断续续的问题，估计是Audio/Video同步算法不适应蓝牙造成的。但是播放MP3很流畅。
RealPlayer：瘫痪。
Amarok：使用HelixPlayer引擎瘫痪；使用xine引擎……我的xine不支持MP3&gt;_&lt;。
to be continue...

</rich_text><rich_text scale="h2" weight="heavy">支持a2dp在linux下的配置</rich_text><rich_text>
bluetooth software: bluez-lib-3.22bluez-utils-3.22和dbus(bluez-utils依赖的库，编译问题在本博客内查找) 。</rich_text><rich_text link="webs http://www.bluez.org/">www.bluez.org</rich_text><rich_text>
bluetooth hardware: iBook G4 内置的CSR 蓝牙2.0芯片、MotorolaS705蓝牙立体声耳机，也是CSR 蓝牙2.0芯片。
NOTE: 请在blue-utils ./configure的时候，加上--enable-audio
1). scan你的蓝牙耳机，得到bluetooth address，并且能够跟主机上的bluetooth正确配对，具体看前面blog

2). edit $(HOME)/.asoundrc 内容 如下:
            pcm.bluetooth{
                type bluetooth
                device 00:02:76:64:94:F9//蓝牙耳机地址
            }

3). edit /etc/bluetooth/audio.conf, check一下你配置是否正确
[General]
# SCO routing. Either PCM or HCI (in which case audio is routedto/from ALSA)
# Defaults to HCI
SCORouting=HCI
[Headset]
# Defaults to false
DisableHFP=true
[A2DP]
SourceCount=1

4). 运行 bluez-utils-3.22/audio下的bluetoothd-service-audio，安装后一般在/usr/lib/bluetooth下

5). 运行mplayer来测试一下你的蓝牙立体声耳机，命令如下：
     mplayer -ao alsa:device=bluetooth audio/demo.mp3

</rich_text><rich_text scale="h2" weight="heavy">关于a2dp要知道的</rich_text><rich_text>
itechs的立体声可以了，不过偶尔有点断续，音质也比win下差点，还是跟手机相连音质最好啊。dapper下面已经有相关驱动了，我只 需要个a2player执行文件。具体参考http://bluetooth-alsa.sourceforge.net/，不过我从cvs下载的包通不 过，只好，到http://sourceforge.net/projects/bluetooth-alsa/下载，编译通过得到a2player文 件，然后mpg123 --au - 1.mp3 | ./a2play xx:xx:xx:xx:xx:xx 可以实现立体声播放了，不过有些mp3文件会出现快播效果的，就像以前walkman的快放一样，呵呵。                                      

</rich_text><rich_text scale="h2" weight="heavy">关于蓝牙配对和PIN CODE和hcid</rich_text><rich_text>
两个蓝牙设备A和B，A先发送要求配对的请求给B，B由用户设置好配对的密码即PIN code，然后回一个消息给A，说你想配对可以呀，知道我的密码吗?然后A就发送PIN code过去，B看和自己的密码相符合，就发送一个replyOK的消息给A，这样两者就建立起来了信任关系。
 　　在pc+蓝牙适配器这个蓝牙设备A上，如果这个设备先发送配对请求给另一个远程设备B，那么当B发送询问密码请求过来时，在A上运行的hcid后台进程就通过一个pin_helper的程序读取PIN code，并发送回给B；如果远程设备B先发送配对请求给A，hcid上用作验证（注意：是验证也就是看B发过来的密码与A存的密码是否一致）的PIN code就是/etc/bluetooth/pin的内容，可以清空pin，让用户输入pin码，如果读取失败程序在启动的时候会默认地设置一个密码的，代码在bluez- utils/hcid/security.c中的init_security_data函数中，默认的是BlueZ。为了和我的手机相配，我把它改成了123，手机只能输入数字。
 　　关于其他hcid.conf的设置，请man hcid.conf。
</rich_text></node></node><node name="file system" prog_lang="custom-colors" readonly="False" tags="" unique_id="21"><rich_text>
</rich_text><node name="VFS" prog_lang="custom-colors" readonly="False" tags="" unique_id="25"><rich_text>先说明一下，linux内核中各种数据结构也不停的在变，所以不同版本的内核各个数据结构的定义可能会差别很大，这一组关于linux 文件系统的文章中的代码都摘自linux-2.6.34.1。


VFS依赖于数据结构来保存其对于一个文件系统的一般表示。
超级块结构：存放已安装的文件系统的相关信息
索引节点结构：对于文件信息的完全的描述
文件结构：存放一个被进程打开的文件的相关信息
目录项结构：存放有关路径名及路径名所指向的文件的信息
组成VFS的结构与一些操作相关联，这些操作可应用于有这些结构所表示的对象。这些操作在每个对象的操作表中定义。操作表示函数指针的集合。
  
</rich_text><rich_text scale="h3" weight="heavy">2.1超级块结构</rich_text><rich_text>
当文件系统被挂载时，所有有关它的信息均被存放在super_block结构体中。每个安装好的文件系统都有一个超级块结构。这个结构体定义如下：
---------------------------------------------------------------------
</rich_text><rich_text foreground="#ffff00000000" weight="heavy">include/linux/fs.h</rich_text><rich_text weight="heavy">
struct super_block {
	struct list_head	s_list;		/* Keep this first */
	dev_t			s_dev;		/* search index; _not_ kdev_t */
	unsigned char		s_dirt;
	unsigned char		s_blocksize_bits;
	unsigned long		s_blocksize;
	loff_t			s_maxbytes;	/* Max file size */
	struct file_system_type	*s_type;
	const struct super_operations	*s_op;
	const struct dquot_operations	*dq_op;
	const struct quotactl_ops	*s_qcop;
	const struct export_operations *s_export_op;
	unsigned long		s_flags;
	unsigned long		s_magic;
	struct dentry		*s_root;
	struct rw_semaphore	s_umount;
	struct mutex		s_lock;
	int			s_count;
	atomic_t		s_active;
#ifdef CONFIG_SECURITY
	void                    *s_security;
#endif
	const struct xattr_handler **s_xattr;

	struct list_head	s_inodes;	/* all inodes */
	struct hlist_bl_head	s_anon;		/* anonymous dentries for (nfs) exporting */
#ifdef CONFIG_SMP
	struct list_head __percpu *s_files;
#else
	struct list_head	s_files;
#endif
	struct list_head	s_mounts;	/* list of mounts; _not_ for fs use */
	/* s_dentry_lru, s_nr_dentry_unused protected by dcache.c lru locks */
	struct list_head	s_dentry_lru;	/* unused dentry lru */
	int			s_nr_dentry_unused;	/* # of dentry on lru */

	/* s_inode_lru_lock protects s_inode_lru and s_nr_inodes_unused */
	spinlock_t		s_inode_lru_lock ____cacheline_aligned_in_smp;
	struct list_head	s_inode_lru;		/* unused inode lru */
	int			s_nr_inodes_unused;	/* # of inodes on lru */

	struct block_device	*s_bdev;
	struct backing_dev_info *s_bdi;
	struct mtd_info		*s_mtd;
	struct hlist_node	s_instances;
	struct quota_info	s_dquot;	/* Diskquota specific options */

	int			s_frozen;
	wait_queue_head_t	s_wait_unfrozen;

	char s_id[32];				/* Informational name */
	u8 s_uuid[16];				/* UUID */

	void 			*s_fs_info;	/* Filesystem private info */
	fmode_t			s_mode;

	/* Granularity of c/m/atime in ns.
	   Cannot be worse than a second */
	u32		   s_time_gran;

	/*
	 * The next field is for VFS *only*. No filesystems have any business
	 * even looking at it. You had been warned.
	 */
	struct mutex s_vfs_rename_mutex;	/* Kludge */

	/*
	 * Filesystem subtype.  If non-empty the filesystem type field
	 * in /proc/mounts will be &quot;type.subtype&quot;
	 */
	char *s_subtype;

	/*
	 * Saved mount options for lazy filesystems using
	 * generic_show_options()
	 */
	char __rcu *s_options;
	const struct dentry_operations *s_d_op; /* default d_op for dentries */

	/*
	 * Saved pool identifier for cleancache (-1 means none)
	 */
	int cleancache_poolid;

	struct shrinker s_shrink;	/* per-sb shrinker handle */

	/* Number of inodes with nlink == 0 but still referenced */
	atomic_long_t s_remove_count;

	/* Being remounted read-only */
	int s_readonly_remount;
};</rich_text><rich_text>
---------------------------------------------------------------------
一些重要成员的说明：
s_list：指向双向循环链表中前一个和下一个元素的指针。如同linux内核中的许多其他结构一样，super_block也用双向循环链表维护，而正是这个成员将系统中安装的文件系统的super_block相互链接起来。全局变量super_blocks（fs/super.c，LIST_HEAD(super_blocks);）指向链表中的第一个元素。
 
s_dirt：在基于磁盘的文件系统中，用最初存放于磁盘上特定扇区中的数据会被用来填充超级块结构的一些字段。VFS允许对super_block进行修改，而这个成员正是用于说明超级块结构是否被修改，也即是否与磁盘上的数据一致。以便于在适当的时候将超级块数据写回磁盘。
 
s_maxbytes：这个成员用于说明文件系统支持的文件的最大长度。
 
s_type：超级块结构包含文件系统通用的信息，而这个成员则使超级块与特定的文件系统类型（如ext2，NFS等）关联起来。file_system_type结构体保存具体文件系统的信息。这个成员指向适当具体文件系统的结构体，VFS利用它可管理从一般请求到具体文件系统操作的交互。
下图显示了file_system_type和超级块之间的关系：
</rich_text><rich_text justification="left"></rich_text><rich_text> 
s_op：super_operations结构体类型的指针，这个结构体保存超级块的操作函数表。super_operations结构体由一些函数指针组成，这些函数指针用特定文件系统的超级块操作函数来初始化。
 
s_root：这个成员是一个dentry结构体指针，dentry结构体用于保存目录项。这个成员指向该文件系统安装目录对应的目录项。
 
s_inodes：是一个list_head结构体，指向属于该文件系统的索引节点的双向链表。
 
s_files：这个成员文件结构体链表，这个文件结构体不但正在使用，而且已分配给超级块。
 
s_instances：指向相同的文件系统类型的超级块链表中相邻的超级块元素。
 
s_fs_info：指向特定文件系统的超级块信息的指针。
 
</rich_text><rich_text scale="h3" weight="heavy">2.2超级块操作结构</rich_text><rich_text>
超级块的s_op成员指向文件系统的超级块操作结构，他描述了VFS能够如何管理特定的文件系统的超级块。每个具体的文件系统都可以定义自己的超级快操作，因为它直接针对文件系统的实现进行操作。
</rich_text><rich_text foreground="#cc3300">---------------------------------------------------------------------
</rich_text><rich_text foreground="#ffff00000000" weight="heavy">include/linux/fs.h</rich_text><rich_text weight="heavy">
struct super_operations {
   	struct inode *(*alloc_inode)(struct super_block *sb);
	void (*destroy_inode)(struct inode *);

   	void (*dirty_inode) (struct inode *, int flags);
	int (*write_inode) (struct inode *, struct writeback_control *wbc);
	int (*drop_inode) (struct inode *);
	void (*evict_inode) (struct inode *);
	void (*put_super) (struct super_block *);
	void (*write_super) (struct super_block *);
	int (*sync_fs)(struct super_block *sb, int wait);
	int (*freeze_fs) (struct super_block *);
	int (*unfreeze_fs) (struct super_block *);
	int (*statfs) (struct dentry *, struct kstatfs *);
	int (*remount_fs) (struct super_block *, int *, char *);
	void (*umount_begin) (struct super_block *);

	int (*show_options)(struct seq_file *, struct dentry *);
	int (*show_devname)(struct seq_file *, struct dentry *);
	int (*show_path)(struct seq_file *, struct dentry *);
	int (*show_stats)(struct seq_file *, struct dentry *);
#ifdef CONFIG_QUOTA
	ssize_t (*quota_read)(struct super_block *, int, char *, size_t, loff_t);
	ssize_t (*quota_write)(struct super_block *, int, const char *, size_t, loff_t);
#endif
	int (*bdev_try_to_free_page)(struct super_block*, struct page*, gfp_t);
	int (*nr_cached_objects)(struct super_block *);
	void (*free_cached_objects)(struct super_block *, int);
};</rich_text><rich_text>
</rich_text><rich_text foreground="#cc3300">---------------------------------------------------------------------</rich_text><rich_text>
超级快操作的说明：
  alloc_inode: 这个方法由alloc_inode()函数调用来为struct inode 分配内存并初始化它。如果这个函数没有定义，则会简单的从inode slab缓存中分配一个struct inode。通常alloc_inode 被用来分配一个更大的但内嵌有struct inode的结构体，即特定文件系统的索引节点，会包含文件指针等信息。
 
  destroy_inode: 这个方法由destroy_inode()函数调用，以释放分配的struct inode。只有当-&gt;alloc_inode 有定义的时候才需要它，它只是简单的撤销-&gt;alloc_inode 所做的一切。
 
  dirty_inode: 这个方法被VFS调用，以标记一个inode为dirty，即标记文件的管理元数据被修改过了，在适当的时候要将inode写回磁盘。
 
  write_inode: 当VFS需要将一个inode 写回磁盘的时候调用这个方法。第二个参数用以说明写回是否为同步的，并不是所有的文件系统都会检查这个标志。
 
  drop_inode: 在即将撤销索引节点时调用，即，当最后一个用户释放该索引节点时。实现该方法的文件系统通常使用generic_delete_inode函数。该函数从VFS数据结构中移走对索引节点的每一个引用，如果索引节点不再出现在任何目录中，则调用超级快方法delete_inode将它从文件系统中删除。调用时要持有inode_lock自旋锁。
 
  delete_inode: 当VFS想要删除（delete）一个inode 时调用，删除内存中的VFS索引节点和磁盘上的文件数据及元数据。
 
  put_super: 当VFS想要释放superblock 时调用（比如unmount）。在持有superblock 锁时调用。
 
  write_super: 当VFS 要向磁盘写回superblock时调用。
 
  sync_fs: 当VFS写完所有的与superblock 相关的“脏”的数据之后调用。第二个参数用以说明这个方法是否需要等待直到写回操作完成。（由日志文件系统使用）。
 
  freeze_fs: 当VFS锁定一个文件系统并强制它进入一致性状态时调用。这个方法现在由Logical Volume Manager (LVM)使用。
 
  unfreeze_fs: 当VFS解除锁定一个文件系统并再次使它可写是调用。
 
  statfs: 当VFS需要获得文件系统统计量时调用。
 
  remount_fs: 当文件系统需要被重新挂载时调用。持有内核锁时调用。
 
  clear_inode: 当VFS清除（clear）inode 时调用。可选。
 
  umount_begin: 当VFS卸载一个文件系统时调用。
 
  show_options:被VFS调用来为/proc/&lt;pid&gt;/mounts显示挂载选项 。 (参考 &quot;挂载选项&quot; 部分)
 
  quota_read: 限额系统使用该方法从文件中读取数据，该文件详细说明了所在文件系统的限制。
 
  quota_write: 限额系统使用该方法将数据写入文件中，该文件详细说明了所在文件系统的限制。
 
这些方法对所有的文件系统类型均是可用的。但是，对于特定的文件系统而言，则只使用其中的一个子集。未实现的方法对应的字段置为NULL。
 
2.3索引节点对象
文件系统处理文件所需要的信息都放在一个名为索引节点的数据结构中。具体文件系统的索引节点则根据文件系统类型的不同不同，inode节点有在磁盘上存在的静态节点，为UNIX-like系统开发的文件系统大多使用的是静态inode节点，比如ext2，ext3。还有仅仅存在于内存中的动态节点的文件系统，比如为windows系统开发的文件系统，FAT32，MSDOS，NTFS等。linux下文件系统的实现根据相关的文件系统协议，利用磁盘上存储的文件管理元数据来实现inode节点对象。内核中使用的众多的伪文件系统自然也是用的动态inode节点，因为整个文件系统就仅仅存在于内存而已。内存中的索引节点对象由一个inode结构体来表示，其定义如下
</rich_text><rich_text foreground="#cc3300">---------------------------------------------------------------------
include/linux/fs.h</rich_text><rich_text>
</rich_text><rich_text weight="heavy">struct inode {</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct hlist_node  i_hash;</rich_text><rich_text> /* 用于散列链表的指针 */
    /* 用于描述索引节点当前状态的链表的指针 */
</rich_text><rich_text weight="heavy">   struct list_head   i_list;     </rich_text><rich_text>/* backing dev IO list */
</rich_text><rich_text weight="heavy">    struct list_head  i_sb_list; </rich_text><rich_text>/* 用于超级块的索引节点链表的指针 */
</rich_text><rich_text weight="heavy">   struct list_head   i_dentry; </rich_text><rich_text>/* 引用索引节点的目录项对象链表的头 */
</rich_text><rich_text weight="heavy">   unsigned long      i_ino;   </rich_text><rich_text> /* 索引节点号 */
</rich_text><rich_text weight="heavy">   atomic_t    i_count;    </rich_text><rich_text>  /* 索引节点引用计数 */
</rich_text><rich_text weight="heavy">   unsigned int    i_nlink;  </rich_text><rich_text> /* 硬链接数目*/
</rich_text><rich_text weight="heavy">   uid_t       i_uid;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   gid_t       i_gid;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   dev_t       i_rdev;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   unsigned int    i_blkbits; </rich_text><rich_text>/* 块的位数 */
</rich_text><rich_text weight="heavy">   u64         i_version; </rich_text><rich_text>
</rich_text><rich_text weight="heavy">   loff_t      i_size;</rich_text><rich_text> /* 文件的字节数 */
</rich_text><rich_text weight="heavy">#ifdef __NEED_I_SIZE_ORDERED</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   seqcount_t      i_size_seqcount;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#endif</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct timespec    i_atime;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct timespec    i_mtime;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct timespec    i_ctime;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   blkcnt_t    i_blocks; </rich_text><rich_text> /* 文件的块数*/
</rich_text><rich_text weight="heavy">   unsigned short          i_bytes;</rich_text><rich_text> /* 文件中最后一个块的字节数*/
</rich_text><rich_text weight="heavy">   umode_t         i_mode;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   spinlock_t      i_lock;  </rich_text><rich_text>/* i_blocks, i_bytes, maybe i_size */
</rich_text><rich_text weight="heavy">   struct mutex    i_mutex;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct rw_semaphore   i_alloc_sem;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   const struct inode_operations  *i_op;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">/* former -&gt;i_op-&gt;default_file_ops */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   const struct file_operations *i_fop; </rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct super_block *i_sb;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct file_lock   *i_flock;</rich_text><rich_text> /* 指向文件锁链表的指针 */
</rich_text><rich_text weight="heavy">   struct address_space  *i_mapping;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct address_space  i_data;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#ifdef CONFIG_QUOTA</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct dquot    *i_dquot[MAXQUOTAS];</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#endif</rich_text><rich_text>
/* 用于具体的字符或块设备索引节点链表的指针，针对于设备文件 */
</rich_text><rich_text weight="heavy">   struct list_head   i_devices;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   union { </rich_text><rich_text>   /* 特殊文件专用 */
</rich_text><rich_text weight="heavy">      struct pipe_inode_info   *i_pipe;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">      struct block_device   *i_bdev;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">      struct cdev     *i_cdev;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   };</rich_text><rich_text>
 
</rich_text><rich_text weight="heavy">   __u32 i_generation;</rich_text><rich_text>   /*索引节点版本号（由某些文件系统使用）*/
 
</rich_text><rich_text weight="heavy">#ifdef CONFIG_FSNOTIFY</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   __u32 i_fsnotify_mask; /* all events this inode cares about */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct hlist_head  i_fsnotify_mark_entries; /* fsnotify mark entries */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#endif</rich_text><rich_text>
</rich_text><rich_text weight="heavy"> </rich_text><rich_text>
</rich_text><rich_text weight="heavy">#ifdef CONFIG_INOTIFY</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct list_head   inotify_watches; /* watches on this inode */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct mutex    inotify_mutex;  /* protects the watches list */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#endif</rich_text><rich_text>
</rich_text><rich_text weight="heavy"> </rich_text><rich_text>
</rich_text><rich_text weight="heavy">   unsigned long      i_state;</rich_text><rich_text>  /* 索引节点的状态标志，如dirty等 */
</rich_text><rich_text weight="heavy">   unsigned long      dirtied_when;   /* jiffies of first dirtying */</rich_text><rich_text>
</rich_text><rich_text weight="heavy"> </rich_text><rich_text>
</rich_text><rich_text weight="heavy">   unsigned int    i_flags;</rich_text><rich_text> /* 文件系统的安装标志*/
 
</rich_text><rich_text weight="heavy">   atomic_t    i_writecount;</rich_text><rich_text> /* 用于写进程的引用计数 */
</rich_text><rich_text weight="heavy">#ifdef CONFIG_SECURITY</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   void        *i_security;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#endif</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#ifdef CONFIG_FS_POSIX_ACL</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct posix_acl   *i_acl;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct posix_acl   *i_default_acl;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#endif</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   void        *i_private; /* fs or device private pointer */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">};</rich_text><rich_text>
</rich_text><rich_text foreground="#cc3300">---------------------------------------------------------------------</rich_text><rich_text>
这是通用的inode结构，它主要是将索引节点的通用部分组织起来，这个结构会被嵌入到特定的文件系统的索引节点结构中，而后者则会包含一些具体文件系统数据组织的信息，比如文件的块指针等。
 
每个索引节点对象都会复制磁盘索引节点中包含的一些数据，比如分配给文件的磁盘块数，访问时间、修改时间，文件拥有者的UID、GID等。如果i_state字段的值等于I_DIRTY_SYNC 、 I_DIRTY_DATASYNC 或 I_DIRTY_PAGES，则该索引节点是“脏”的，也就是说，索引节点被修改，对应的磁盘索引节点必须被更新。I_DIRTY宏可以用来检查这三个标志的值。i_state字段的其他值有I_NEW（索引节点对象已经分配但还没有用从磁盘索引节点读取来的数据进行填充）、I_WILL_FREE、I_FREEING（索引节点对象正在被释放）、I_CLEAR（索引节点对象的内容不再有意义）、I_SYNC
 
 
每个索引节点对象总是出现在两个不同的索引节点表中。首先，是inode的哈希表，这主要是为了快速查询，前提是系统内核要知道索引节点号及文件系统对应的超级块对象的地址。inode.c文件中的hlist_head类型指针静态变量inode_hashtable为哈希表的表头，哈希表的元素也同样为hlist_head类型， inode结构的hlist_node类型的i_hash字段用来将inode和哈希表链接起来。
 
它还会出现在另外两个“类型”双向循环链表中的某个链表里（使用i_list与相应的链表链接起来）：
有效但未使用的索引节点链表，该链表中的索引节点未被任何进程使用。它们的i_count字段值为0。链表中的首元素和尾元素是由全局变量inode_unused（</rich_text><rich_text weight="heavy">fs/inode.c中, LIST_HEAD(inode_unused);</rich_text><rich_text>）的next字段和prev字段分别指向的。这个链表用作磁盘高速缓存。
 
正在使用的索引节点链表，该链表里的索引节点当前被某些进程使用。它们的i_count字段大于零，i_nlink字段大于零。链表中的首元素和尾元素是由全局变量inode_in_use （</rich_text><rich_text weight="heavy">fs/inode.c, LIST_HEAD(inode_in_use);</rich_text><rich_text>）引用的。
最后，它还会出现在特定文件系统，也就是特定super_block的双向循环索引节点表中，由super_block的s_inodes字段和inode结构的i_sb_list字段连接。
 
索引节点结构与超级块之间的关系如下图：
</rich_text><rich_text justification="left"></rich_text><rich_text>2.4索引节点操作
与索引节点对象相关联的方法也叫索引节点操作。由inode_operations来描述，该结构的地址存放在索引节点的i_op字段中。定义如下：
---------------------------------------------------------------------
include/linux/fs.h
</rich_text><rich_text weight="heavy">struct inode_operations {</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*create) (struct inode *,struct dentry *,int, struct nameidata *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct dentry * (*lookup) (struct inode *,struct dentry *, struct nameidata *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*link) (struct dentry *,struct inode *,struct dentry *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*unlink) (struct inode *,struct dentry *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*symlink) (struct inode *,struct dentry *,const char *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*mkdir) (struct inode *,struct dentry *,int);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*rmdir) (struct inode *,struct dentry *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*mknod) (struct inode *,struct dentry *,int,dev_t);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*rename) (struct inode *, struct dentry *,</rich_text><rich_text>
</rich_text><rich_text weight="heavy">         struct inode *, struct dentry *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*readlink) (struct dentry *, char __user *,int);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   void * (*follow_link) (struct dentry *, struct nameidata *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   void (*put_link) (struct dentry *, struct nameidata *, void *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   void (*truncate) (struct inode *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*permission) (struct inode *, int);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*check_acl)(struct inode *, int);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*setattr) (struct dentry *, struct iattr *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*getattr) (struct vfsmount *mnt, struct dentry *, struct kstat *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*setxattr) (struct dentry *, const char *,const void *,size_t,int);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   ssize_t (*listxattr) (struct dentry *, char *, size_t);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*removexattr) (struct dentry *, const char *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   void (*truncate_range)(struct inode *, loff_t, loff_t);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   long (*fallocate)(struct inode *inode, int mode, loff_t offset,</rich_text><rich_text>
</rich_text><rich_text weight="heavy">           loff_t len);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 start,</rich_text><rich_text>
</rich_text><rich_text weight="heavy">            u64 len);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">};</rich_text><rich_text>
---------------------------------------------------------------------
  create(dir, dentry, mode, nameidata): 被open(2) and creat(2)系统调用所调用。在某一个目录下，为与目录项对象相关的普通文件创建一个新的磁盘索引节点。
 
  lookup(dir, dentry, nameidata): 为包含在一个目录项对象中的文件名对应的索引节点查找目录项。
 
  link(old_dentry, dir, new_dentry): 创建一个新的名为new_dentry的硬链接，它指向dir目录下名为old_dentry的文件
 
  unlink(dir, dentry): unlink(2)系统调用调用。从一个目录中删除目录项对象所指定的文件的硬链接。
 
  symlink(dir, dentry, symname): symlink(2)系统调用调用。在某个目录下，为与目录项对象相关的文件创建一个新的索引节点及目录项。
 
  mkdir(dir, dentry, mode):系统调用 mkdir(2)调用。在某个目录下，为与目录项对象相关的目录创建一个新的索引节点。
 
  rmdir(dir, dentry): 从一个目录中删除子目录，子目录的名称包含在目录项对象中。
 
  mknod(dir, dentry, mode, rdev): 在某个目录中，为与目录项对象相关的特定设备文件创建一个新的磁盘索引节点。其中参数mode和rdev分别表示文件的类型和设备号。
 
  rename(old_dir, old_dentry, new_dir, new_dentry): 系统调用rename(2)调用来重命名对象，将old_dir目录下由old_dentry标识的文件移到new_dir目录下。新文件名包含在new_dentry指向的目录项对象中。
 
  readlink(dentry, buffer, buflen): 系统调用readlink(2)调用。将目录项所指定的符号链接指向的文件的路径名拷贝到buffer所指定的用户态内存缓冲区中。
 
  follow_link(inode, nameidata): 解析索引节点对象所指定的符号链接；如果该符号链接是一个相对路径名，则从第二个参数所指定的目录开始进行查找。
 
  put_link(dentry, nameidata): 释放由follow_link方法分配的用于解析符号链接的所有临时数据结构。
 
  truncate(inode): 修改与索引节点相关的文件的文件大小。在调用该方法之前，必须将inode对象的i_size字段设置为需要的新长度值
 
  permission(inode, mask, nameidata): 在一个POSIX-like 文件系统上由VFS调用来检查访问权限。
 
  setattr(dentry, iattr): 由VFS调用来为一个文件设置属性。这个方法由chmod(2)及相关的系统调用来调用。
 
  getattr(mnt, dentry, kstat): 由VFS调用来获得一个文件的属性。这个方法由stat(2)及相关的系统调用来调用。
 
  setxattr(dentry, name, value, size, flags): 由VFS调用来设置一个文件的扩展属性。扩展属性是一个与一个inode关联的name:value对，存放在任何索引节点之外的磁盘块中。这个方法由系统调用setxattr(2)调用。
 
  getxattr(dentry, name,buffer, size): 由VFS调用来检索一个扩展属性名的值。这个方法由getxattr(2)函数调用。
 
  listxattr(dentry, buffer, size): 由VFS调用来列出给定文件的所有的扩展属性。这个方法由系统调用listxattr(2)调用。
 
  removexattr(dentry, name): 由VFS调用来从一个文件移除（remove）一个扩展属性。这个方法由系统调用removexattr(2)调用。
 
  truncate_range: 一个由底层文件系统提供来截断块的范围的方法，比如在一个文件的某些地方打洞。
 
上面的方法对所有可能的索引节点和文件系统类型都是可用的。不过，只有其中的一个子集应用到某一个特定单位文件系统的索引节点和文件系统；为实现的方法对应的字段应被设置为NULL。
 
inode_operations中对inode操作的方法和super_operations中队inode操作的方法相比则要更高级一些，而后者则更靠近底层，即更接近对磁盘硬件设备的操作。
 
2.5 目录项对象
对于进程查找的路径名中的每个分量，内核都为其创建一个目录项对象；目录项对象将每个分量与其对应的索引节点相联系。目录项对象在磁盘上没有对应的映像，它们存放在目录项缓存中。它们是一些根据目录文件的内容，填充的一些内存中的结构。其定义如下：
</rich_text><rich_text foreground="#cc0000">---------------------------------------------------------------------</rich_text><rich_text>
include/linux/dcache.h 
</rich_text><rich_text weight="heavy">struct dentry {</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   atomic_t d_count;</rich_text><rich_text>
    /* 目录项高速缓存标志 */
</rich_text><rich_text weight="heavy">   unsigned int d_flags;    /* protected by d_lock */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   spinlock_t d_lock;    /* per dentry lock */</rich_text><rich_text>
/* 对于目录而言，用于记录安装该目录项的文件系统的计数器*/
</rich_text><rich_text weight="heavy">   int d_mounted; </rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct inode *d_inode;      /* Where the name belongs to - NULL is</rich_text><rich_text>
</rich_text><rich_text weight="heavy">                 * negative */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   /*</rich_text><rich_text>
</rich_text><rich_text weight="heavy">    * The next three fields are touched by __d_lookup.  Place them here</rich_text><rich_text>
</rich_text><rich_text weight="heavy">    * so they all fit in a cache line.</rich_text><rich_text>
</rich_text><rich_text weight="heavy">    */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct hlist_node d_hash;   /* lookup hash list */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct dentry *d_parent; /* parent directory */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct qstr d_name;</rich_text><rich_text>  /* 文件名 */
    /* 用于未使用目录项链表的指针 */
</rich_text><rich_text weight="heavy">   struct list_head d_lru;     /* LRU list */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   /*</rich_text><rich_text>
</rich_text><rich_text weight="heavy">    * d_child and d_rcu can share memory</rich_text><rich_text>
</rich_text><rich_text weight="heavy">    */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   union {</rich_text><rich_text>
        /* 对于目录而言，用于同一父目录中的目录项链表的指针 */
</rich_text><rich_text weight="heavy">      struct list_head d_child;   /* child of parent list */</rich_text><rich_text>
        /* 回收目录项对象时，有RCU描述符使用 */
</rich_text><rich_text weight="heavy">      struct rcu_head d_rcu;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   } d_u;</rich_text><rich_text>
    /* 对于目录而言，子目录项链表的头 */
</rich_text><rich_text weight="heavy">   struct list_head d_subdirs; /* our children */</rich_text><rich_text>
    /* 用于与同一索引节点相关的目录项链表指针 */
</rich_text><rich_text weight="heavy">   struct list_head d_alias;   /* inode alias list */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   unsigned long d_time;    /* used by d_revalidate */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   const struct dentry_operations *d_op;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct super_block *d_sb;   /* The root of the dentry tree */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   void *d_fsdata;       /* fs-specific data */</rich_text><rich_text>
</rich_text><rich_text weight="heavy"> </rich_text><rich_text>
</rich_text><rich_text weight="heavy">   unsigned char d_iname[DNAME_INLINE_LEN_MIN];   /* small names */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">};</rich_text><rich_text>
</rich_text><rich_text foreground="#cc0000">---------------------------------------------------------------------</rich_text><rich_text>
每个目录项对象可以处于以下四种状态之一：
空闲状态（free）
    处于该状态的目录项对象不包括有效的信息，且还没有被VFS使用。对应的内存区由slab分配器进行处理。
未使用状态（unused）
    处于该状态的目录项对象当前还没有被内核使用。该对象的引用计数器d_count的值为0，但其d_inode字段仍然指向关联的索引节点。该目录项对象包含有效的信息，但为了在必要时回收内存，它的内容可能被丢弃。
正在使用状态（in use）
    处于该状态的目录项对象当前正在被内核使用。该对象的引用计数器d_count的值为正数，其d_inode字段指向关联的索引节点对象。该目录项对象包含有效的信息，并且不能丢弃。
负状态（negative）
    与目录项关联的索引节点不存在，那是因为相应的磁盘索引节点已被删除，或者因为目录项对象是通过解析一个不存在的路径名创建的。目录项对象的d_inode字段被置为NULL，但该对象仍然被保存在目录项高速缓存中，以便后续对同一文件目录名的查找操作能够快速完成。
 
与目录项关联的方法称为目录项操作，它描述了一个文件系统是如何重载一个标准的dentry operations。这些方法由dentry_operations结构体描述，该结构的地址存放在目录项对象的d_op字段中。由于他们是可选的或者VFS使用默认的例程，这些方法可能被设为NULL。其定义如下：
</rich_text><rich_text foreground="#cc0000">---------------------------------------------------------------------</rich_text><rich_text>
include/linux/dcache.h 
</rich_text><rich_text weight="heavy">struct dentry_operations {</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*d_revalidate)(struct dentry *, struct nameidata *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*d_hash) (struct dentry *, struct qstr *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*d_compare) (struct dentry *, struct qstr *, struct qstr *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*d_delete)(struct dentry *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   void (*d_release)(struct dentry *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   void (*d_iput)(struct dentry *, struct inode *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   char *(*d_dname)(struct dentry *, char *, int);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">};</rich_text><rich_text>
</rich_text><rich_text foreground="#cc0000">---------------------------------------------------------------------</rich_text><rich_text>
  d_revalidate:在把目录项对象转换为一个文件路径名之前，判定该目录项对象是否仍然有效。大多数文件系统将它设置为NULL，而网络文件系统可以指定自己的函数。
 
  d_hash: 生成一个散列值，用于目录项散列表的、特定于具体文件系统的散列函数。参数dentry标识包含路径分量的目录。第二个参数包含要查找的路径名分量以及由散列函数生成的散列值。
 
  d_compare: 比较两个文件名。name1应该属于dir所指的目录。
 
  d_delete: 对于一个dentry的最后的引用解除（delete）时调用。这意味着没有人正在使用这个dentry，但依然是有效的，并依然在dcache中。
 
  d_release: 当要释放一个目录项对象时（放入slab分配器），调用该方法。
 
  d_iput: 当一个目录项对象变为“负”状态时调用该方法。缺省的VFS函数调用iput（）释放索引节点对象。
 
  d_dname: 当需要产生一个dentry的路径名的时候调用。对于某些想要延迟路径名的产生的伪文件系统（sockfs, pipefs, ...）很有用。（不是在dentry创建的时候，而是在需要路径名的时候才产生）。真实的文件系统可能不会使用它，因为它们的dentries 出现在全局的dcache哈希表中，它们的哈希应该是不变量。除非使用适当的SMP安全措施，否则由于没有持有锁，则d_dname()不应该试着自己去修改dentry 。注意：d_path()逻辑是相当复杂的。正确的返回，比如&quot;Hello&quot;的方法是将其放在缓冲区的结尾处，然后返回指向第一个字符的指针。dynamic_dname()辅助函数可被用来处理这一点。
2.6 文件对象
文件对象描述进程怎样与一个打开的文件进行交互。文件对象是在文件被打开的时候创建的，由一个file结构来描述，文件结构也仅仅存在于内存中。其定义如下：
</rich_text><rich_text foreground="#cc3300">---------------------------------------------------------------------
include/linux/fs.h</rich_text><rich_text>
</rich_text><rich_text weight="heavy">struct file {</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   /*</rich_text><rich_text>
</rich_text><rich_text weight="heavy">    * fu_list becomes invalid after file_free is called and queued via</rich_text><rich_text>
</rich_text><rich_text weight="heavy">    * fu_rcuhead for RCU freeing</rich_text><rich_text>
</rich_text><rich_text weight="heavy">    */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   union {</rich_text><rich_text>
</rich_text><rich_text weight="heavy">      struct list_head   fu_list;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">      struct rcu_head    fu_rcuhead;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   } f_u;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct path     f_path;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#define f_dentry   f_path.dentry </rich_text><rich_text>/* 与文件相关的目录项 */
</rich_text><rich_text weight="heavy">#define f_vfsmnt   f_path.mnt </rich_text><rich_text>/* 含有该文件的已安装文件系统 */
</rich_text><rich_text weight="heavy">   const struct file_operations   *f_op; </rich_text><rich_text>/* 指向文件操作表的指针 */
</rich_text><rich_text weight="heavy">   spinlock_t      f_lock;  /* f_ep_links, f_flags, no IRQ */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   atomic_long_t      f_count;</rich_text><rich_text> /* 文件对象的引用计数 */
</rich_text><rich_text weight="heavy">   unsigned int       f_flags; </rich_text><rich_text>/* 打开文件时所制定的标志 */
</rich_text><rich_text weight="heavy">   fmode_t         f_mode;</rich_text><rich_text> /* 进程的访问模式 */
</rich_text><rich_text weight="heavy">   loff_t      f_pos;</rich_text><rich_text> /* 文件指针 */
</rich_text><rich_text weight="heavy">   struct fown_struct f_owner;</rich_text><rich_text> /* 通过信号进行I/O时间通知的数据 */
</rich_text><rich_text weight="heavy">   const struct cred  *f_cred;</rich_text><rich_text> /* 进程环境相关信息 */
</rich_text><rich_text weight="heavy">   struct file_ra_state  f_ra;</rich_text><rich_text> /* 文件预读状态 */
 
</rich_text><rich_text weight="heavy">   u64         f_version; /* 版本号，每次使用后自动递增 */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#ifdef CONFIG_SECURITY</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   void        *f_security; </rich_text><rich_text>
</rich_text><rich_text weight="heavy">#endif</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   /* needed for tty driver, and maybe others */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   void        *private_data;</rich_text><rich_text>
</rich_text><rich_text weight="heavy"> </rich_text><rich_text>
</rich_text><rich_text weight="heavy">#ifdef CONFIG_EPOLL</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   /* Used by fs/eventpoll.c to link all the hooks to this file */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct list_head   f_ep_links;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#endif /* #ifdef CONFIG_EPOLL */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct address_space  *f_mapping;</rich_text><rich_text> /* 指向文件地址空间对象的指针 */
</rich_text><rich_text weight="heavy">#ifdef CONFIG_DEBUG_WRITECOUNT</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   unsigned long f_mnt_write_state;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#endif</rich_text><rich_text>
</rich_text><rich_text weight="heavy">};</rich_text><rich_text>
 
从Linux kernel 2.6.29开始，task_struct新增cred结构体描述进程环境，这些信息都是特定于进程的，而不是特定于打开的文件的，所以不把这些信息嵌入在file对象中自是也合情合理。file结构的cred结构体指针类型的f_cred成员指向cred结构。cred结构体其定义如下：
</rich_text><rich_text foreground="#cc3300">---------------------------------------------------------------------
include/linux/cred.h</rich_text><rich_text>
</rich_text><rich_text weight="heavy">struct cred {</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   atomic_t usage;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#ifdef CONFIG_DEBUG_CREDENTIALS</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   atomic_t subscribers; /* number of processes subscribed */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   void     *put_addr;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   unsigned magic;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#define CRED_MAGIC 0x43736564</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#define CRED_MAGIC_DEAD  0x44656144</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#endif</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   uid_t    uid;     /* real UID of the task */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   gid_t    gid;     /* real GID of the task */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   uid_t    suid;    /* saved UID of the task */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   gid_t    sgid;    /* saved GID of the task */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   uid_t    euid;    /* effective UID of the task */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   gid_t    egid;    /* effective GID of the task */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   uid_t    fsuid;   /* UID for VFS ops */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   gid_t    fsgid;   /* GID for VFS ops */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   unsigned securebits; /* SUID-less security management */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   kernel_cap_t cap_inheritable; /* caps our children can inherit */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   kernel_cap_t cap_permitted;  /* caps we're permitted */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   kernel_cap_t cap_effective;  /* caps we can actually use */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   kernel_cap_t cap_bset; /* capability bounding set */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#ifdef CONFIG_KEYS</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   unsigned char   jit_keyring; /* default keyring to attach requested</rich_text><rich_text>
</rich_text><rich_text weight="heavy">                 * keys to */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct key  *thread_keyring; /* keyring private to this thread */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct key  *request_key_auth; /* assumed request_key authority */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct thread_group_cred *tgcred; /* thread-group shared credentials */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#endif</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#ifdef CONFIG_SECURITY</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   void     *security;  /* subjective LSM security */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">#endif</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct user_struct *user;   /* real user ID subscription */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct group_info *group_info; /* supplementary groups for euid/fsgid */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct rcu_head rcu;     /* RCU deletion hook */</rich_text><rich_text>
</rich_text><rich_text weight="heavy">};</rich_text><rich_text>
</rich_text><rich_text foreground="#cc3300">---------------------------------------------------------------------</rich_text><rich_text>
文件指针说明当前的文件偏移位置，即下一个操作（读或写等）将在该位置发生。由于几个文件可能同时访问同一个文件，因此文件指针必须存放在file对象而不是索引节点对象中。
 
文件对象包含在具体文件系统的超级块的几个链表中。每个超级快对象把文件对象链表的表头存放在s_files字段中。链表中分别指向前一个元素和后一个元素的指针都存放在文件对象的fu_list字段中。
 
文件对象的f_count字段是一个引用计数器：它记录使用文件对象的进程数（以CLONE_FILES标志创建的轻量级进程共享文件描述符表，因此他们可以使用相同的文件对象）。当内核本身要使用该文件对象时也要增加计数器的值。
 
每个文件系统都有自己的文件操作集合，执行诸如读写文件这样的操作。当内核将一个索引节点从磁盘装入内核时，就会把指向这些文件操作的指针存放在file_operations结构中，而该结构的地址存放在该索引节点的i_fop字段中。当进程打开文件时，VFS就用存放在索引节点中的这个地址初始化新文件对象的f_op字段，使得对文件操作的后续调用能够使用这些函数。如果需要，VFS随后也可以通过在f_op字段存放一个新值而修改文件操作的集合。file_operations定义如下：
</rich_text><rich_text foreground="#cc3300">---------------------------------------------------------------------
include/linux/fs.h</rich_text><rich_text>
</rich_text><rich_text weight="heavy">struct file_operations {</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   struct module *owner;</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   loff_t (*llseek) (struct file *, loff_t, int);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   ssize_t (*read) (struct file *, char __user *, size_t, loff_t *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   ssize_t (*write) (struct file *, const char __user *, size_t, loff_t *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*readdir) (struct file *, void *, filldir_t);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   unsigned int (*poll) (struct file *, struct poll_table_struct *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*ioctl) (struct inode *, struct file *, unsigned int, unsigned long);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   long (*unlocked_ioctl) (struct file *, unsigned int, unsigned long);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   long (*compat_ioctl) (struct file *, unsigned int, unsigned long);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*mmap) (struct file *, struct vm_area_struct *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*open) (struct inode *, struct file *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*flush) (struct file *, fl_owner_t id);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*release) (struct inode *, struct file *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*fsync) (struct file *, struct dentry *, int datasync);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*aio_fsync) (struct kiocb *, int datasync);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*fasync) (int, struct file *, int);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*lock) (struct file *, int, struct file_lock *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   ssize_t (*sendpage) (struct file *, struct page *, int, size_t, loff_t *, int);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   unsigned long (*get_unmapped_area)(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*check_flags)(int);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*flock) (struct file *, int, struct file_lock *);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t, unsigned int);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">   int (*setlease)(struct file *, long, struct file_lock **);</rich_text><rich_text>
</rich_text><rich_text weight="heavy">};</rich_text><rich_text>
</rich_text><rich_text foreground="#cc3300">---------------------------------------------------------------------</rich_text><rich_text>
该结构的各成员，与同名的系统调用有着相同的语义，包括参数和返回值，这里也就不再做过多的解释了。


                                       </rich_text><rich_text justification="left"></rich_text><rich_text>
对于一个分区，对应一个文件系统，一个文件系统其实本质上还是磁盘的一部分，所以可以 包括多个柱面。对于柱面上的数据，主要看看inode节点位图、block位图，i节点，数据块。inode节点位图是为了记录inode节点的使用情 况，之前的违章中已经说过，inode节点在文件系统安装的时候，会初始化所有的inode节点，那么形成的位图表示使用or没使用的大表。对于 block块也是一样的，记录数据块使用情况。
对于inode节点来说，每个文件都会对应一个inode节点，目录项也会对应一个inode节点。对于一个文件来说，只对应一个inode节点，但是一个文件可以有多个数据块，因为一个比较大的文件，一个数据块根本存放不了。所以inode中记录多个文件数据块的信息。
对于目录块来说，主要是为了索引而存在，所以里面的内容主要是inode节点号和文件名，其实就是一个映射表形式的东西。

============================================
</rich_text><rich_text scale="h2" weight="heavy">二、注册和加载文件系统</rich_text><rich_text>
============================================
注册和注销一个文件系统时，使用下面的API：
   #include &lt;linux/fs.h&gt;
   extern int register_filesystem(struct file_system_type *);
   extern int unregister_filesystem(struct file_system_type *);
    传递的参数file_system_type结构描述了注册的文件系统。当生成将一个设备挂载到文件空间的一个目录时，</rich_text><rich_text underline="single">VFS</rich_text><rich_text>将调用相应文件系统所实现的get_sb()方法。接着，被挂载点的目录结构将被更新指向新文件系统的root inode节点。
在/proc/filesystems中可以看到在内核中注册的所有文件系统。
</rich_text><rich_text scale="h3" weight="heavy">1、file_system_type结构</rich_text><rich_text>
该结构对文件系统进行描述，在2.6.20内核中，其在include/linux/fs.h定义如下：
struct file_system_type {
 const char *name;
 int fs_flags;
 int (*get_sb) (struct file_system_type *, int,
         const char *, void *, struct vfsmount *);
 void (*kill_sb) (struct super_block *);
 struct module *owner;
 struct file_system_type * next;
 struct list_head fs_supers;
 struct lock_class_key s_lock_key;
 struct lock_class_key s_umount_key;
};
name:   文件系统类型名，如&quot;ext2&quot;, &quot;iso9660&quot;, &quot;msdos&quot;等
fs_flags: 几种文件系统flag标志（FS_REQUIRES_DEV, FS_NO_DCACHE等）
get_sb:  加载(mount)新的文件系统实例时会调用的方法。sb指super block
kill_sb: 卸载(unmount)文件系统实例时调用
owner:  VFS内部使用，大多数情况下，应该被初始化为 THIS_MODULE
next:  VFS内部使用，初始化为NULL
s_lock_key: 
s_umount_key: 

get_sb参数如下：
    struct super_block *sb: superblock结构，该结构部分由vFS初始化，其余的在get_sb()方法中初始化
    int flags:  挂载标志
    const char *dev_name: 挂载的设备名
    void *data:  挂载属性选项，通常为ASCII字符串
    int silent:  出错时的处理方式

get_sb()方法必须superblock中指定的块设备是否包含该方法支持的文件系统。执行成功，就返回指向superblock的指针，出错则返回NULL

get_sb, kill_sb当然就是为了得到和销毁super block 了
s_op成员是get_sb中需要关注的项，它是一个指向结构&quot;struct super_operations&quot;的指针，该结构描述了文件系统的底层实现。
通常，一个文件系统使用get_sb()的具体实现中的一个，并提供fill_super方法。具体方法如下：
    get_sb_bdev: 挂载块设备上的文件系统
    get_sb_nodev:挂载无设备文件系统
    get_sb_single:挂载在挂载点之间共享实例的文件系统

fill_super方法实现含有的变量如下：
    struct super_block *sb: super_block结构，由fill_super()初始化
    void *data:  挂载属性选项，通常为ASCII字符串
    int silent:  出错时的处理方式

</rich_text><rich_text scale="h3" weight="heavy">2. VFS的rootfs初始化</rich_text><rich_text>
   在Linux系统中，每个文件系统都会以数据结构来表示，定义为：
struct file_system_type {
              const char   *name; //文件系统名称，如ext2
              int   fs_flags;
              int   (*get_sb) (struct file_system_type *, int,
                          const char *, void *, struct vfsmount *);
              void   (*kill_sb) (struct super_block *);
              struct   module *owner;
              struct   file_system_type * next; </rich_text><rich_text foreground="#00000000ffff">//指向下一文件系统</rich_text><rich_text>
              struct   list_head fs_supers;
              struct   lock_class_key s_lock_key;
              struct   lock_class_key s_umount_key;
};
 
注册文件系统就是将各种文件系统实例化，形成链表，内核中使用一个名为file_systems的全局变量来指向该链表表头。
static struct file_system_type *file_systems;
 
VFS建立目录树首先要初始化rootfs，然后将其挂接。
对于rootfs类型，其文件系统实例结构定义为：
static struct file_system_type rootfs_fs_type = {
                      .name        =   &quot;rootfs&quot;,
                      .get_sb      =   rootfs_get_sb, /</rich_text><rich_text foreground="#00000000ffff">/get_sb的方法为rootfs_get_sb，这个在init_mnt_tree中会用到</rich_text><rich_text>
                      .kill_sb     =   kill_litter_super,
};
此时用图来表示为：
 </rich_text><rich_text justification="left"></rich_text><rich_text>

</rich_text><rich_text foreground="#00000000ffff">图中read_super改为get_sb， 并增加kill_sb</rich_text><rich_text>

一个独立的file_systems指针，一个file_system_type的rootfs
首先要初始化rootfs：
int __init init_rootfs(void)　</rich_text><rich_text foreground="#00000000ffff">//初始化rootfs</rich_text><rich_text>
{
    return   register_filesystem(&amp;rootfs_fs_type);    </rich_text><rich_text foreground="#00000000ffff">//注册rootfs</rich_text><rich_text>
}

其中
int register_filesystem(struct file_system_type *   fs)
</rich_text><rich_text justification="left">            {
                   int res = 0;
                   struct file_system_type ** p;
                 
                   if (fs-&gt;next)
                      return -EBUSY;
                   INIT_LIST_HEAD(&amp;fs-&gt;fs_supers); </rich_text><rich_text foreground="#00000000ffff" justification="left">//初始化LIST_HEAD   fs-&gt;fs_supers</rich_text><rich_text justification="left">
                   write_lock(&amp;file_systems_lock); </rich_text><rich_text foreground="#00000000ffff" justification="left">//</rich_text><rich_text justification="left">
                   p = find_filesystem(fs-&gt;name); </rich_text><rich_text foreground="#00000000ffff" justification="left">//检查文件系统是否被注册，下面的详细说明</rich_text><rich_text justification="left">
                   if (*p)
                      res = -EBUSY;
                   else
                      *p = fs; </rich_text><rich_text foreground="#00000000ffff" justification="left">//没有被注册，将file_systems的链表指向此fs，形成注册的文件系统的链表结构</rich_text><rich_text justification="left">
                   write_unlock(&amp;file_systems_lock);
                   return res;
            }</rich_text><rich_text>

下面是find_filesystem的实现：
static struct file_system_type **find_filesystem(const   char *name)
            {
                   struct file_system_type **p;
                   for (p=&amp;file_systems; *p;   p=&amp;(*p)-&gt;next) </rich_text><rich_text foreground="#00000000ffff">//file_systems是全局变量指向文件系统类型</rich_text><rich_text>
                      if (strcmp((*p)-&gt;name,name) == 0) </rich_text><rich_text foreground="#00000000ffff">//查找文件系统是否被注册过，如果没有，那么p最后为file_systems链尾的next，如果被注册过，那么返回指向这个文件系统的指针</rich_text><rich_text>
                        break;
                   return p;
            }
 这样，rootfs就注册成功了，此时可表示为：
  
然后是初始化树，init_mount_tree。 
init_mount_tree首先会调用do_kern_mount(&quot;rootfs&quot;, 0, &quot;rootfs&quot;, NULL);进行rootfs的挂接。
struct vfsmount * 
            do_kern_mount(const char *fstype, int flags, const   char *name, void *data)
            {
                 struct   file_system_type *type = get_fs_type(fstype); </rich_text><rich_text foreground="#00000000ffff">//通过ramfs得到ramfs的file_system_type</rich_text><rich_text>
                 struct   vfsmount *mnt;
                 if (!type)
                     return   ERR_PTR(-ENODEV);
                 mnt =   vfs_kern_mount(type, flags, name, data); </rich_text><rich_text foreground="#00000000ffff">//开始干正事了</rich_text><rich_text>
                 put_filesystem(type);
                 return mnt;
            }

只保留主干代码的vfs_kern_mount。
struct vfsmount *
            vfs_kern_mount(struct file_system_type *type, int   flags, const char *name, void *data)
            {
                 struct   vfsmount *mnt;
                 int error;
             
                 mnt =   alloc_vfsmnt(name);　</rich_text><rich_text foreground="#00000000ffff">//初始化一个struct vfsmount mnt，并初始化struct中的LIST_HEAD，mnt-&gt;mnt_count=1;mnt-&gt;mnt_devname=name</rich_text><rich_text>
             
                 error =   type-&gt;get_sb(type, flags, name, data, mnt); </rich_text><rich_text foreground="#00000000ffff">//建立一个superblock，然后与mnt建立上关系，下面会有说明</rich_text><rich_text>
                 if (error   &lt; 0)
                     goto   out_free_secdata;
             
                 mnt-&gt;mnt_mountpoint   = mnt-&gt;mnt_root;
                 mnt-&gt;mnt_parent   = mnt;   </rich_text><rich_text foreground="#00000000ffff">//将parent指向自己</rich_text><rich_text>
                 return mnt;
            }

type-&gt;get_sb的实例在此时应该为ramfs_get_sb。
int ramfs_get_sb(struct file_system_type *fs_type,
                 int flags,   const char *dev_name, void *data, struct vfsmount *mnt)
            {
                 return   get_sb_nodev(fs_type, flags, data, ramfs_fill_super, mnt);                </rich_text><rich_text foreground="#00000000ffff">//使用ramfs_fill_super来写superblock的相关数据</rich_text><rich_text>
            }
            
int get_sb_nodev(struct file_system_type *fs_type,
                 int flags,   void *data,
                 int   (*fill_super)(struct super_block *, void *, int),
                 struct   vfsmount *mnt)
            {
                 int error;
                 struct   super_block *s = sget(fs_type, NULL, set_anon_super, NULL);</rich_text><rich_text foreground="#00000000ffff">//初始化一个super block，设置s-&gt;s_dev，s-&gt;s_type=type,s-&gt;s_id=type-&gt;name,将super_blocks指向s-&gt;s_list，将type-&gt;fs_super指向s-&gt;s_instances。</rich_text><rich_text>
             
                 error =   fill_super(s, data, flags &amp; MS_SILENT ? 1 : 0); </rich_text><rich_text foreground="#00000000ffff">//这里的fill_super即是ramfs_fill_super，下面详细说明</rich_text><rich_text>
                 s-&gt;s_flags   |= MS_ACTIVE;
                 return   simple_set_mnt(mnt, s);
            }

static int ramfs_fill_super(struct super_block * sb,   void * data, int silent)
            {
                 struct   inode * inode;
                 struct   dentry * root;
             
                 sb-&gt;s_maxbytes   = MAX_LFS_FILESIZE;
                 sb-&gt;s_blocksize   = PAGE_CACHE_SIZE;
                 sb-&gt;s_blocksize_bits   = PAGE_CACHE_SHIFT;
                 sb-&gt;s_magic   = RAMFS_MAGIC;
                 sb-&gt;s_op   = &amp;ramfs_ops;   </rich_text><rich_text foreground="#00000000ffff">//这里定义的ramfs_ops为</rich_text><rich_text>
</rich_text><rich_text foreground="#00000000ffff">            /*
            static const struct   super_operations ramfs_ops = {
                      .statfs      =   simple_statfs,
                      .drop_inode = generic_delete_inode,
            };
            */</rich_text><rich_text>
                 sb-&gt;s_time_gran   = 1;
                 inode = ramfs_get_inode(sb, S_IFDIR | 0755, 0);    </rich_text><rich_text foreground="#00000000ffff">//初始化一个inode，并将与sb建立关系，设置inode各种属性</rich_text><rich_text>
             
                 root = d_alloc_root(inode);    </rich_text><rich_text foreground="#00000000ffff">//分配dentry root</rich_text><rich_text>
                 if (!root)   {
                     iput(inode);
                     return   -ENOMEM;
                 }
                 sb-&gt;s_root   = root;
                 return 0;
            }
            
void simple_set_mnt(struct vfsmount *mnt, struct super_block *sb)
{
	mnt-&gt;mnt_sb = sb;
	mnt-&gt;mnt_root = dget(sb-&gt;s_root);
}
            
这样do_kern_mount就结束了，此时用图可表示为：
           </rich_text><rich_text justification="left"></rich_text><rich_text>
</rich_text><rich_text foreground="#00000000ffff">图中read_super改为get_sb， 并增加kill_sb</rich_text><rich_text>

分配和初始化了 inode 结构之后，会调用 d_alloc_root() 函数来为 VFS的目录树建立起关键的根目录 (struct dentry)dentry，并将 dentry 中的 d_sb 指针指向 sb，d_inode 指针指向 inode。
将mnt 中的 mnt_sb 指针指向 sb，mnt_root 和 mnt_mountpoint 指针指向 dentry，而 mnt_parent指针则指向自身。

</rich_text><rich_text weight="heavy">增加/dev</rich_text><rich_text>

           </rich_text><rich_text justification="left"></rich_text><rich_text>


</rich_text><rich_text weight="heavy">mount -t ext2 /dev/hda2 /dev  </rich_text><rich_text>         
           </rich_text><rich_text justification="left"></rich_text><rich_text>
           
           
           </rich_text><encoded_png char_offset="3744"></encoded_png><encoded_png char_offset="10998"></encoded_png><encoded_png char_offset="24113"></encoded_png><encoded_png char_offset="27366"></encoded_png><encoded_png char_offset="32457"></encoded_png><encoded_png char_offset="32723"></encoded_png><encoded_png char_offset="32778"></encoded_png></node><node name="rootfs" prog_lang="custom-colors" readonly="False" tags="" unique_id="23"><rich_text>    </rich_text><rich_text foreground="#ffff00000000">驱动加载过程中就可以在操作如上sysfs，但记住此时sysfs、dev等文件系统并没有和系统current根文件系统和根目录有任何关联、这时用户空间程序是访问不到这些文件系统的</rich_text><rich_text>
    </rich_text><rich_text foreground="#ffff00000000">sysfs文件系统挂载到系统current目录树是在用户空间init进程中完成的；如下代码片段：</rich_text><rich_text>
</rich_text><rich_text foreground="#00000000ffff">    int main(int argc, char **argv)
    {
      mkdir(&quot;/dev&quot;, 0755);
      mkdir(&quot;/proc&quot;, 0755);
      mkdir(&quot;/sys&quot;, 0755);
      //设备文件系统的挂载
      mount(&quot;tmpfs&quot;, &quot;/dev&quot;, &quot;tmpfs&quot;, 0, &quot;mode=0755&quot;);
      mkdir(&quot;/dev/pts&quot;, 0755);
      mkdir(&quot;/dev/socket&quot;, 0755);
      mount(&quot;devpts&quot;, &quot;/dev/pts&quot;, &quot;devpts&quot;, 0, NULL);
      //proc文件系统的挂载
      mount(&quot;proc&quot;, &quot;/proc&quot;, &quot;proc&quot;, 0, NULL);
      //sysfs文件系统的挂载
      mount(&quot;sysfs&quot;, &quot;/sys&quot;, &quot;sysfs&quot;, 0, NULL);
    }
</rich_text><rich_text>
1).初始化rootfs文件系统
   初始化rootfs文件系统流程：
    start_kernel                    #(init/main.c)
    -&gt;vfs_caches_init           #(fs/dcache.c)
        -&gt;mnt_init                  #(fs/namespace.c)

    void __init vfs_caches_init(unsigned long mempages)
    {
	    unsigned long reserve;

	    /* Base hash sizes on available memory, with a reserve equal to
               150% of current kernel size */

	    reserve = min((mempages - nr_free_pages()) * 3/2, mempages - 1);
	    mempages -= reserve;

	    names_cachep = kmem_cache_create(&quot;names_cache&quot;, PATH_MAX, 0,
			    SLAB_HWCACHE_ALIGN|SLAB_PANIC, NULL);

	    dcache_init();                 //创建dentry结构对象的cache
	    inode_init();                   //创建inode结构对象的cache
	    files_init(mempages);   //初始化struct file_stat_struct files_stat
	    mnt_init();                     //初始化挂载点 全局变量链表
	    bdev_cache_init();        //注册块设备文件系统
	    chrdev_init();                //注册字符设备文件系统
    }
        
   mnt_init函数如
    void __init mnt_init(void)
    {
	    unsigned u;
	    int err;

	    init_rwsem(&amp;namespace_sem);

	    mnt_cache = kmem_cache_create(&quot;mnt_cache&quot;, sizeof(struct mount),
			    0, SLAB_HWCACHE_ALIGN | SLAB_PANIC, NULL);

	    mount_hashtable = (struct list_head *)__get_free_page(GFP_ATOMIC);

	    if (!mount_hashtable)
		    panic(&quot;Failed to allocate mount hash table\n&quot;);

	    printk(KERN_INFO &quot;Mount-cache hash table entries: %lu\n&quot;, HASH_SIZE);

	    for (u = 0; u &lt; HASH_SIZE; u++)
		    INIT_LIST_HEAD(&amp;mount_hashtable[u]);

	    br_lock_init(vfsmount_lock);

	    err = sysfs_init();
	    if (err)
		    printk(KERN_WARNING &quot;%s: sysfs_init error: %d\n&quot;,
			    __func__, err);
	    fs_kobj = kobject_create_and_add(&quot;fs&quot;, NULL);       //在sysfs根目录下创建fs目录
	    if (!fs_kobj)
		    printk(KERN_WARNING &quot;%s: kobj create error\n&quot;, __func__);

	    init_rootfs();                  /*注册rootfs文件系统*/
	    init_mount_tree();        /*这步执行结束后，文件系统中存在目录‘/’，以后的文件系统，会挂载在这个目录下*/
    }
     
    struct kobject *fs_kobj;            
    EXPORT_SYMBOL_GPL(fs_kobj);

   init_rootfs: #(fs/./ramfs/inode.c)
    int __init init_rootfs(void)
    {
	    int err;

	    err = bdi_init(&amp;ramfs_backing_dev_info);
	    if (err)
		    return err;

	    err = register_filesystem(&amp;rootfs_fs_type);              /*rootfs 结构体*/
	    if (err)
		    bdi_destroy(&amp;ramfs_backing_dev_info);

	    return err;
    } 

    static struct backing_dev_info ramfs_backing_dev_info = {
	    .name		= &quot;ramfs&quot;,
	    .ra_pages	= 0,	/* No readahead */
	    .capabilities	= BDI_CAP_NO_ACCT_AND_WRITEBACK |
			      BDI_CAP_MAP_DIRECT | BDI_CAP_MAP_COPY |
			      BDI_CAP_READ_MAP | BDI_CAP_WRITE_MAP | BDI_CAP_EXEC_MAP,
    };
    
    rootfs结构体：
    static struct file_system_type rootfs_fs_type = {
	    .name		= &quot;rootfs&quot;,
	    .mount		= rootfs_mount,
	    .kill_sb	= kill_litter_super,
    };

    struct inode *ramfs_get_inode(struct super_block *sb,
				    const struct inode *dir, umode_t mode, dev_t dev)
    {
	    struct inode * inode = new_inode(sb);

	    if (inode) {
		    inode-&gt;i_ino = get_next_ino();
		    inode_init_owner(inode, dir, mode);
		    inode-&gt;i_mapping-&gt;a_ops = &amp;ramfs_aops;
		    inode-&gt;i_mapping-&gt;backing_dev_info = &amp;ramfs_backing_dev_info;
		    mapping_set_gfp_mask(inode-&gt;i_mapping, GFP_HIGHUSER);
		    mapping_set_unevictable(inode-&gt;i_mapping);
		    inode-&gt;i_atime = inode-&gt;i_mtime = inode-&gt;i_ctime = CURRENT_TIME;
		    switch (mode &amp; S_IFMT) {
		    default:
			    init_special_inode(inode, mode, dev);
			    break;
		    case S_IFREG:
			    inode-&gt;i_op = &amp;ramfs_file_inode_operations;
			    inode-&gt;i_fop = &amp;ramfs_file_operations;
			    break;
		    case S_IFDIR:
			    inode-&gt;i_op = &amp;ramfs_dir_inode_operations;
			    inode-&gt;i_fop = &amp;simple_dir_operations;

			    /* directory inodes start off with i_nlink == 2 (for &quot;.&quot; entry) */
			    inc_nlink(inode);
			    break;
		    case S_IFLNK:
			    inode-&gt;i_op = &amp;page_symlink_inode_operations;
			    break;
		    }
	    }
	    return inode;
    }

    int ramfs_fill_super(struct super_block *sb, void *data, int silent)
    {
	    struct ramfs_fs_info *fsi;
	    struct inode *inode = NULL;
	    struct dentry *root;
	    int err;

	    save_mount_options(sb, data);

	    fsi = kzalloc(sizeof(struct ramfs_fs_info), GFP_KERNEL);
	    sb-&gt;s_fs_info = fsi;
	    if (!fsi) {
		    err = -ENOMEM;
		    goto fail;
	    }

	    err = ramfs_parse_options(data, &amp;fsi-&gt;mount_opts);
	    if (err)
		    goto fail;

	    sb-&gt;s_maxbytes		= MAX_LFS_FILESIZE;
	    sb-&gt;s_blocksize		= PAGE_CACHE_SIZE;
	    sb-&gt;s_blocksize_bits	= PAGE_CACHE_SHIFT;
	    sb-&gt;s_magic		= RAMFS_MAGIC;
	    sb-&gt;s_op		= &amp;ramfs_ops;
	    sb-&gt;s_time_gran		= 1;

	    inode = ramfs_get_inode(sb, NULL, S_IFDIR | fsi-&gt;mount_opts.mode, 0);
	    if (!inode) {
		    err = -ENOMEM;
		    goto fail;
	    }

	    root = d_alloc_root(inode);
	    sb-&gt;s_root = root;
	    if (!root) {
		    err = -ENOMEM;
		    goto fail;
	    }

	    return 0;
    fail:
	    kfree(fsi);
	    sb-&gt;s_fs_info = NULL;
	    iput(inode);
	    return err;
    }

    static struct dentry *rootfs_mount(struct file_system_type *fs_type,
	    int flags, const char *dev_name, void *data)
    {
	    return mount_nodev(fs_type, flags|MS_NOUSER, data, ramfs_fill_super);
    }

    //(fs/super.c)    
    struct dentry *mount_nodev(struct file_system_type *fs_type,
	    int flags, void *data,
	    int (*fill_super)(struct super_block *, void *, int))
    {
	    int error;
	    struct super_block *s = sget(fs_type, NULL, set_anon_super, NULL);  //分配一个超级块结构

	    if (IS_ERR(s))
		    return ERR_CAST(s);

	    s-&gt;s_flags = flags;

	    error = fill_super(s, data, flags &amp; MS_SILENT ? 1 : 0); //ramfs_fill_super填充超级块
	    if (error) {
		    deactivate_locked_super(s);
		    return ERR_PTR(error);
	    }
	    s-&gt;s_flags |= MS_ACTIVE;
	    return dget(s-&gt;s_root);
    }
    EXPORT_SYMBOL(mount_nodev);
    
    执行完init_rootfs后，完成了系统中的kobject以及filesystem中rootfs相关的注册
    init_mount_tree函数执行流程：  
        init_mount_tree
        -&gt;do_kern_mount
            -&gt;vfs_kern_mount
                -&gt;rootfs_get_sb(type-&gt;get_sb)
                    -&gt;ramfs_fill_super
                        -&gt;d_alloc_root
    d_alloc_root函数：
    /**
     * d_alloc_root - allocate root dentry
     * @root_inode: inode to allocate the root for
     *
     * Allocate a root (&quot;/&quot;) dentry for the inode given. The inode is
     * instantiated and returned. %NULL is returned if there is insufficient
     * memory or the inode passed is %NULL.
     */
     
    struct dentry * d_alloc_root(struct inode * root_inode)
    {
	    struct dentry *res = NULL;

	    if (root_inode) {
		    static const struct qstr name = { .name = &quot;/&quot;, .len = 1 };

		    res = d_alloc(NULL, &amp;name);
		    if (res) {
			    res-&gt;d_sb = root_inode-&gt;i_sb;
			    res-&gt;d_parent = res;
			    d_instantiate(res, root_inode);
		    }
	    }
	    return res;
    }
    
static void __init init_mount_tree(void)
{
	struct vfsmount *mnt;
	struct mnt_namespace *ns;
	struct path root;

	mnt = do_kern_mount(&quot;rootfs&quot;, 0, &quot;rootfs&quot;, NULL);
	if (IS_ERR(mnt))
		panic(&quot;Can't create rootfs&quot;);

	ns = create_mnt_ns(mnt);
	if (IS_ERR(ns))
		panic(&quot;Can't allocate initial namespace&quot;);

	init_task.nsproxy-&gt;mnt_ns = ns;
	get_mnt_ns(ns);

	root.mnt = mnt;
	root.dentry = mnt-&gt;mnt_root;

	set_fs_pwd(current-&gt;fs, &amp;root);
	set_fs_root(current-&gt;fs, &amp;root);
}

/*
 * Replace the fs-&gt;{pwdmnt,pwd} with {mnt,dentry}. Put the old values.
 * It can block.
 */
void set_fs_pwd(struct fs_struct *fs, struct path *path)
{
	struct path old_pwd;

	spin_lock(&amp;fs-&gt;lock);
	write_seqcount_begin(&amp;fs-&gt;seq);
	old_pwd = fs-&gt;pwd;
	fs-&gt;pwd = *path;
	path_get_longterm(path);
	write_seqcount_end(&amp;fs-&gt;seq);
	spin_unlock(&amp;fs-&gt;lock);

	if (old_pwd.dentry)
		path_put_longterm(&amp;old_pwd);
}

/*
 * Replace the fs-&gt;{rootmnt,root} with {mnt,dentry}. Put the old values.
 * It can block.
 */
void set_fs_root(struct fs_struct *fs, struct path *path)
{
	struct path old_root;

	spin_lock(&amp;fs-&gt;lock);
	write_seqcount_begin(&amp;fs-&gt;seq);
	old_root = fs-&gt;root;
	fs-&gt;root = *path;
	path_get_longterm(path);
	write_seqcount_end(&amp;fs-&gt;seq);
	spin_unlock(&amp;fs-&gt;lock);
	if (old_root.dentry)
		path_put_longterm(&amp;old_root);
}


到这里do_kern_mount函数就执行完了，总结一下这个函数主要做了：
1、分配了一个vfsmnt结构
2、分配了一个super_block结构，并将赋值给了前面 了vfsmnt结构
3、分配一个inode
4、分配一个dentry结构作为根目录并将前面的inode赋值给它，最后将它赋值给前面分配的super_block结构

    do_kern_mount函数完后，我们调用create_mnt_ns来分本一个命令空间，这里介绍一个命名空间：
    在传统的Unix系统中，只有一个已安装文件系统树：从系统的根文件系统开始，每个进程通过指定合适的路径名可以访问已安装文件系统中的任何文件。 从这个方面考虑，Linux 2.6更加的精确：每个进程可拥有自己的已安装文件系统树——叫做进程的命名空间（namespace）。
    一般来说，整个系统的命名空间只有一个，被大多数进程共享，即位于系统的根文件系统且被init进程使用的已安装文件系统树。不过，如果clone()系统调用以CLONE_NEWNS标志创建一个新进程，那么进程将获取一个新的命名空间。换句话说，如果父进程没有以CLONE_NEWNS标志创建这些子进程，命名空间将由随后的子进程继承。当进程安装或卸载一个文件系统时，仅修改它的命名空间。因此，所做的修改对共享同一命名空间的所有进程都是可见的，并且也只对它们可见。进程甚至可通过使用Linux特有的pivot_root()系统调用来改变它的命名空间的根文件系统。
进程的命名空间由进程描述符的namespace字段指向的namespace结构描述：

struct namespace {
 atomic_t  count;                           /* 引用计数器（共享命名空间的进程数） */
 struct vfsmount * root;                /* 命名空间根目录的已安装文件系统描述符 */
 struct list_head list;                     /* 所有已安装文件系统描述符(vfsmount)链表的头 */
 wait_queue_head_t poll;            /* 命名空间等待队列 */
 int event;                                    /* 事件 */
}; 
list字段是双向循环链表的头，该表聚集了属于命名空间的所有已安装文件系统。
root字段表示已安装文件系统，它是这个命名空间的已安装文件系统树的根。接下来我们将看到的，已安装文件系统由vfsmount结构描述。 

我们看一下create_mnt_ns函数
/**
 * create_mnt_ns - creates a private namespace and adds a root filesystem
 * @mnt: pointer to the new root filesystem mountpoint
 */
static struct mnt_namespace *create_mnt_ns(struct vfsmount *m)
{
	struct mnt_namespace *new_ns = alloc_mnt_ns();
	if (!IS_ERR(new_ns)) {
		struct mount *mnt = real_mount(m);
		mnt-&gt;mnt_ns = new_ns;
		__mnt_make_longterm(mnt);
		new_ns-&gt;root = mnt;
		list_add(&amp;new_ns-&gt;list, &amp;mnt-&gt;mnt_list);
	} else {
		mntput(m);
	}
	return new_ns;
}

调用alloc_mnt_ns分配mnt_namespace结构，然后将前面返回的vfsmount结构的mnt_ns指向新分配的命名空间，将命令空间的根目录指向mnt.
static struct mnt_namespace *alloc_mnt_ns(void)
{
	struct mnt_namespace *new_ns;

	new_ns = kmalloc(sizeof(struct mnt_namespace), GFP_KERNEL);
	if (!new_ns)
		return ERR_PTR(-ENOMEM);
	atomic_set(&amp;new_ns-&gt;count, 1);
	new_ns-&gt;root = NULL;
	INIT_LIST_HEAD(&amp;new_ns-&gt;list);
	init_waitqueue_head(&amp;new_ns-&gt;poll);
	new_ns-&gt;event = 0;
	return new_ns;
}

    回到init_mount_tree函数，随后将 do_kern_mount() 函数中建立的 mnt 和 dentry 信息记录在了init_task 进程的进程数据块中，这样所有以后从 init_task 进程 fork 出来的进程也都先天地继承了这一信息，最后便是将 do_kern_mount() 函数中建立的 mnt 和 dentry 信息记录在了当前进程的 fs结构中。
这样init_mount_tree函数就执行完了，这里要文件系统安装的第一步也就完成了。

</rich_text></node><node name="sysfs" prog_lang="custom-colors" readonly="False" tags="" unique_id="24"><rich_text>sysfs_init: #(fs/sysfs/mount.c)
    static void free_sysfs_super_info(struct sysfs_super_info *info)
    {
	    int type;
	    for (type = KOBJ_NS_TYPE_NONE; type &lt; KOBJ_NS_TYPES; type++)
		    kobj_ns_drop(type, info-&gt;ns[type]);
	    kfree(info);
    }
    
    static struct dentry *sysfs_mount(struct file_system_type *fs_type,
	    int flags, const char *dev_name, void *data)
    {
	    struct sysfs_super_info *info;
	    enum kobj_ns_type type;
	    struct super_block *sb;
	    int error;

	    info = kzalloc(sizeof(*info), GFP_KERNEL);
	    if (!info)
		    return ERR_PTR(-ENOMEM);

	    for (type = KOBJ_NS_TYPE_NONE; type &lt; KOBJ_NS_TYPES; type++)
		    info-&gt;ns[type] = kobj_ns_grab_current(type);

	    sb = sget(fs_type, sysfs_test_super, sysfs_set_super, info);
	    if (IS_ERR(sb) || sb-&gt;s_fs_info != info)
		    free_sysfs_super_info(info);
	    if (IS_ERR(sb))
		    return ERR_CAST(sb);
	    if (!sb-&gt;s_root) {
		    sb-&gt;s_flags = flags;
		    error = sysfs_fill_super(sb, data, flags &amp; MS_SILENT ? 1 : 0);
		    if (error) {
			    deactivate_locked_super(sb);
			    return ERR_PTR(error);
		    }
		    sb-&gt;s_flags |= MS_ACTIVE;
	    }

	    return dget(sb-&gt;s_root);
    }

    static void sysfs_kill_sb(struct super_block *sb)
    {
	    struct sysfs_super_info *info = sysfs_info(sb);
	    /* Remove the superblock from fs_supers/s_instances
	     * so we can't find it, before freeing sysfs_super_info.
	     */
	    kill_anon_super(sb);
	    free_sysfs_super_info(info);
    }
    
    static struct file_system_type sysfs_fs_type = {
	    .name		= &quot;sysfs&quot;,
	    .mount		= sysfs_mount,
	    .kill_sb	  = sysfs_kill_sb,
    };

    int __init sysfs_init(void)
    {
	    int err = -ENOMEM;
        //创建一个分配sysfs_dirent的cache 
	    sysfs_dir_cachep = kmem_cache_create(&quot;sysfs_dir_cache&quot;,
					          sizeof(struct sysfs_dirent),
					          0, 0, NULL);
	    if (!sysfs_dir_cachep)
		    goto out;
        /* 
        * 备用存储设备初始化(bdi),用来存储数据的设备  
        */ 
	    err = sysfs_inode_init();
	    if (err)
		    goto out_err;
        /* 
        * 注册文件系统，就是将sysfs_fs_type对应的文件系统加入到内核全局变量 
        * file_systems中,它定义在:/fs/filesystems.c文件中，是个静态的，只有本文件 
        * 相关函数维护和访问 
        * static struct file_system_type *file_systems; 
        * 
        * 传入的参数是静态全局变量sysfs_fs_type 
        */ 
	    err = register_filesystem(&amp;sysfs_fs_type);
	    if (!err) {
            /* 
            * /include/linux/fs.h中定义: 
            * #define kern_mount(type) kern_mount_data(type, NULL) 
            * 本函数最终目的是将文件系统的 vfsmount结构 sysfs_mnt存储起来 
            * 核心就是取到这个结构的值,以备后用 
            * 
            * 传入的参数是静态全局变量sysfs_fs_type 
            */ 	
		    sysfs_mnt = kern_mount(&amp;sysfs_fs_type);
		    if (IS_ERR(sysfs_mnt)) {
			    printk(KERN_ERR &quot;sysfs: could not mount!\n&quot;);
			    err = PTR_ERR(sysfs_mnt);
			    sysfs_mnt = NULL;
			    unregister_filesystem(&amp;sysfs_fs_type);
			    goto out_err;
		    }
	    } else
		    goto out_err;
    out:
	    return err;
    out_err:
	    kmem_cache_destroy(sysfs_dir_cachep);
	    sysfs_dir_cachep = NULL;
	    goto out;
    }

 /////////////////////////mount vfsmount生成////////////////////////////  
 /* 
  * /fs/namespace.c中定义: 
  * 调用vfs_kern_mount进一步处理 
  * 
  * 传入的参数是静态全局变量sysfs_fs_type,data=NULL 
  */  
 struct vfsmount *kern_mount_data(struct file_system_type *type, void *data)  
 {  
     struct vfsmount *mnt;  
     mnt = vfs_kern_mount(type, MS_KERNMOUNT, type-&gt;name, data);  
     if (!IS_ERR(mnt)) {  
         real_mount(mnt)-&gt;mnt_ns = MNT_NS_INTERNAL;  
     }  
     return mnt;  
 }  
    
 /* 
  * vfsmount与mount结构:前者是后者的一个成员，都有dentry结构 vfsmount.dentry 
  * mount.mnt_mountpoint都指向子文件系统(sysfs)的根dentry 
  * 
  * /fs/namespace.c中定义 
  *参数: 
  * type=sysfs_fs_type 
  * flags=MS_KERNMOUNT 
  * name= type-&gt;name=sysfs_fs_type-&gt;name=&quot;sysfs&quot; 
  * data=NULL 
  *  
  * 本函数是取得struct vfsmount结构。但需要加载sysfs以取得sysfs的根dentry. 
  * 将根dentry与要返回的vfsmount联系起来。 
  * 申请了一个mount,它体内有一个内嵌的vfsmount(不是指针型的)，回头将它返回 
  * 也就是说返回的vfsmount是mount的一个成员结构,通过vfsmount就能找到mount 
  */   
   
 struct vfsmount *   
 vfs_kern_mount(struct file_system_type *type, int flags, const char *name, void *data)  
  {  
     struct mount *mnt;  
     struct dentry *root;  
    
     if (!type)  
         return ERR_PTR(-ENODEV);  
     //申请一个struct mount结构  
     mnt = alloc_vfsmnt(name);  
     if (!mnt)  
         return ERR_PTR(-ENOMEM);  
    
     if (flags &amp; MS_KERNMOUNT)  
         mnt-&gt;mnt.mnt_flags = MNT_INTERNAL;  
     //得到本文件系统的根dentry  
     root = mount_fs(type, flags, name, data);  
     if (IS_ERR(root)) {  
         free_vfsmnt(mnt);  
         return ERR_CAST(root);  
     }  
    
     mnt-&gt;mnt.mnt_root = root;  
     mnt-&gt;mnt.mnt_sb = root-&gt;d_sb;  
     mnt-&gt;mnt_mountpoint = mnt-&gt;mnt.mnt_root;  
     mnt-&gt;mnt_parent = mnt;  
     br_write_lock(&amp;vfsmount_lock);  
     //mount结构通过mnt_instance连接到超级块的s_mounts字段  
     list_add_tail(&amp;mnt-&gt;mnt_instance, &amp;root-&gt;d_sb-&gt;s_mounts);  
     br_write_unlock(&amp;vfsmount_lock);  
     return &amp;mnt-&gt;mnt;  
  }  
 /* 
  * /fs/super.c中定义 
  * 参数: 
  * type=sysfs_fs_type 
  * flags=MS_KERNMOUNT 
  * name= type-&gt;name=sysfs_fs_type-&gt;name=&quot;sysfs&quot; 
  * data=NULL 
  * 
  * 函数功能： 
  * 根据type加载文件系统并返回它的root dentry 
  */  
 struct dentry *  
 mount_fs(struct file_system_type *type, int flags, const char *name, void *data)  
 {  
     struct dentry *root;  
     struct super_block *sb;  
     char *secdata = NULL;  
     int error = -ENOMEM;  
   
     if (data &amp;&amp; !(type-&gt;fs_flags &amp; FS_BINARY_MOUNTDATA)) {  
         secdata = alloc_secdata();  
         if (!secdata)  
             goto out;  
   
         error = security_sb_copy_data(data, secdata);  
         if (error)  
             goto out_free_secdata;  
     }  
     /* 
      * 调用type的mount函数,. 
      * 即sysfs_fs_type-&gt;mount=sysfs_mount()[/fs/sysfs/mount.c] 
      * 整个过程像是这样:对VFS来说，它只要知道文件系统相关信息，并存储起来 
      * 且vfs调用自己定义好的接口来实现mount(其它操作也一样),具体功能 
      * 由具体的文件系统自己定义，只要接口保持一致就行。 
      * 对sysfs来说,它提供具体相关结构的生成，还得靠自己的函数。这些结构 
      * 包括dentry..super_block..mount..vfsmount等，只是把这些信息放在了 
      * 文件系统类型sysfs_fs_type中，等待VFS体系来调用罢了。说白了自己让别人 
      * 管自己，最后还是自己劳动。 
      */  
        
     root = type-&gt;mount(type, flags, name, data);  
     if (IS_ERR(root)) {  
         error = PTR_ERR(root);  
         goto out_free_secdata;  
     }  
     sb = root-&gt;d_sb;  
     BUG_ON(!sb);  
     WARN_ON(!sb-&gt;s_bdi);  
     WARN_ON(sb-&gt;s_bdi == &amp;default_backing_dev_info);  
     sb-&gt;s_flags |= MS_BORN;  
   
     error = security_sb_kern_mount(sb, flags, secdata);  
     if (error)  
         goto out_sb;   
     ......  
     up_write(&amp;sb-&gt;s_umount);  
     free_secdata(secdata);  
     return root;  
 out_sb:  
     dput(root);  
     deactivate_locked_super(sb);  
 out_free_secdata:  
     free_secdata(secdata);  
 out:  
     return ERR_PTR(error);  
}  
   

    #(fs/sysfs/inode.c)
    static const struct address_space_operations sysfs_aops = {
	    .readpage	= simple_readpage,
	    .write_begin	= simple_write_begin,
	    .write_end	= simple_write_end,
    };

    static struct backing_dev_info sysfs_backing_dev_info = {
	    .name		= &quot;sysfs&quot;,
	    .ra_pages	= 0,	/* No readahead */
	    .capabilities	= BDI_CAP_NO_ACCT_AND_WRITEBACK,
    };

    static const struct inode_operations sysfs_inode_operations ={
	    .permission	= sysfs_permission,
	    .setattr	= sysfs_setattr,
	    .getattr	= sysfs_getattr,
	    .setxattr	= sysfs_setxattr,
    };

    int __init sysfs_inode_init(void)
    {
	    return bdi_init(&amp;sysfs_backing_dev_info);
    }

    在sysfs_init()-&gt;kern_mount()-&gt;vfs_kern_mount()中会有：
    #define kern_mount(type) kern_mount_data(type, NULL)
    
    error = type-&gt;mount(type, flags, name, data); 
        -&gt;sysfs_mount(struct file_system_type *fs_type, int flags, const char *dev_name, void *data)
            -&gt;sysfs_fill_super( )
    在函数sysfs_fill_super( )中会有：
    root = d_alloc_root(inode);
    会创建一个dentry&quot;/&quot;, 然后文件系统sysfs_fs_type文件系统会挂载在目录&quot;/&quot;下。

    static const struct super_operations sysfs_ops = {
	    .statfs		= simple_statfs,
	    .drop_inode	= generic_delete_inode,
	    .evict_inode	= sysfs_evict_inode,
    };

    struct sysfs_dirent sysfs_root = {
	    .s_name		= &quot;&quot;,
	    .s_count	= ATOMIC_INIT(1),
	    .s_flags	= SYSFS_DIR | (KOBJ_NS_TYPE_NONE &lt;&lt; SYSFS_NS_TYPE_SHIFT),
	    .s_mode		= S_IFDIR | S_IRWXU | S_IRUGO | S_IXUGO,
	    .s_ino		= 1,
    };

    sysfs_get_inode(&amp;sysfs_root)用来将sysfs_root导出相应的inode
    struct inode * sysfs_get_inode(struct super_block *sb, struct sysfs_dirent *sd)
    {
	    struct inode *inode;

        //以super_block和sd-&gt;s_ino为哈希值,到哈希表中寻找相应的inode.如果不存在,则新建
	    inode = iget_locked(sb, sd-&gt;s_ino);	    
	    //对新生成的inode进行初始化
	    if (inode &amp;&amp; (inode-&gt;i_state &amp; I_NEW))
		    sysfs_init_inode(sd, inode);

	    return inode;
    }
         
     首 先,它以sysfs文件系统的super_block和struct  sysfs_dirent.的s_ino成员的值做为哈希值到哈希表中寻找相应的inode.如果在哈希表中不存在这个inode,那就新建一个,并将它 
     链入到哈希表.之后,调用sysfs_init_inode()对生成的inode进行初始化.显然.在mount的时候是不会生成inode的.必定会 进入sysfs_init_inode()函数.代码如下:  
     static void sysfs_init_inode(struct sysfs_dirent *sd, struct inode *inode)
    {
	    struct bin_attribute *bin_attr;

	    inode-&gt;i_private = sysfs_get(sd);
	    inode-&gt;i_mapping-&gt;a_ops = &amp;sysfs_aops;
	    inode-&gt;i_mapping-&gt;backing_dev_info = &amp;sysfs_backing_dev_info;
	    inode-&gt;i_op = &amp;sysfs_inode_operations;

	    set_default_inode_attr(inode, sd-&gt;s_mode);
	    sysfs_refresh_inode(sd, inode);

	    /* initialize inode according to type */
	    switch (sysfs_type(sd)) {
	    case SYSFS_DIR:
		    inode-&gt;i_op = &amp;sysfs_dir_inode_operations;
		    inode-&gt;i_fop = &amp;sysfs_dir_operations;
		    break;
	    case SYSFS_KOBJ_ATTR:
		    inode-&gt;i_size = PAGE_SIZE;
		    inode-&gt;i_fop = &amp;sysfs_file_operations;
		    break;
	    case SYSFS_KOBJ_BIN_ATTR:
		    bin_attr = sd-&gt;s_bin_attr.bin_attr;
		    inode-&gt;i_size = bin_attr-&gt;size;
		    inode-&gt;i_fop = &amp;bin_fops;
		    break;
	    case SYSFS_KOBJ_LINK:
		    inode-&gt;i_op = &amp;sysfs_symlink_inode_operations;
		    break;
	    default:
		    BUG();
	    }

	    unlock_new_inode(inode);
    }

    static int sysfs_fill_super(struct super_block *sb, void *data, int silent)
    {
	    struct inode *inode;
	    struct dentry *root;

	    sb-&gt;s_blocksize = PAGE_CACHE_SIZE;
	    sb-&gt;s_blocksize_bits = PAGE_CACHE_SHIFT;
	    sb-&gt;s_magic = SYSFS_MAGIC;
	    sb-&gt;s_op = &amp;sysfs_ops;
	    sb-&gt;s_time_gran = 1;

	    /* get root inode, initialize and unlock it */
	    mutex_lock(&amp;sysfs_mutex);
	    inode = sysfs_get_inode(sb, &amp;sysfs_root);
	    mutex_unlock(&amp;sysfs_mutex);
	    if (!inode) {
		    pr_debug(&quot;sysfs: could not get root inode\n&quot;);
		    return -ENOMEM;
	    }

	    /* instantiate and link root dentry */
	    root = d_alloc_root(inode);
	    if (!root) {
		    pr_debug(&quot;%s: could not get root dentry!\n&quot;,__func__);
		    iput(inode);
		    return -ENOMEM;
	    }
	    //将sysfs_root关联到root 
	    root-&gt;d_fsdata = &amp;sysfs_root;
	    sb-&gt;s_root = root;
	    return 0;
    }

    static int sysfs_test_super(struct super_block *sb, void *data)
    {
	    struct sysfs_super_info *sb_info = sysfs_info(sb);
	    struct sysfs_super_info *info = data;
	    enum kobj_ns_type type;
	    int found = 1;

	    for (type = KOBJ_NS_TYPE_NONE; type &lt; KOBJ_NS_TYPES; type++) {
		    if (sb_info-&gt;ns[type] != info-&gt;ns[type])
			    found = 0;
	    }
	    return found;
    }

    static int sysfs_set_super(struct super_block *sb, void *data)
    {
	    int error;
	    error = set_anon_super(sb, data);
	    if (!error)
		    sb-&gt;s_fs_info = data;
	    return error;
    }


</rich_text></node><node name="mount系统调用" prog_lang="custom-colors" readonly="False" tags="" unique_id="26"><rich_text>mount命令常用于挂载文件系统，它调用的内核函数是sys_mount，sys_mount主要功能是将用户的命令行参数从用户空间传递到内核空间，并调用do_mount解析参数，完成mount过程。其实现源码如下：
SYSCALL_DEFINE5(mount, char __user *, dev_name, char __user *, dir_name,
		char __user *, type, unsigned long, flags, void __user *, data)
{
	int ret;
	char *kernel_type;
	char *kernel_dir;
	char *kernel_dev;
	unsigned long data_page;

	ret = copy_mount_string(type, &amp;kernel_type);
	if (ret &lt; 0)
		goto out_type;

	kernel_dir = getname(dir_name);
	if (IS_ERR(kernel_dir)) {
		ret = PTR_ERR(kernel_dir);
		goto out_dir;
	}

	ret = copy_mount_string(dev_name, &amp;kernel_dev);
	if (ret &lt; 0)
		goto out_dev;

	ret = copy_mount_options(data, &amp;data_page);
	if (ret &lt; 0)
		goto out_data;

	ret = do_mount(kernel_dev, kernel_dir, kernel_type, flags,
		(void *) data_page);

	free_page(data_page);
out_data:
	kfree(kernel_dev);
out_dev:
	putname(kernel_dir);
out_dir:
	kfree(kernel_type);
out_type:
	return ret;
}

这里主要调用了do_mount来执行具体的挂载操作
/*
 * Flags is a 32-bit value that allows up to 31 non-fs dependent flags to
 * be given to the mount() call (ie: read-only, no-dev, no-suid etc).
 *
 * data is a (void *) that can point to any structure up to
 * PAGE_SIZE-1 bytes, which can contain arbitrary fs-dependent
 * information (or be NULL).
 *
 * Pre-0.97 versions of mount() didn't have a flags word.
 * When the flags word was introduced its top half was required
 * to have the magic value 0xC0ED, and this remained so until 2.4.0-test9.
 * Therefore, if this magic number is present, it carries no information
 * and must be discarded.
 */
long do_mount(char *dev_name, char *dir_name, char *type_page,
		  unsigned long flags, void *data_page)
{
	struct path path;
	int retval = 0;
	int mnt_flags = 0;

	/* Discard magic */
	if ((flags &amp; MS_MGC_MSK) == MS_MGC_VAL)
		flags &amp;= ~MS_MGC_MSK;

	/* Basic sanity checks */

	if (!dir_name || !*dir_name || !memchr(dir_name, 0, PAGE_SIZE))
		return -EINVAL;

	if (data_page)
		((char *)data_page)[PAGE_SIZE - 1] = 0;

	/* ... and get the mountpoint */
	retval = kern_path(dir_name, LOOKUP_FOLLOW, &amp;path);
	if (retval)
		return retval;

	retval = security_sb_mount(dev_name, &amp;path,
				   type_page, flags, data_page);
	if (retval)
		goto dput_out;

	/* Default to relatime unless overriden */
	if (!(flags &amp; MS_NOATIME))
		mnt_flags |= MNT_RELATIME;

	/* Separate the per-mountpoint flags */
	if (flags &amp; MS_NOSUID)
		mnt_flags |= MNT_NOSUID;
	if (flags &amp; MS_NODEV)
		mnt_flags |= MNT_NODEV;
	if (flags &amp; MS_NOEXEC)
		mnt_flags |= MNT_NOEXEC;
	if (flags &amp; MS_NOATIME)
		mnt_flags |= MNT_NOATIME;
	if (flags &amp; MS_NODIRATIME)
		mnt_flags |= MNT_NODIRATIME;
	if (flags &amp; MS_STRICTATIME)
		mnt_flags &amp;= ~(MNT_RELATIME | MNT_NOATIME);
	if (flags &amp; MS_RDONLY)
		mnt_flags |= MNT_READONLY;

	flags &amp;= ~(MS_NOSUID | MS_NOEXEC | MS_NODEV | MS_ACTIVE | MS_BORN |
		   MS_NOATIME | MS_NODIRATIME | MS_RELATIME| MS_KERNMOUNT |
		   MS_STRICTATIME);

	if (flags &amp; MS_REMOUNT)
		retval = do_remount(&amp;path, flags &amp; ~MS_REMOUNT, mnt_flags,
				    data_page);
	else if (flags &amp; MS_BIND)
		retval = do_loopback(&amp;path, dev_name, flags &amp; MS_REC);
	else if (flags &amp; (MS_SHARED | MS_PRIVATE | MS_SLAVE | MS_UNBINDABLE))
		retval = do_change_type(&amp;path, flags);
	else if (flags &amp; MS_MOVE)
		retval = do_move_mount(&amp;path, dev_name);
	else
		retval = do_new_mount(&amp;path, type_page, flags, mnt_flags,
				      dev_name, data_page);
dput_out:
	path_put(&amp;path);
	return retval;
}

struct vfsmount {
	struct dentry *mnt_root;	/* root of the mounted tree */
	struct super_block *mnt_sb;	/* pointer to superblock */
	int mnt_flags;
};

struct path {
	struct vfsmount *mnt;
	struct dentry *dentry;
};

struct mount {
	struct list_head mnt_hash;
	struct mount *mnt_parent;
	struct dentry *mnt_mountpoint;
	struct vfsmount mnt;
#ifdef CONFIG_SMP
	struct mnt_pcp __percpu *mnt_pcp;
	atomic_t mnt_longterm;		/* how many of the refs are longterm */
#else
	int mnt_count;
	int mnt_writers;
#endif
	struct list_head mnt_mounts;	/* list of children, anchored here */
	struct list_head mnt_child;	/* and going through their mnt_child */
	struct list_head mnt_instance;	/* mount instance on sb-&gt;s_mounts */
	const char *mnt_devname;	/* Name of device e.g. /dev/dsk/hda1 */
	struct list_head mnt_list;
	struct list_head mnt_expire;	/* link in fs-specific expiry list */
	struct list_head mnt_share;	/* circular list of shared mounts */
	struct list_head mnt_slave_list;/* list of slave mounts */
	struct list_head mnt_slave;	/* slave list entry */
	struct mount *mnt_master;	/* slave is on master-&gt;mnt_slave_list */
	struct mnt_namespace *mnt_ns;	/* containing namespace */
#ifdef CONFIG_FSNOTIFY
	struct hlist_head mnt_fsnotify_marks;
	__u32 mnt_fsnotify_mask;
#endif
	int mnt_id;			/* mount identifier */
	int mnt_group_id;		/* peer group identifier */
	int mnt_expiry_mark;		/* true if marked for expiry */
	int mnt_pinned;
	int mnt_ghosts;
};

在do_mount执行一些参数的检查，以及挂载标志的设置，函数会根据调用参数 flags 来决定调用以下四个函数之一：do_remount()、 do_loopback()、do_move_mount()、do_add_mount()。这里调用do_new_mount来执行一新的挂载操作：
/*
 * create a new mount for userspace and request it to be added into the
 * namespace's tree
 */
static int do_new_mount(struct path *path, char *type, int flags,
			int mnt_flags, char *name, void *data)
{
	struct vfsmount *mnt;
	int err;

	if (!type)
		return -EINVAL;

	/* we need capabilities... */
	if (!capable(CAP_SYS_ADMIN))
		return -EPERM;

	mnt = do_kern_mount(type, flags, name, data);
	if (IS_ERR(mnt))
		return PTR_ERR(mnt);

	err = do_add_mount(real_mount(mnt), path, mnt_flags);
	if (err)
		mntput(mnt);
	return err;
}

static struct vfsmount *
do_kern_mount(const char *fstype, int flags, const char *name, void *data)
{
	struct file_system_type *type = get_fs_type(fstype);
	struct vfsmount *mnt;
	if (!type)
		return ERR_PTR(-ENODEV);
	mnt = vfs_kern_mount(type, flags, name, data);
	if (!IS_ERR(mnt) &amp;&amp; (type-&gt;fs_flags &amp; FS_HAS_SUBTYPE) &amp;&amp;
	    !mnt-&gt;mnt_sb-&gt;s_subtype)
		mnt = fs_set_subtype(mnt, fstype);
	put_filesystem(type);
	return mnt;
}
do_kern_mount()处理实际的安装操作并返回一个新安装文件系统描述符的地址, 这里定义了一脸上vfsmount指针，vfsmount结构描述的是一个独立文件系统的挂载信息，每个不同挂载点对应一个独立的vfsmount结构，属于同一文件系统的所有目录和文件隶属于同一个vfsmount，该vfsmount结构对应于该文件系统顶层目录，即挂载目录。
主要工作有二：一是获得一个新的安装区域块，二是将该新的安装区域块加入了安装系统链表
看一下vfs_kern_mount：
struct vfsmount *
vfs_kern_mount(struct file_system_type *type, int flags, const char *name, void *data)
{
	struct mount *mnt;
	struct dentry *root;

	if (!type)
		return ERR_PTR(-ENODEV);

	mnt = alloc_vfsmnt(name);
	if (!mnt)
		return ERR_PTR(-ENOMEM);

	if (flags &amp; MS_KERNMOUNT)
		mnt-&gt;mnt.mnt_flags = MNT_INTERNAL;

	root = mount_fs(type, flags, name, data);
	if (IS_ERR(root)) {
		free_vfsmnt(mnt);
		return ERR_CAST(root);
	}

	mnt-&gt;mnt.mnt_root = root;
	mnt-&gt;mnt.mnt_sb = root-&gt;d_sb;
	mnt-&gt;mnt_mountpoint = mnt-&gt;mnt.mnt_root;
	mnt-&gt;mnt_parent = mnt;
	br_write_lock(vfsmount_lock);
	list_add_tail(&amp;mnt-&gt;mnt_instance, &amp;root-&gt;d_sb-&gt;s_mounts);   //把mnt_instance连接到s_mounts尾
	br_write_unlock(vfsmount_lock);
	return &amp;mnt-&gt;mnt;
}
EXPORT_SYMBOL_GPL(vfs_kern_mount);

struct dentry *
mount_fs(struct file_system_type *type, int flags, const char *name, void *data)
{
	struct dentry *root;
	struct super_block *sb;
	char *secdata = NULL;
	int error = -ENOMEM;

	if (data &amp;&amp; !(type-&gt;fs_flags &amp; FS_BINARY_MOUNTDATA)) {
		secdata = alloc_secdata();
		if (!secdata)
			goto out;

		error = security_sb_copy_data(data, secdata);
		if (error)
			goto out_free_secdata;
	}

	root = type-&gt;mount(type, flags, name, data);
	if (IS_ERR(root)) {
		error = PTR_ERR(root);
		goto out_free_secdata;
	}
	sb = root-&gt;d_sb;
	BUG_ON(!sb);
	WARN_ON(!sb-&gt;s_bdi);
	WARN_ON(sb-&gt;s_bdi == &amp;default_backing_dev_info);
	sb-&gt;s_flags |= MS_BORN;

	error = security_sb_kern_mount(sb, flags, secdata);
	if (error)
		goto out_sb;

	/*
	 * filesystems should never set s_maxbytes larger than MAX_LFS_FILESIZE
	 * but s_maxbytes was an unsigned long long for many releases. Throw
	 * this warning for a little while to try and catch filesystems that
	 * violate this rule.
	 */
	WARN((sb-&gt;s_maxbytes &lt; 0), &quot;%s set sb-&gt;s_maxbytes to &quot;
		&quot;negative value (%lld)\n&quot;, type-&gt;name, sb-&gt;s_maxbytes);

	up_write(&amp;sb-&gt;s_umount);
	free_secdata(secdata);
	return root;
out_sb:
	dput(root);
	deactivate_locked_super(sb);
out_free_secdata:
	free_secdata(secdata);
out:
	return ERR_PTR(error);
}

回到do_new_mount函数，接着调用do_add_mount添加到命令空间挂载树上去
/*
 * add a mount into a namespace's mount tree
 */
static int do_add_mount(struct mount *newmnt, struct path *path, int mnt_flags)
{
	int err;

	mnt_flags &amp;= ~(MNT_SHARED | MNT_WRITE_HOLD | MNT_INTERNAL);

	err = lock_mount(path);
	if (err)
		return err;

	err = -EINVAL;
	if (!(mnt_flags &amp; MNT_SHRINKABLE) &amp;&amp; !check_mnt(real_mount(path-&gt;mnt)))
		goto unlock;

	/* Refuse the same filesystem on the same mount point */
	err = -EBUSY;
	if (path-&gt;mnt-&gt;mnt_sb == newmnt-&gt;mnt.mnt_sb &amp;&amp;
	    path-&gt;mnt-&gt;mnt_root == path-&gt;dentry)
		goto unlock;

	err = -EINVAL;
	if (S_ISLNK(newmnt-&gt;mnt.mnt_root-&gt;d_inode-&gt;i_mode))
		goto unlock;

	newmnt-&gt;mnt.mnt_flags = mnt_flags;
	err = graft_tree(newmnt, path);

unlock:
	unlock_mount(path);
	return err;
}

/*
 * lookup_mnt increments the ref count before returning
 * the vfsmount struct.
 */
struct vfsmount *lookup_mnt(struct path *path)
{
	struct mount *child_mnt;

	br_read_lock(vfsmount_lock);
	child_mnt = __lookup_mnt(path-&gt;mnt, path-&gt;dentry, 1);
	if (child_mnt) {
		mnt_add_count(child_mnt, 1);
		br_read_unlock(vfsmount_lock);
		return &amp;child_mnt-&gt;mnt;
	} else {
		br_read_unlock(vfsmount_lock);
		return NULL;
	}
}

static inline int check_mnt(struct mount *mnt)
{
	return mnt-&gt;mnt_ns == current-&gt;nsproxy-&gt;mnt_ns;
}

/*
 * vfsmount lock must be held for write
 */
static void touch_mnt_namespace(struct mnt_namespace *ns)
{
	if (ns) {
		ns-&gt;event = ++event;
		wake_up_interruptible(&amp;ns-&gt;poll);
	}
}

/*
 * vfsmount lock must be held for write
 */
static void __touch_mnt_namespace(struct mnt_namespace *ns)
{
	if (ns &amp;&amp; ns-&gt;event != event) {
		ns-&gt;event = event;
		wake_up_interruptible(&amp;ns-&gt;poll);
	}
}

static int lock_mount(struct path *path)
{
	struct vfsmount *mnt;
retry:
	mutex_lock(&amp;path-&gt;dentry-&gt;d_inode-&gt;i_mutex);
	if (unlikely(cant_mount(path-&gt;dentry))) {
		mutex_unlock(&amp;path-&gt;dentry-&gt;d_inode-&gt;i_mutex);
		return -ENOENT;
	}
	down_write(&amp;namespace_sem);
	mnt = lookup_mnt(path);
	if (likely(!mnt))
		return 0;
	up_write(&amp;namespace_sem);
	mutex_unlock(&amp;path-&gt;dentry-&gt;d_inode-&gt;i_mutex);
	path_put(path);
	path-&gt;mnt = mnt;
	path-&gt;dentry = dget(mnt-&gt;mnt_root);
	goto retry;
}

static void unlock_mount(struct path *path)
{
	up_write(&amp;namespace_sem);
	mutex_unlock(&amp;path-&gt;dentry-&gt;d_inode-&gt;i_mutex);
}

这里主要调用graft_tree()把vfsmnt结构加入到安装系统链表中，同时 graft_tree() 还要将新分配的 struct vfsmount 类型的变量加入到一个hash表中
static int graft_tree(struct mount *mnt, struct path *path)
{
	if (mnt-&gt;mnt.mnt_sb-&gt;s_flags &amp; MS_NOUSER)
		return -EINVAL;

	if (S_ISDIR(path-&gt;dentry-&gt;d_inode-&gt;i_mode) !=
	      S_ISDIR(mnt-&gt;mnt.mnt_root-&gt;d_inode-&gt;i_mode))
		return -ENOTDIR;

	if (d_unlinked(path-&gt;dentry))
		return -ENOENT;

	return attach_recursive_mnt(mnt, path, NULL);
}

/*
 *  @source_mnt : mount tree to be attached
 *  @nd         : place the mount tree @source_mnt is attached
 *  @parent_nd  : if non-null, detach the source_mnt from its parent and
 *  		   store the parent mount and mountpoint dentry.
 *  		   (done when source_mnt is moved)
 *
 *  NOTE: in the table below explains the semantics when a source mount
 *  of a given type is attached to a destination mount of a given type.
 * ---------------------------------------------------------------------------
 * |         BIND MOUNT OPERATION                                            |
 * |**************************************************************************
 * | source--&gt;| shared        |       private  |       slave    | unbindable |
 * | dest     |               |                |                |            |
 * |   |      |               |                |                |            |
 * |   v      |               |                |                |            |
 * |**************************************************************************
 * |  shared  | shared (++)   |     shared (+) |     shared(+++)|  invalid   |
 * |          |               |                |                |            |
 * |non-shared| shared (+)    |      private   |      slave (*) |  invalid   |
 * ***************************************************************************
 * A bind operation clones the source mount and mounts the clone on the
 * destination mount.
 *
 * (++)  the cloned mount is propagated to all the mounts in the propagation
 * 	 tree of the destination mount and the cloned mount is added to
 * 	 the peer group of the source mount.
 * (+)   the cloned mount is created under the destination mount and is marked
 *       as shared. The cloned mount is added to the peer group of the source
 *       mount.
 * (+++) the mount is propagated to all the mounts in the propagation tree
 *       of the destination mount and the cloned mount is made slave
 *       of the same master as that of the source mount. The cloned mount
 *       is marked as 'shared and slave'.
 * (*)   the cloned mount is made a slave of the same master as that of the
 * 	 source mount.
 *
 * ---------------------------------------------------------------------------
 * |         		MOVE MOUNT OPERATION                                 |
 * |**************************************************************************
 * | source--&gt;| shared        |       private  |       slave    | unbindable |
 * | dest     |               |                |                |            |
 * |   |      |               |                |                |            |
 * |   v      |               |                |                |            |
 * |**************************************************************************
 * |  shared  | shared (+)    |     shared (+) |    shared(+++) |  invalid   |
 * |          |               |                |                |            |
 * |non-shared| shared (+*)   |      private   |    slave (*)   | unbindable |
 * ***************************************************************************
 *
 * (+)  the mount is moved to the destination. And is then propagated to
 * 	all the mounts in the propagation tree of the destination mount.
 * (+*)  the mount is moved to the destination.
 * (+++)  the mount is moved to the destination and is then propagated to
 * 	all the mounts belonging to the destination mount's propagation tree.
 * 	the mount is marked as 'shared and slave'.
 * (*)	the mount continues to be a slave at the new location.
 *
 * if the source mount is a tree, the operations explained above is
 * applied to each mount in the tree.
 * Must be called without spinlocks held, since this function can sleep
 * in allocations.
 */
static int attach_recursive_mnt(struct mount *source_mnt,
			struct path *path, struct path *parent_path)
{
	LIST_HEAD(tree_list);
	struct mount *dest_mnt = real_mount(path-&gt;mnt);
	struct dentry *dest_dentry = path-&gt;dentry;
	struct mount *child, *p;
	int err;

	if (IS_MNT_SHARED(dest_mnt)) {
		err = invent_group_ids(source_mnt, true);
		if (err)
			goto out;
	}
	err = propagate_mnt(dest_mnt, dest_dentry, source_mnt, &amp;tree_list);
	if (err)
		goto out_cleanup_ids;

	br_write_lock(vfsmount_lock);

	if (IS_MNT_SHARED(dest_mnt)) {
		for (p = source_mnt; p; p = next_mnt(p, source_mnt))
			set_mnt_shared(p);
	}
	if (parent_path) {
		detach_mnt(source_mnt, parent_path);
		attach_mnt(source_mnt, path);
		touch_mnt_namespace(source_mnt-&gt;mnt_ns);
	} else {
		mnt_set_mountpoint(dest_mnt, dest_dentry, source_mnt);
		commit_tree(source_mnt);
	}

	list_for_each_entry_safe(child, p, &amp;tree_list, mnt_hash) {
		list_del_init(&amp;child-&gt;mnt_hash);
		commit_tree(child);
	}
	br_write_unlock(vfsmount_lock);

	return 0;

 out_cleanup_ids:
	if (IS_MNT_SHARED(dest_mnt))
		cleanup_group_ids(source_mnt, NULL);
 out:
	return err;
}

/*
 * vfsmount lock must be held for write
 */
void mnt_set_mountpoint(struct mount *mnt, struct dentry *dentry,
			struct mount *child_mnt)
{
	mnt_add_count(mnt, 1);	/* essentially, that's mntget */
	child_mnt-&gt;mnt_mountpoint = dget(dentry);
	child_mnt-&gt;mnt_parent = mnt;
	spin_lock(&amp;dentry-&gt;d_lock);
	dentry-&gt;d_flags |= DCACHE_MOUNTED;
	spin_unlock(&amp;dentry-&gt;d_lock);
}
这里关系到我们在进行路径名查找了，参考一下</rich_text><rich_text link="webs http://blog.csdn.net/new_abc/article/details/7688880">http://blog.csdn.net/new_abc/article/details/7688880</rich_text><rich_text>。在文章的最后，如果找到的某个path是安装点就会找到其最近一次被安装文件系统的指针。当找到该指针后，便将 nd 中的 mnt 成员换成该安装区域块指针，同时将 nd 中的 dentry 成员换成安装区域块中的 dentry 指针。再来看一 下commit_tree
/*
 * vfsmount lock must be held for write
 */
static void commit_tree(struct mount *mnt)
{
	struct mount *parent = mnt-&gt;mnt_parent;
	struct mount *m;
	LIST_HEAD(head);
	struct mnt_namespace *n = parent-&gt;mnt_ns;

	BUG_ON(parent == mnt);

	list_add_tail(&amp;head, &amp;mnt-&gt;mnt_list);
	list_for_each_entry(m, &amp;head, mnt_list) {
		m-&gt;mnt_ns = n;
		__mnt_make_longterm(m);
	}

	list_splice(&amp;head, n-&gt;list.prev);

	list_add_tail(&amp;mnt-&gt;mnt_hash, mount_hashtable +
				hash(&amp;parent-&gt;mnt, mnt-&gt;mnt_mountpoint));       //添加到父节点链表末
	list_add_tail(&amp;mnt-&gt;mnt_child, &amp;parent-&gt;mnt_mounts);    //添加到父节点mnt_mounts链表末
	touch_mnt_namespace(n);
}
这里会把它添加到一个全局的mount_hashtable,这里的插入点是通过hash(parent, mnt-&gt;mnt_mountpoint)，即挂载目录先前的vfsmount结构和dentry结构

 
到这里，文件系统就已经挂载完成了，当下次再次访问到这个挂载点时，就会使用这个新的安装的文件系统指针。

 

</rich_text></node><node name="debugfs" prog_lang="custom-colors" readonly="False" tags="" unique_id="41"><rich_text>在实际的使用中，举个例子来说明，在调试GPIO驱动的时候，我们可以通过debugfs来调试：
首先定义一个file_operations：
staticconst struct file_operations gpiolib_operations = {
.open = gpiolib_open,
.read = gpiolib_read,
.write = gpiolib_write,
.llseek = seq_lseek,
.release = single_release,
};

 
然后，建立一个debugfs文件结点：
(void)debugfs_create_file(&quot;gpio&quot;, S_IFREG | S_IRUGO,
NULL, NULL, &amp;gpiolib_operations);
在实际的驱动中，建立debugfs文件结点一般在驱动初始化的时候。

 
根据我们的调试需要，实现读写操作，一般用得比较多的是read和write操作，所以在gpiolib_read和gpiolib_write里加入我们的调试代码。调用GPIO驱动的时候，我的想法是，给GPIO结点发一个读指令，那么就得传入的gpio号的状态，给GPIO结点发一个写指令，那么就根据传入的参数设置gpio的状态。于是，我只需要实现write函数：
1. static ssize_t gpiolib_write(struct file *file, const char __user *buf,size_t size, loff_t *ppos)  
2. {  
3. charinfo[255];  
4. int port=0,value=0;  
5. memset(info,0, 255);  
6. copy_from_user(info,buf, size);  
7. printk(&quot;gpio:%s\n&quot;,info);  
8. if((info[0]&gt;= '0') &amp;&amp; (info[0] &lt;= '9')){  
9.     port= (info[0] - 48)*10;  
10.     if((info[1]&gt;= '0') &amp;&amp; (info[1] &lt;= '9')){  
11.         port+= (info[1] - 48);  
12.             if(info[2]== ' '){  
13.                 if(info[3] == 'w'){  
14.                     value = (info[4] =='0')?0:1;  
15.                 }   
16.             }   
17.     }  
18. }  
19.   
20. if(info[3]== 'r'){  
21.     gpio_direction_input(port);  
22.     printk(&quot;gpio%dstatus = %d\n&quot;, port, __gpio_get_value(port));  
23. }else if(info[3] == 'w'){  
24.   
25.     printk(&quot;write%d to gpio%d\n&quot;, value, port);  
26.     gpio_direction_output(port,value);  
27.     __gpio_set_value(port,value);  
28.        }  
29. return size;  
30. }  

这段代码的意思，根据传入的参数info作相应的操作，info的格式是：
info[0]和info[1]分别代表gpio号的十位和个位；
info[2]必须为空格；
info[3]为读写性质，‘w'为写，'r'为读；
info[4]如果为写，那么它表示写的状态。

 
这样就可以在驱动加载之后，用shell命令echo来进行调试了。
例如gpio号为57的端口控制蜂鸣器，gpio号为37的端口连接按键，那么：
蜂鸣器发声：echo 57 w1 &gt; gpio
蜂鸣器停止：echo 57 w0 &gt; gpio
读取按键状态：echo 37 r &gt; gpio
那么这个gpio文件结点在哪呢？
内核启动后会把debugfs文件系统挂载到/sys/kernel/debug目录下，我们的gpio文件结点就在这里。
如果没有找到，那么可以手动挂载mount-t debugfs none /mnt，这样就挂载到/mnt目录下了。

 
PS:
 
更为强大的调试选项：
CONFIG_GPIO_SYSFS   定义此宏后 会在/sys/class/gpio/下面到处gpio的设备文件 可以通过此设备文件对gpio进行控制与读取   

========================================================================================================================
</rich_text><rich_text link="webs http://www.cnblogs.com/wwang/archive/2011/01/17/1937609.html" scale="h2">Linux内核里的DebugFS</rich_text><rich_text>

DebugFS，顾名思义，是一种用于内核调试的虚拟文件系统，内核开发者通过debugfs和用户空间交换数据。类似的虚拟文件系统还有procfs和sysfs等，这几种虚拟文件系统都并不实际存储在硬盘上，而是Linux内核运行起来后才建立起来。
通常情况下，最常用的内核调试手段是printk。但printk并不是所有情况都好用，比如打印的数据可能过多，我们真正关心的数据在大量的输出 里不是那么一目了然；或者我们在调试时可能需要修改某些内核变量，这种情况下printk就无能为力，而如果为了修改某个值重新编译内核或者驱动又过于低 效，此时就需要一个临时的文件系统可以把我们需要关心的数据映射到用户空间。在过去，procfs可以实现这个目的，到了2.6时代，新引入的sysfs 也同样可以实现，但不论是procfs或是sysfs，用它们来实现某些debug的需求，似乎偏离了它们创建的本意。比如procfs，其目的是反映进 程的状态信息；而sysfs主要用于Linux设备模型。不论是procfs或是sysfs的接口应该保持相对稳定，因为用户态程序很可能会依赖它们。当 然，如果我们只是临时借用procfs或者sysfs来作debug之用，在代码发布之前将相关调试代码删除也无不可。但如果相关的调试借口要在相当长的 一段时间内存在于内核之中，就不太适合放在procfs和sysfs里了。故此，debugfs应运而生。
默认情况下，debugfs会被挂载在目录/sys/kernel/debug之下，如果您的发行版里没有自动挂载，可以用如下命令手动完成：
# mount -t debugfs none /your/debugfs/dir
Linux内核为debugfs提供了非常简洁的API，本文接下来将以一个实作为例来介绍，sample code可以从</rich_text><rich_text link="webs http://files.cnblogs.com/wwang/debugfs.zip">这里</rich_text><rich_text>下载。
这个实作会在debugfs中建立如下的目录结构：

其中，a对应模块中的一个u8类型的变量，b和subdir下面的c都是对应模块里的一个字符数组，只是它们的实现方式不同。
在module_init里，我们首先要建立根目录mydebug：
1. my_debugfs_root = debugfs_create_dir(&quot;mydebug&quot;, NULL);   

第一个参数是目录的名称，第二个参数用来指定这个目录的上级目录，如果是NULL，则表示是放在debugfs的根目录里。子目录也是用debugfs_create_dir来实现：
1. sub_dir = debugfs_create_dir(&quot;subdir&quot;, my_debugfs_root);   

建立文件a的代码非常简单：
1. debugfs_create_u8(&quot;a&quot;, 0644, my_debugfs_root, &amp;a);   

这表示文件名为“a”，文件属性是0644，父目录是上面建立的“mydebug”，对应的变量是模块中的a。Linux内核还提供了其他一些创建debugfs文件的API，请参考本文的附录。
b是一个32-bytes的字符数组，在debugfs里，数组可以用blob wrapper来实现。
1. char hello[32] = &quot;Hello world!\n&quot;;  
2. structdebugfs_blob_wrapper b;   
3.     
4. b.data = (void*)hello;   
5. b.size = strlen(hello) + 1;  
6. debugfs_create_blob(&quot;b&quot;, 0644, my_debugfs_root, &amp;b);   

这里需要注意的是，blob wrapper定义的数据只能是只读的。在本例中，虽然我们把文件b的权限设定为0644，但实际这个文件还是只读的，如果试图改写这个文件，系统将提示出错。如果需要对内核数组进行写的动作，blob wrapper就无法满足要求，我们只能通过自己定义文件操作来实现。在这个实作里，可以参考文件c的实现。c和b在模块里对应着同一块字符数组，不同的是，b是只读的，而c通过自定义的文件操作同时实现了读和写。
1. static int c_open(structinode *inode, structfile *filp)   
2. {   
3.     filp-&gt;private_data = inode-&gt;i_private;  
4.     return0;   
5. }   
6.     
7. staticssize_t c_read(structfile *filp, char__user *buffer,   
8.         size_tcount, loff_t *ppos)   
9. {   
10.     if(*ppos &gt;= 32)   
11.         return0;   
12.     if(*ppos + count &gt; 32)   
13.         count = 32 - *ppos;  
14.     
15.     if(copy_to_user(buffer, hello + *ppos, count))   
16.         return-EFAULT;   
17.     
18.     *ppos += count;  
19.     
20.     returncount;   
21. }   
22.     
23. staticssize_t c_write(structfile *filp, constchar __user *buffer,  
24.         size_tcount, loff_t *ppos)   
25. {   
26.     if(*ppos &gt;= 32)   
27.         return0;   
28.     if(*ppos + count &gt; 32)   
29.         count = 32 - *ppos;  
30.     
31.     if(copy_from_user(hello + *ppos, buffer, count))   
32.         return-EFAULT;   
33.     
34.     *ppos += count;  
35.     
36.     returncount;   
37. }   
38.     
39. structfile_operations c_fops = {   
40.     .owner = THIS_MODULE,  
41.     .open = c_open,  
42.     .read = c_read,  
43.     .write = c_write,  
44. };     
45.     
46. debugfs_create_file(&quot;c&quot;, 0644, sub_dir, NULL, &amp;c_fops);   

注：代码里，c_open其实并没有任何用处，因为c_read和c_write直接引用了全局变量hello。这里，我们也可以换一种写法，在read/write函数里用filp-&gt;private_data来引用字符数组hello。到这里，三个文件和子目录已经创建完毕。在module_exit中，我们要记得释放创建的数据。
1. debugfs_remove_recursive(my_debugfs_root);   

debugfs_remove_recursive可以帮我们逐步移除每个分配的dentry，如果您想一个一个手动的移除，也可以直接调用debugfs_remove。 
附录：
创建和撤销目录及文件
1. struct dentry *debugfs_create_dir(constchar *name, structdentry *parent);   
2. structdentry *debugfs_create_file(constchar *name, mode_t mode,   
3.         structdentry *parent, void*data,    
4.         conststruct file_operations *fops);  
5. void debugfs_remove(struct dentry *dentry);   
6. void debugfs_remove_recursive(struct dentry *dentry);   

创建单值文件
1. structdentry *debugfs_create_u8(constchar *name, mode_t mode, structdentry *parent, u8 *value);   
2. structdentry *debugfs_create_u16(constchar *name, mode_t mode,structdentry *parent, u16 *value);   
3. structdentry *debugfs_create_u32(constchar *name, mode_t mode,structdentry *parent, u32 *value);   
4. structdentry *debugfs_create_u64(constchar *name, mode_t mode, structdentry *parent, u64 *value);   
5.     
6. structdentry *debugfs_create_x8(constchar *name, mode_t mode,        structdentry *parent, u8 *value);   
7. structdentry *debugfs_create_x16(constchar *name, mode_t mode,        structdentry *parent, u16 *value);   
8. structdentry *debugfs_create_x32(constchar *name, mode_t mode,         structdentry *parent, u32 *value);   
9.     
10. structdentry *debugfs_create_size_t(constchar *name, mode_t mode,        structdentry *parent, size_t*value);   
11. structdentry *debugfs_create_bool(constchar *name, mode_t mode,         structdentry *parent, u32 *value);   
其中，后缀为x8、x16、x32的这三个函数是指debugfs中的数据用十六进制表示。创建BLOB文件
1. structdebugfs_blob_wrapper {   
2.     void*data;   
3.     unsignedlong size;   
4. };   
5.     
6. structdentry *debugfs_create_blob(constchar *name, mode_t mode,   
7.          structdentry *parent, structdebugfs_blob_wrapper *blob);   

其它
1. structdentry *debugfs_rename(structdentry *old_dir, structdentry *old_dentry,    
2.         structdentry *new_dir, constchar *new_name);   
3.     
4. structdentry *debugfs_create_symlink(constchar *name,    
5.         structdentry *parent, constchar *target);   

 ==================================================================================================================================== 以前都習慣用 printk 和 /proc 做輸入輸出的動作, 不過 debugfs 看起來是 User space 和 kernel space 交流更好的選擇.
 
先確認 Enable Kernel debugfs Function
Kernel hacking —&gt;
 -*- Debug Filesystem
先來個簡單的範例,
 在你要 debug 的 modules 內, 加入 debugfs 的 include file
#include &lt;linux/debugfs.h&gt;
要將想要輸出的變數, 假設叫 pcie0_linked 輸出到 debugfs 上, 在 initial code 的地方加上
 debugfs_create_u32(&quot;pcie0_linked&quot;, 0644, NULL, &amp;pcie0_linked);
接下來就可以重開機了 load 新 kernel 了,
mount debugfs
$ mount -t debugfs debug /debugfs
或是寫在 /etc/fstab
debugfs /debugfs debugfs debug
這時就可以 ls /debugfs/ , 就會出現 pcie0_linked 的檔案.
1. $ cat /debugfs/pcie0_linked  
2. 1  
3. $ echo 0 &gt; /debugfs/pcie0_linked  
4. $ cat /debugfs/pcie0_linked  
5. 0  
像是 procfs 一樣, debugfs 也有 create directory 的 function, 以便讓變數可以在目錄內
 我們小小改一下上面的程式, 加上 create_dir 的功能
1. struct dentry *pcie_dir;  
2. pcie_dir = debugfs_create_dir(&quot;pcie&quot;,NULL);  
3. if( pcie_dir != NULL ) {  
4. debugfs_create_u32(&quot;pcie0_linked&quot;, 0644, pcie_dir, &amp;pcie0_linked);  
5. }  
改了以上的輸出, 接下來就可以在 /debugfs 下, 看到多了一個 pcie 的目錄, 而 pcie0_linked 就在裡面.
如果想用 hex(16 進位), 可以改用 debugfs_create_x32.
proc file system 最棒的就是可以讀寫檔案了, 可以做更多的控制.
 debugfs 也有一個 function 可以讓使用者做檔案讀寫, 這邊寫一個簡單的 sample.
多 include 一個 header
1. #include &lt;linux/seq_file.h&gt;  
2.   
3. static int pcie_reg_open(struct seq_file *s, void *data)  
4. {  
5. seq_printf(s, &quot;pcie0_link status : %s\n&quot;, pcie0_linked == 1 ? &quot;Enable&quot;: &quot;D  
6. return 0;  
7. }  
8.   
9. static int pcie_single_open(struct inode *inode, struct file *file)  
10. {  
11. return single_open(file, pcie_reg_open, inode-&gt;i_private);  
12. }  
13. static ssize_t pcie_debug_write(struct file *file,  
14. const char __user *userbuf,  
15. size_t count, loff_t *ppos)  
16. {  
17. char buf[20];  
18.   
19. if (copy_from_user(buf, userbuf, min(count, sizeof(buf))))  
20. return -EFAULT;  
21.   
22. printk(&quot;%s: %s \n&quot;,__FUNCTION__, buf);  
23.   
24. return count;  
25. }  
26.   
27. static const struct file_operations pcie_ios_fops = {  
28. .open = pcie_single_open,  
29. .read = seq_read,  
30. .write = pcie_debug_write,  
31. .llseek = seq_lseek,  
32. .release = single_release,  
33.   
34. };  
35. debugfs_create_file(&quot;file&quot;, 0644, pcie_dir, NULL, &amp;pcie_ios_fops);  

 這樣
1. $ cat /debugs/pcie/file 會顯示  
2. pcie0_link status : Enable  
3. 而  
4. $ echo &quot;richliu&quot; &gt; /debugfs/pcie/file 會顯示  
5. pcie_debug_write: richliu  
6.   
7. $  

最後要介紹的是比較特別的一種格式 blob, 這是可以傳 binary 到 user space 的格式, blob 的 struct 是
1. struct debugfs_blob_wrapper {  
2. void *data;  
3. unsigned long size;  
4. };  

 在剛剛的 Code 加上
static struct debugfs_blob_wrapper blob; –&gt; 最好放 global.
 char data[100];
 sprintf(data, &quot;Data Pointer is : %08X \n&quot;, data);
 blob.data = data;
 blob.size = 100;
 debugfs_create_blob(&quot;blob&quot;, S_IRUSR, pcie_dir, &amp;blob);
在 Linux 下直接用 hexdump 去讀資料出來
$ hexdump /debugfs/pcie/blob -c
 0000000 D a t a P o i n t e r i s
 0000010 : C 4 0 5 C 1 6 0 \n \0 \0 \0 \0
 0000020 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0 \0
 *
 0000060
請記得 Blob 這個檔案是 Read Only, 只能傳出, 不能傳入…
參考:
 </rich_text><rich_text link="webs http://lwn.net/Articles/115405/">Debugfs</rich_text><rich_text>
 </rich_text><rich_text link="webs http://www.wretch.cc/blog/shinningball/33089435">Debugfs 中譯版(好像是從匪區抄過來的?)</rich_text><rich_text>
</rich_text></node><node name="fuse" prog_lang="custom-colors" readonly="False" tags="" unique_id="85"><rich_text>文件系统是一种用来存储和组织计算机文件、目录及其包含的数据的方法，它使文件、目录以及数据的查找和访问得到简化。如果您正在使用一台计算机，很 可能使用了多个文件系统。文件系统能提供丰富的扩展能力。它可以编写成底层文件系统的一个封装程序，从而对其中的数据进行管理，并提供一个增强的、具有丰 富特性的文件系统（例如 cvsfs-fuse，它为 CVS 提供了一个文件系统的接口；或 Wayback  文件系统，它提供了一种用于保留原始数据文件的文件备份机制）。
在用户空间的文件系统出现之前，文件系统的开发曾是内核开发人员的工作。创 建文件系统需要了解内核编程和内核技术（例如 vfs）方面的知识。调试则需要 C 和 C++  方面的专业技能。但是其他开发人员需要熟练地操作文件系统以添加个性化特性（例如添加历史记录或转发缓存）及对其改进。

</rich_text><rich_text scale="h2" weight="heavy">FUSE 简介</rich_text><rich_text>
使用 FUSE 您可以开发功能完备的文件系统：其具有简单的 API 库，可以被非特权用户访问，并可以安全的实施。更重要的是，FUSE 以往的表现充分证明了其稳定性。
使用 FUSE，您可以像可执行二进制文件一样来开发文件系统，它们需要链接到 FUSE 库上 —— 换言之，这个文件系统框架并不需要您了解文件系统的内幕和内核模块编程的知识。
就文件系统来说，用户空间的文件系统就不再是新奇的设计了。用户空间文件系统的商业实现与学术实现的实例包括：
• LUFS 是一个混合用户空间的文件系统框架，它对用于任何应用程序无数的文件系统提供透明支持。大部分LUFS 包括一个内核模块和一个用户空间的守护进程。从根本上来说，它将大部分 VFS 调用都委托给一个专用的守护进程来处理。
• UserFS 让用户进程可以像普通的文件系统一样进行加载。这种概念性的原型提供了 ftpfs，这可以使用文件系统接口提供匿名 FTP 访问。
• Ufo Project 是为 Solaris 提供的一个全局文件系统，它允许用户将远程文件真正当作本地文件一样对待。
• OpenAFS 是 Andrew FileSystem 的一个开源版本。
• CIFS 是 Common Internet FileSystem 的简称。
与 这些商业实现和学术实现不同，FUSE 将这种文件系统的设计能力带到了 Linux 中来。由于 FUSE 使用的是可执行程序（而不像 LUFS  一样使用的是共享对象），因此可以简化程序的调试和开发。FUSE 可以在 2.4.x 和 2.6.x 的内核上使用，现在可以支持 Java™  绑定，因此您可以不必限定于使用 C 和 C++ 来编写文件系统了。（有关更多使用 FUSE 的用户层的文件系统的内容，请参阅 </rich_text><rich_text link="webs http://www.ibm.com/developerworks/cn/linux/l-fuse/#resources">参考资料</rich_text><rich_text>。）
要在 FUSE 中创建一个文件系统，您需要安装一个 FUSE 内核模块，然后使用 FUSE 库和 API 来创建自己的文件系统。

</rich_text><rich_text scale="h2" weight="heavy">展开 FUSE</rich_text><rich_text>
 要开发一个文件系统，首先请下载 FUSE 的源代码（请参阅 </rich_text><rich_text link="webs http://www.ibm.com/developerworks/cn/linux/l-fuse/#resources">参考资料</rich_text><rich_text>）并展开这个包：tar -zxvf fuse-2.2.tar.gz。这会创建一个 FUSE 目录，其中保存的是源代码。fuse-2.2 目录的内容如下： 
• ./doc 包含了与 FUSE 有关的文档。现在，这只有一个文件 how-fuse-works。
• ./kernel 包含了 FUSE 内核模块的源代码（对于使用 FUSE 开发文件系统来说，您当然不用懂得这些代码的机制）。
• ./include 包含了 FUSE API 头，您需要这些文件来创建文件系统。您现在唯一需要的就是 fuse.h。
• ./lib 中存放的是创建 FUSE 库的源代码，您需要将它们与您的二进制文件链接在一起来创建文件系统。
• ./util 中存放的是 FUSE 工具库的源代码。
• ./example 当然包含的是一些供您参考的例子，例如 fusexmp.null 和 hello 文件系统。

</rich_text><rich_text scale="h2" weight="heavy">编译并安装 FUSE</rich_text><rich_text>
1. 在 fuse-2.2 目录中运行 configure 脚本： ./configure。这会创建所需要的 makefile 等内容。
2. 运行 ./make 来编译库、二进制文件和内核模块。查看 kernel 目录中的文件 ./kernel/fuse.ko —— 这是内核模块文件。还要查看 lib 目录中的 fuse.o、mount.o 和 helper.o。
3. 运行 ./make install 完成 FUSE 的安装。

另外一种选择：如果您希望使用 insmod 自己将这个模块安装到内核中，就可以跳过这个步骤。例如：/usr/local/sbin/insmod ./kernel/fuse.ko 或 /sbin/insmod ./kernel/fuse.ko。记住要使用 root 特权才能安装所需要的模块。
 如果希望，只在一个步骤中就可以完成上面的步骤。在 fuse-2.2 目录中，运行 ./configure; make; make install;。 

重要提示：在编译 FUSE 时，系统中需要有内核头文件或源代码。为了简单起见，请确保将内核源代码放到 /usr/src/ 目录中。

4. fuse_main()的处理流程</rich_text><rich_text foreground="#ffff00000000">
</rich_text><rich_text justification="left"></rich_text><rich_text>
    fuse_main()被调用后，它调用fuse_mount()，创建新的进程fusermount，来检查FUSE内核模块是否加载，并返回文件描述符给fuse_main()。fuse_new()为文件系统分配数据空间。fuse_loop()从/dev/fuse 读取文件系统调用，调用fuse_operations结构中的处理函数，返回调用结果给/dev/fuse。

</rich_text><rich_text scale="h2" weight="heavy">定制文件系统</rich_text><rich_text>
 现在让我们来创建一个文件系统，这样就可以使用一个较旧的 Linux 内核来访问一个具有最新内核的 Linux 系统上的 AFS  空间了。您需要两个进程：一个是在较旧的 Linux 内核上运行的服务器进程，另外一个是在具有最新内核的 Linux 系统上运行的一个 FUSE  客户机进程。不论何时请求到达您的 FUSE 客户机进程上时，它都会与远程服务器进程进行联系。为了进行通信，这个文件系统使用了 RX RPC  代码，这是 AFS 的一部分，因此您需要编译 OpenAFS。（图 1 给出了对这个 AFS 文件系统的概述。）
</rich_text><rich_text weight="heavy">图 1. AFS-FUSE 文件系统概述</rich_text><rich_text>
</rich_text><rich_text justification="left"></rich_text><rich_text>

</rich_text><rich_text scale="h3" weight="heavy">编译 OpenAFS</rich_text><rich_text>
1. 下载 OpenAFS Linux 源代码并展开源代码。在展开源代码的目录中，运行 ./make ./configure --enable-transarc-paths。如果 ./configure 无法理解编译使用的 sysname，就请使用 --with-afs-sysname 选项提供正确的 sysname。
要在 Linux 2.4 内核上编译，请使用下面的命令：./configure --enable-transarc-paths --with-afs-sysname=i386_linux24。

2. 运行 ./make，然后运行 ./make dest。检查在编译过程中出现的错误。如果编译过程一切顺利，那么 AFS 源代码树就可以使用了。现在，您需要准备一个开发目录 afsfuse。在这个目录中，创建另外两个目录： 
• include 目录包括 OpenAFS 和 FUSE 的 include 目录的头文件。
• lib 目录包含 OpenAFS 和 FUSE 的库文件。

• 拷贝头文件和库文件。首先从 OpenAFS 目录中拷贝 AFS 的头文件，方法是将 dest\i386_linux24\include  中的目录和文件全部拷贝到 include 目录中。然后将 fuse-2.2 目录中的 FUSE 的 include  目录拷贝到这个目录中。对库文件也重复相同的步骤，将它们全部拷贝到 lib 目录中。 

• 创建应用程序的结构。对于这两组进程，您需要使用两组文件。使用命名规则 afsfuse_client.* 来命名客户机进程的文件；使用命名规则 afsfuse_server.* 来命名服务器进程的文件。 
这样您就有了一个 afsfuse_client.c 文件，其中包含了 FUSE 进程的代码；一个 afsfuse_server.c  文件，其中包含了在远程机器上运行的进程使用的服务器代码；一个 makefile；一个 rxgen 文件，用来创建 RPC 头文件（例如  afsfuse.xg）。 
afsfuse_client.c 文件可以创建 afsfuse_client 进程代码， FUSE 文件系统调用它来创建文件系统（使用 fuse-2.2/example/fusexmp.c 来创建这个文件）。 

</rich_text><rich_text scale="h3" weight="heavy">定义需要的函数</rich_text><rich_text>
 要使用 FUSE 来创建一个文件系统，您需要声明一个 fuse_operations 类型的结构变量，并将其传递给 fuse_main 函数。fuse_operations 结构中有一个指针，指向在执行适当操作时需要调用的函数。清单 1 给出了 fuse_operations 结构。
</rich_text><rich_text weight="heavy">清单 1. fuse_operation 结构中需要的函数</rich_text><rich_text>
struct fuse_operations {
    int (*getattr) (const char *, struct stat *);
    int (*readlink) (const char *, char *, size_t);
    int (*getdir) (const char *, fuse_dirh_t, fuse_dirfil_t);
    int (*mknod) (const char *, mode_t, dev_t);
    int (*mkdir) (const char *, mode_t);
    int (*unlink) (const char *);
    int (*rmdir) (const char *);
    int (*symlink) (const char *, const char *);
    int (*rename) (const char *, const char *);
    int (*link) (const char *, const char *);
    int (*chmod) (const char *, mode_t);
    int (*chown) (const char *, uid_t, gid_t);
    int (*truncate) (const char *, off_t);
    int (*utime) (const char *, struct utimbuf *);
    int (*open) (const char *, struct fuse_file_info *);
    int (*read) (const char *, char *, size_t, off_t, struct fuse_file_info *);
    int (*write) (const char *, const char *, size_t, off_t,struct fuse_file_info *);
    int (*statfs) (const char *, struct statfs *);
    int (*flush) (const char *, struct fuse_file_info *);
    int (*release) (const char *, struct fuse_file_info *);
    int (*fsync) (const char *, int, struct fuse_file_info *);
    int (*setxattr) (const char *, const char *, const char *, size_t, int);
    int (*getxattr) (const char *, const char *, char *, size_t);
    int (*listxattr) (const char *, char *, size_t);
    int (*removexattr) (const char *, const char *);
};
这些操作并非都是必需的，但是一个文件系统要想正常工作，就需要其中的很多函数。您可以实现一个具有特殊目的的 .flush、.release 或 .fsync 方法的功能完备的文件系统。（本文不会介绍任何 xattr 函数。）
清单 1 中给出的函数如下所示：

• getattr: int (*getattr) (const char *, struct stat *);
这个函数与 stat() 类似。st_dev 和 st_blksize 域都可以忽略。st_ino 域也会被忽略，除非在执行 mount 时指定了 use_ino 选项。

• readlink: int (*readlink) (const char *, char *, size_t);
这个函数会读取一个符号链接的目标。缓冲区应该是一个以 null 结束的字符串。缓冲区的大小参数包括这个 null 结束字符的空间。如果链接名太长，不能保存到缓冲区中，就应该被截断。成功时的返回值应该是 “0”。

• getdir: int (*getdir) (const char *, fuse_dirh_t, fuse_dirfil_t);
这个函数会读取一个目录中的内容。这个操作实际上是在一次调用中执行 opendir()、readdir()、...、closedir() 序列。对于每个目录项来说，都应该调用 filldir() 函数。

• mknod: int (*mknod) (const char *, mode_t, dev_t);
这个函数会创建一个文件节点。此处没有 create() 操作；mknod() 会在创建非目录、非符号链接的节点时调用。

• mkdir: int (*mkdir) (const char *, mode_t);
rmdir: int (*rmdir) (const char *);
这两个函数分别用来创建和删除一个目录。

• unlink: int (*unlink) (const char *);
rename: int (*rename) (const char *, const char *);
这两个函数分别用来删除和重命名一个文件。

• symlink: int (*symlink) (const char *, const char *);
这个函数用来创建一个符号链接。

• link: int (*link) (const char *, const char *);
这个函数创建一个到文件的硬链接。

• chmod: int (*chmod) (const char *, mode_t);
chown: int (*chown) (const char *, uid_t, gid_t);
truncate: int (*truncate) (const char *, off_t);
utime: int (*utime) (const char *, struct utimbuf *);
这 4 个函数分别用来修改文件的权限位、属主和用户、大小以及文件的访问/修改时间。

• open: int (*open) (const char *, struct fuse_file_info *);
这是文件的打开操作。对  open() 函数不能传递创建或截断标记（O_CREAT、O_EXCL、O_TRUNC）。这个函数应该检查是否允许执行给定的标记的操作。另外，open() 也可能在 fuse_file_info 结构中返回任意的文件句柄，这会传递给所有的文件操作。

• read: int (*read) (const char *, char *, size_t, off_t, struct fuse_file_info *);
这个函数从一个打开文件中读取数据。除非碰到 EOF 或出现错误，否则 read() 应该返回所请求的字节数的数据；否则，其余数据都会被替换成 0。一个例外是在执行 mount 命令时指定了 direct_io 选项，在这种情况中 read() 系统调用的返回值会影响这个操作的返回值。

• write: int (*write) (const char *, const char *, size_t, off_t, struct fuse_file_info *);
这个函数将数据写入一个打开的文件中。除非碰到 EOF 或出现错误，否则 write() 应该返回所请求的字节数的数据。一个例外是在执行 mount 命令时指定了 direct_io 选项（这于 read() 操作的情况类似）。

• statfs: int (*statfs) (const char *, struct statfs *);
这个函数获取文件系统的统计信息。f_type 和 f_fsid 域都会被忽略。

• flush: int (*flush) (const char *, struct fuse_file_info *);
这表示要刷新缓存数据。它并不等于 fsync() 函数 —— 也不是请求同步脏数据。每次对一个文件描述符执行 close() 函数时，都会调用 flush()；因此如果文件系统希望在 close() 中返回写错误，并且这个文件已经缓存了脏数据，那么此处就是回写数据并返回错误的好地方。由于很多应用程序都会忽略 close() 错误，因此这通常用处不大。
注意：我们也可以对一个 open() 多次调用 flush() 方法。如果由于调用了 dup()、dup2() 或 fork() 而产生多个文件描述符指向一个打开文件的情况，就可能会需要这种用法。我们无法确定哪个 flush 操作是最后一次操作，因此每个 flush 都应该同等地对待。多个写刷新序列相当罕见，因此这并不是什么问题。

• release: int (*release) (const char *, struct fuse_file_info *);
这个函数释放一个打开文件。release() 是在对一个打开文件没有其他引用时调用的 —— 此时所有的文件描述符都会被关闭，所有的内存映射都会被取消。对于每个 open() 调用来说，都必须有一个使用完全相同标记和文件描述符的 release() 调用。对一个文件打开多次是可能的，在这种情况中只会考虑最后一次 release，然后就不能再对这个文件执行更多的读/写操作了。release 的返回值会被忽略。

• fsync: int (*fsync) (const char *, int, struct fuse_file_info *);
这个函数用来同步文件内容。如果 datasync 参数为非 0，那么就只会刷新用户数据，而不会刷新元数据。

• setxattr: int (*setxattr) (const char *, const char *, const char *, size_t, int);
getxattr: int (*getxattr) (const char *, const char *, char *, size_t);
listxattr: int (*listxattr) (const char *, char *, size_t);
removexattr: int (*removexattr) (const char *, const char *);
这些函数分别用来设置、获取、列出和删除扩展属性。

</rich_text><rich_text scale="h3" weight="heavy">获得的文件系统</rich_text><rich_text>
您的文件系统将如下所示：
afsfuse_client   &lt;--RX[RPC]--&gt;   afsfuse_server afsfuse_client 会将传递给它的文件系统调用转发给另外一台机器上的 afsfuse_server。afsfuse_server  会对客户机传递给它的所有请求进行处理，并将结果返回给客户机。它会执行所有必需的工作。RPC 使用的机制是  RX。数据或原数据都不会涉及缓存的问题。 

</rich_text><rich_text scale="h2" weight="heavy">定义 RX RPC 层</rich_text><rich_text>
在 继续之前，您需要先定义 RX RPC 层。要实现这种功能，请为 rxgen 创建一个 .xg 文件，用来描述代理和与  afsfuse_client.c 和 afsfuse_server.c 进行链接的桩代码。清单 2 显示了如何创建一个具有如下内容的  afsfuse.xg 文件：
</rich_text><rich_text weight="heavy">清单 2. 创建 afsfuse.xg 文件</rich_text><rich_text>
#define MYMAXPATH 512
#include &lt;rx/rx.h&gt;
#include &lt;/rx_null.h &gt;
#define SAMPLE_SERVER_PORT 5000
#define SAMPLE_SERVICE_PORT 0
/* i.e. user server's port */
#define SAMPLE_SERVICE_ID 4 /* Maximum number of requests that will be handled by this
                                service simultaneously */
/* This number will also be guaranteed to execute in parallel if no services' requests
   are being processed */
#define SAMPLE_MAX 2 /* Minimum number of requests that are guaranteed to be handled
                         immediately */
#define SAMPLE_MIN 1 /* Index of the &quot;null&quot; security class in the sample service. This
                         must be 0 (there are N classes, numbered from 0. In this case,
                         N is 1) */
#define SAMPLE_NULL 0 /********************** fuse4_file_info taken from fuse.h the
                        rxgen does not understands fuse.h  mystat taken from man 2
                        mystat these are required again rxgen does not understand the
                        struct paras and will bump.. **********************/
struct my_file_info { /** Open flags. Available in open() and release() */
                     int flags; /** File handle. May be filled in by filesystem in
                                    open(). Available in all other file operations */
                     unsigned int fh; /** In case of a write operation indicates if
                                          this was caused by a writepage */
                     int writepage;
                    };
struct mystatfs {
                    afs_uint32 f_type; /* type of filesystem (see below) */
                    afs_uint32 f_bsize; /* optimal transfer block size */
                    afs_uint32 f_blocks; /* total data blocks in file system */
                    afs_uint32 f_bfree; /* free blocks in fs */
                    afs_uint32 f_bavail; /* free blocks avail to non-superuser */
                    afs_uint32 f_files; /* total file nodes in file system */
                    afs_uint32 f_ffree; /* free file nodes in fs */
                    afs_uint32 f_fsid1; /* file system id */
                    afs_uint32 f_fsid2; /* file system id */
                    afs_uint32 f_namelen; /* maximum length of filenames */
                    afs_uint32 f_spare[6]; /* spare for later */
                };
struct mystat {
                    afs_uint32 st_dev; /* device */
                    afs_uint32 st_ino; /* inode */
                    afs_uint32 st_mode; /* protection */
                    afs_uint32 st_nlink; /* number of hard links */
                    afs_uint32 st_uid; /* user ID of owner */
                    afs_uint32 st_gid;/* group ID of owner */
                    afs_uint32 st_rdev; /* device type (if inode device) */
                    afs_uint32 st_size; /* total size, in bytes */
                    afs_uint32 st_blksize; /* blocksize for filesystem I/O */
                    afs_uint32 st_blocks; /* number of blocks allocated */
                    afs_uint32 st_atim; /* time of last access */
                    afs_uint32 st_mtim; /* time of last modification */
                    afs_uint32 st_ctim; /* time of last change */
                };
struct my_dirhandle{
                    afs_uint32 type;
                    afs_uint32 inode;
                    char name[MYMAXPATH];
                };
typedef my_dirhandle bulkmydirhandles&lt;&gt;;
 /*********************phase 1 functions *********************************************/
rxc_getattr(IN string mypath&lt;MYMAXPATH&gt;, IN int dummy) split = 1;
rxc_getdirWrapper(IN string path&lt;MYMAXPATH&gt;, OUT bulkmydirhandles *handles) = 2;
rxc_read(IN string path&lt;MYMAXPATH&gt;;, IN afs_uint32 size, IN afs_uint32 offset,
         IN struct my_file_info *fi) split = 3;
rxc_open(IN string path&lt;MYMAXPATH&gt;, IN int flags, OUT u_int *hd) = 4;
rxc_write(IN string path&lt;MYMAXPATH&gt;,IN afs_uint32 size, IN afs_uint32 offset,
          IN struct my_file_info *fi) split = 5;
rxc_chmod(IN string path&lt;MYMAXPATH&gt;, IN afs_uint32 mode) = 6;
rxc_chown(IN string path&lt;MYMAXPATH&gt;, IN afs_uint32 uid, IN afs_uint32 gid) = 7;
rxc_utime(IN string path&lt;MYMAXPATH&gt;, IN afs_uint32 at,IN afs_uint32 mt) = 8;
rxc_mknod(IN string path&lt;MYMAXPATH&gt;, afs_uint32 mode, afs_uint32 rdev) = 9 ;
rxc_mkdir(IN string path&lt;MYMAXPATH&gt;, IN afs_uint32 mode) = 10;
rxc_unlink(IN string path&lt;MYMAXPATH&gt;) = 11 ;
rxc_rmdir(IN string path&lt;MYMAXPATH&gt;) = 12;
rxc_rename(IN string from&lt;MYMAXPATH&gt;, IN string to&lt;MYMAXPATH&gt;) = 13;
rxc_truncate(IN string path&lt;MYMAXPATH&gt;, IN afs_uint32 size) = 14;
rxc_release(IN string path&lt;MYMAXPATH&gt;, IN struct my_file_info *fi) = 15;
rxc_readlink(IN string path&lt;MYMAXPATH&gt;, IN afs_uint32 size,OUT string
             data&lt;MYMAXPATH&gt;) = 16;
rxc_symlink(IN string from&lt;MYMAXPATH&gt;, IN string to&lt;MYMAXPATH&gt;) = 17;
rxc_link(IN string from&lt;MYMAXPATH&gt;, IN string to&lt;MYMAXPATH&gt;) = 18;
rxc_statfs(IN string path&lt;MYMAXPATH&gt;, OUT struct mystatfs *stbuf) = 19;
rxc_fsync(IN string path &lt;MYMAXPAT&gt;, IN int isdatasync, IN struct my_file_info
          *fi) = 20 ;
rxc_flush(IN string path &lt;MYMAXPATH&gt;, IN struct my_file_info *fi) = 21 ;在定义 RX RPC 层时，注意以下几点： 

• 在 statfs、stat 和 fuse_file_info 基础上定义了 mystatfs、mystat 和 my_file_info 的封装程序。它们都会使用所生成的 XDR 代码进行转换。（XDR（External Data Representation，外部数据表示）允许采用一种与体系结构无关的方式进行封装，这样就可以在异构计算机系统之间传输数据了。）

• 您几乎要为 fuse_operations 结构的每个成员都定义一个函数，它们几乎具有相同的参数，因为 afsfuse_client 的工作就是负责接管 FUSE 文件系统中的调用，并将这些调用传递给 afsfuse_server。

• 您已经硬编码了一些值，例如 MYMAXPATH，这应该从系统中获得 —— 硬编码是为了简单性起见而这样做的。

</rich_text><rich_text scale="h2" weight="heavy">创建客户机和存根文件</rich_text><rich_text>
 接下来使用 rxgen 编译 afsfuse.xg 文件，从而创建客户机和存根文件。从包含 afsfuse_server 和 afsfuse_client 的源代码的目录中，运行命令 openafs-1.2.13/i386_linux24/dest/bin/rxgen afsfuse.xg。这会创建以下文件：
• afsfuse.cs.c 是与 afsfuse_client.c 进行链接的客户机存根代码。
• afsfuse.h 是包含您的 FUSE RX 代码的各种定义的头文件。
• afsfuse.ss.c 是与 afsfuse_server 代码进行链接的服务器存根代码（代理代码）。
• afsfuse.xdr.c 包含了用来处理在 afsfuse.xg 中定义的 3 个结构所使用的代码。
 现在为 afsfuse_client.c 和 afsfuse_server.c 添加一些执行实际工作的代码。大部分调用都如下所示： 
• Our_call_in_afs_fuse_client()。分析参数并准备执行 RPC。对 RX [RPC] 调用 afsfuse_server。组合参数。将这些值拷贝到传递给这个函数的行参数中。
• Our_call_in_afs_fuse_server()。组合参数。调用本地文件系统或 AFS 特有的函数。分析参数准备执行 RPC。生成 RX RPC 调用。
afsfuse_client.c 调用如下所示：
int afsfuse_readlink(const char *path, char *buf, size_t size){
    rx_connection *local&amp; int ret&amp; char *buffer = malloc (512)&amp;
    memset(buffer,0,512)&amp; memset(buf,0,size)&amp; local = getconnection()&amp;
    ret = rxc_rxc_readlink(local,path,512,&amp;buffer) // rpc call
         relconnection(local)&amp;
         strncpy(buf,buffer,512-1)&amp;
        //&lt;- demarshall the parametrs
        return ret&amp;
    }afsfuse_server.c 调用如下所示：
</rich_text><rich_text weight="heavy">清单 3. afsfuse_server.c 调用</rich_text><rich_text>
int rxc_rxc_readlink( struct rx_call *call, char * path, afs_uint32 size, char**data)
    { int ret&amp; char lbuff[512] ={0}&amp;
    translatePath(path,lbuff)&amp; //&lt;- make filesystem call
     *data = malloc(512)&amp;
     res = readlink(lbuff, *data, 512-1)&amp;
     if(res == -1) return -errno&amp; (*data)[res] = '\0'&amp; return 0&amp;
    }简单地，您可以在其他函数中添加代码来对文件系统进行增强。 
您需要创建一个 makefile 来编译代码。记住在编译 afsfuse_client 的代码时包括以下选项：-D_FILE_OFFSET_BITS=64 和 -DFUSE_USE_VERSION=22。
</rich_text><rich_text weight="heavy">清单 4. 生成编译客户机代码使用的 makefile</rich_text><rich_text>
SRCDIR=./ LIBRX=${SRCDIR}lib/librx.a
LIBS=${LIBRX} ${SRCDIR}lib/liblwp.a
#CC = g++
CFLAGS=-g -I. -I${SRCDIR}include -I${SRCDIR}include/fuse/ -DDEBUG ${XCFLAGS}
    -D_FILE_OFFSET_BITS=64 -DFUSE_USE_VERSION=22
afsfuse_client: afsfuse_client.o afsfuse.xdr.o ${LIBS} bulk_io.o afsfuse.cs.o
    ${CC} ${CFLAGS} -o afsfuse_client afsfuse_client.o ${SRCDIR}lib/fuse/fuse.o
    ${SRCDIR}lib/fuse/mount.o ${SRCDIR}lib/fuse/helper.o
    ${SRCDIR}lib/fuse/fuse_mt.o bulk_io.o afsfuse.cs.o afsfuse.xdr.o ${LIBS}
afsfuse_server: afsfuse_server.o afsfuse.xdr.o afsfuse.ss.o bulk_io.o ${LIBS}
    ${CC} ${CFLAGS} -o afsfuse_server afsfuse_server.o bulk_io.o afsfuse.ss.o
    afsfuse.xdr.o ${LIBS}
#afsfuse_client.o: afsfuse.h
#afsfuse_server.o: afsfuse.h
bulk_io.o: ${CC} -c -g -I${SRCDIR}include bulk_io.c afsfuse.cs.c afsfuse.ss.c
    afsfuse.er.c afsfuse.h afsfuse.xdr.c: afsfuse.xg rxgen afsfuse.xg
afsfuse.xdr.o: afsfuse.xdr.c ${CC} -c -g -I{SRCDIR}include afsfuse.xdr.c
all: afsfuse_server afsfuse_client
clean: rm *.o rm afsfuse_client rm afsfuse_server记住，您仍然需要使用 librx.a 和 liblwp.a 链接到 RX 和 RX 使用的 LWP 代码上。fuse/fuse.o、fuse/helper.o 和 fuse/mount.o 都是代码需要链接的 FUSE 库。

</rich_text><rich_text scale="h2" weight="heavy">结束语</rich_text><rich_text>
在 本文中，您已经学习了如何安装 FUSE 和 OpenAFS，以及如何使用它们来创建并定制自己的用户空间文件系统，它可以成为 Linux  中一个功能完备、稳定可靠的文件系统，这不需要对现有内核打任何补丁或重新编译 —— 您甚至都不需要成为内核模块程序员。您已经详细了解了启用  FUSE 文件系统的两个关键概念：如何安装和配置 FUSE 内核模块，以及如何充分利用 FUSE 库和 API 的功能。

</rich_text><rich_text scale="h2" weight="heavy">测试</rich_text><rich_text weight="heavy">：</rich_text><rich_text>
</rich_text><rich_text weight="heavy">1.编译</rich_text><rich_text>
$./makeconf.sh
$./configure
$make
$sudo make install
$sudo modprobe fuse
  查看/dev/fuse是否存在，如果存在fuse.ko已经加载成功

</rich_text><rich_text weight="heavy">2.测试</rich_text><rich_text>
$mkdir /tmp/fuse
  创建挂载目录
  
1). 
$./example/hello /tmp/fuse
  其中/tmp/fuse是文件系统的挂载点(目录), 可以加-d是输出调试信息
  #=====
  $ps -aux
  ...
  paul      9608  0.0  0.0 234088   500 ?        Ssl  11:51   0:00 /home/paul/work/linux/fuse/example/.libs/lt-hello /tmp/fuse/
  ...  
  #=====
  $mount
  ...
  lt-hello on /tmp/fuse type fuse.lt-hello (rw,nosuid,nodev,user=paul)
  ...
  #=====
  $ls -l /tmp/fuse
  ...
  -r--r--r-- 1 root root 13  1月  1  1970 hello
  ...
  #=====
  $sudo umount /tmp/fuse
  卸载~/mnt/fuse, 上面的9608进程也自动退出
  用kill进程的方式，mount命令还是可以看到lt-hello, 
  ls -l /tempfuse会
	ls: 无法打开目录.: 传输端点尚未连接
  所以要执行umount才能真正卸载
</rich_text><rich_text justification="left"></rich_text><encoded_png char_offset="2192"></encoded_png><encoded_png char_offset="2677"></encoded_png><encoded_png char_offset="18014"></encoded_png></node><node name="file operations" prog_lang="custom-colors" readonly="False" tags="" unique_id="86"><rich_text foreground="#00000000ffff">内核中用inode结构表示具体的文件，而用file结构表示打开的文件描述符</rich_text><rich_text>
</rich_text><rich_text scale="h2" weight="heavy">1. struct file</rich_text><rich_text>
</rich_text><rich_text weight="heavy">include/linux/fs.h</rich_text><rich_text>
代表一个打开的文件描述符，它不是专门给驱动程序使用的，系统中每一个打开的文件在内核中都有一个关联的struct file。它由内核在open时创建，并传递给在文件上操作的任何函数，知道最后关闭。当文件的所有实例都关闭之后，内核释放这个数据结构
struct file {
	/*
	 * fu_list becomes invalid after file_free is called and queued via
	 * fu_rcuhead for RCU freeing
	 */
	union {
		struct list_head	fu_list;
		struct rcu_head 	fu_rcuhead;
	} f_u;
	struct path		f_path;
#define f_dentry	f_path.dentry
#define f_vfsmnt	f_path.mnt
	</rich_text><rich_text foreground="#ffff00000000">const struct file_operations	*f_op; </rich_text><rich_text> </rich_text><rich_text foreground="#00000000ffff">//该操作是定义文件关联的操作的。内核在执行open时对这个指针赋值。</rich_text><rich_text>

	/*
	 * Protects f_ep_links, f_flags, f_pos vs i_size in lseek SEEK_CUR.
	 * Must not be taken from IRQ context.
	 */
	spinlock_t		f_lock;
#ifdef CONFIG_SMP
	int			f_sb_list_cpu;
#endif
	atomic_long_t		f_count;
	</rich_text><rich_text foreground="#ffff00000000">unsigned int 		f_flags; </rich_text><rich_text>   </rich_text><rich_text foreground="#00000000ffff">//该成员是文件标志。 </rich_text><rich_text>
	fmode_t			f_mode;
	loff_t			f_pos;
	struct fown_struct	f_owner;
	const struct cred	*f_cred;
	struct file_ra_state	f_ra;

	u64			f_version;
#ifdef CONFIG_SECURITY
	void			*f_security;
#endif
	/* needed for tty driver, and maybe others */
	</rich_text><rich_text foreground="#ffff00000000">void			*private_data; </rich_text><rich_text> </rich_text><rich_text foreground="#00000000ffff">//该成员是系统调用时保存状态信息非常有用的资源。 </rich_text><rich_text>

#ifdef CONFIG_EPOLL
	/* Used by fs/eventpoll.c to link all the hooks to this file */
	struct list_head	f_ep_links;
	struct list_head	f_tfile_llink;
#endif /* #ifdef CONFIG_EPOLL */
	struct address_space	*f_mapping;
#ifdef CONFIG_DEBUG_WRITECOUNT
	unsigned long f_mnt_write_state;
#endif
};

</rich_text><rich_text scale="h2" weight="heavy">2.struct inode</rich_text><rich_text>
</rich_text><rich_text weight="heavy">include/linux/fs.h</rich_text><rich_text>
 inode 译成中文就是索引节点。每个存储设备或存储设备的分区（存储设备是硬盘、软盘、U盘 ... ... ）被格式化为文件系统后，应该有两部份，一部份是inode，另一部份是Block，Block是用来存储数据用的。而inode呢，就是用来存储这些数据的信息，这些信息包括文件大小、属主、归属的用户组、读写权限等。inode为每个文件进行信息索引，所以就有了inode的数值。操作系统根据指令，能通过inode值最快的找到相对应的文件。 
/*
 * Keep mostly read-only and often accessed (especially for
 * the RCU path lookup and 'stat' data) fields at the beginning
 * of the 'struct inode'
 */
struct inode {
	umode_t			i_mode;
	unsigned short		i_opflags;
	uid_t			i_uid;
	gid_t			i_gid;
	unsigned int		i_flags;

#ifdef CONFIG_FS_POSIX_ACL
	struct posix_acl	*i_acl;
	struct posix_acl	*i_default_acl;
#endif

	const struct inode_operations	*i_op;
	struct super_block	*i_sb;
	struct address_space	*i_mapping;

#ifdef CONFIG_SECURITY
	void			*i_security;
#endif

	/* Stat data, not accessed from path walking */
	unsigned long		i_ino;
	/*
	 * Filesystems may only read i_nlink directly.  They shall use the
	 * following functions for modification:
	 *
	 *    (set|clear|inc|drop)_nlink
	 *    inode_(inc|dec)_link_count
	 */
	union {
		const unsigned int i_nlink;     </rich_text><rich_text foreground="#00000000ffff">//硬链接数</rich_text><rich_text> 
		unsigned int __i_nlink;
	};
	</rich_text><rich_text foreground="#ffff00000000">dev_t			i_rdev;</rich_text><rich_text>                     </rich_text><rich_text foreground="#00000000ffff">//该成员表示设备文件的inode结构，它包含了真正的设备编号。</rich_text><rich_text>
	struct timespec		i_atime;
	struct timespec		i_mtime;
	struct timespec		i_ctime;
	spinlock_t		i_lock;	/* i_blocks, i_bytes, maybe i_size */
	unsigned short          i_bytes;
	blkcnt_t		i_blocks;
	loff_t			i_size;

#ifdef __NEED_I_SIZE_ORDERED
	seqcount_t		i_size_seqcount;
#endif

	/* Misc */
	unsigned long		i_state;
	struct mutex		i_mutex;

	unsigned long		dirtied_when;	/* jiffies of first dirtying */

	struct hlist_node	i_hash;
	struct list_head	i_wb_list;	/* backing dev IO list */
	struct list_head	i_lru;		/* inode LRU list */
	struct list_head	i_sb_list;
	union {
		struct list_head	i_dentry;
		struct rcu_head		i_rcu;
	};
	atomic_t		i_count;
	unsigned int		i_blkbits;
	u64			i_version;
	atomic_t		i_dio_count;
	atomic_t		i_writecount;
	</rich_text><rich_text foreground="#ffff00000000">const struct file_operations	*i_fop;	</rich_text><rich_text>/* former -&gt;i_op-&gt;default_file_ops */   </rich_text><rich_text foreground="#00000000ffff">//在open的时候会把i_fop付给struct file的f_fop</rich_text><rich_text>
	struct file_lock	*i_flock;
	struct address_space	i_data;
#ifdef CONFIG_QUOTA
	struct dquot		*i_dquot[MAXQUOTAS];
#endif
	struct list_head	i_devices;
	union {
		struct pipe_inode_info	*i_pipe;
		</rich_text><rich_text foreground="#ffff00000000">struct block_device	*i_bdev;</rich_text><rich_text>        </rich_text><rich_text foreground="#00000000ffff">//块设备</rich_text><rich_text>
		</rich_text><rich_text foreground="#ffff00000000">struct cdev		*i_cdev;</rich_text><rich_text>                </rich_text><rich_text foreground="#00000000ffff">//字符设备</rich_text><rich_text>
	};

	__u32			i_generation;

#ifdef CONFIG_FSNOTIFY
	__u32			i_fsnotify_mask; /* all events this inode cares about */
	struct hlist_head	i_fsnotify_marks;
#endif

#ifdef CONFIG_IMA
	atomic_t		i_readcount; /* struct files open RO */
#endif
	void			*i_private; /* fs or device private pointer */
};

</rich_text><rich_text scale="h2" weight="heavy">3. struct dentry</rich_text><rich_text>
</rich_text><rich_text weight="heavy">include/linux/dcache.h</rich_text><rich_text>
dentry的中文名称是目录项，是Linux文件系统中某个索引节点(inode)的链接。这个索引节点可以是文件，也可以是目录。inode（可理解为ext2 inode）对应于物理磁盘上的具体对象，dentry是一个内存实体，其中的d_inode成员指向对应的inode。也就是说，一个inode可以在运行的时候链接多个dentry，而d_count记录了这个链接的数量。
struct dentry {
	/* RCU lookup touched fields */
	unsigned int d_flags;		/* protected by d_lock */   </rich_text><rich_text foreground="#00000000ffff">//目录项标志</rich_text><rich_text> 
	seqcount_t d_seq;		/* per dentry seqlock */
	struct hlist_bl_node d_hash;	/* lookup hash list */  </rich_text><rich_text foreground="#00000000ffff">//散列表表项的指针</rich_text><rich_text> 
	struct dentry *d_parent;	/* parent directory */          </rich_text><rich_text foreground="#00000000ffff">//父目录的目录项对象</rich_text><rich_text> 
	struct qstr d_name;     </rich_text><rich_text foreground="#00000000ffff">//文件名</rich_text><rich_text> 
	struct inode *d_inode;		/* Where the name belongs to - NULL is
					 * negative */  </rich_text><rich_text foreground="#00000000ffff">//与文件名关联的索引节点</rich_text><rich_text> 
	unsigned char d_iname[DNAME_INLINE_LEN];	/* small names */   </rich_text><rich_text foreground="#00000000ffff">//存放短文件名</rich_text><rich_text>

	/* Ref lookup also touches following */
	unsigned int d_count;		/* protected by d_lock */   </rich_text><rich_text foreground="#00000000ffff">//目录项对象使用计数器,可以有未使用态,使用态和负状态</rich_text><rich_text> 
	spinlock_t d_lock;		/* per dentry lock */
	const struct dentry_operations *d_op;       </rich_text><rich_text foreground="#00000000ffff">//目录项方法</rich_text><rich_text> 
	struct super_block *d_sb;	/* The root of the dentry tree */   </rich_text><rich_text foreground="#00000000ffff">//文件的超级块对象</rich_text><rich_text> 
	unsigned long d_time;		/* used by d_revalidate */
	void *d_fsdata;			/* fs-specific data */  </rich_text><rich_text foreground="#00000000ffff">//与文件系统相关的数据</rich_text><rich_text> 

	struct list_head d_lru;		/* LRU list */      </rich_text><rich_text foreground="#00000000ffff">//未使用链表的指针</rich_text><rich_text> 
	/*
	 * d_child and d_rcu can share memory
	 */
	union {
		struct list_head d_child;	/* child of parent list */  </rich_text><rich_text foreground="#00000000ffff">//父目录中目录项对象的链表的指针</rich_text><rich_text> 
	 	struct rcu_head d_rcu;
	} d_u;
	struct list_head d_subdirs;	/* our children */
	struct list_head d_alias;	/* inode alias list */
};

</rich_text><rich_text scale="h2" weight="heavy">4. 上面3个结构体的关系</rich_text><rich_text>

</rich_text><rich_text justification="left"></rich_text><rich_text>

    进程每打开一个文件，就会有一个file结构与之对应。同一个进程可以多次打开同一个文件而得到多个不同的file结构，file结构描述了被打开文件的属性，读写的偏移指针等等当前信息。两个不同的file结构可以对应同一个dentry结构。进程多次打开同一个文件时，对应的只有一个dentry结构。dentry结构存储目录项和对应文件（inode）的信息。
    在存储介质中，每个文件对应唯一的inode结点，但是，每个文件又可以有多个文件名。即可以通过不同的文件名访问同一个文件。这里多个文件名对应一个文件的关系在数据结构中表示就是dentry和inode的关系。
    Inode中不存储文件的名字，它只存储节点号；而dentry则保存有名字和与其对应的节点号，所以就可以通过不同的dentry访问同一个inode。
    不同的dentry则是同个文件链接（ln命令）来实现的。

</rich_text><rich_text scale="h3" weight="heavy">4.1 dentry与inode</rich_text><rich_text>
    所谓&quot;文件&quot;, 就是按一定的形式存储在介质上的信息，所以一个文件其实包含了两方面的信息，一是存储的数据本身，二是有关该文件的组织和管理的信息。
    在内存中,  每个文件都有一个dentry(目录项)和inode(索引节点)结构，dentry记录着文件名，上级目录等信息，正是它形成了我们所看到的树状结构； 而有关该文件的组织和管理的信息主要存放inode里面，它记录着文件在存储介质上的位置与分布。同时dentry-&gt;d_inode指向相应的inode结构。dentry与inode是多对一的关系，因为有可能一个文件有好几个文件名(硬链接, hard link)。
    所有的dentry用d_parent和d_child连接起来，就形成了我们熟悉的树状结构
    inode 代表的是物理意义上的文件，通过inode可以得到一个数组，这个数组记录了文件内容的位置，如该文件位于硬盘的第3，8，10块，那么这个数组的内容就是3,8,10。其索引节点号inode-&gt;i_ino，在同一个文件系统中是唯一的，内核只要根据i_ino，就可以计算出它对应的inode在介质上的位置。就硬盘来说，根据i_ino就可以计算出它对应的inode属于哪个块(block)，从而找到相应的inode结构。但仅仅用inode还是无法描述出所有的文件系统，对于某一种特定的文件系统而言，比如ext3，在内存中用ext3_inode_info描述。他是一个包含inode 的&quot;容器&quot;。
struct ext3_inode_info {
               __le32 i_data[15];
               ......
               struct inode vfs_inode;
};
le32 i data[15]这个数组就是上一段中所提到的那个数组。
注意，在遥远的2.4的古代，不同文件系统索引节点的内存映像 (ext3_inode_info，reiserfs_inode_info，msdos_inode_info  ...)都是用一个union内嵌在inode数据结构中的.  但inode作为一种非常基本的数据结构而言，这样搞太大了，不利于快速的分配和回收。但是后来发明了container_of(...)这种方法后，就把union移到了外部，我们可以用类似container of(inode, struct ext3_inode_info,  vfs_inode)，从inode出发，得到其的&quot;容器&quot;。
dentry和inode终究都是在内存中的，它们的原始信息必须要有一个载体。否则断电之后岂不是玩完了？且听我慢慢道来。
文件可以分为磁盘文件，设备文件，和特殊文件三种。设备文件暂且不表。

</rich_text><rich_text scale="h3" weight="heavy">磁盘文件</rich_text><rich_text>
就磁盘文件而言，dentry和inode的载体在存储介质(磁盘)上。对于像ext3这样的磁盘文件来说，存储介质中的目录项和索引节点载体如下，
struct ext3_inode {
__le16 i_mode; /* File mode */
__le16 i_uid; /* Low 16 bits of Owner Uid */
__le32 i_size; /* Size in bytes */
__le32 i_atime; /* Access time */
__le32 i_ctime; /* Creation time */
__le32 i_mtime; /* Modification time */
__le32 i_dtime; /* Deletion Time */
__le16 i_gid; /* Low 16 bits of Group Id */
__le16 i_links_count; /* Links count */
......
__le32 i_block[EXT2_N_BLOCKS];/* Pointers to blocks */
......
}

struct ext3_dir_entry_2 {
__u32 inode; /* Inode number */
__u16 rec_len; /* Directory entry length */
__u8 name_len; /* Name length */
__u8 file_type;
char name[EXT3_NAME_LEN]; /* File name */
};

le32 i block[EXT2 N BLOCKS];/* Pointers to blocks */
i_block数组指示了文件的内容所存放的地点(在硬盘上的位置)。
ext3_inode 是放在索引节点区，而ext3_dir_entry_2是以文件内容的形式存放在数据区。我们只要知道了ino，由于ext3_inode大小已知，我们 就可以计算出ext3_inode在索引节点区的位置( ino * sizeof(ext3_inode)  )，而得到了ext3_inode，我们根据i_block就可以知道这个文件的数据存放的地点。将磁盘上ext3_inode的内容读入到 ext3_inode_info中的函数是ext3_read_inode()。以一个有100  block的硬盘为例，一个文件系统的组织布局大致如下图。位图区中的每一位表示每一个相应的对象有没有被使用。
</rich_text><rich_text justification="left"></rich_text><rich_text>

</rich_text><rich_text scale="h3" weight="heavy">特殊文件</rich_text><rich_text>
    特殊文件在内存中有inode和dentry数据结构，但是不一定在存储介质上有&quot;索引节点&quot;，它断电之后的确就玩完了，所以不需要什么载体。当从一个特殊 文件读时，所读出的数据是由系统内部按一定的规则临时生成的，或从内存中收集，加工出来的。sysfs里面就是典型的特殊文件。它存储的信息都是由系统动 态的生成的，它动态的包含了整个机器的硬件资源情况。从sysfs读写就相当于向kobject层次结构提取数据。
还 请注意,  我们谈到目录项和索引节点时，有两种含义。一种是在存储介质(硬盘)中的(如ext3_inode)，一种是在内存中的，后者是根据在前者生成的。内存中 的表示就是dentry和inode，它是VFS中的一层，不管什么样的文件系统，最后在内存中描述它的都是dentry和inode结构。我们使用不同 的文件系统，就是将它们各自的文件信息都抽象到dentry和inode中去。这样对于高层来说，我们就可以不关心底层的实现，我们使用的都是一系列标准 的函数调用。这就是VFS的精髓，实际上就是面向对象。
我们在进程中打开一个文件F，实际上就是要在内存中建立F的dentry,和inode结构，并让它们与进程结构联系来，把VFS中定义的接口给接起来。我们来看一看这个经典的图。这张图之于文件系统，就像每天爱你多一些之于张学友，番茄炒蛋之于复旦南区食堂，刻骨铭心。
</rich_text><rich_text justification="left"></rich_text><rich_text>
按照d_count的值，dentry分为以下三种状态：
1、未使用（unused）状态：该dentry对象的引用计数d_count的值为0，但其d_inode指针仍然指向相关的的索引节点。该目录项仍然包含有效的信息，只是当前没有人引用他。这种dentry对象在回收内存时可能会被释放。
2、正在使用（inuse）状态：处于该状态下的dentry对象的引用计数d_count大于0，且其d_inode指向相关的inode对象。这种dentry对象不能被释放。
3、负（negative）状态：与目录项相关的inode对象不复存在（相应的磁盘索引节点 可能已经被删除），dentry对象的d_inode指针为NULL。但这种dentry对象仍然保存在dcache中，以便后续对同一文件名的查找能够快速完成。这种dentry对象在回收内存时将首先被释放。

</rich_text><rich_text scale="h3" weight="heavy">4.2 dentry与dentry_cache</rich_text><rich_text>
dentry_cache简称dcache，中文名称是目录项高速缓存，是Linux为了提高目录项对象的处理效率而设计的。它主要由两个数据结构组成：
1、哈希链表dentry_hashtable：dcache中的所有dentry对象都通过d_hash指针域链到相应的dentry哈希链表中。
2、未使用的dentry对象链表dentry_unused：dcache中所有处于unused状态和negative状态的dentry对象都通过其d_lru指针域链入dentry_unused链表中。该链表也称为LRU链表。
目录项高速缓存dcache是索引节点缓存icache的主控器（master），也即 dcache中的dentry对象控制着icache中的inode对象的生命期转换。无论何时，只要一个目录项对象存在于dcache中（非 negative状态），则相应的inode就将总是存在，因为 inode的引用计数i_count总是大于0。当dcache中的一个dentry被释放时，针对相应inode对象的iput()方法就会被调用。

</rich_text><rich_text scale="h3" weight="heavy">4.3 dentry_operations *d_op</rich_text><rich_text>
struct dentry_operations {
	int (*d_revalidate)(struct dentry *, struct nameidata *);
	int (*d_hash)(const struct dentry *, const struct inode *,
			struct qstr *);
	int (*d_compare)(const struct dentry *, const struct inode *,
			const struct dentry *, const struct inode *,
			unsigned int, const char *, const struct qstr *);
	int (*d_delete)(const struct dentry *);
	void (*d_release)(struct dentry *);
	void (*d_prune)(struct dentry *);
	void (*d_iput)(struct dentry *, struct inode *);
	char *(*d_dname)(struct dentry *, char *, int);
	struct vfsmount *(*d_automount)(struct path *);
	int (*d_manage)(struct dentry *, bool);
} ____cacheline_aligned;

</rich_text><rich_text foreground="#00000000ffff">d_revalidate</rich_text><rich_text>:用于VFS使一个dentry重新生效。
</rich_text><rich_text foreground="#00000000ffff">d_hash</rich_text><rich_text>:用于VFS向哈希表中加入一个dentry。
</rich_text><rich_text foreground="#00000000ffff">d_compare</rich_text><rich_text>:dentry的最后一个inode被释放时（d_count等于零），此方法被调用，因为这意味这没有inode再使用此dentry；当然，此dentry仍然有效，并且仍然在dcache中。
</rich_text><rich_text foreground="#00000000ffff">d_release</rich_text><rich_text>: 用于清除一个dentry。
</rich_text><rich_text foreground="#00000000ffff">d_iput</rich_text><rich_text>:用于一个dentry释放它的inode（d_count不等于零）

</rich_text><rich_text scale="h3" weight="heavy">4.4 d_parent和d_child</rich_text><rich_text>
每个dentry都有一个指向其父目录的指针（d_parent），一个子dentry的哈希列表（d_child）。其中，子dentry基本上就是目录中的文件。

</rich_text><rich_text scale="h3" weight="heavy">4.5 怎样从inode值得到目录名？</rich_text><rich_text>
函数得到当前文件或目录的inode值后，进入dcache查找对应的dentry，然后顺着父目录指针d_parent得到父目录的dentry,这样逐级向上直到

</rich_text><rich_text weight="heavy">include/linux/fs.h</rich_text><rich_text>
struct file_operations {
	struct module *owner;
	loff_t (*llseek) (struct file *, loff_t, int);
	ssize_t (*read) (struct file *, char __user *, size_t, loff_t *);
	ssize_t (*write) (struct file *, const char __user *, size_t, loff_t *);
	ssize_t (*aio_read) (struct kiocb *, const struct iovec *, unsigned long, loff_t);
	ssize_t (*aio_write) (struct kiocb *, const struct iovec *, unsigned long, loff_t);
	int (*readdir) (struct file *, void *, filldir_t);
	unsigned int (*poll) (struct file *, struct poll_table_struct *);
	long (*unlocked_ioctl) (struct file *, unsigned int, unsigned long);
	long (*compat_ioctl) (struct file *, unsigned int, unsigned long);
	int (*mmap) (struct file *, struct vm_area_struct *);
	int (*open) (struct inode *, struct file *);
	int (*flush) (struct file *, fl_owner_t id);
	int (*release) (struct inode *, struct file *);
	int (*fsync) (struct file *, loff_t, loff_t, int datasync);
	int (*aio_fsync) (struct kiocb *, int datasync);
	int (*fasync) (int, struct file *, int);
	int (*lock) (struct file *, int, struct file_lock *);
	ssize_t (*sendpage) (struct file *, struct page *, int, size_t, loff_t *, int);
	unsigned long (*get_unmapped_area)(struct file *, unsigned long, unsigned long, unsigned long, unsigned long);
	int (*check_flags)(int);
	int (*flock) (struct file *, int, struct file_lock *);
	ssize_t (*splice_write)(struct pipe_inode_info *, struct file *, loff_t *, size_t, unsigned int);
	ssize_t (*splice_read)(struct file *, loff_t *, struct pipe_inode_info *, size_t, unsigned int);
	int (*setlease)(struct file *, long, struct file_lock **);
	long (*fallocate)(struct file *file, int mode, loff_t offset,
			  loff_t len);
};
</rich_text><encoded_png char_offset="5482"></encoded_png><encoded_png char_offset="8174">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KuR+eOmPf/e73y168035L/vWrQGMf37tNbfc9ItTTz31+9//vq7rpbas69I0HVkLzshny/Nno9GQSca5XKZU0qMoc+utt2xYswbQVlQuhSC6zuJYNc2xY8f+2+mn9vdXVWwlkG7lVwiZqKSqqhDC9yNZkJSx7KeefP7uu361fuXycWNGtRSz/f0DmqZpCg4817IsXc2vXLGura0tjoKLLpjz+9//HiEkw3Y0DFcsggXPPfObu++6++678/l8reJmbDMIgnp1QCFk9Ni2p59ZcNFFF81/5hmsaTxJkKoKSv800P+/Dz/41a99be7cuWYu01rKL1u2fNKkSWmcqOowqr/559nlN6MbK8wBUUqL+UI2ZyxetPL6G2/4/T33gkJy2Vx/f//6tetGjRkNXCxZsralpW2oT3mXRIaxfd/P5/NpmlJKhTC/973vPvrwAwAwbsLEzxz32Y999FCskBeen//HP//plRcWPP/MM1/+0km/+/391YFKJpeNwyhJUl03h/pSdkn4JmQy5qbMU7Fq1apvf/vb61etVkxj/333+9a5/57P5n73+/v/+pfXnn32mft/e093d/fvf3e/4zhxGMVx3LRft4f39p2oVaqapv3y9jueefJJVdNpHNE4Wb26L5PJDerIlNJrfnrNtdf8NInCUWPGHviRgy6Yc/767g333XPv/AUvLF+0+Ne//nUxX/jmOWevXtWwnexGHeMmuziZTEZmNVWr9f7+NE1TRVEmTp1M0xi2NN5ymeybb7wOAmgY7rv3PgMDdQWThEZbq3KQzRJkmvnmIkpVJc89/8wFF1yw8PU3NNsiCPf1lYGLbDbDKKvUqqEftLblKmWUJMnFF150329+AwL2PfCAgw448IsnfenX/333+u4Njzz08Evz5//b6V+/5bZbgQshRKmQL1eq7a2F1Wt6zvvOd197/a8A6MADDzxt1lcnTJr4qzt++fwL81csXvLrX/+axsmcC86fOnnCh3afVKsGaZqOOPvpbzVW/6jQUSp3DTNJ+MBv5HMZJIQfhlhV33pz9a033zzvxhuIQlhK65WyqWvtrSXBUkbpqK6OOBle5z8s2cItiuPYMAzOiWFoaZpSCj//+e2PPvQQAHzxy186/3vfm7rbbtWBAYHQEYd9/D/+49wfX375T6+5Zsmit39y9VVXX3llmsSMxrZlp+wDv5qRggzb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3t6+rq62+sjSn/3ASFMuO4NKiTzp29isRS7bdlqWRSnt7u4eM6Zzr732+p//+Z+jjjpqwXPPvfnmm5dffvnFF1+cJAmQXf6V36lUKrX29va77777jltvBYB//dd/HT16dBAEaZoahuE3XLlU1KpVKe9kmpm66wFAsZj75CePkvt72exIbtbDMPzwhz984403IoSCIADOAYnjjjtuwoQJjDHLsljKAUDTjDiOzz///LfffnvZ4qWPP/74D3/4w03+hiYjFkVR5Gp1++23AwBwfs455wD8zZEjLZIwDFtbW88666xly5dQGsvcxzTllFLLdAqFwu23/5JzLgeMruuum25skomwEAIQgk3VdkRVwzAslUpLl62bMG50pVK1LCultFAoUEpp6re05Hw/CcMQA8gS0Xq97vs+SxKZg5XL5caMGZPL5epurVartba2lstVx877fqDruq6rbqNumMpGb9OmIr4wDE3THGHxu+Zk2mS7QAghJN/MyDRN2QsPIQGIu66LEDrllFNefvllniSdY8b85je/GTtmfLGYrVYbfX0DqqoyxjHG3d39VmarkjlNtoHsn6NpWqVSsSzLNHF3d40xhjjr7OxYs2ZtR0dHEAT5fM627VrNKxaLqormzJnzuU9/Omw0/vCHP8yZM4dzjkdU+ub7T6mUX7++5/rrrwdCPv2ZYz/1qU/lskaapowmSZJI55+m6xjjTCZjmubAwIDtZPN5w/dZuVxetmjRxgNh2RELAeeO43iel8vlstlsNwAgdPDBB48a1RVFca1Wo0nqOI4QyDCMffbZS2bpRlHEGKOU6npzih7JyODJwMDAypUrNcvq6uoaM2aMqqoyUiyLnW07k8vlarXa66+//sZfXwXBAACICkIA54adleIC72FbxSKMMcMw4jiRhhomRAZtEEL1eiBNMV1VgiDwfb+jo1gsFvs2bJBisGHom6bZ2dlZKfcVi0XP8+Spym/X9WzHTlmwUS2FsUKhwDlXVdX3fc0w3v+bOHQ0X84m2wUhJEm49NYWi/kwjDnnxWJWUeGRRx49/fTT4zjmSfIvhx56+eWXT5s2jSasVvNk5DufzwJAR0dLFPE4pUN9KbskQogkSeRulRDiurGqqmNGFzGA69JCoWDbahwTz/OlEJTMpDnkkEMmTZu2fPFiAJAh1BG1+9sJrFvX3Wg0Fr3+OgDMnz//C1/4ggw6aAoBgIxtNRqNJI4B4Jprrpl38y2aZs366tdOOukk3/dt2waMESG2bXu1GgAAxljTbNuWxlAmk9FMM4mCXC5XqVQBQNd1x84QQur1hkxxk7v2XC6HMbYsi7Gm3sdIRj7xP/7xjz3r1imGdcwxxxQKBYQQgJBSTBJCAGPc2dn5xmubWoMwqf20sZJu0/EEwDvarG1d703musgaCDnY1q9f39PT0zF2okBYKm0SBDJHqq+v5vs+EJLP5wuFgu83crmcNI/K5XKapppmMsYYA9/3TdNUFEUAkVVcqmHsueeeGGPT1PnWqi12WZr2U5PtAiEkxYc0TRMCPM9raSlRyp586pkzzzwziqKw0Tj8yKNvu+22rs7SylUb8rkiY0xqSQRB4vu+zKLVrWYK8w6CMY6iKJu1fD+O49g0zUWL165dtXLhwoVnnHHGunV9mqZpmqYoSltbJgwhCAIhRCaTkX89DMNsNhsmTft1W2QyGam+i3Q9DMNyXx9wrhhGGoUgBIBQNQ1hrGma7/vl/jKAEgRBqVRqbW354Q9/GMdxJpMJgqBYLCKE0jSt1+umaY4ZU+rurmcymSQMAYHrulKvS1VVhai9vb3t7Z0yVUXXdaJprusCAKUU4+YUPZJJksS27QcffBAISaPohBNOkNOmYWiu61JKbdsWQtTrXqGQPeuss7/73e/KRO/NGk6qqlqW9e6jbjKbNrZl2wJypDHKCCEzZsx47tlnAGDx4sUtXWOxonLODcNwa1V58Ndee23typWKYRSLRQCQwYcoigDjarW6sTVCKjRNT5KkVFK7e1xVEy+++CJgTCn90Ic+FIbhxl5NI4vmy9lku5AlrNINS2lqGIauw733Pjzn/O/4vhd63qc/97mf//zntm2vWLm+paWFYDVJklrNdRyHUprNZjEmCEGYNPOfdgTGWGtrpq/PjWMWhmE+n0+S5Oyzz37u6ac6OjqOPvrojo4O09QYg1qttmaNZxhGJpOpVCq9vb2qaaZpSilt6ln/Q1pbHNdt+ffzzgMAXSVy9y+VBjVNEyx99tlnH3/ssTiKjjjyyJmHHR6G9MCDZshw24wZMyxLU1Xo62sAgCz/JoRIySjLso4++ug//+lxouC33nrrk5/8pO/7PT09xULJMIy+vj6pmdnd3W2aZqVSMQzdrwSG0ZyiRzJyV/nGG28Ypomxsu+++8pyNgCQDh5d16MoieNY153DD/9YFKWbm4jLl1oWu3G+xVd7q/6eKIoIIQohAHDMMcf819VXEUyef/75jx5+pCxGGTO6VKtw3/cLhdzrr78OAKZpzpw50/d9x7Eajcaxxx57/Q3Xua777LPPHnbYJ+M4AY1gjD0PoijKF4ovv/wyIGTb9p577mkYBudc1/VkZE1BzZezyXaRpqnsCiKjSI5jv/baomuvvXb96tUA4osnf+VXv7q90QgURWlpaWGMsVQYhkEpk2GjNE3jONA0rVl+t2MoipKmkKapphHYJNuhaRqL43K5PG/evAsvvNB1qeu6mUymrS3f31/nnD/88MPd3d2Qpp/4xCc2tmfnzQjetli1ulfTtMsuuyRJOI1DIYSULfAbbqlUigJfUZSnnnoqjuPp06d/9atfVRQjiunGAiVCenrKMk1NLm+MMVUllNING2qmaR5yyCETJ05csWzJ/fff/+lPf3rq1ClyGdN1HaFQ07Rbb721t7eXJempp50GANvQ52wyMsAYL1z4Vr1eF0J89KMfkcVrcRwLjjRNk+ICCCHbthsNFsexELC5DQvnUqxSpGn697qaMoQntmo/yXo9AE4p3X333Ts6O3u6ux966KF/P++Cto68EKLhMcdxSkVroBLcc889AFAsFo899tg0TQ1DDQJy+umnX/fTuWGjceeddx5++BGmaXIGhJByuTJhQtviJSuWLl0KQuy3335jxoyxLFNafjv1Zn7wNFezJtuFrLxQFEU2Q+3r6//Zz3728gsvAMBZ3/rWdddd+8Ybb3HOfd+vVquUUlm/rWma53mlkqmqmuwINtTXsauiqmq97hNCFAV0Xfd9HwDmzJmjmmbs+w888MCKFSsMwyiVSoQQ140ymcyzzz57/fXXSwm7z3/+87ImeaivY7jT2dluGEaS8EajIdM1KKVhGBaLRYyx67qVSiWOIkVRTNOU5ZCEEF1XLcvknMvab8PQVVWVL4sQoCgKQsi29alTpx544IEA8PJLL9155509Pb35fF4I0d/f39KSXb58+X333aeqateYMd/+9rer1Rremtp0k5EC5/wvf/kLTxKRpgcccECj0ZA2k8zglilxQgjTNMIwbDQ8BAQE5gwYY5xzhDAh5G/v9d9Eofi288d1XZe/SCqPn3jiiQpRli9bdueddy5atNo0zSAIMMb9Ze/WW2/9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BxDCRCKxbNmyXC43YsSIp59+mmXZdevWtbe3t7W1kST58ccf52rqrrrqKtM0N23aPWxYc7msMgyjqmo8Hq92iAMaQRBUVS2XvSFDapcsuatY1EVRXLt2wx//uPTll1+ePXv2iSeeuGnTJghhMplcvXr1Y489dsoppzz11FN1dYktW3YfeugoAEAymXSi+a9+4fs+TRO+7zMMoWmhKIoYBiRJuvrqq2tqanRdHzJkCEVRW7duZVnWcZxCofDoo48CAHRdRxZQAIBp06atX7/+rLPOghDatq3rOvKOqq/P6no0/xgRMciI8qeIfULXTUEQZJlmWXbT5t21tbVLlixxHKexNrZ9e8ePfvSjsWPHQggPOOCAWbMu37GjUxCEl1566YsvvnjzzTd1XcdxvKYm3tg44pdX/ur4449zHBcAEAQgmZRLJbWlJVcqRefHNxGGYTIZNwyrXDaQEVcYhocdNvaCC96UZbmtre0Pf/hDc3OzLMuXXnrpD37wg2XLlo0YMWzlyjcJ4vChQ5vzeb23t7empgbg381e9/0N13UxDOM4znVDnucBAN3dZUmS7r777nRa6OwsMwyDVnBwHLd27dp333336quv7urqkiSJpmmGYSzLghCGIWAYzHEgSZKiKPI81tOjVioGWi4ZERExiIjqxhH7BEEQBEH09qqu644a1QwhlGVWEITW1t4rr7zyqKOOOumkkw466KCnnnpq4sTJ7e3tBEG88MIL//mf/7ljxw4Mw3iez+c1hmFyuVxvb96yLI6jS6WSplk4jre3l6sd30DHtm3TtNHaKZ7nWZbVdV3T7JUrV27dun727Nlz585VVfWZZ55ZtGjRvffe29DQACEIguCMM8647bbbGYapqalJJPhqxzFYQfvsUNoaBIGiKIIgrFixwnGcYtHEcVySeM/zgiAgSQLDsGKx2NvbO2xYXSIhqapqGIYocr7vf/zxx3fccVehUJAkTlGU7m6Fpul0OhrKi4gYfESXnoh9gqZp27bjcbm1dU8s1kjTdFtbtyRJp5122umnnz59+vRFixYNHTr0zjvvvOyyy2655ZYrrrji5JNP5jhu/fr1Q4YMkWW6t9dGiyebmzNdXaplufF4HMMwUcRaWwvVjm+gg9aksyxrWZbnecj00vO8mpqarq7Khx9+OH/+/MmTJz/wwAPpdJogCF3XTdM86aQp48aN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</encoded_png><encoded_png char_offset="8771"></encoded_png><node name="open" prog_lang="custom-colors" readonly="False" tags="" unique_id="74"><rich_text justification="left"></rich_text><rich_text>
</rich_text><rich_text scale="h3" weight="heavy">fs/open.c</rich_text><rich_text>
static inline int build_open_flags(int flags, umode_t mode, struct open_flags *op)
{
	int lookup_flags = 0;
	int acc_mode;

	if (!(flags &amp; O_CREAT))
		mode = 0;
	op-&gt;mode = mode;

	/* Must never be set by userspace */
	flags &amp;= ~FMODE_NONOTIFY;

	/*
	 * O_SYNC is implemented as __O_SYNC|O_DSYNC.  As many places only
	 * check for O_DSYNC if the need any syncing at all we enforce it's
	 * always set instead of having to deal with possibly weird behaviour
	 * for malicious applications setting only __O_SYNC.
	 */
	if (flags &amp; __O_SYNC)
		flags |= O_DSYNC;

	/*
	 * If we have O_PATH in the open flag. Then we
	 * cannot have anything other than the below set of flags
	 */
	if (flags &amp; O_PATH) {
		flags &amp;= O_DIRECTORY | O_NOFOLLOW | O_PATH;
		acc_mode = 0;
	} else {
		acc_mode = MAY_OPEN | ACC_MODE(flags);
	}

	op-&gt;open_flag = flags;

	/* O_TRUNC implies we need access checks for write permissions */
	if (flags &amp; O_TRUNC)
		acc_mode |= MAY_WRITE;

	/* Allow the LSM permission hook to distinguish append
	   access from general write access. */
	if (flags &amp; O_APPEND)
		acc_mode |= MAY_APPEND;

	op-&gt;acc_mode = acc_mode;

	op-&gt;intent = flags &amp; O_PATH ? 0 : LOOKUP_OPEN;

	if (flags &amp; O_CREAT) {
		op-&gt;intent |= LOOKUP_CREATE;
		if (flags &amp; O_EXCL)
			op-&gt;intent |= LOOKUP_EXCL;
	}

	if (flags &amp; O_DIRECTORY)
		lookup_flags |= LOOKUP_DIRECTORY;
	if (!(flags &amp; O_NOFOLLOW))      </rich_text><rich_text foreground="#00000000ffff">//如果设置了O_NOFOLLOW，打开连接文件会失败</rich_text><rich_text>
		lookup_flags |= LOOKUP_FOLLOW;
	return lookup_flags;
}

long do_sys_open(int dfd, const char __user *filename, int flags, umode_t mode)
{
	struct open_flags op;
	int lookup = build_open_flags(flags, mode, &amp;op);
	char *tmp = getname(filename);  </rich_text><rich_text foreground="#00000000ffff">//将文件名参数从用户态拷贝至内核</rich_text><rich_text>
	int fd = PTR_ERR(tmp);

	if (!IS_ERR(tmp)) {
</rich_text><rich_text foreground="#00000000ffff">        /* 
        在内核中，每个打开的文件由一个文件描述符表示  
        该描述符在特定于进程的数组中充当位置索引(数组是  
        task_struct-&gt;files-&gt;fd_arry)，该数组的元素包含了file结构，其中  
        包括每个打开文件的所有必要信息。因此，调用下面  
        函数查找一个未使用的文件描述符,返回的是上面  
        说的数组的下标
        */  	</rich_text><rich_text>
		fd = get_unused_fd_flags(flags);
		if (fd &gt;= 0) {
</rich_text><rich_text foreground="#00000000ffff">            /* fd获取成功则开始打开文件，此函数是主要完成打开功能的函数 */  
            //如果分配fd成功，则创建一个file对象  </rich_text><rich_text>		
			</rich_text><rich_text foreground="#ffff00000000">struct file *f = do_filp_open(dfd, tmp, &amp;op, lookup);</rich_text><rich_text>
			if (IS_ERR(f)) {
				put_unused_fd(fd);
				fd = PTR_ERR(f);
			} else {
</rich_text><rich_text foreground="#00000000ffff">                /*
                文件如果打开成功，调用fsnotify_open()函数，根据inode所指定的信息进行打开 
                函数（参数为f）将该文件加入到文件监控的系统中。该系统是用来监控文件被打开，创建， 
                读写，关闭，修改等操作的
                */ 		</rich_text><rich_text>	
				fsnotify_open(f);
</rich_text><rich_text foreground="#00000000ffff">                /*
                将文件指针安装在fd数组中 
                将struct file *f加入到fd索引位置处的数组中。如果后续过程中，有对该文件描述符的 
                操作的话，就会通过查找该数组得到对应的文件结构，而后在进行相关操作。
                */  				
</rich_text><rich_text>				fd_install(fd, f);
			}
		}
		putname(tmp);
	}
	return fd;
}

void fd_install(unsigned int fd, struct file *file)
{
	struct files_struct *files = current-&gt;files;
	struct fdtable *fdt;
	spin_lock(&amp;files-&gt;file_lock);
	fdt = files_fdtable(files);
	BUG_ON(fdt-&gt;fd[fd] != NULL);
	rcu_assign_pointer(fdt-&gt;fd[fd], file);
	spin_unlock(&amp;files-&gt;file_lock);
}

get_unused_fd_flags实际调用的是alloc_fd
</rich_text><rich_text foreground="#ffff00000000">#define get_unused_fd_flags(flags) alloc_fd(0, (flags))</rich_text><rich_text>

/*
 * allocate a file descriptor, mark it busy.
 */
int alloc_fd(unsigned start, unsigned flags)
{
	struct files_struct *files = current-&gt;files;    </rich_text><rich_text foreground="#00000000ffff">//获得当前进程的files_struct结构</rich_text><rich_text>
	unsigned int fd;
	int error;
	struct fdtable *fdt;

	spin_lock(&amp;files-&gt;file_lock);
repeat:
	fdt = files_fdtable(files);
	fd = start;
	if (fd &lt; files-&gt;next_fd)    </rich_text><rich_text foreground="#00000000ffff">//从上一次打开的fd的下一个fd开始搜索空闲的fd</rich_text><rich_text>
		fd = files-&gt;next_fd;

	if (fd &lt; fdt-&gt;max_fds)  </rich_text><rich_text foreground="#00000000ffff">//寻找空闲的fd，返回值为空闲的fd</rich_text><rich_text>
		fd = find_next_zero_bit(fdt-&gt;open_fds-&gt;fds_bits,
					   fdt-&gt;max_fds, fd);
</rich_text><rich_text foreground="#00000000ffff">    //如果有必要，即打开的fd超过max_fds,则需要expand当前进程的fd表；    
    //返回值error&lt;0表示出错，error=0表示无需expand，error=1表示进行了expand； 
</rich_text><rich_text>	error = expand_files(files, fd);
	if (error &lt; 0)
		goto out;

	/*
	 * If we needed to expand the fs array we
	 * might have blocked - try again.
	 */
	</rich_text><rich_text foreground="#00000000ffff">//error=1表示进行了expand，那么此时需要重新去查找空闲的fd；</rich_text><rich_text>
	if (error)
		goto repeat;

    </rich_text><rich_text foreground="#00000000ffff">//设置下一次查找的起始fd，即本次找到的空闲的fd的下一个fd，记录在files-&gt;next_fd中；</rich_text><rich_text>
	if (start &lt;= files-&gt;next_fd)
		files-&gt;next_fd = fd + 1;

	FD_SET(fd, fdt-&gt;open_fds);
	if (flags &amp; O_CLOEXEC)
		FD_SET(fd, fdt-&gt;close_on_exec);
	else
		FD_CLR(fd, fdt-&gt;close_on_exec);
	error = fd;
#if 1
	/* Sanity check */
	if (rcu_dereference_raw(fdt-&gt;fd[fd]) != NULL) {
		printk(KERN_WARNING &quot;alloc_fd: slot %d not NULL!\n&quot;, fd);
		rcu_assign_pointer(fdt-&gt;fd[fd], NULL);
	}
#endif

out:
	spin_unlock(&amp;files-&gt;file_lock);
	return error;
}

下面定义sys_open函数:
</rich_text><rich_text foreground="#00000000ffff">SYSCALL_DEFINE3(open, const char __user *, filename, int, flags, umode_t, mode)</rich_text><rich_text>
{
	long ret;
</rich_text><rich_text foreground="#00000000ffff">    /*
    检查是否应该不考虑用户层传递的标志、总是强行设置  
    O_LARGEFILE标志。如果底层处理器的字长不是32位，就是这种  
    情况
    */ </rich_text><rich_text>
	if (force_o_largefile())
		flags |= O_LARGEFILE;

	</rich_text><rich_text foreground="#ffff00000000">ret = do_sys_open(AT_FDCWD, filename, flags, mode);</rich_text><rich_text>
	/* avoid REGPARM breakage on x86: */
	asmlinkage_protect(3, ret, filename, flags, mode);
	return ret;
}

</rich_text><rich_text scale="h3" weight="heavy">fs/namei.c</rich_text><rich_text>
struct file *do_filp_open(int dfd, const char *pathname,
		const struct open_flags *op, int flags)
{
	struct nameidata nd;
	struct file *filp;

	</rich_text><rich_text foreground="#ffff00000000">filp = path_openat(dfd, pathname, &amp;nd, op, flags | LOOKUP_RCU);</rich_text><rich_text>
	if (unlikely(filp == ERR_PTR(-ECHILD)))
		filp = path_openat(dfd, pathname, &amp;nd, op, flags);
	if (unlikely(filp == ERR_PTR(-ESTALE)))
		filp = path_openat(dfd, pathname, &amp;nd, op, flags | LOOKUP_REVAL);
	return filp;
}

do_filp_open函数的一个重要作用就是根据传递近来的权限进行分析，并且分析传递近来的路径名字，根据路径名逐个解析成dentry，并且通过dentry找到inode，inode就是记录着该文件相关的信息， 包括文件的创建时间和文件属性所有者等等信息，根据这些信息就可以找到对应的文件操作方法。在这个过程当中有一个临时的结构体用于保存在查找过程中的相关信息，就是
struct nameidata {  
    struct path path; </rich_text><rich_text foreground="#00000000ffff">//当前目录的dentry数据结构</rich_text><rich_text>  
    struct qstr last;   </rich_text><rich_text foreground="#00000000ffff">//这个结构体也是临时性的，主要用来保存当前目录的名称，杂凑值。</rich_text><rich_text>
    struct path	root;
    struct inode	*inode; /* path.dentry.d_inode */  
    unsigned int flags;
    unsigned	seq;  
    int last_type;  
    unsigned depth; </rich_text><rich_text foreground="#00000000ffff">//连接文件的深度（可能一个连接文件跟到最后还是一个了连接文件）</rich_text><rich_text>  
    </rich_text><rich_text foreground="#00000000ffff">//用来保存连接文件的一些信息，下标表示连接文件的深度  </rich_text><rich_text>
    char *saved_names[MAX_NESTED_LINKS + 1];  
       
    /* Intent data */  
    union {  
        struct open_intent open;  
    } intent;  
};  

static struct file *path_openat(int dfd, const char *pathname,
		struct nameidata *nd, const struct open_flags *op, int flags)
{
	struct file *base = NULL;
	struct file *filp;
	struct path path;
	int error;

	filp = get_empty_filp(); </rich_text><rich_text foreground="#00000000ffff">//从进程文件表中获取一个未使用的文件结构指针，空则出错返回</rich_text><rich_text>  
	if (!filp)
		return ERR_PTR(-ENFILE);

	filp-&gt;f_flags = op-&gt;open_flag;
	nd-&gt;intent.open.file = filp;
	nd-&gt;intent.open.flags = open_to_namei_flags(op-&gt;open_flag); </rich_text><rich_text foreground="#00000000ffff">//op-&gt;open_flag等于open函数的flags</rich_text><rich_text>
	nd-&gt;intent.open.create_mode = op-&gt;mode;

	error = path_init(dfd, pathname, flags | LOOKUP_PARENT, nd, &amp;base); </rich_text><rich_text foreground="#00000000ffff">//初始化nd </rich_text><rich_text>
	if (unlikely(error))
		goto out_filp;

	current-&gt;total_link_count = 0;
	error = link_path_walk(pathname, nd);   </rich_text><rich_text foreground="#00000000ffff">//路径名解析函数，将一个路径名最终转化为一个dentry  </rich_text><rich_text>
	if (unlikely(error))
		goto out_filp;

	</rich_text><rich_text foreground="#ffff00000000">filp = do_last(nd, &amp;path, op, pathname);</rich_text><rich_text>
	while (unlikely(!filp)) { /* trailing symlink */
		struct path link = path;
		void *cookie;
		if (!(nd-&gt;flags &amp; LOOKUP_FOLLOW)) {
			path_put_conditional(&amp;path, nd);
			path_put(&amp;nd-&gt;path);
			filp = ERR_PTR(-ELOOP);
			break;
		}
		nd-&gt;flags |= LOOKUP_PARENT;
		nd-&gt;flags &amp;= ~(LOOKUP_OPEN|LOOKUP_CREATE|LOOKUP_EXCL);
		</rich_text><rich_text foreground="#ffff00000000">error = follow_link(&amp;link, nd, &amp;cookie);</rich_text><rich_text> </rich_text><rich_text foreground="#00000000ffff">//访问连接文件</rich_text><rich_text>
		if (unlikely(error))
			filp = ERR_PTR(error);
		else
			filp = do_last(nd, &amp;path, op, pathname);
		put_link(nd, &amp;link, cookie);
	}
out:
	if (nd-&gt;root.mnt &amp;&amp; !(nd-&gt;flags &amp; LOOKUP_ROOT))
		path_put(&amp;nd-&gt;root);
	if (base)
		fput(base);
	release_open_intent(nd);
	return filp;

out_filp:
	filp = ERR_PTR(error);
	goto out;
}

</rich_text><rich_text weight="heavy">fs/file_table.c</rich_text><rich_text>
/* Find an unused file structure and return a pointer to it.
 * Returns NULL, if there are no more free file structures or
 * we run out of memory.
 *
 * Be very careful using this.  You are responsible for
 * getting write access to any mount that you might assign
 * to this filp, if it is opened for write.  If this is not
 * done, you will imbalance int the mount's writer count
 * and a warning at __fput() time.
 */
struct file *get_empty_filp(void)
{
	const struct cred *cred = current_cred();
	static long old_max;
	struct file * f;

	/*
	 * Privileged users can go above max_files
	 */
	if (get_nr_files() &gt;= files_stat.max_files &amp;&amp; !capable(CAP_SYS_ADMIN)) {
		/*
		 * percpu_counters are inaccurate.  Do an expensive check before
		 * we go and fail.
		 */
		if (percpu_counter_sum_positive(&amp;nr_files) &gt;= files_stat.max_files)
			goto over;
	}

	f = kmem_cache_zalloc(filp_cachep, GFP_KERNEL);
	if (f == NULL)
		goto fail;

	percpu_counter_inc(&amp;nr_files);
	f-&gt;f_cred = get_cred(cred);
	if (security_file_alloc(f))
		goto fail_sec;

	INIT_LIST_HEAD(&amp;f-&gt;f_u.fu_list);
	atomic_long_set(&amp;f-&gt;f_count, 1);        </rich_text><rich_text foreground="#00000000ffff">//文件操作数f_count=1</rich_text><rich_text>
	rwlock_init(&amp;f-&gt;f_owner.lock);
	spin_lock_init(&amp;f-&gt;f_lock);
	eventpoll_init_file(f);
	/* f-&gt;f_version: 0 */
	return f;

over:
	/* Ran out of filps - report that */
	if (get_nr_files() &gt; old_max) {
		pr_info(&quot;VFS: file-max limit %lu reached\n&quot;, get_max_files());
		old_max = get_nr_files();
	}
	goto fail;

fail_sec:
	file_free(f);
fail:
	return NULL;
}

当内核要访问一个文件的时候，第一步要做的是找到这个文件，而查找文件的过程在vfs里面是由link_path_walk函数来完成的,在 path_init的时候我们可以看到传进去的参数有一个LOOKUP_PARENT，它的含义是查找最后一个分量名所在的目录。也就是当这个函数返回的时候，我们得到了一个路径名中最后一个分量所在的目录。
接着调用do_last返回最后一个分量对应的file指针
/*
 * Handle the last step of open()
 */
static struct file *do_last(struct nameidata *nd, struct path *path,
			    const struct open_flags *op, const char *pathname)
{
	struct dentry *dir = nd-&gt;path.dentry;
	struct dentry *dentry;
	int open_flag = op-&gt;open_flag;
	int will_truncate = open_flag &amp; O_TRUNC;
	int want_write = 0;
	int acc_mode = op-&gt;acc_mode;
	struct file *filp;
	int error;

	nd-&gt;flags &amp;= ~LOOKUP_PARENT;
	nd-&gt;flags |= op-&gt;intent;

	switch (nd-&gt;last_type) {
	case LAST_DOTDOT:
	case LAST_DOT:
		error = handle_dots(nd, nd-&gt;last_type);
		if (error)
			return ERR_PTR(error);
		/* fallthrough */
	case LAST_ROOT:
		error = complete_walk(nd);
		if (error)
			return ERR_PTR(error);
		audit_inode(pathname, nd-&gt;path.dentry);
		if (open_flag &amp; O_CREAT) {
			error = -EISDIR;
			goto exit;
		}
		goto ok;
	case LAST_BIND:
		error = complete_walk(nd);
		if (error)
			return ERR_PTR(error);
		audit_inode(pathname, dir);
		goto ok;
	}

	if (!(open_flag &amp; O_CREAT)) { </rich_text><rich_text foreground="#00000000ffff">//没有创建标志，即文件存在</rich_text><rich_text>
		int symlink_ok = 0;
		if (nd-&gt;last.name[nd-&gt;last.len])
			nd-&gt;flags |= LOOKUP_FOLLOW | LOOKUP_DIRECTORY;
		if (open_flag &amp; O_PATH &amp;&amp; !(nd-&gt;flags &amp; LOOKUP_FOLLOW))
			symlink_ok = 1;
		/* we _can_ be in RCU mode here */
		error = walk_component(nd, path, &amp;nd-&gt;last, LAST_NORM,
					!symlink_ok);
		if (error &lt; 0)
			return ERR_PTR(error);
		if (error) /* symlink */
			return NULL;
		/* sayonara */
		error = complete_walk(nd);
		if (error)
			return ERR_PTR(error);

		error = -ENOTDIR;
		if (nd-&gt;flags &amp; LOOKUP_DIRECTORY) {
			if (!nd-&gt;inode-&gt;i_op-&gt;lookup)
				goto exit;
		}
		audit_inode(pathname, nd-&gt;path.dentry);
		goto ok;
	}

	/* create side of things */
	/*
	 * This will *only* deal with leaving RCU mode - LOOKUP_JUMPED has been
	 * cleared when we got to the last component we are about to look up
	 */
	error = complete_walk(nd);
	if (error)
		return ERR_PTR(error);

	audit_inode(pathname, dir);
	error = -EISDIR;
	/* trailing slashes? */
	if (nd-&gt;last.name[nd-&gt;last.len])
		goto exit;

	mutex_lock(&amp;dir-&gt;d_inode-&gt;i_mutex);

	dentry = lookup_hash(nd);   </rich_text><rich_text foreground="#00000000ffff">//获取最后路径名中最后一项对应的目录项</rich_text><rich_text>
	error = PTR_ERR(dentry);
	if (IS_ERR(dentry)) {
		mutex_unlock(&amp;dir-&gt;d_inode-&gt;i_mutex);
		goto exit;
	}

	path-&gt;dentry = dentry;
	path-&gt;mnt = nd-&gt;path.mnt;

	/* Negative dentry, just create the file */
	if (!dentry-&gt;d_inode) {
		umode_t mode = op-&gt;mode;
		if (!IS_POSIXACL(dir-&gt;d_inode))
			mode &amp;= ~current_umask();
		/*
		 * This write is needed to ensure that a
		 * rw-&gt;ro transition does not occur between
		 * the time when the file is created and when
		 * a permanent write count is taken through
		 * the 'struct file' in nameidata_to_filp().
		 */
		error = mnt_want_write(nd-&gt;path.mnt);
		if (error)
			goto exit_mutex_unlock;
		want_write = 1;
		/* Don't check for write permission, don't truncate */
		open_flag &amp;= ~O_TRUNC;
		will_truncate = 0;
		acc_mode = MAY_OPEN;
		error = security_path_mknod(&amp;nd-&gt;path, dentry, mode, 0);
		if (error)
			goto exit_mutex_unlock;
		error = vfs_create(dir-&gt;d_inode, dentry, mode, nd);
		if (error)
			goto exit_mutex_unlock;
		mutex_unlock(&amp;dir-&gt;d_inode-&gt;i_mutex);
		dput(nd-&gt;path.dentry);
		nd-&gt;path.dentry = dentry;
		goto common;
	}

	/*
	 * It already exists.
	 */
	mutex_unlock(&amp;dir-&gt;d_inode-&gt;i_mutex);
	audit_inode(pathname, path-&gt;dentry);

	error = -EEXIST;
	if (open_flag &amp; O_EXCL)
		goto exit_dput;

	error = follow_managed(path, nd-&gt;flags);
	if (error &lt; 0)
		goto exit_dput;

	if (error)
		nd-&gt;flags |= LOOKUP_JUMPED;

	error = -ENOENT;
	if (!path-&gt;dentry-&gt;d_inode)
		goto exit_dput;

	if (path-&gt;dentry-&gt;d_inode-&gt;i_op-&gt;follow_link)
		return NULL;

	path_to_nameidata(path, nd);
	nd-&gt;inode = path-&gt;dentry-&gt;d_inode;
	/* Why this, you ask?  _Now_ we might have grown LOOKUP_JUMPED... */
	error = complete_walk(nd);
	if (error)
		return ERR_PTR(error);
	error = -EISDIR;
	if (S_ISDIR(nd-&gt;inode-&gt;i_mode))
		goto exit;
ok:
	if (!S_ISREG(nd-&gt;inode-&gt;i_mode))
		will_truncate = 0;

	if (will_truncate) {
		error = mnt_want_write(nd-&gt;path.mnt);
		if (error)
			goto exit;
		want_write = 1;
	}
common:
	error = may_open(&amp;nd-&gt;path, acc_mode, open_flag);
	if (error)
		goto exit;
	filp = nameidata_to_filp(nd);
	if (!IS_ERR(filp)) {
		error = ima_file_check(filp, op-&gt;acc_mode);
		if (error) {
			fput(filp);
			filp = ERR_PTR(error);
		}
	}
	if (!IS_ERR(filp)) {
		if (will_truncate) {
			error = handle_truncate(filp);
			if (error) {
				fput(filp);
				filp = ERR_PTR(error);
			}
		}
	}
out:
	if (want_write)
		mnt_drop_write(nd-&gt;path.mnt);
	path_put(&amp;nd-&gt;path);
	return filp;

exit_mutex_unlock:
	mutex_unlock(&amp;dir-&gt;d_inode-&gt;i_mutex);
exit_dput:
	path_put_conditional(path, nd);
exit:
	filp = ERR_PTR(error);
	goto out;
}

struct file *nameidata_to_filp(struct nameidata *nd)
{
	const struct cred *cred = current_cred();
	struct file *filp;

	/* Pick up the filp from the open intent */
	filp = nd-&gt;intent.open.file;
	nd-&gt;intent.open.file = NULL;

	/* Has the filesystem initialised the file for us? */
	if (filp-&gt;f_path.dentry == NULL) {
		path_get(&amp;nd-&gt;path);
		filp = __dentry_open(nd-&gt;path.dentry, nd-&gt;path.mnt, filp,
				     NULL, cred);
	}
	return filp;
}

</rich_text><rich_text weight="heavy">include/linux/fs.h</rich_text><rich_text>
</rich_text><rich_text foreground="#ffff00000000">/* Alas, no aliases. Too much hassle with bringing module.h everywhere */
#define fops_get(fops) \
	(((fops) &amp;&amp; try_module_get((fops)-&gt;owner) ? (fops) : NULL))
#define fops_put(fops) \
	do { if (fops) module_put((fops)-&gt;owner); } while(0)</rich_text><rich_text>
	
static struct file *__dentry_open(struct dentry *dentry, struct vfsmount *mnt,
					struct file *f,
					int (*open)(struct inode *, struct file *),
					const struct cred *cred)
{
	static const struct file_operations empty_fops = {};
	struct inode *inode;
	int error;

	f-&gt;f_mode = OPEN_FMODE(f-&gt;f_flags) | FMODE_LSEEK |
				FMODE_PREAD | FMODE_PWRITE;

	if (unlikely(f-&gt;f_flags &amp; O_PATH))
		f-&gt;f_mode = FMODE_PATH;

	inode = dentry-&gt;d_inode;
	if (f-&gt;f_mode &amp; FMODE_WRITE) {
		error = __get_file_write_access(inode, mnt);
		if (error)
			goto cleanup_file;
		if (!special_file(inode-&gt;i_mode))
			file_take_write(f);
	}

	f-&gt;f_mapping = inode-&gt;i_mapping;
	f-&gt;f_path.dentry = dentry;
	f-&gt;f_path.mnt = mnt;
	f-&gt;f_pos = 0;
	file_sb_list_add(f, inode-&gt;i_sb);   </rich_text><rich_text foreground="#00000000ffff">//把文件对象插入到文件系统超级块的s_files字段所指向的打开文件的链表</rich_text><rich_text>

	if (unlikely(f-&gt;f_mode &amp; FMODE_PATH)) {
		f-&gt;f_op = &amp;empty_fops;
		return f;
	}

	f-&gt;f_op = fops_get(inode-&gt;i_fop); </rich_text><rich_text foreground="#00000000ffff">//为文件操作建立起所有方法，把inode-&gt;i_fop赋值给f-&gt;f_op</rich_text><rich_text>  

	error = security_dentry_open(f, cred);
	if (error)
		goto cleanup_all;

	error = break_lease(inode, f-&gt;f_flags);
	if (error)
		goto cleanup_all;

	if (!open &amp;&amp; f-&gt;f_op)
		open = f-&gt;f_op-&gt;open;
	if (open) {
		error = open(inode, f);
		if (error)
			goto cleanup_all;
	}
	if ((f-&gt;f_mode &amp; (FMODE_READ | FMODE_WRITE)) == FMODE_READ)
		i_readcount_inc(inode);

	f-&gt;f_flags &amp;= ~(O_CREAT | O_EXCL | O_NOCTTY | O_TRUNC);

	file_ra_state_init(&amp;f-&gt;f_ra, f-&gt;f_mapping-&gt;host-&gt;i_mapping); </rich_text><rich_text foreground="#00000000ffff">//初始化预读的数据结构</rich_text><rich_text>

	/* NB: we're sure to have correct a_ops only after f_op-&gt;open */
	if (f-&gt;f_flags &amp; O_DIRECT) { </rich_text><rich_text foreground="#00000000ffff">//检查直接IO操作是否可以作用于文件</rich_text><rich_text>
		if (!f-&gt;f_mapping-&gt;a_ops ||
		    ((!f-&gt;f_mapping-&gt;a_ops-&gt;direct_IO) &amp;&amp;
		    (!f-&gt;f_mapping-&gt;a_ops-&gt;get_xip_mem))) {
			fput(f);
			f = ERR_PTR(-EINVAL);
		}
	}

	return f;

cleanup_all:
	fops_put(f-&gt;f_op);
	if (f-&gt;f_mode &amp; FMODE_WRITE) {
		put_write_access(inode);
		if (!special_file(inode-&gt;i_mode)) {
			/*
			 * We don't consider this a real
			 * mnt_want/drop_write() pair
			 * because it all happenend right
			 * here, so just reset the state.
			 */
			file_reset_write(f);
			mnt_drop_write(mnt);
		}
	}
	file_sb_list_del(f);
	f-&gt;f_path.dentry = NULL;
	f-&gt;f_path.mnt = NULL;
cleanup_file:
	put_filp(f);
	dput(dentry);
	mntput(mnt);
	return ERR_PTR(error);
}


static __always_inline int
follow_link(struct path *link, struct nameidata *nd, void **p)
{
	int error;
	struct dentry *dentry = link-&gt;dentry;

	BUG_ON(nd-&gt;flags &amp; LOOKUP_RCU);

	if (link-&gt;mnt == nd-&gt;path.mnt)
		mntget(link-&gt;mnt);

	if (unlikely(current-&gt;total_link_count &gt;= 40)) {
		*p = ERR_PTR(-ELOOP); /* no -&gt;put_link(), please */
		path_put(&amp;nd-&gt;path);
		return -ELOOP;
	}
	cond_resched();
	current-&gt;total_link_count++;

	</rich_text><rich_text foreground="#ffff00000000">touch_atime(link-&gt;mnt, dentry);</rich_text><rich_text>
	nd_set_link(nd, NULL);

	error = security_inode_follow_link(link-&gt;dentry, nd);
	if (error) {
		*p = ERR_PTR(error); /* no -&gt;put_link(), please */
		path_put(&amp;nd-&gt;path);
		return error;
	}

	nd-&gt;last_type = LAST_BIND;
	*p = dentry-&gt;d_inode-&gt;i_op-&gt;follow_link(dentry, nd);
	error = PTR_ERR(*p);
	if (!IS_ERR(*p)) {
		char *s = nd_get_link(nd);
		error = 0;
		if (s)
			error = __vfs_follow_link(nd, s);
		else if (nd-&gt;last_type == LAST_BIND) {
			nd-&gt;flags |= LOOKUP_JUMPED;
			nd-&gt;inode = nd-&gt;path.dentry-&gt;d_inode;
			if (nd-&gt;inode-&gt;i_op-&gt;follow_link) {
				/* stepped on a _really_ weird one */
				path_put(&amp;nd-&gt;path);
				error = -ELOOP;
			}
		}
	}
	return error;
}

以vfat的read操作为例,  如果没有设置NOATIME,  那么每次读取磁盘的文件，都要更新atime.
read -&gt;
  -&gt;do_sync_read    
    -&gt;generic_file_aio_read
      -&gt;do_generic_file_read 
        -&gt;file_accessed
          -&gt;touch_atime

/**
 * do_generic_file_read - generic file read routine
 * @filp:	the file to read
 * @ppos:	current file position
 * @desc:	read_descriptor
 * @actor:	read method
 *
 * This is a generic file read routine, and uses the
 * mapping-&gt;a_ops-&gt;readpage() function for the actual low-level stuff.
 *
 * This is really ugly. But the goto's actually try to clarify some
 * of the logic when it comes to error handling etc.
 */
static void do_generic_file_read(struct file *filp, loff_t *ppos,
		read_descriptor_t *desc, read_actor_t actor)
{
	struct address_space *mapping = filp-&gt;f_mapping;
	struct inode *inode = mapping-&gt;host;
	struct file_ra_state *ra = &amp;filp-&gt;f_ra;
	pgoff_t index;
	pgoff_t last_index;
	pgoff_t prev_index;
	unsigned long offset;      /* offset into pagecache page */
	unsigned int prev_offset;
	int error;

	index = *ppos &gt;&gt; PAGE_CACHE_SHIFT;
	prev_index = ra-&gt;prev_pos &gt;&gt; PAGE_CACHE_SHIFT;
	prev_offset = ra-&gt;prev_pos &amp; (PAGE_CACHE_SIZE-1);
	last_index = (*ppos + desc-&gt;count + PAGE_CACHE_SIZE-1) &gt;&gt; PAGE_CACHE_SHIFT;
	offset = *ppos &amp; ~PAGE_CACHE_MASK;

	for (;;) {
		struct page *page;
		pgoff_t end_index;
		loff_t isize;
		unsigned long nr, ret;

		cond_resched();
find_page:
		page = find_get_page(mapping, index);
		if (!page) {
			page_cache_sync_readahead(mapping,
					ra, filp,
					index, last_index - index);
			page = find_get_page(mapping, index);
			if (unlikely(page == NULL))
				goto no_cached_page;
		}
		if (PageReadahead(page)) {
			page_cache_async_readahead(mapping,
					ra, filp, page,
					index, last_index - index);
		}
		if (!PageUptodate(page)) {
			if (inode-&gt;i_blkbits == PAGE_CACHE_SHIFT ||
					!mapping-&gt;a_ops-&gt;is_partially_uptodate)
				goto page_not_up_to_date;
			if (!trylock_page(page))
				goto page_not_up_to_date;
			/* Did it get truncated before we got the lock? */
			if (!page-&gt;mapping)
				goto page_not_up_to_date_locked;
			if (!mapping-&gt;a_ops-&gt;is_partially_uptodate(page,
								desc, offset))
				goto page_not_up_to_date_locked;
			unlock_page(page);
		}
page_ok:
		/*
		 * i_size must be checked after we know the page is Uptodate.
		 *
		 * Checking i_size after the check allows us to calculate
		 * the correct value for &quot;nr&quot;, which means the zero-filled
		 * part of the page is not copied back to userspace (unless
		 * another truncate extends the file - this is desired though).
		 */

		isize = i_size_read(inode);
		end_index = (isize - 1) &gt;&gt; PAGE_CACHE_SHIFT;
		if (unlikely(!isize || index &gt; end_index)) {
			page_cache_release(page);
			goto out;
		}

		/* nr is the maximum number of bytes to copy from this page */
		nr = PAGE_CACHE_SIZE;
		if (index == end_index) {
			nr = ((isize - 1) &amp; ~PAGE_CACHE_MASK) + 1;
			if (nr &lt;= offset) {
				page_cache_release(page);
				goto out;
			}
		}
		nr = nr - offset;

		/* If users can be writing to this page using arbitrary
		 * virtual addresses, take care about potential aliasing
		 * before reading the page on the kernel side.
		 */
		if (mapping_writably_mapped(mapping))
			flush_dcache_page(page);

		/*
		 * When a sequential read accesses a page several times,
		 * only mark it as accessed the first time.
		 */
		if (prev_index != index || offset != prev_offset)
			mark_page_accessed(page);
		prev_index = index;

		/*
		 * Ok, we have the page, and it's up-to-date, so
		 * now we can copy it to user space...
		 *
		 * The actor routine returns how many bytes were actually used..
		 * NOTE! This may not be the same as how much of a user buffer
		 * we filled up (we may be padding etc), so we can only update
		 * &quot;pos&quot; here (the actor routine has to update the user buffer
		 * pointers and the remaining count).
		 */
		ret = actor(desc, page, offset, nr);
		offset += ret;
		index += offset &gt;&gt; PAGE_CACHE_SHIFT;
		offset &amp;= ~PAGE_CACHE_MASK;
		prev_offset = offset;

		page_cache_release(page);
		if (ret == nr &amp;&amp; desc-&gt;count)
			continue;
		goto out;

page_not_up_to_date:
		/* Get exclusive access to the page ... */
		error = lock_page_killable(page);
		if (unlikely(error))
			goto readpage_error;

page_not_up_to_date_locked:
		/* Did it get truncated before we got the lock? */
		if (!page-&gt;mapping) {
			unlock_page(page);
			page_cache_release(page);
			continue;
		}

		/* Did somebody else fill it already? */
		if (PageUptodate(page)) {
			unlock_page(page);
			goto page_ok;
		}

readpage:
		/*
		 * A previous I/O error may have been due to temporary
		 * failures, eg. multipath errors.
		 * PG_error will be set again if readpage fails.
		 */
		ClearPageError(page);
		/* Start the actual read. The read will unlock the page. */
		error = mapping-&gt;a_ops-&gt;readpage(filp, page);

		if (unlikely(error)) {
			if (error == AOP_TRUNCATED_PAGE) {
				page_cache_release(page);
				goto find_page;
			}
			goto readpage_error;
		}

		if (!PageUptodate(page)) {
			error = lock_page_killable(page);
			if (unlikely(error))
				goto readpage_error;
			if (!PageUptodate(page)) {
				if (page-&gt;mapping == NULL) {
					/*
					 * invalidate_mapping_pages got it
					 */
					unlock_page(page);
					page_cache_release(page);
					goto find_page;
				}
				unlock_page(page);
				shrink_readahead_size_eio(filp, ra);
				error = -EIO;
				goto readpage_error;
			}
			unlock_page(page);
		}

		goto page_ok;

readpage_error:
		/* UHHUH! A synchronous read error occurred. Report it */
		desc-&gt;error = error;
		page_cache_release(page);
		goto out;

no_cached_page:
		/*
		 * Ok, it wasn't cached, so we need to create a new
		 * page..
		 */
		page = page_cache_alloc_cold(mapping);
		if (!page) {
			desc-&gt;error = -ENOMEM;
			goto out;
		}
		error = add_to_page_cache_lru(page, mapping,
						index, GFP_KERNEL);
		if (error) {
			page_cache_release(page);
			if (error == -EEXIST)
				goto find_page;
			desc-&gt;error = error;
			goto out;
		}
		goto readpage;
	}

out:
	ra-&gt;prev_pos = prev_index;
	ra-&gt;prev_pos &lt;&lt;= PAGE_CACHE_SHIFT;
	ra-&gt;prev_pos |= prev_offset;

	*ppos = ((loff_t)index &lt;&lt; PAGE_CACHE_SHIFT) + offset;
	file_accessed(filp);
}

int file_read_actor(read_descriptor_t *desc, struct page *page,
			unsigned long offset, unsigned long size)
{
	char *kaddr;
	unsigned long left, count = desc-&gt;count;

	if (size &gt; count)
		size = count;

	/*
	 * Faults on the destination of a read are common, so do it before
	 * taking the kmap.
	 */
	if (!fault_in_pages_writeable(desc-&gt;arg.buf, size)) {
		kaddr = kmap_atomic(page, KM_USER0);
		left = __copy_to_user_inatomic(desc-&gt;arg.buf,
						kaddr + offset, size);
		kunmap_atomic(kaddr, KM_USER0);
		if (left == 0)
			goto success;
	}

	/* Do it the slow way */
	kaddr = kmap(page);
	left = __copy_to_user(desc-&gt;arg.buf, kaddr + offset, size);
	kunmap(page);

	if (left) {
		size -= left;
		desc-&gt;error = -EFAULT;
	}
success:
	desc-&gt;count = count - size;
	desc-&gt;written += size;
	desc-&gt;arg.buf += size;
	return size;
}


static inline void file_accessed(struct file *file)
{
	if (!(file-&gt;f_flags &amp; O_NOATIME))
		touch_atime(file-&gt;f_path.mnt, file-&gt;f_path.dentry);
}

</rich_text><rich_text scale="h3" weight="heavy">fs/inode.c</rich_text><rich_text>
void touch_atime(struct vfsmount *mnt, struct dentry *dentry)
{
	struct inode *inode = dentry-&gt;d_inode;
	struct timespec now;

	if (inode-&gt;i_flags &amp; S_NOATIME)
		return;
	if (IS_NOATIME(inode))
		return;
	if ((inode-&gt;i_sb-&gt;s_flags &amp; MS_NODIRATIME) &amp;&amp; S_ISDIR(inode-&gt;i_mode))
		return;

	if (mnt-&gt;mnt_flags &amp; MNT_NOATIME)
		return;
	if ((mnt-&gt;mnt_flags &amp; MNT_NODIRATIME) &amp;&amp; S_ISDIR(inode-&gt;i_mode))
		return;

	now = current_fs_time(inode-&gt;i_sb);

	if (!relatime_need_update(mnt, inode, now))
		return;

	if (timespec_equal(&amp;inode-&gt;i_atime, &amp;now))
		return;

	if (mnt_want_write(mnt))
		return;

	inode-&gt;i_atime = now;
	mark_inode_dirty_sync(inode);
	mnt_drop_write(mnt);
}
EXPORT_SYMBOL(touch_atime);
</rich_text><encoded_png char_offset="0"></encoded_png></node><node name="read_write" prog_lang="custom-colors" readonly="False" tags="" unique_id="89"><rich_text scale="h3" weight="heavy">1. read</rich_text><rich_text>
</rich_text><rich_text weight="heavy">fs/read_write.c</rich_text><rich_text>
SYSCALL_DEFINE3(read, unsigned int, fd, char __user *, buf, size_t, count)
{
	struct file *file;
	ssize_t ret = -EBADF;
	int fput_needed;

	file = fget_light(fd, &amp;fput_needed);
	if (file) {
		loff_t pos = file_pos_read(file);
		ret = vfs_read(file, buf, count, &amp;pos);
		file_pos_write(file, pos);
		fput_light(file, fput_needed);
	}

	return ret;
}

ssize_t vfs_read(struct file *file, char __user *buf, size_t count, loff_t *pos)
{
	ssize_t ret;

	if (!(file-&gt;f_mode &amp; FMODE_READ))
		return -EBADF;
	if (!file-&gt;f_op || (!file-&gt;f_op-&gt;read &amp;&amp; !file-&gt;f_op-&gt;aio_read))
		return -EINVAL;
	if (unlikely(!access_ok(VERIFY_WRITE, buf, count)))
		return -EFAULT;

	ret = rw_verify_area(READ, file, pos, count);
	if (ret &gt;= 0) {
		count = ret;
		if (file-&gt;f_op-&gt;read)
			ret = file-&gt;f_op-&gt;read(file, buf, count, pos);
		else
			ret = do_sync_read(file, buf, count, pos);
		if (ret &gt; 0) {
			fsnotify_access(file);
			add_rchar(current, ret);
		}
		inc_syscr(current);
	}

	return ret;
}

EXPORT_SYMBOL(vfs_read);

</rich_text><rich_text weight="heavy">fs/file_table.c</rich_text><rich_text>
/*
 * Lightweight file lookup - no refcnt increment if fd table isn't shared.
 *
 * You can use this instead of fget if you satisfy all of the following
 * conditions:
 * 1) You must call fput_light before exiting the syscall and returning control
 *    to userspace (i.e. you cannot remember the returned struct file * after
 *    returning to userspace).
 * 2) You must not call filp_close on the returned struct file * in between
 *    calls to fget_light and fput_light.
 * 3) You must not clone the current task in between the calls to fget_light
 *    and fput_light.
 *
 * The fput_needed flag returned by fget_light should be passed to the
 * corresponding fput_light.
 */
struct file *fget_light(unsigned int fd, int *fput_needed)
{
	struct file *file;
	struct files_struct *files = current-&gt;files;

	*fput_needed = 0;
	if (atomic_read(&amp;files-&gt;count) == 1) {
		file = fcheck_files(files, fd);
		if (file &amp;&amp; (file-&gt;f_mode &amp; FMODE_PATH))
			file = NULL;
	} else {
		rcu_read_lock();
		file = fcheck_files(files, fd);
		if (file) {
			if (!(file-&gt;f_mode &amp; FMODE_PATH) &amp;&amp;
			    atomic_long_inc_not_zero(&amp;file-&gt;f_count))
				*fput_needed = 1;
			else
				/* Didn't get the reference, someone's freed */
				file = NULL;
		}
		rcu_read_unlock();
	}

	return file;
}

</rich_text><rich_text weight="heavy">include/linux/fdtable.h</rich_text><rich_text>
</rich_text><rich_text foreground="#ffff00000000">static inline void free_fdtable(struct fdtable *fdt)
{
	call_rcu(&amp;fdt-&gt;rcu, free_fdtable_rcu);
}

static inline struct file * fcheck_files(struct files_struct *files, unsigned int fd)
{
	struct file * file = NULL;
	struct fdtable *fdt = files_fdtable(files);

	if (fd &lt; fdt-&gt;max_fds)
		file = rcu_dereference_check_fdtable(files, fdt-&gt;fd[fd]);
	return file;
}</rich_text><rich_text>

/* the real guts of fput() - releasing the last reference to file
 */
static void __fput(struct file *file)
{
	struct dentry *dentry = file-&gt;f_path.dentry;
	struct vfsmount *mnt = file-&gt;f_path.mnt;
	struct inode *inode = dentry-&gt;d_inode;

	might_sleep();

	fsnotify_close(file);
	/*
	 * The function eventpoll_release() should be the first called
	 * in the file cleanup chain.
	 */
	eventpoll_release(file);
	locks_remove_flock(file);

	if (unlikely(file-&gt;f_flags &amp; FASYNC)) {
		if (file-&gt;f_op &amp;&amp; file-&gt;f_op-&gt;fasync)
			file-&gt;f_op-&gt;fasync(-1, file, 0);
	}
	if (file-&gt;f_op &amp;&amp; file-&gt;f_op-&gt;release)
		file-&gt;f_op-&gt;release(inode, file);               </rich_text><rich_text foreground="#00000000ffff">//调用file_operations的release函数</rich_text><rich_text>
	security_file_free(file);
	ima_file_free(file);
	if (unlikely(S_ISCHR(inode-&gt;i_mode) &amp;&amp; inode-&gt;i_cdev != NULL &amp;&amp;
		     !(file-&gt;f_mode &amp; FMODE_PATH))) {
		cdev_put(inode-&gt;i_cdev);
	}
	fops_put(file-&gt;f_op);
	put_pid(file-&gt;f_owner.pid);
	file_sb_list_del(file);
	if ((file-&gt;f_mode &amp; (FMODE_READ | FMODE_WRITE)) == FMODE_READ)
		i_readcount_dec(inode);
	if (file-&gt;f_mode &amp; FMODE_WRITE)
		drop_file_write_access(file);
	file-&gt;f_path.dentry = NULL;
	file-&gt;f_path.mnt = NULL;
	file_free(file);
	dput(dentry);
	mntput(mnt);
}

void fput(struct file *file)
{
	if (atomic_long_dec_and_test(&amp;file-&gt;f_count)) </rich_text><rich_text foreground="#00000000ffff">//如果file-&gt;f_count的值为1，那么它将返回true</rich_text><rich_text>
		__fput(file);
}

EXPORT_SYMBOL(fput);

struct file *fget(unsigned int fd)
{
	struct file *file;
	struct files_struct *files = current-&gt;files;

	rcu_read_lock();
	file = fcheck_files(files, fd);
	if (file) {
		/* File object ref couldn't be taken */
		if (file-&gt;f_mode &amp; FMODE_PATH ||
		    !atomic_long_inc_not_zero(&amp;file-&gt;f_count))
			file = NULL;
	}
	rcu_read_unlock();

	return file;
}

EXPORT_SYMBOL(fget);

</rich_text><rich_text weight="heavy">include/linux/file.h</rich_text><rich_text>
static inline void fput_light(struct file *file, int fput_needed)
{
	if (fput_needed)
		fput(file);
}

</rich_text><rich_text scale="h3" weight="heavy">2. write</rich_text><rich_text>
</rich_text><rich_text weight="heavy">fs/read_write.c</rich_text><rich_text>
SYSCALL_DEFINE3(write, unsigned int, fd, const char __user *, buf,
		size_t, count)
{
	struct file *file;
	ssize_t ret = -EBADF;
	int fput_needed;

	file = fget_light(fd, &amp;fput_needed);
	if (file) {
		loff_t pos = file_pos_read(file);
		ret = vfs_write(file, buf, count, &amp;pos);
		file_pos_write(file, pos);
		fput_light(file, fput_needed);
	}

	return ret;
}

ssize_t vfs_write(struct file *file, const char __user *buf, size_t count, loff_t *pos)
{
	ssize_t ret;

	if (!(file-&gt;f_mode &amp; FMODE_WRITE))
		return -EBADF;
	if (!file-&gt;f_op || (!file-&gt;f_op-&gt;write &amp;&amp; !file-&gt;f_op-&gt;aio_write))
		return -EINVAL;
	if (unlikely(!access_ok(VERIFY_READ, buf, count)))
		return -EFAULT;

	ret = rw_verify_area(WRITE, file, pos, count);
	if (ret &gt;= 0) {
		count = ret;
		if (file-&gt;f_op-&gt;write)
			ret = file-&gt;f_op-&gt;write(file, buf, count, pos);
		else
			ret = do_sync_write(file, buf, count, pos);
		if (ret &gt; 0) {
			fsnotify_modify(file);
			add_wchar(current, ret);
		}
		inc_syscw(current);
	}

	return ret;
}

EXPORT_SYMBOL(vfs_write);</rich_text></node></node><node name="inode operations" prog_lang="custom-colors" readonly="False" tags="" unique_id="87"><rich_text>struct inode_operations {
	struct dentry * (*lookup) (struct inode *,struct dentry *, struct nameidata *);
	void * (*follow_link) (struct dentry *, struct nameidata *);
	int (*permission) (struct inode *, int);
	struct posix_acl * (*get_acl)(struct inode *, int);

	int (*readlink) (struct dentry *, char __user *,int);
	void (*put_link) (struct dentry *, struct nameidata *, void *);

	int (*create) (struct inode *,struct dentry *,umode_t,struct nameidata *);
	int (*link) (struct dentry *,struct inode *,struct dentry *);
	int (*unlink) (struct inode *,struct dentry *);
	int (*symlink) (struct inode *,struct dentry *,const char *);
	int (*mkdir) (struct inode *,struct dentry *,umode_t);
	int (*rmdir) (struct inode *,struct dentry *);
	int (*mknod) (struct inode *,struct dentry *,umode_t,dev_t);
	int (*rename) (struct inode *, struct dentry *,
			struct inode *, struct dentry *);
	void (*truncate) (struct inode *);
	int (*setattr) (struct dentry *, struct iattr *);
	int (*getattr) (struct vfsmount *mnt, struct dentry *, struct kstat *);
	int (*setxattr) (struct dentry *, const char *,const void *,size_t,int);
	ssize_t (*getxattr) (struct dentry *, const char *, void *, size_t);
	ssize_t (*listxattr) (struct dentry *, char *, size_t);
	int (*removexattr) (struct dentry *, const char *);
	void (*truncate_range)(struct inode *, loff_t, loff_t);
	int (*fiemap)(struct inode *, struct fiemap_extent_info *, u64 start,
		      u64 len);
} ____cacheline_aligned;</rich_text></node><node name="super operations" prog_lang="custom-colors" readonly="False" tags="" unique_id="88"><rich_text>struct super_operations {
   	struct inode *(*alloc_inode)(struct super_block *sb);
	void (*destroy_inode)(struct inode *);

   	void (*dirty_inode) (struct inode *, int flags);
	int (*write_inode) (struct inode *, struct writeback_control *wbc);
	int (*drop_inode) (struct inode *);
	void (*evict_inode) (struct inode *);
	void (*put_super) (struct super_block *);
	void (*write_super) (struct super_block *);
	int (*sync_fs)(struct super_block *sb, int wait);
	int (*freeze_fs) (struct super_block *);
	int (*unfreeze_fs) (struct super_block *);
	int (*statfs) (struct dentry *, struct kstatfs *);
	int (*remount_fs) (struct super_block *, int *, char *);
	void (*umount_begin) (struct super_block *);

	int (*show_options)(struct seq_file *, struct dentry *);
	int (*show_devname)(struct seq_file *, struct dentry *);
	int (*show_path)(struct seq_file *, struct dentry *);
	int (*show_stats)(struct seq_file *, struct dentry *);
#ifdef CONFIG_QUOTA
	ssize_t (*quota_read)(struct super_block *, int, char *, size_t, loff_t);
	ssize_t (*quota_write)(struct super_block *, int, const char *, size_t, loff_t);
#endif
	int (*bdev_try_to_free_page)(struct super_block*, struct page*, gfp_t);
	int (*nr_cached_objects)(struct super_block *);
	void (*free_cached_objects)(struct super_block *, int);
};
</rich_text></node><node name="设备文件节点的生成" prog_lang="custom-colors" readonly="False" tags="" unique_id="90"><rich_text>    在Linux系统下，设备文件是种特殊的文件类型，其存在的主要意义是沟通用户空间程序和内核空间驱动程序。换句话说，用户空间的应用程序要想使用 驱动程序提供的服务，需要经过设备文件来达成。当然，如果你的驱动程序只是为内核中的其他模块提供服务，则没有必要生成对应的设备文件。
    按照通用的规则，Linux系统所有的设备文件都位于/dev目录下。/dev目录在Linux系统中算是一个比较特殊的目录，在Linux系统早 期还不支持动态生成设备节点时，/dev目录就是挂载的根文件系统下的/dev，对这个目录下所有文件的操作使用的是根文件系统提供的接口。比如，如果 Linux系统挂载的根文件系统是ext3，那么对/dev目录下所有目录/文件的操作都将使用ext3文件系统的接口。随着后来Linux内核的演进， 开始支持动态设备节点的生成  ，使得系统在启动过程中会自动生成各个设备节点，这就使得/dev目录不必要作为一个非易失的文件系统的形式存在。因此，当前的Linux内核在挂载完根 文件系统之后，会在这个根文件系统的/dev目录上重新挂载一个新的文件系统devtmpfs，后者是个基于系统RAM的文件系统实现。当然，对动态设备 节点生成的支持并不意味着一定要将根文件系统中的/dev目录重新挂载到一个新的文件系统上，事实上动态生成设备节点技术的重点并不在文件系统上面。
动态设备节点的特性需要其他相关技术的支持，在后续的章节中会详细描述这些特性。目前先假定设备节点是通过Linux系统下的mknod命令静态创 建。为方便叙述，下面用一个具体的例子来描述设备文件产生过程中的一些关键要素，这个例子的任务很简单：在一个ext3类型的根文件系统中的/dev目录 下用mknod命令来创建一个新的设备文件节点demodev，对应的驱动程序使用的设备主设备号为2，次设备号是0，命令形式为：
1. root@LinuxDev:/home/dennis# mknod /dev/demodev c 2 0 

上述命令成功执行后，将会在/dev目录下生成一个名为demodev的字符设备节点。如果用strace工具来跟踪一下上面的命令，会发现如下输出（删去了若干不相关部分）：
1. root@LinuxDev:/home/dennis# strace mknod /dev/demodev c 2 0  
2. execve(&quot;/bin/mknod&quot;, [&quot;mknod&quot;, &quot;/dev/demodev&quot;, &quot;c&quot;, &quot;30&quot;,&quot;0&quot;], [/* 36 vars */]) = 0  
3. …  
4. mknod(&quot;/dev/demodev&quot;, S_IFCHR|0666, makedev(30,0)) = 0  
5. …  

可见Linux下的mknod命令最终是通过调用mknod函数来实现的，调用时的重要参数有两个，一是设备文件名（&quot;/dev /demodev&quot;），二是设备号（makedev(30,0)）。设备文件名主要在用户空间使用（比如用户空间程序调用open函数时），而内核空间则 使用inode来表示相应的文件。本书只关注内核空间的操作，对于前面的mknod命令，它将通过系统调用sys_mknod进入内核空间，这个系统调用的原型是：
1. &lt;include/linux/syscalls.h&gt; 
2. long sys_mknod(const char __user *filename, int mode, unsigned dev);  

SYSCALL_DEFINE3(mknod, const char __user *, filename, umode_t, mode, unsigned, dev)
{
	return sys_mknodat(AT_FDCWD, filename, mode, dev);
}

SYSCALL_DEFINE4(mknodat, int, dfd, const char __user *, filename, umode_t, mode,
		unsigned, dev)
{
	struct dentry *dentry;
	struct path path;
	int error;

	if (S_ISDIR(mode))
		return -EPERM;

	dentry = user_path_create(dfd, filename, &amp;path, 0);
	if (IS_ERR(dentry))
		return PTR_ERR(dentry);

	if (!IS_POSIXACL(path.dentry-&gt;d_inode))
		mode &amp;= ~current_umask();
	error = may_mknod(mode);
	if (error)
		goto out_dput;
	error = mnt_want_write(path.mnt);
	if (error)
		goto out_dput;
	error = security_path_mknod(&amp;path, dentry, mode, dev);
	if (error)
		goto out_drop_write;
	switch (mode &amp; S_IFMT) {
		case 0: case S_IFREG:   </rich_text><rich_text foreground="#00000000ffff">//一般文件</rich_text><rich_text>
			error = vfs_create(path.dentry-&gt;d_inode,dentry,mode,NULL);
			break;
		case S_IFCHR: case S_IFBLK: </rich_text><rich_text foreground="#00000000ffff">//字符设备文件或块设备文件</rich_text><rich_text>
			error = vfs_mknod(path.dentry-&gt;d_inode,dentry,mode,
					new_decode_dev(dev));
			break;
		case S_IFIFO: case S_IFSOCK: </rich_text><rich_text foreground="#00000000ffff">//fifo文件或socket文件</rich_text><rich_text>
			error = vfs_mknod(path.dentry-&gt;d_inode,dentry,mode,0);
			break;
	}
out_drop_write:
	mnt_drop_write(path.mnt);
out_dput:
	dput(dentry);
	mutex_unlock(&amp;path.dentry-&gt;d_inode-&gt;i_mutex);
	path_put(&amp;path);

	return error;
}

int vfs_create(struct inode *dir, struct dentry *dentry, umode_t mode,
		struct nameidata *nd)
{
	int error = may_create(dir, dentry);

	if (error)
		return error;

	if (!dir-&gt;i_op-&gt;create)
		return -EACCES;	/* shouldn't it be ENOSYS? */
	mode &amp;= S_IALLUGO;
	mode |= S_IFREG;
	error = security_inode_create(dir, dentry, mode);
	if (error)
		return error;
	error = dir-&gt;i_op-&gt;create(dir, dentry, mode, nd);
	if (!error)
		fsnotify_create(dir, dentry);
	return error;
}

int vfs_mknod(struct inode *dir, struct dentry *dentry, umode_t mode, dev_t dev)
{
	int error = may_create(dir, dentry);

	if (error)
		return error;

	if ((S_ISCHR(mode) || S_ISBLK(mode)) &amp;&amp;
	    !ns_capable(inode_userns(dir), CAP_MKNOD))
		return -EPERM;

	if (!dir-&gt;i_op-&gt;mknod)
		return -EPERM;

	error = devcgroup_inode_mknod(mode, dev);
	if (error)
		return error;

	error = security_inode_mknod(dir, dentry, mode, dev);
	if (error)
		return error;

	error = dir-&gt;i_op-&gt;mknod(dir, dentry, mode, dev);
	if (!error)
		fsnotify_create(dir, dentry);
	return error;
}
注意sys_mknod的最后一个参数dev，它是由用户空间的mknod命令构造出的设备号。sys_mknod系统调用将通过/dev目录上挂载的文件系统接口来为/dev/demodev生成一个新的inode ，设备号将被记录到这个新的inode对象上。
</rich_text><rich_text weight="heavy">图2-7展示了通过ext3文件系统在/dev目录下生成一个新的设备节点/dev/demodev的主要流程。</rich_text><rich_text>
</rich_text><rich_text justification="left"></rich_text><rich_text>

完整了解设备节点产生的整个过程需要知晓VFS和特定文件系统的技术细节。然而从驱动程序员的角度来说，没有必要知道文件系统相关的所有细节，只需关注文件系统和驱动程序间是如何建立上关联的就足够了。
sys_mknod首先在根文件系统ext3的根目录&quot;/&quot;下寻找dev目录所对应的inode，图中对应的inode编号为168，ext3文件 系统的实现会通过某种映射机制，通过inode编号最终得到该inode在内存中的实际地址（图中由标号1的线段表示）。接下来会通过dev的inode 结构中的i_op成员指针所指向的ext3_dir_inode_operations（这是个struct  inode_operations类型的指针），来调用该对象中的mknod方法，这将导致ext3_mknod函数被调用。
ext3_mknod函数的主要作用是生成一个新的inode（用来在内核空间表示demodev设备文件节点，demodev设备节点文件与新生成的inode之间的关联在图2-7中由标号5的线段表示）。在ext3_mknod中会调用一个和设备驱动程序关系密切的 init_special_inode函数，其定义如下：

1. &lt;fs/inode.c&gt; 
2. void init_special_inode(struct inode *inode, umode_t mode, dev_t rdev)  
3. {  
4.     inode-&gt;i_mode = mode;  
5.     if (S_ISCHR(mode)) {  
6.         inode-&gt;i_fop = &amp;def_chr_fops;  
7.         inode-&gt;i_rdev = rdev;  
8.     } else if (S_ISBLK(mode)) {  
9.         inode-&gt;i_fop = &amp;def_blk_fops;  
10.         inode-&gt;i_rdev = rdev;  
11.     } else if (S_ISFIFO(mode))  
12.         inode-&gt;i_fop = &amp;def_fifo_fops;  
13.     else if (S_ISSOCK(mode))  
14.         inode-&gt;i_fop = &amp;bad_sock_fops;  
15.     else  
16.         printk(KERN_DEBUG &quot;init_special_inode: bogus i_mode (%o) for&quot;  
17.                   &quot; inode %s:%lu\n&quot;, mode, inode-&gt;i_sb-&gt;s_id,  
18.                   inode-&gt;i_ino);  
19. }  

这个函数最主要的功能便是为新生成的inode初始化其中的i_fop和i_rdev成员。设备文件节点inode中的i_rdev成员用来表示该 inode所对应设备的设备号，通过参数rdev为其赋值。设备号在由sys_mknod发起的整个内核调用链中进行传递，最早来自于用户空间的 mknod命令行参数。
i_fop成员的初始化根据是字符设备还是块设备而有不同的赋值。对于字符设备，fop指向def_chr_fops，后者主要定义了一个open操作：

1. &lt;fs/char_dev.c&gt; 
2. const struct file_operations def_chr_fops = {  
3.     .open = chrdev_open,  
4.     …  
5. };

</rich_text><rich_text foreground="#00000000ffff">在do_sys_open()函数中会会把inode-&gt;i_fop赋值给f-&gt;f_op, 后面的文件操作会调用f-&gt;f_op里定义的函数</rich_text><rich_text>   

相对于字符设备，块设备的def_blk_fops的定义则要有点复杂：
1. &lt;fs/block_dev.c&gt; 
2. const struct file_operations def_blk_fops = {  
3.     .open       = blkdev_open,  
4.     .release    = blkdev_close,  
5.     .llseek = block_llseek,  
6.     .read       = do_sync_read,  
7.     .write      = do_sync_write,  
8.     .aio_read   = generic_file_aio_read,  
9.     .aio_write  = blkdev_aio_write,  
10.     .mmap       = generic_file_mmap,  
11.     .fsync      = blkdev_fsync,  
12.     .unlocked_ioctl = block_ioctl,  
13. #ifdef CONFIG_COMPAT  
14.     .compat_ioctl   = compat_blkdev_ioctl,  
15. #endif  
16.     .splice_read    = generic_file_splice_read,  
17.     .splice_write   = generic_file_splice_write,  
18. };  

关于块设备，将在本书第11章&quot;块设备驱动程序&quot;中详细讨论，这里依然把考察的重点放在字符设备上。字符设备inode中的i_fop指向def_chr_fops。至此，设备节点的所有相关铺垫工作都已经结束，接下来可以看看打开一个设备文件到底意味着什么。 </rich_text><encoded_png char_offset="3958"></encoded_png></node><node name="tmpfs" prog_lang="custom-colors" readonly="False" tags="" unique_id="95"><rich_text>
</rich_text></node></node><node name="linux boot" prog_lang="custom-colors" readonly="False" tags="" unique_id="14"><rich_text>
</rich_text><node name="从ramdisk根文件系统启动Linux" prog_lang="custom-colors" readonly="False" tags="" unique_id="15"><rich_text>今天做了个试验，让Linux2.6.29.4从ramdisk根文件系统启动成功，总结一下。
其中涉及的内容较多，很多东西不再详述，如需深入研究请查阅相关资料（百度或谷歌一下一大堆）。


开发环境：Fedora 9
交叉编译工具链：arm-linux-gcc 4.3.2 with EABI
嵌入式Linux内核版本：2.6.29.4-FriendlyARM。昨天写贴子的时候具体记不清了，今天起来启动开发板用uname -r查一下，就是叫做2.6.29.4-FriendlyARM，帖子已经改好了。本文就是友善之臂的2.6.29.4-FriendlyARM的那个版本的内核的基础上改的。其它版本的应该也类似，仅供参考。
开发板：mini2440-128M Nand Flash
Bootloader：u-boot-2009.11

具体步骤如下：
</rich_text><rich_text scale="h2">1.解压内核源码树</rich_text><rich_text>
解压linux-2.6.29-mini2440-20090708.tgz到自己的工作目录，会生成一个友善之臂修改过的并且有几个mini2440默认配置文件的内核源码目录linux-2.6.29。具体步骤参照友善之臂mini2440开发板用户手册，具体不详述了。

</rich_text><rich_text scale="h2">2.修改内核配置选项</rich_text><rich_text>
进入内核源码目录linux-2.6.29目录
#cp config_mini2440_t35 .config
#make menuconfig ARCH=arm
打开配置菜单，修改两个配置项，分别是：
    a）：General setup--&gt;选择 Initial RAM filesystem and RAM disk...... 项
    b）：Device Drivers--&gt;Block devices--&gt;选择 RAM block device support 项

并检查Optimize for size是否被选中，如果没有则选中，此项优化内核大小，根据需要进行配置。
修改（8192）Default RAM disk size kbytes选项为（4096）Default RAM disk size kbytes，之所以修改是因为我之后制作的ramdisk是4096KB大小的。当然如果你想制作8192KB大小的ramdisk，这里就要对应为8192了，以此类推。但是最小系统嘛，是不用那么大的ramdisk的。此项的默认配置就是（4096），以前我改过这个配置，所以是（8192）了。如果这个大小和你做的ramdisk不匹配，则启动时仍然会出现kernel panic内核恐慌，提示ramdisk格式不正确，挂载不上ramdisk。
然后特别要注意的一点是，ramdisk是一种内存虚拟磁盘技术，实质上并不是一种文件系统，它使用的文件系统时ext2文件系统。所以一定要在make menuconfig ARCH=arm的时候进入File systems菜单，选上&lt;*&gt; Second extended fs support。以提供内核对ext2文件系统的支持。我以前添加过了ext2文件系统了，所以开始的时候在此没有说明，在此为了说明为什么有的人照着我的方法做了，但是仍然kernel panic，特别把这一步也加上。
然后保存配置退出。
这样就为内核添加好了ramdisk启动功能和ramdisk的驱动支持了。

</rich_text><rich_text scale="h2">3.修改内核启动参数</rich_text><rich_text>
    方法有二：
    a）：修改.config的第310行，修改CONFIG_CMDLINE=&quot;&quot;的定义
        修改为CONFIG_CMDLINE=&quot;initrd=0x31000000,0x200000 root=/dev/ram rw init=/linuxrc console=ttySAC0 mem=64&quot;
        保存。
        意思为从ramdisk启动，ramdisk压缩文件起始地址在内存地址0x31000000处，文件大小为0x200000。
        此参数也可以在make menuconfig ARCH=arm时进入Boot options菜单，然后在Default kernel command string里修改。效果是一样的。
     
    b）：或者不修改.config的的第310行CMDLINE定义,而是用u-boot的bootargs环境变量来传递启动参数。
        同样也是修改该环境变量为bootargs=initrd=0x31000000,0x200000 root=/dev/ram rw init=/linuxrc console=ttySAC0 mem=64
        并saveenv保存u-boot环境变量
        以上a），b）的效果是一样的。

</rich_text><rich_text scale="h2">4.编译内核</rich_text><rich_text>
#make zImage ARCH=arm CROSS_COMPILE=arm-linux-
然后是二十分钟左右的等待。
编译完成后在当前目录下就出现了zImage内核映像了。
好像友善之臂把内核源码目录里的uImage目标给注释了，以前在论坛里看到过有人说，直接make uImage好像提示没有uImage的目标。所以我就先制作zImage，然后再用u-boot的mkimage工具转化为uImage。其实uImage就是在zImage的开头部分增加了一个64字节的内核映像说明。

</rich_text><rich_text scale="h2">5.制作uImage内核映像</rich_text><rich_text>
由于我使用的Bootloader是u-boot，所以要将zImage转化为uImage，方法如下：
#mkimage -A arm -O linux -T kernel -C none -a 0x30008000 -e 0x30008000 -n &quot;Linux kernel Image&quot; -d zImage uImage-ramdisk
说明：mkimage工具是u-boot格式uImage内核映像制作工具。如果成功编译u-boot之后，它会在u-boot源码树下的tools目录之下。建议将其拷贝到宿主机的/sbin/目录下，以方便使用。mkimage使用时的具体参数不再详述，不清楚的请自己查阅。

</rich_text><rich_text scale="h2">6.制作ramdisk根文件系统</rich_text><rich_text>
    该过程是制作ramdisk根文件系统的核心步骤，方法如下：
    a）创建根文件系统目录：
    #cd转入到你的工作目录。
    #mkdir rootfs
    #cd rootfs
    #mkdir bin dev etc lib proc sbin sys usr mnt tmp var
    #mkdir usr/bin usr/lib usr/sbin lib/modules

    b）创建最基本的设备文件：
    #cd dev
    #mknod -m 666 console c 5 1
    #mknod -m 666 null c 1 3
    #cd ..

    c）安装/etc配置文件：
    这里可以直接把友善之臂的root_qtopia里的几个基本的配置文件拷贝过来，只拷贝必要的即可，并对其内容进行删减，因为我做的ramdisk并不包含Qtopia等，全拷贝过来也没有用。
    我是从网上找的最小系统的etc配置文件直接解压到我制作的根文件系统里了，并做参照友善之臂的root_qtopia添加了一些内容，见最后的说明。
    操作如下：
    #tar etc.tar.gz -C /xxx/rootfs
    xxx表示你要制作的rootfs所在的目录。

    d）编译内核模块：
    方法是如下：
    进入Linux内核源码目录（linux-2.6.29）
    #make modules ARCH=arm CROSS_COMPILE=arm-linux-

    e）安装内核模块：
    #make modules_install ARCH=arm INSTALL_MOD_PATH=/xxx/rootfs
        xxx表示你要制作的rootfs所在的目录。

    f）配置busybox
    进入busybox目录执行#make menuconfig
　　进入Busybox Settings -&gt; build Options -&gt;选中&quot;Build busybox as a static binary“，即静态链接，免去拷贝大量的库文件。
　　Installation Options -&gt; 选中&quot;Don't use /usr&quot;，以免busybox不慎被安装到宿主机系统的相应目录下，破坏宿主机系统。
　　Busybox Installation Prefix （/xxx/rootfs），修改该选项表明编译后的busybox将安装到该位置。

    g）编译、安装busybox
    #make ARCH=arm CROSS_COMPILE=arm-linux-
        几分钟编译完成后
    #make install
        安装到Busybox Installation Prefix （/xxx/rootfs）设定的目录里。当前为我要制作的根文件系统目录（/xxx/rootfs）。

    h）制作ramdisk根文件系统镜像
    方法如下：
    上</rich_text><rich_text foreground="#0070af">http://genext2fs.sourceforge.net/</rich_text><rich_text>下载可以简单方便的制作ramdisk文件系统的工具genext2fs，这样就不用像网上大多数说的那样繁琐的制作ramdisk映像了，当前最新版本为genext2fs-1.4.1.tar.gz 。
    编译生成该工具genext2fs，并将其放入宿主机的/sbin/目录下以方便使用。
    跳转到要制作的rootfs的上一级目录
    #genext2fs -b 4096 -d rootfs ramdisk
    -b是指制作的ramdisk大小为4096K字节
    -d是指要制作成ramdisk的根文件系统目录
    最后的ramdisk是制作出来的ramdisk的名字，当然可以改名了。
    #gzip -9 -f ramdisk
    将该ramdisk以最优方式压缩为ramdisk.gz

</rich_text><rich_text scale="h2">7.下载内核映像和ramdisk映像</rich_text><rich_text>
    启动u-boot，暂停u-boot自动启动，在u-boot命令行中键入如下命令下载内核和ramdisk映像：
    [u-boot@MINI2440]# tftp 0x32000000 uImage-ramdisk
    dm9000 i/o: 0x20000300, id: 0x90000a46
    DM9000: running in 16 bit mode
    MAC: 08:08:11:18:12:27
    operating at 100M full duplex mode
    Using dm9000 device
    TFTP from server 192.168.31.117; our IP address is 192.168.31.230
    Filename 'uImage-ramdisk'.
    Load address: 0x32000000
    Loading: T T #################################################################
             #################################################################
             #
    done
    Bytes transferred = 1917752 (1d4338 hex)
    [u-boot@MINI2440]# tftp 0x31000000 ramdisk.gz
    dm9000 i/o: 0x20000300, id: 0x90000a46
    DM9000: running in 16 bit mode
    MAC: 08:08:11:18:12:27
    operating at 100M full duplex mode
    Using dm9000 device
    TFTP from server 192.168.31.117; our IP address is 192.168.31.230
    Filename 'ramdisk.gz'.
    Load address: 0x31000000
    Loading: T T #################################################################
             ####
    done
    Bytes transferred = 1002594 (f4c62 hex)

</rich_text><rich_text scale="h2">8）使用ramdisk根文件系统启动内核</rich_text><rich_text>
    在u-boot命令行下键入如下命令启动系统：
    bootm 0x32000000
    ## Booting kernel from Legacy Image at 32000000 ...
       Image Name:   Linux-2.6.29.4-FriendlyARM
       Created:      2010-04-09  15:13:52 UTC
       Image Type:   ARM Linux Kernel Image (uncompressed)
       Data Size:    1917688 Bytes =  1.8 MB
       Load Address: 30008000
       Entry Point:  30008000
       Verifying Checksum ... OK
       Loading Kernel Image ... OK
    OK

    Starting kernel ...

    Uncompressing Linux.............................................................
    ................................................................ done, booting t
    he kernel.
    Linux version 2.6.29.4-FriendlyARM (</rich_text><rich_text foreground="#0070af" link="webs http://mailto:root@localhost.loca">root@localhost.loca</rich_text><rich_text>ldomain) (gcc version 4.3
    .2 (Sourcery G++ Lite 2008q3-72) ) #3 Fri Apr 9 23:13:36 CST 2010
    CPU: ARM920T [41129200] revision 0 (ARMv4T), cr=c0007177
    CPU: VIVT data cache, VIVT instruction cache
    Machine: FriendlyARM Mini2440 development board
    Memory policy: ECC disabled, Data cache writeback
    ……中间过长的内容在此省略了……
    RAMDISK: Compressed image found at block 0
    VFS: Mounted root (ext2 filesystem) on device 1:0.
    Freeing init memory: 136K
    eth0: link down

    Processing /etc/profile... Done

    # eth0: link up, 100Mbps, full-duplex, lpa 0x45E1

至此系统启动成功。

----------------------------------------------------------------------------------
后记：由于友善之臂mini2440默认的配置文件是将驱动等直接编译到内核里去了，并没有使用内核模块。所以上述第6步制作根文件系统中的d）编译和e）安装内核模块的步骤可以不做。我就没有编译内核模块。因为参照友善之臂的root_qtopia根文件系统发现/lib/modules/`uname -r`里根本没有东西。而且以前用友善之臂的config_mini2440_t35默认配置编译内核模块的时候。发现友善只做了个hello_modules的内核模块示例。在此我们不需要使用这个hello_modules，所以这两步就略过去了。

说明：由于最小系统里的etc配置文件没有写自动启动网卡的脚本，所以我做的ramdisk开始时并不能自动启动网卡。后来参照友善之臂的root_qtopia根文件系统里的脚本做如下修改，即可自动启动脚本。
修改如下：
修改要制作的ramdisk根文件系统的rootfs下的/etc/init.d/rcS文件
在最下边添加如下两行命令即可自动启动网卡：
/sbin/ifconfig lo 127.0.0.1
/sbin/ifconfig eth0 192.168.31.230 netmask 255.255.255.0 up

这个方法是通过分析友善之臂的root_qtopia根文件系统的启动流程时发现的。
通过分析友善之臂的root_qtopia根文件系统，我们还能发现更多的内容。在此不在详述。
锻炼一下自己分析解决问题的能力吧。呵呵。


</rich_text><rich_text foreground="#ff0000" scale="h1">android 的boot.img 包括 boot header，kernel， ramdisk</rich_text><rich_text>
</rich_text><rich_text foreground="#000000">首先来看看Makefile是如何产生我们的boot.img的：</rich_text><rich_text> 
boot镜像不是普通意义上的文件系统，而是一种特殊的Android定制格式，由boot header，压缩的内核，ramdisk以及second stage loader（可选）组成，可以从</rich_text><rich_text foreground="#0063dc" link="webs http://git.source.android.com/?p=platform/system/core.git;a=blob;f=mkbootimg/bootimg.h">mkbootimg.h</rich_text><rich_text>文件中看到。
boot,img文件跳过4k的文件头之后，包括两个 gz包，一个是boot.img-kernel.gz：Linux内核，一个是boot.img-ramdisk.cpio.gz
</rich_text><rich_text foreground="#ff0000">大概的组成结构如下</rich_text><rich_text>
 
*</rich_text><rich_text foreground="#008000">
 ** +-----------------+ 
 ** | boot header     | 1 page
 ** +-----------------+
 ** | kernel              | n pages  
 ** +-----------------+
 ** | ramdisk           | m pages  
 ** +-----------------+
 ** | second stage    | o pages
 ** +-----------------+
 </rich_text><rich_text>
</rich_text><rich_text foreground="#008000">boot header为包括命令行参数等等,地址为000-----0xFFF</rich_text><rich_text>
</rich_text><rich_text foreground="#008000">ramdisk为 1F8B0800000000开头</rich_text><rich_text>
</rich_text><rich_text foreground="#008000">kernel为 0000A0E1 重复8遍开头</rich_text><rich_text>
 

关于boot  header这个数据结构我们需要重点注意，在这里我们关注其中几个比较重要的值，这些值定义在boot/boardconfig.h里面，不同的芯片对 应vendor下不同的boardconfig，在这里我们的值分别是（分别是kernel/ramdis/tags载入ram的物理地址）：
#define PHYSICAL_DRAM_BASE   0x00200000 
 #define KERNEL_ADDR          (PHYSICAL_DRAM_BASE + 0x00008000)
 #define RAMDISK_ADDR         (PHYSICAL_DRAM_BASE + 0x01000000)
 #define TAGS_ADDR            (PHYSICAL_DRAM_BASE + 0x00000100)
 #define NEWTAGS_ADDR         (PHYSICAL_DRAM_BASE + 0x00004000)
上面这些值分别和我们开篇时候提到的那几个名词相对应，比如kernel_addr就是ZTEXTADDR，RAMDISK_ADDR就是 INITRD_PHYS,而TAGS_ADDR就是PARAMS_PHYS。bootloader会从boot.img的分区中将kernel和 ramdisk分别读入RAM上面定义的地址中，然后就会跳到ZTEXTADDR开始执行。
</rich_text><rich_text foreground="#008000">ramdisk映像是一个最基础的小型文件系统，它包括了初始化系统所需要的全部核心文件，例如:初始化init进程以及init.rc（可以用于设置很多系统的参数）等文件。</rich_text><rich_text>以下是一个典型的ramdisk中包含的文件列表：
 </rich_text><rich_text foreground="#000000">./init.trout.rc
 ./default.prop
 ./proc
 ./dev
 ./init.rc
 ./init
 ./sys
 ./init.goldfish.rc
 ./sbin
 ./sbin/adbd
 ./system
 ./data</rich_text><rich_text>
 
 
 
</rich_text><rich_text foreground="#008000">如果要分离可以用winhex将boot。img打开</rich_text><rich_text>
</rich_text><rich_text foreground="#008000">找到0000A0E1 到1F8B0800000000的前面的数据块保持为kernel</rich_text><rich_text>
</rich_text><rich_text foreground="#008000">找到1F8B0800000000到文件尾部的数据块保持为ramdisk.img</rich_text><rich_text> 
 out/host/linux-x86/bin/mkbootimg   --kernel out/target/product/msm7630_surf/kernel --ramdisk  out/target/product/msm7630_surf/ramdisk.img --cmdline  &quot;console=ttyMSM1,115200n8 androidboot.hardware=qcom&quot; --base 0x00200000  --pagesize  4096 --output out/target/product/msm7630_surf/boot.img
 
        根据上面的命令我们可以首先看看mkbootimg 这个工具的源文件：system/core/mkbootimg.c。看完之 后我们就能很清晰地看到boot.img的内部构造，它是由boot header /kernel  /ramdisk /second  stage构成的，其中前3项是必须的，最后一项是可选的。
header + padding + kernel + padding + ramdisk + padding + ...
 4 * 2, magic，固定为&quot;ANDROID!&quot;
 4 * 1, kernel长度，小端unsigned
 4 * 1, kernel地址，应为base + 0x00008000 (base为0x200000)
 4 * 1, ramdisk长度，小端unsigned
 4 * 1, ramdisk地址，应为base + 0x01000000
 4 * 1, second stage长度，小端unsigned，为0
 4 * 1, second stage地址，应为base + 0x00f00000
 4 * 1, tags地址，应为base + 0x00000100
 4 * 1, page大小，小端unsigned, 为2048或者4096
4 * 2, 未使用，固定为0x00
 4 * 4, 板子名字，一般为空
 4 * 128, 内核命令参数，为mem=211M console=ttyMSM2,115200n8 androidboot.hardware=qcom console=ttyUSBCONSOLE0 androidboot.console=ttyUSBCONSOLE0
 4 * 8, id, 为sha之类，实际写0x00就可
 padding, 以上header为608字节，把这部分补齐到page_size * 2大小 
 kernel_size, kernel内容
 padding，把kernel_size补齐到page_size * 2
 ramdisk_size, ramdisk内容
 padding, 把ramdisk补齐到page_size * 2
 second_size, second内容，一般为0
 padding, 补齐second_sise为page_size，一般为0
 
配合 boot.img 来看会比较好理解.
</rich_text><rich_text justification="left"></rich_text><rich_text>
由此可知 boot_img_hdr 中各成员值为：
 </rich_text><rich_text justification="left"></rich_text><rich_text>
 </rich_text><rich_text justification="left"></rich_text><rich_text>
TAGS_ADDR 如上 target/&lt;your-platform&gt;/rules.mk 所定义的 : 0x40200100, 所以 boot_linux(), 就是传入TAGS_ADDR, 
 
然后将资料写入 tag, tag 的结构如下所示.
 </rich_text><rich_text justification="left"></rich_text><rich_text>

然后进入到 kernel 的入口函数: entry(0, machtype, tags)

</rich_text><encoded_png char_offset="10438"></encoded_png><encoded_png char_offset="10467"></encoded_png><encoded_png char_offset="10470"></encoded_png><encoded_png char_offset="10598"></encoded_png></node><node name="linux启动分析" prog_lang="custom-colors" readonly="False" tags="" unique_id="16"><rich_text>
</rich_text><rich_text link="webs http://www.cnblogs.com/QLinux/articles/2540304.html" scale="h1">Linux开机启动过程分析</rich_text><rich_text scale="h1">   </rich_text><rich_text>
开机过程指的是从打开计算机电源直到LINUX显示用户登录画面的全过程。分析LINUX开机过程也是深入了解LINUX核心工作原理的一个很好的途径。

</rich_text><rich_text scale="h2">启动第一步－－加载BIOS</rich_text><rich_text>
当 你打开计算机电源，计算机会首先加载BIOS信息，BIOS信息是如此的重要，以至于计算机必须在最开始就找到它。这是因为BIOS中包含了CPU的相关 信息、设备启动顺序信息、硬盘信息、内存信息、时钟信息、PnP特性等等。在此之后，计算机心里就有谱了，知道应该去读取哪个硬件设备了。在BIOS将系 统的控制权交给硬盘第一个扇区之后，就开始由Linux来控制系统了。

</rich_text><rich_text scale="h2">启动第二步－－读取MBR</rich_text><rich_text>
硬 盘上第0磁道第一个扇区被称为MBR，也就是Master Boot  Record，即主引导记录，它的大小是512字节，可里面却存放了预启动信息、分区表信息。可分为两部分：第一部分为引导（PRE-BOOT）区，占了 446个字节；第二部分为分区表（PARTITION  PABLE），共有66个字节，记录硬盘的分区信息。预引导区的作用之一是找到标记为活动（ACTIVE）的分区，并将活动分区的引导区读入内存。
系统找到BIOS所指定的硬盘的MBR后，就会将其复制到0×7c00地址所在的物理内存中。其实被复制到物理内存的内容就是Boot Loader，而具体到你的电脑，那就是lilo或者grub了。

</rich_text><rich_text scale="h2">启动第三步－－Boot Loader</rich_text><rich_text>
Boot  Loader  就是在操作系统内核运行之前运行的一段小程序。通过这段小程序，我们可以初始化硬件设备、建立内存空间的映射图，从而将系统的软硬件环境带到一个合适的状 态，以便为最终调用操作系统内核做好一切准备。通常，BootL oade:是严重地依赖于硬件而实现的，不同体系结构的系统存在着不同的Boot  Loader。
Linux的引导扇区内容是采用汇编语言编写的程序，其源代码在arch/i386/boot中(不同体系的CPU有其各自的boot目录)，有4个程序文件:
◎bootsect.S，引导扇区的主程序，汇编后的代码不超过512字节，即一个扇区的 大 小
◎setup.S， 引导辅助程序
◎edd.S,辅助程序的一部分，用于支持BIOS增强磁盘设备服务
◎video.S,辅助程序的另一部分，用于引导时的屏幕显示
Boot Loader有若干种，其中Grub、Lilo和spfdisk是常见的Loader，这里以Grub为例来讲解吧。
系统读取内存中的grub配置信息（一般为menu.lst或grub.lst），并依照此配置信息来启动不同的操作系统。

</rich_text><rich_text scale="h2">启动第四步－－加载内核</rich_text><rich_text>
根据grub设定的内核映像所在路径，系统读取内存映像，并进行解压缩操作。此时，屏幕一般会输出“Uncompressing Linux”的提示。当解压缩内核完成后，屏幕输出“OK, booting the kernel”。
系统将解压后的内核放置在内存之中，并调用start_kernel()函数来启动一系列的初始化函数并初始化各种设备，完成Linux核心环境的建立。至此，Linux内核已经建立起来了，基于Linux的程序应该可以正常运行了。
start_kenrel() 定义在init/main.c中，它就类似于一般可执行程序中的main()函数，系统在此之前所做的仅仅是一些能让内核程序最低限度执行的初始化操作， 真正的内核初始化过程是从这里才开始。函数start_kerenl()将会调用一系列的初始化函数，用来完成内核本身的各方面设置，目的是最终建立起基 本完整的Linux核心环境。
start_kernel()中主要执行了以下操作:
(1) 在屏幕上打印出当前的内核版本信息。
(2) 执行setup_arch()，对系统结构进行设置。
(3)执行parse_early_param()和parsees_args()解析系统启动参数。
(4)执行trap_init()，先设置了系统中断向量表。0－19号的陷阱门用于CPU异常处理;然后初始化系统调用向量;最后调用cpu_init()完善对CPU的初始化，用于支持进程调度机制，包括设定标志位寄存器、任务寄存器、初始化程序调试相关寄存器等等。
(5)执行mem_init()函数，初始化物理内存页面的page数据结构描述符，完成对物理内存管理机制的创建。
(6) 执行sched_init()，对系统的调度机制进行初始化。先是对每个可用CPU上的runqueque进行初始化;然后初始化0号进程(其task  struct和系统空M堆栈在startup_32()中己经被分配)为系统idle进程，即系统空闲时占据CPU的进程。
(7)执行rcu_init()，初始化系统中的Read-Copy Update互斥机制。
(8)执行init_IRQ()函数，初始化用于外设的中断，完成对IDT的最终初始化过程。
(9)执行init_timers(), softirq_init()和time_init()函数，分别初始系统的定时器机制，软中断机制以及系统日期和时间。
(10)执行kmem_cache_init(),完成对通用slab缓冲区管理机制的初始化工作。
(11)执行fork_init()，计算出当前系统的物理内存容量能够允许创建的进程(线程)数量。
(12)执行proc_caches_init() , bufer_init(), unnamed_dev_init() ,vfs_caches_init(), signals_init()等函数对各种管理机制建立起专用的slab缓冲区队列。
(13 )执行proc_root_init()函数，对虚拟文件系统/proc进行初始化。
在start_kenrel()的结尾调用rest_init()，内核通过kenrel_thread()创建出第一个系统内核线程(即1号进程)，该线程执行的是内核中的init()函数，负责的是下一阶段的启动任务。最后调用cpu_idle()函数:进入了系统主循环体口默认将一直执行default_idle()函数中的指令，即CPU的halt指令，直到就绪队列中存在其他进程需要被调度时才会转向执行其他函数。此时，系统中唯一存在就绪状态的进程就是由kernel_thread()创建的init进程(内核线程)，所以内核并不进入default_idle()函数，而是转向init()函数继续启动过程。

</rich_text><rich_text foreground="#ffff00000000">cpu_idle(), default_idle()定义在arch/xxx/kernel/process.c</rich_text><rich_text>

</rich_text><rich_text scale="h2">启动第五步－－用户层init依据inittab文件来设定运行等级</rich_text><rich_text>
内核被加载后，第一个运行的程序便是/sbin/init，该文件会读取/etc/inittab文件，并依据此文件来进行初始化工作。
其实/etc/inittab文件最主要的作用就是设定Linux的运行等级，其设定形式是“：id:5:initdefault:”，这就表明Linux需要运行在等级5上。Linux的运行等级设定如下：
0：关机
1：单用户模式
2：无网络支持的多用户模式
3：有网络支持的多用户模式
4：保留，未使用
5：有网络支持有X-Window支持的多用户模式
6：重新引导系统，即重启

</rich_text><rich_text scale="h2">启动第六步－－init进程执行rc.sysinit</rich_text><rich_text>
在 设定了运行等级后，Linux系统执行的第一个用户层文件就是/etc/rc.d/rc.sysinit脚本程序，它做的工作非常多，包括设定PATH、 设定网络配置（/etc/sysconfig/network）、启动swap分区、设定/proc等等。如果你有兴趣，可以到/etc/rc.d中查看 一下rc.sysinit文件。
线程init的最终完成状态是能够使得一般的用户程序可以正常地被执行，从而真正完成可供应用程序运行的系统环境。它主要进行的操作有:
(1) 执行函数do_basic_setup()，它会对外部设备进行全面地初始化。
(2) 构建系统的虚拟文件系统目录树，挂接系统中作为根目录的设备(其具体的文 件系统已经在上一步骤中注册)。
(3)  打开设备/dev/console，并通过函数sys_dup()打开的连接复制两次，使得文件号0,1 ,2  全部指向控制台。这三个文件连接就是通常所说的“标准输入”stdin,“标准输出”stdout和“标准出错信息”stderr这三个标准I/O通道。
(4)   准备好以上一切之后，系统开始进入用户层的初始化阶段。内核通过系统调用execve()加载执T子相应的用户层初始化程序，依次尝试加载程 序&quot;/sbin/initl&quot;,&quot; /etc/init&quot;,&quot;  /bin/init'，和“/bin/sh。只要其中有一个程序加载获得成功，那么系统就将开始用户层的初始化，而不会再回到init()函数段中。至 此，init()函数结束，Linux内核的引导 部分也到此结束。

</rich_text><rich_text scale="h2">启动第七步－－启动内核模块</rich_text><rich_text>
具体是依据/etc/modules.conf文件或/etc/modules.d目录下的文件来装载内核模块。

</rich_text><rich_text scale="h2">启动第八步－－执行不同运行级别的脚本程序</rich_text><rich_text>
根据运行级别的不同，系统会运行rc0.d到rc6.d中的相应的脚本程序，来完成相应的初始化工作和启动相应的服务。

</rich_text><rich_text scale="h2">启动第九步－－执行/etc/rc.d/rc.local</rich_text><rich_text>
你如果打开了此文件，里面有一句话，读过之后，你就会对此命令的作用一目了然：
# This script will be executed *after* all the other init scripts.
# You can put your own initialization stuff in here if you don’t
# want to do the full Sys V style init stuff.
rc.local就是在一切初始化工作后，Linux留给用户进行个性化的地方。你可以把你想设置和启动的东西放到这里。
启动第十步－－执行/bin/login程序，进入登录状态
此时，系统已经进入到了等待用户输入username和password的时候了，你已经可以用自己的帐号登入系统了。


</rich_text></node><node name="linux initrd机制分析" prog_lang="custom-colors" readonly="False" tags="" unique_id="17"><rich_text scale="h2" weight="heavy">1．什么是 Initrd</rich_text><rich_text>
    initrd 的英文含义是 bootloader  initialized ramdisk，就是由 bootloader 初始化的内存盘。在 linux内核启动前， boot loader  会将存储介质中的 initrd 文件加载到内存，内核启动时会在访问真正的根文件系统前先访问该内存中的 initrd 文件系统。在 bootloader 配置了 initrd 的情况下，内核启动被分成了两个阶段，第一阶段先执行 initrd 文件系统中的&quot;某个文件&quot;，完成加载驱动模块等任务，第二阶段才会执行真正的根文件系统中的 /sbin/init 进程。这里提到的&quot;某个文件&quot;，Linux2.6  内核会同以前版本内核的不同，所以这里暂时使用了&quot;某个文件&quot;这个称呼，后面会详细讲到。第一阶段启动的目的是为第二阶段的启动扫清一切障爱，最主要的是加载根文件系统存储介质的驱动模块。我们知道根文件系统可以存储在包括IDE、SCSI、USB在内的多种介质上，如果将这些设备的驱动都编译进内核，可以想象内核会多么庞大、臃肿。
    
Initrd 的用途主要有以下四种：
1. linux发行版的必备部件
    linux发行版必须适应各种不同的硬件架构，将所有的驱动编译进内核是不现实的，initrd技术是解决该问题的关键技术。Linux发行版在内核中只编译了基本的硬件驱动，在安装过程中通过检测系统硬件，生成包含安装系统硬件驱动的 initrd，无非是一种即可行又灵活的解决方案。

2. livecd 的必备部件
    同 linux 发行版相比，livecd 可能会面对更加复杂的硬件环境，所以也必须使用 initrd。

3. 制作 Linux usb 启动盘必须使用 initrd
    usb 设备是启动比较慢的设备，从驱动加载到设备真正可用大概需要几秒钟时间。如果将 usb 驱动编译进内核，内核通常不能成功访问 usb 设备中的文件系统。因为在内核访问 usb 设备时， usb 设备通常没有初始化完毕。所以常规的做法是，在 initrd 中加载 usb 驱动，然后休眠几秒中，等待 usb设备初始化完毕后再挂载 usb 设备中的文件系统。

4. 在 linuxrc 脚本中可以很方便地启用个性化 bootsplash。

</rich_text><rich_text scale="h2" weight="heavy">2．Linux2.4内核对 Initrd 的处理流程</rich_text><rich_text>
    为了使读者清晰的了解Linux2.6内核initrd机制的变化，在重点介绍Linux2.6内核initrd之前，先对linux2.4内核的 initrd进行一个简单的介绍。Linux2.4内核的initrd的格式是文件系统镜像文件，本文将其称为image-initrd，以区别后面介绍 的linux2.6内核的cpio格式的initrd。 linux2.4内核对initrd的处理流程如下：
1. bootloader把内核以及/dev/initrd的内容加载到内存，/dev/initrd是由bootloader初始化的设备，存储着initrd。
2. 在内核初始化过程中，内核把 /dev/initrd 设备的内容解压缩并拷贝到 /dev/ram0 设备上。
3. 内核以可读写的方式把 /dev/ram0 设备挂载为原始的根文件系统。
4. 如果 /dev/ram0 被指定为真正的根文件系统，那么内核跳至最后一步正常启动。
5. 执行 initrd 上的 /linuxrc 文件，linuxrc 通常是一个脚本文件，负责加载内核访问根文件系统必须的驱动以及加载根文件系统。
6. /linuxrc 执行完毕，真正的根文件系统被挂载。
7. 如果真正的根文件系统存在 /initrd 目录，那么 /dev/ram0 将从 / 移动到 /initrd。否则如果 /initrd 目录不存在， /dev/ram0 将被卸载。
8.  在真正的根文件系统上进行正常启动过程 ，执行 /sbin/init。 linux2.4 内核的 initrd 的执行是作为内核启动的一个中间阶段，也就是说 initrd 的 /linuxrc  执行以后，内核会继续执行初始化代码，我们后面会看到这是 linux2.4 内核同 2.6 内核的 initrd 处理流程的一个显著区别。

</rich_text><rich_text scale="h2" weight="heavy">3．Linux2.6 内核对 Initrd 的处理流程</rich_text><rich_text>
linux2.6  内核支持两种格式的 initrd，一种是前面第 3 部分介绍的 linux2.4  内核那种传统格式的文件系统镜像－image-initrd，它的制作方法同 Linux2.4 内核的 initrd 一样，其核心文件就是  /linuxrc。另外一种格式的 initrd 是 cpio 格式的，这种格式的 initrd 从 linux2.5 起开始引入，使用 cpio  工具生成，其核心文件不再是 /linuxrc，而是 /init，本文将这种 initrd 称为 cpio-initrd。尽管 linux2.6  内核对 cpio-initrd和 image-initrd 这两种格式的 initrd 均支持，但对其处理流程有着显著的区别，下面分别介绍  linux2.6 内核对这两种 initrd 的处理流程。

</rich_text><rich_text scale="h3" weight="heavy">cpio-initrd 的处理流程</rich_text><rich_text>
1． bootloader 把内核以及 initrd 文件加载到内存的特定位置。
2． 内核判断initrd的文件格式，如果是cpio格式。
3． 将initrd的内容释放到rootfs中。
4． 执行initrd中的/init文件，执行到这一点，内核的工作全部结束，完全交给/init文件处理。

</rich_text><rich_text scale="h3" weight="heavy">image-initrd的处理流程</rich_text><rich_text>
1． bootloader把内核以及initrd文件加载到内存的特定位置。
2． 内核判断initrd的文件格式，如果不是cpio格式，将其作为image-initrd处理。
3． 内核将initrd的内容保存在rootfs下的/initrd.image文件中。
4． 内核将/initrd.image的内容读入/dev/ram0设备中，也就是读入了一个内存盘中。
5． 接着内核以可读写的方式把/dev/ram0设备挂载为原始的根文件系统。
6． 如果/dev/ram0被指定为真正的根文件系统，那么内核跳至最后一步正常启动。
7． 执行initrd上的/linuxrc文件，linuxrc通常是一个脚本文件，负责加载内核访问根文件系统必须的驱动以及加载根文件系统。
8． /linuxrc执行完毕，常规根文件系统被挂载
9． 如果常规根文件系统存在/initrd目录，那么/dev/ram0将从/移动到/initrd。否则如果/initrd目录不存在， /dev/ram0将被卸载。
10． 在常规根文件系统上进行正常启动过程 ，执行/sbin/init。
    通过上面的流程介绍可知，Linux2.6内核对image-initrd的处理流程同linux2.4内核相比并没有显著的变化，  cpio-initrd的处理流程相比于image-initrd的处理流程却有很大的区别，流程非常简单，在后面的源代码分析中，读者更能体会到处理的 简捷。

</rich_text><rich_text scale="h2" weight="heavy">4．cpio-initrd同image-initrd的区别与优势</rich_text><rich_text>
没有找到正式的关于cpio-initrd同image-initrd对比的文献，根据笔者的使用体验以及内核代码的分析，总结出如下三方面的区别，这些区别也正是cpio-initrd的优势所在：

</rich_text><rich_text scale="h3" weight="heavy">cpio-initrd的制作方法更加简单</rich_text><rich_text>
cpio-initrd的制作非常简单，通过两个命令就可以完成整个制作过程
#假设当前目录位于准备好的initrd文件系统的根目录下
bash# find . | cpio -c -o &gt; ../initrd.img
bash# gzip ../initrd.img
而传统initrd的制作过程比较繁琐，需要如下六个步骤
#假设当前目录位于准备好的initrd文件系统的根目录下
bash# dd if=/dev/zero of=../initrd.img bs=512k count=5
bash# mkfs.ext2 -F -m0 ../initrd.img
bash# mount -t ext2 -o loop ../initrd.img  /mnt
bash# cp -r  * /mnt
bash# umount /mnt
bash# gzip -9 ../initrd.img
本文不对上面命令的含义作细节的解释，因为本文主要介绍的是linux内核对initrd的处理，对上面命令不理解的读者可以参考相关文档。

</rich_text><rich_text scale="h3" weight="heavy">cpio-initrd的内核处理流程更加简化</rich_text><rich_text>
通过上面initrd处理流程的介绍，cpio-initrd的处理流程显得格外简单，通过对比可知cpio-initrd的处理流程在如下两个方面得到了简化：
1． cpio-initrd并没有使用额外的ramdisk,而是将其内容输入到rootfs中，其实rootfs本身也是一个基于内存的文件系统。这样就省掉了ramdisk的挂载、卸载等步骤。
2． cpio-initrd启动完/init进程，内核的任务就结束了，剩下的工作完全交给/init处理；而对于image-initrd，内核在执行完 /linuxrc进程后，还要进行一些收尾工作，并且要负责执行真正的根文件系统的/sbin/init。通过图1可以更加清晰的看出处理流程的区别：
图1内核对cpio-initrd和image-initrd处理流程示意图
</rich_text><rich_text justification="left"></rich_text><rich_text>

</rich_text><rich_text scale="h3">cpio-initrd的职责更加重要</rich_text><rich_text>
如 图1所示，cpio-initrd不再象image-initrd那样作为linux内核启动的一个中间步骤，而是作为内核启动的终点，内核将控制权交给 cpio-initrd的/init文件后，内核的任务就结束了，所以在/init文件中，我们可以做更多的工作，而不比担心同内核后续处理的衔接问题。 当然目前linux发行版的cpio-initrd的/init文件的内容还没有本质的改变，但是相信initrd职责的增加一定是一个趋势。

</rich_text><rich_text scale="h2" weight="heavy">5．linux2.6内核initrd处理的源代码分析</rich_text><rich_text>
    上面简要介绍了Linux2.4内核和2.6内核的initrd的处理流程，为了使读者对于Linux2.6内核的initrd的处理有一个更加深入的认识，下面将对Linuxe2.6内核初始化部分同initrd密切相关的代码给予一个比较细致的分析，为了讲述方便，进一步明确几个代码分析中使用的概 念：
    rootfs: 一个基于内存的文件系统，是linux在初始化时加载的第一个文件系统,关于它的进一步介绍可以参考文献[4]。
    initramfs:    initramfs同本文的主题关系不是很大，但是代码中涉及到了initramfs，为了更好的理解代码，这里对其进行简单的介绍。Initramfs 是在 kernel  2.5中引入的技术，实际上它的含义就是：在内核镜像中附加一个cpio包，这个cpio包中包含了一个小型的文件系统，当内核启动时，内核将这个cpio包解开，并且将其中包含的文件系统释放到rootfs中，内核中的一部分初始化代码会放到这个文件系统中，作为用户层进程来执行。这样带来的明显的好处是精简了内核的初始化代码，而且使得内核的初始化过程更容易定制。Linux 2.6.12内核的  initramfs还没有什么实质性的东西，一个包含完整功能的initramfs的实现可能还需要一个缓慢的过程。对于initramfs的进一步了解 可以参考文献[1][2][3]。
    cpio-initrd: 前面已经定义过，指linux2.6内核使用的cpio格式的initrd。
    image-initrd: 前面已经定义过，专指传统的文件镜像格式的initrd。
    realfs: 用户最终使用的真正的文件系统。
内核的初始化代码位于 init/main.c 中的 static int init(void *  unused)函数中。同initrd的处理相关部分函数调用层次如下图，笔者按照这个层次对每一个函数都给予了比较详细的分析，为了更好的说明，下面列 出的代码中删除了同本文主题不相关的部分：
图2 initrd相关代码的调用层次关系图init函数是内核所有初始化代码的入口，

</rich_text><rich_text justification="left"></rich_text><rich_text>
代码如下，其中只保留了同initrd相关部分的代码。
static int init(void * unused){
[1]	populate_rootfs();
	
[2]	if (sys_access((const char __user *) &quot;/init&quot;, 0) == 0)
		execute_command = &quot;/init&quot;;
	else
		prepare_namespace();        //不存在/init, 才调用prepare_namespace()
[3]	if (sys_open((const char __user *) &quot;/dev/console&quot;, O_RDWR, 0) &lt; 0)
		printk(KERN_WARNING &quot;Warning: unable to open an initial console.\n&quot;);
	(void) sys_dup(0);
	(void) sys_dup(0);
[4]	if (execute_command)
		run_init_process(execute_command);
	run_init_process(&quot;/sbin/init&quot;);
	run_init_process(&quot;/etc/init&quot;);
	run_init_process(&quot;/bin/init&quot;);
	run_init_process(&quot;/bin/sh&quot;);
	panic(&quot;No init found.  Try passing init= option to kernel.&quot;);
}
代码[1]：populate_rootfs(</rich_text><rich_text foreground="#ffff00000000">init/initramfs.c</rich_text><rich_text>)函数负责加载initramfs和cpio-initrd，对于populate_rootfs函数的细节后面会讲到。
代码[2]：如果rootfs的根目录下中包含/init进程，则赋予execute_command,在init函数的末尾会被执行。否则执行prepare_namespace函数，initrd是在该函数中被加载的。
代码[3]：将控制台设置为标准输入，后续的两个sys_dup(0),则复制标准输入为标准输出和标准错误输出。
代 码[4]：如果rootfs中存在init进程，就将后续的处理工作交给该init进程。其实这段代码的含义是如果加载了cpio-initrd则交给 cpio-initrd中的/init处理，否则会执行realfs中的init。读者可能会问：如果加载了cpio-initrd,  那么realfs中的init进程不是没有机会运行了吗？确实，如果加载了cpio-initrd,那么内核就不负责执行realfs的init进程了， 而是将这个执行任务交给了cpio-initrd的init进程。解开fedora  core4的initrd文件，会发现根目录的下的init文件是一个脚本，在该脚本的最后一行有这样一段代码： 
………..
switchroot --movedev /sysroot就是switchroot语句负责加载realfs,以及执行realfs的init进程。

</rich_text><rich_text foreground="#ffff00000000">在2.6.30以后的版本中init/main.c的内核线程kernel_init() -&gt; do_basic_setup -&gt; do_initcalls() -&gt; populate_rootfs()
                                                                             -&gt; prepare_namespace()
                                                                             -&gt; init_post() -&gt; run_init_process(ramdisk_execute_command)
                                                                                                    -&gt; run_init_process(execute_command);
                                                                                                    -&gt; run_init_process(&quot;/etc/preinit&quot;);
</rich_text><rich_text>
</rich_text><rich_text scale="h3" weight="heavy">对cpio-initrd的处理</rich_text><rich_text>
对cpio-initrd的处理位于populate_rootfs函数中。
void __init populate_rootfs(void){
[1]  char *err = unpack_to_rootfs(__initramfs_start,
			 __initramfs_end - __initramfs_start, 0);
[2]	if (initrd_start) {
[3]		err = unpack_to_rootfs((char *)initrd_start,
			initrd_end - initrd_start, 1);
	
[4]		if (!err) {
			printk(&quot; it is\n&quot;);
			unpack_to_rootfs((char *)initrd_start,
				initrd_end - initrd_start, 0);
			free_initrd_mem(initrd_start, initrd_end);
			return;
		}
[5]	fd = sys_open(&quot;/initrd.image&quot;, O_WRONLY|O_CREAT, 700);
		if (fd &gt;= 0) {
			sys_write(fd, (char *)initrd_start,
					initrd_end - initrd_start);
			sys_close(fd);
			free_initrd_mem(initrd_start, initrd_end);
		}
}
代码[1]：加载initramfs，  initramfs位于地址__initramfs_start处，是内核在编译过程中生成的，initramfs的是作为内核的一部分而存在的，不是bootloader加载的。前面提到了现在initramfs没有任何实质内容。
代码[2]：判断是否加载了initrd。无论哪种格式的initrd，都会被bootloader加载到地址initrd_start处。
代码[3]：判断加载的是不是cpio-initrd。实际上 unpack_to_rootfs有两个功能一个是释放cpio包，另一个就是判断是不是cpio包， 这是通过最后一个参数来区分的， 0：释放 1：查看。
代码[4]：如果是cpio-initrd则将其内容释放出来到rootfs中。
代码[5]：如果不是cpio-initrd,则认为是一个image-initrd，将其内容保存到/initrd.image中。在后面的image-initrd的处理代码中会读取/initrd.image。

对image-initrd的处理在prepare_namespace函数里，包含了对image-initrd进行处理的代码，相关代码如下：
void __init prepare_namespace(void){
[1]	if (initrd_load())
		goto out;
out:
		umount_devfs(&quot;/dev&quot;);
[2]	sys_mount(&quot;.&quot;, &quot;/&quot;, NULL, MS_MOVE, NULL);
		sys_chroot(&quot;.&quot;);
		security_sb_post_mountroot();
		mount_devfs_fs ();
}
代码[1]：执行initrd_load函数，将initrd载入，如果载入成功的话initrd_load函数会将realfs的根设置为当前目录。
代码[2]：将当前目录即realfs的根mount为Linux VFS的根。initrd_load函数执行完后，将真正的文件系统的根设置为当前目录。

initrd_load函数负责载入image-initrd，代码如下：
int __init initrd_load(void)
{
[1]	if (mount_initrd) {
		    create_dev(&quot;/dev/ram&quot;, Root_RAM0, NULL);
[2]		if (rd_load_image(&quot;/initrd.image&quot;) &amp;&amp; ROOT_DEV != Root_RAM0) {
			    sys_unlink(&quot;/initrd.image&quot;);
			    handle_initrd();
			    return 1;
		}
	}
	sys_unlink(&quot;/initrd.image&quot;);
	return 0;
}
代码[1]：如果加载initrd则建立一个ram0设备 /dev/ram。
代码 [2]：/initrd.image文件保存的就是image-initrd，rd_load_image函数执行具体的加载操作，将image-initrd的文件内容释放到ram0里。判断ROOT_DEV!=Root_RAM0的含义是，如果你在grub或者lilo里配置了root=/dev/ram0 ,则实际上真正的根设备就是initrd了，所以就不把它作为initrd处理(不调用handle_initrd)，而是作为realfs处理。

handle_initrd()函数负责对initrd进行具体的处理，代码如下：
static void __init handle_initrd(void){
[1]	real_root_dev = new_encode_dev(ROOT_DEV);
[2]	create_dev(&quot;/dev/root.old&quot;, Root_RAM0, NULL);
        /* mount initrd on rootfs' /root */
	    mount_block_root(&quot;/dev/root.old&quot;, root_mountflags &amp; ~MS_RDONLY);
[3]	sys_mkdir(&quot;/old&quot;, 0700);
	    root_fd = sys_open(&quot;/&quot;, 0, 0);
	    old_fd = sys_open(&quot;/old&quot;, 0, 0);
	    /* move initrd over / and chdir/chroot in initrd root */
[4]	sys_chdir(&quot;/root&quot;);
	    sys_mount(&quot;.&quot;, &quot;/&quot;, NULL, MS_MOVE, NULL);
	    sys_chroot(&quot;.&quot;);
	    mount_devfs_fs ();
[5]	pid = kernel_thread(do_linuxrc, &quot;/linuxrc&quot;, SIGCHLD);
	    if (pid &gt; 0) {
		    while (pid != sys_wait4(-1, &amp;i, 0, NULL))
		    	yield();
	    }
	    /*move initrd to rootfs' /old */
	    sys_fchdir(old_fd);
	    sys_mount(&quot;/&quot;, &quot;.&quot;, NULL, MS_MOVE, NULL);
	    /* switch root and cwd back to / of rootfs */
[6]	sys_fchdir(root_fd);
	    sys_chroot(&quot;.&quot;);
	    sys_close(old_fd);
	    sys_close(root_fd);
	    umount_devfs(&quot;/old/dev&quot;);
[7]	if (new_decode_dev(real_root_dev) == Root_RAM0) {
		    sys_chdir(&quot;/old&quot;);
		    return;
	    }
[8]	ROOT_DEV = new_decode_dev(real_root_dev);
	    mount_root();
[9]	printk(KERN_NOTICE &quot;Trying to move old root to /initrd ... &quot;);
	    error = sys_mount(&quot;/old&quot;, &quot;/root/initrd&quot;, NULL, MS_MOVE, NULL);
	    if (!error)
		    printk(&quot;okay\n&quot;);
	    else {
		    int fd = sys_open(&quot;/dev/root.old&quot;, O_RDWR, 0);
		    printk(&quot;failed\n&quot;);
		    printk(KERN_NOTICE &quot;Unmounting old root\n&quot;);
		    sys_umount(&quot;/old&quot;, MNT_DETACH);
		    printk(KERN_NOTICE &quot;Trying to free ramdisk memory ... &quot;);
		    if (fd &lt; 0) {
			    error = fd;
		    } else {
			    error = sys_ioctl(fd, BLKFLSBUF, 0);
			    sys_close(fd);
		    }
		    printk(!error ? &quot;okay\n&quot; : &quot;failed\n&quot;);
	    }
handle_initrd函数的主要功能是执行initrd的linuxrc文件，并且将realfs的根目录设置为当前目录。
代码[1]：real_root_dev，是一个全局变量保存的是realfs的设备号。
代码[2]：调用mount_block_root函数将initrd文件系统挂载到了VFS的/root下。
代码[3]：提取rootfs的根的文件描述符并将其保存到root_fd。它的作用就是为了在chroot到initrd的文件系统，处理完initrd之后要，还能够返回rootfs。返回的代码参考代码[7]。
代码[4]：chroot进入initrd的文件系统。前面initrd已挂载到了rootfs的/root目录。
代码[5]：执行initrd的linuxrc文件，等待其结束。
代码[6]：initrd处理完之后，重新chroot进入rootfs。
代码[7]：如果real_root_dev在 linuxrc中重新设成Root_RAM0，则initrd就是最终的realfs了，改变当前目录到initrd中，不作后续处理直接返回。
代码[8]：在linuxrc执行完后，realfs设备已经确定，调用mount_root函数将realfs挂载到root_fs的/root目录下，并将当前目录设置为/root。
代码[9]：后面的代码主要是做一些收尾的工作，将initrd的内存盘释放。
到此代码分析完毕。

</rich_text><rich_text scale="h2" weight="heavy">6．结束语</rich_text><rich_text>
通过本文前半部分对cpio-initrd和imag-initrd的阐述与对比以及后半部分的代码分析，我相信读者对Linux 2.6内核的initrd技术有了一个较为全面的了解。在本文的最后，给出两点最重要的结论：
1． 尽管Linux2.6既支持cpio-initrd，也支持image-initrd，但是cpio-initrd有着更大的优势，在使用中我们应该优先考虑使用cpio格式的initrd。
2． cpio-initrd相对于image-initrd承担了更多的初始化责任，这种变化也可以看作是内核代码的用户层化的一种体现，我们在其它的诸如FUSE等项目中也看到了将内核功能扩展到用户层实现的尝试。精简内核代码，将部分功能移植到用户层必然是linux内核发展的一个趋势。


</rich_text><rich_text justification="left"></rich_text><rich_text>


</rich_text><rich_text foreground="#ffff00000000" scale="h1">android分析(A31s __initramfs -&gt; 0xc0804844, 200 initrd-&gt; 0xc1000000, 189dab)</rich_text><rich_text>
env.cfg:
    #kernel command arguments
    console=ttyS0,115200
    nand_root=/dev/system
    mmc_root=/dev/mmcblk0p7
    init=/init
    loglevel=8
    mac=
    specialstr=
    #set kernel cmdline if boot.img or recovery.img has no cmdline we will use this
    setargs_nand=setenv bootargs console=${console} root=${nand_root} init=${init} loglevel=${loglevel} partitions=${partitions} mac_addr=${mac} specialstr=${specialstr}
    setargs_mmc=setenv bootargs console=${console} root=${mmc_root} init=${init} loglevel=${loglevel} partitions=${partitions} mac_addr=${mac} specialstr=${specialstr}
    #nand command syntax: sunxi_flash read address partition_name read_bytes
    #0x40007800 = 0x40008000(kernel entry) - 0x800(boot.img header 2k)
    boot_normal=sunxi_flash read 40007800 boot;boota 40007800
    boot_recovery=sunxi_flash read 40007800 recovery;boota 40007800
    boot_fastboot=fastboot
    #recovery key
    recovery_key_value_max=0x13
    recovery_key_value_min=0x10
    #fastboot key
    fastboot_key_value_max=0x8
    fastboot_key_value_min=0x2

    #uboot system env config
    bootdelay=1
    #default bootcmd, will change at runtime according to key press
    bootcmd=run setargs_nand boot_normal#default nand boot

u-boot:
    int do_boota (cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
    {
	    ulong	addr;
	    unsigned kaddr, raddr;

	    if (argc &lt; 2)
		    return cmd_usage(cmdtp);

	    tick_printf(__FILE__, __LINE__);

	    addr = simple_strtoul(argv[1], NULL, 16);

	    struct fastboot_boot_img_hdr *fb_hdr = (struct fastboot_boot_img_hdr *)addr;
	    image_header_t *hdr =(image_header_t *)(addr + CFG_FASTBOOT_MKBOOTIMAGE_PAGE_SIZE);
    #ifdef DEBUG
	    printf(&quot;---------------------\n&quot;);
	    printf(&quot;kernel size: 0x%x \n&quot;, fb_hdr-&gt;kernel_size);
	    printf(&quot;kernel addr: 0x%x \n&quot;, fb_hdr-&gt;kernel_addr);

	    printf(&quot;ramdisk size: 0x%x \n&quot;, fb_hdr-&gt;ramdisk_size);
	    printf(&quot;ramdisk addr: 0x%x \n&quot;, fb_hdr-&gt;ramdisk_addr);

	    printf(&quot;second size: 0x%x \n&quot;, fb_hdr-&gt;second_size);
	    printf(&quot;second addr: 0x%x \n&quot;, fb_hdr-&gt;second_addr);

	    printf(&quot;second size: 0x%x \n&quot;, fb_hdr-&gt;second_size);
	    printf(&quot;second addr: 0x%x \n&quot;, fb_hdr-&gt;second_addr);

	    printf(&quot;name: %s\n&quot;, fb_hdr-&gt;name);
	    printf(&quot;cmdline: %s\n&quot;, fb_hdr-&gt;cmdline);
    #endif
	    /* save the image header somewhere */
	    memcpy(boot_hdr, (void*) addr, sizeof(*hdr));
	    if (memcmp(fb_hdr-&gt;magic, FASTBOOT_BOOT_MAGIC, 8)) {
		    puts(&quot;boota: bad boot image magic, maybe not a boot.img?\n&quot;);
		    return 1;
	    }

	    kaddr = addr + fb_hdr-&gt;page_size;
	    raddr = kaddr + ALIGN(fb_hdr-&gt;kernel_size, fb_hdr-&gt;page_size);
    #ifdef DEBUG
	    printf(&quot;moving kernel from %x to: %x, size 0x%x\n&quot;, kaddr, fb_hdr-&gt;kernel_addr, fb_hdr-&gt;kernel_size);
	    printf(&quot;moving ramdisk from %x to: %x, size 0x%x\n&quot;, raddr, fb_hdr-&gt;ramdisk_addr, fb_hdr-&gt;ramdisk_size);
    #endif
	    memmove((void*) fb_hdr-&gt;kernel_addr, (const void *)kaddr, fb_hdr-&gt;kernel_size);
	    //memmove((void*) fb_hdr-&gt;ramdisk_addr, (const void *)raddr, fb_hdr-&gt;ramdisk_size);
	    tick_printf(__FILE__, __LINE__);
	    memcpy((void*) fb_hdr-&gt;ramdisk_addr, (const void *)raddr, fb_hdr-&gt;ramdisk_size);

	    tick_printf(__FILE__, __LINE__);

	    do_boota_linux(fb_hdr);

	    puts(&quot;Boot linux failed, control return to monitor\n&quot;);

	    return 0;
    }

    /* Boot android style linux kernel and ramdisk */
    int do_boota_linux (struct fastboot_boot_img_hdr *hdr)
    {
	    ulong initrd_start, initrd_end;
	    void (*kernel_entry)(int zero, int arch, uint params);
	    bd_t *bd = gd-&gt;bd;
    #ifdef DEBUG
	    printf(&quot;do_boota_linux storage_type = %d\n&quot;, storage_type);
    #endif
	    kernel_entry = (void (*)(int, int, uint))(hdr-&gt;kernel_addr);

    #ifdef CONFIG_CMDLINE_TAG
	    char *commandline = getenv (&quot;bootargs&quot;);
    #endif

	    initrd_start = hdr-&gt;ramdisk_addr;
	    initrd_end = initrd_start + hdr-&gt;ramdisk_size;

    #if defined (CONFIG_SETUP_MEMORY_TAGS) || \
        defined (CONFIG_CMDLINE_TAG) || \
        defined (CONFIG_INITRD_TAG) || \
        defined (CONFIG_SERIAL_TAG) || \
        defined (CONFIG_REVISION_TAG)
	    setup_start_tag (bd);
    #ifdef CONFIG_SERIAL_TAG
	    setup_serial_tag (&amp;params);
    #endif
    #ifdef CONFIG_REVISION_TAG
	    setup_revision_tag (&amp;params);
    #endif
    #ifdef CONFIG_SETUP_MEMORY_TAGS
	    setup_memory_tags (bd);
    #endif
    #ifdef CONFIG_CMDLINE_TAG
	    if(strlen((const char *)hdr-&gt;cmdline)) {
		    setup_commandline_tag (bd, (char *)hdr-&gt;cmdline);
	    } else {
		    setup_commandline_tag (bd, commandline);
	    }
    #endif
    #ifdef CONFIG_INITRD_TAG
	    if (hdr-&gt;ramdisk_size)
		    setup_initrd_tag (bd, initrd_start, initrd_end);
    #endif
    #if defined (CONFIG_VFD) || defined (CONFIG_LCD)
	    setup_videolfb_tag ((gd_t *) gd);
    #endif
	    setup_end_tag (bd);
    #endif
	    sunxi_flash_exit();
	    /* we assume that the kernel is in place */
	    announce_and_cleanup();
	    //sr32(SUNXI_CCM_APB1_GATING, 16, 1, 0);

	    kernel_entry(0, bd-&gt;bi_arch_number, bd-&gt;bi_boot_params);
	    /* does not return */

	    return 1;
    }

#define pure_initcall(fn)                   __define_initcall(&quot;0&quot;,fn,0)  
#define core_initcall(fn)                   __define_initcall(&quot;1&quot;,fn,1)  
#define core_initcall_sync(fn)          __define_initcall(&quot;1s&quot;,fn,1s)  
#define postcore_initcall(fn)            __define_initcall(&quot;2&quot;,fn,2)  
#define postcore_initcall_sync(fn)   __define_initcall(&quot;2s&quot;,fn,2s)  
#define arch_initcall(fn)                   __define_initcall(&quot;3&quot;,fn,3)  
#define arch_initcall_sync(fn)          __define_initcall(&quot;3s&quot;,fn,3s)  
#define subsys_initcall(fn)               __define_initcall(&quot;4&quot;,fn,4)  
#define subsys_initcall_sync(fn)      __define_initcall(&quot;4s&quot;,fn,4s)  
#define fs_initcall(fn)                       __define_initcall(&quot;5&quot;,fn,5)  
#define fs_initcall_sync(fn)              __define_initcall(&quot;5s&quot;,fn,5s)  
#define rootfs_initcall(fn)                 __define_initcall(&quot;rootfs&quot;,fn,rootfs)  
#define device_initcall(fn)               __define_initcall(&quot;6&quot;,fn,6)  
#define device_initcall_sync(fn)      __define_initcall(&quot;6s&quot;,fn,6s)  
#define late_initcall(fn)                   __define_initcall(&quot;7&quot;,fn,7)  
#define late_initcall_sync(fn)          __define_initcall(&quot;7s&quot;,fn,7s)
   
#define __define_initcall(level,fn,id) \  
         static initcall_t __initcall_##fn##id __used \  
         __attribute__((__section__(&quot;.initcall&quot; level &quot;.init&quot;))) = fn  

#define INITCALLS                                                   \  
            *(.initcallearly.init)                                  \  
            VMLINUX_SYMBOL(__early_initcall_end) = .;               \  
            *(.initcall0.init)                                      \  
            *(.initcall0s.init)                                     \  
            *(.initcall1.init)                                      \  
            *(.initcall1s.init)                                     \  
            *(.initcall2.init)                                      \  
            *(.initcall2s.init)                                     \  
             *(.initcall3.init)                                      \  
             *(.initcall3s.init)                                     \  
             *(.initcall4.init)                                      \  
             *(.initcall4s.init)                                     \  
             *(.initcall5.init)                                      \  
             *(.initcall5s.init)                                     \  
             *(.initcallrootfs.init)                                 \  
             *(.initcall6.init)                                      \  
             *(.initcall6s.init)                                     \  
             *(.initcall7.init)                                      \  
             *(.initcall7s.init)  

extern initcall_t __initcall_start[], __initcall_end[], __early_initcall_end[];

__initcall_start和__initcall_end以及INITCALLS中定义的SECTION都是在arch/xxx/kernel/vmlinux.lds.S中放在.init段的。
SECTIONS  
{  
        .init : {  
                __initcall_start = .;  
                        INITCALLS  
                __initcall_end = .;  
        }  
}  
         
static void __init do_initcalls(void)
{
	initcall_t *fn;

	for (fn = __early_initcall_end; fn &lt; __initcall_end; fn++)
		do_one_initcall(*fn);
}
    
static void __init do_basic_setup(void)
{
	cpuset_init_smp();
	usermodehelper_init();
	shmem_init();
	driver_init();
	init_irq_proc();
	do_ctors();
	usermodehelper_enable();
	do_initcalls();
}

kernel启动:
    start_kernel() 
    -&gt; rest_init()
         -&gt; kernel_thread(kernel_init, NULL, CLONE_FS | CLONE_SIGHAND);
              static int __init kernel_init(void * unused)
              -&gt; do_basic_setup()
                -&gt; do_initcalls()
                    -&gt;  populate_rootfs
              ...
              -&gt; init_post()
                -&gt; run_init_process(ramdisk_execute_command);           
            
    static int __init populate_rootfs(void)
    {
        ....
    }
    rootfs_initcall(populate_rootfs);
   -&gt;unpack_to_rootfs(__initramfs_start, __initramfs_size);
   -&gt;unpack_to_rootfs((char *)initrd_start, initrd_end - initrd_start);
    static char * __init unpack_to_rootfs(char *buf, unsigned len)
    {
	    int written, res;
	    decompress_fn decompress;
	    const char *compress_name;
	    static __initdata char msg_buf[64];

	    header_buf = kmalloc(110, GFP_KERNEL);
	    symlink_buf = kmalloc(PATH_MAX + N_ALIGN(PATH_MAX) + 1, GFP_KERNEL);
	    name_buf = kmalloc(N_ALIGN(PATH_MAX), GFP_KERNEL);

	    if (!header_buf || !symlink_buf || !name_buf)
		    panic(&quot;can't allocate buffers&quot;);

	    state = Start;
	    this_header = 0;
	    message = NULL;
	    while (!message &amp;&amp; len) {
		    loff_t saved_offset = this_header;
		    if (*buf == '0' &amp;&amp; !(this_header &amp; 3)) {
			    state = Start;
			    written = write_buffer(buf, len);
			    buf += written;
			    len -= written;
			    continue;
		    }
		    if (!*buf) {
			    buf++;
			    len--;
			    this_header++;
			    continue;
		    }
		    this_header = 0;
		    //查找匹配的decompress方法
		    decompress = decompress_method(buf, len, &amp;compress_name);   
		    if (decompress) {
		        //解压文件在当前目录下
			    res = decompress(buf, len, NULL, flush_buffer, NULL,
				       &amp;my_inptr, error);
			    if (res)
				    error(&quot;decompressor failed&quot;);
		    } else if (compress_name) {
			    if (!message) {
				    snprintf(msg_buf, sizeof msg_buf,
					     &quot;compression method %s not configured&quot;,
					     compress_name);
				    message = msg_buf;
			    }
		    } else
			    error(&quot;junk in compressed archive&quot;);
		    if (state != Reset)
			    error(&quot;junk in compressed archive&quot;);
		    this_header = saved_offset + my_inptr;
		    buf += my_inptr;
		    len -= my_inptr;
	    }
	    dir_utime();
	    kfree(name_buf);
	    kfree(symlink_buf);
	    kfree(header_buf);
	    return message;
    }

    static const struct compress_format {
	    unsigned char magic[2];
	    const char *name;
	    decompress_fn decompressor;
    } compressed_formats[] = {
	    { {037, 0213}, &quot;gzip&quot;, gunzip },
	    { {037, 0236}, &quot;gzip&quot;, gunzip },
	    { {0x42, 0x5a}, &quot;bzip2&quot;, bunzip2 },
	    { {0x5d, 0x00}, &quot;lzma&quot;, unlzma },
	    { {0xfd, 0x37}, &quot;xz&quot;, unxz },
	    { {0x89, 0x4c}, &quot;lzo&quot;, unlzo },
	    { {0, 0}, NULL, NULL }
    };

    decompress_fn decompress_method(const unsigned char *inbuf, int len,
				    const char **name)
    {
	    const struct compress_format *cf;

	    if (len &lt; 2)
		    return NULL;	/* Need at least this much... */

	    for (cf = compressed_formats; cf-&gt;name; cf++) {
		    if (!memcmp(inbuf, cf-&gt;magic, 2))
			    break;

	    }
	    if (name)
		    *name = cf-&gt;name;
	    return cf-&gt;decompressor;
    }

1). start_kernel(void) --&gt; setup_arch(&amp;command_line) --&gt; parse_tags(tags)
        /*
         * Scan the tag table for this tag, and call its parse function.
         * The tag table is built by the linker from all the __tagtable
         * declarations.
         */
        static int __init parse_tag(const struct tag *tag)
        {
	        extern struct tagtable __tagtable_begin, __tagtable_end;
	        struct tagtable *t;

	        for (t = &amp;__tagtable_begin; t &lt; &amp;__tagtable_end; t++)
		        if (tag-&gt;hdr.tag == t-&gt;tag) {
			        t-&gt;parse(tag);
			        break;
		        }

	        return t &lt; &amp;__tagtable_end;
        }

        /*
         * Parse all tags in the list, checking both the global and architecture
         * specific tag tables.
         */
        static void __init parse_tags(const struct tag *t)
        {
	        for (; t-&gt;hdr.size; t = tag_next(t))
		        if (!parse_tag(t))
			        printk(KERN_WARNING
				        &quot;Ignoring unrecognised tag 0x%08x\n&quot;,
				        t-&gt;hdr.tag);
        }

    parse_tags根据u-boot传过来的tag list解析,调用下面几个函数:
    static int __init parse_tag_mem32(const struct tag *tag)
    static int __init parse_tag_cmdline(const struct tag *tag)//拷贝commandline
    {
           strlcpy(default_command_line,tag-&gt;u.cmdline.cmdline, COMMAND_LINE_SIZE);
           printk(tag-&gt;u.cmdline.cmdline);
           return 0;
    }
    static int __init parse_tag_initrd2(const struct tag *tag)
    {
           phys_initrd_start = tag-&gt;u.initrd.start;
           phys_initrd_size = tag-&gt;u.initrd.size;
           return 0;
    }
    
2). setup_arch(&amp;command_line) --&gt;parse_early_param() --&gt;parse_early_options(tmp_cmdline) 
    解析commandline中的2个参数&quot;initrd=&quot; &quot;mem=&quot;
    void __init parse_early_options(char *cmdline)
    {
    	parse_args(&quot;early options&quot;, cmdline, NULL, 0, do_early_param);
    }

    /* Check for early params. */
    static int __init do_early_param(char *param, char *val)
    {
	    const struct obs_kernel_param *p;

	    for (p = __setup_start; p &lt; __setup_end; p++) {
		    if ((p-&gt;early &amp;&amp; parameq(param, p-&gt;str)) ||
		        (strcmp(param, &quot;console&quot;) == 0 &amp;&amp;
		         strcmp(p-&gt;str, &quot;earlycon&quot;) == 0)
		    ) {
			    if (p-&gt;setup_func(val) != 0)
				    printk(KERN_WARNING
				           &quot;Malformed early option '%s'\n&quot;, param);
		    }
	    }
	    /* We accept everything at this stage. */
	    return 0;
    }
        
3). start_kernel(void) --&gt; setup_arch(&amp;command_line) --&gt; arm_memblock_init(&amp;meminfo, mdesc)
    根据 phys_initrd_start  phys_initrd_size 设置全局变量initrd_start initrd_end 
    initrd_start的赋值是在arch/arm/mm/init.c   
    void __init arm_memblock_init(struct meminfo *mi, struct machine_desc *mdesc)
    {
	    int i;

	    for (i = 0; i &lt; mi-&gt;nr_banks; i++)
		    memblock_add(mi-&gt;bank[i].start, mi-&gt;bank[i].size);

	    /* Register the kernel text, kernel data and initrd with memblock. */
    #ifdef CONFIG_XIP_KERNEL
	    memblock_reserve(__pa(_sdata), _end - _sdata);
    #else
	    memblock_reserve(__pa(_stext), _end - _stext);
    #endif
    #ifdef CONFIG_BLK_DEV_INITRD
	    if (phys_initrd_size &amp;&amp;
	        !memblock_is_region_memory(phys_initrd_start, phys_initrd_size)) {
		    pr_err(&quot;INITRD: 0x%08lx+0x%08lx is not a memory region - disabling initrd\n&quot;,
		           phys_initrd_start, phys_initrd_size);
		    phys_initrd_start = phys_initrd_size = 0;
	    }
	    if (phys_initrd_size &amp;&amp;
	        memblock_is_region_reserved(phys_initrd_start, phys_initrd_size)) {
		    pr_err(&quot;INITRD: 0x%08lx+0x%08lx overlaps in-use memory region - disabling initrd\n&quot;,
		           phys_initrd_start, phys_initrd_size);
		    phys_initrd_start = phys_initrd_size = 0;
	    }
	    if (phys_initrd_size) {
		    memblock_reserve(phys_initrd_start, phys_initrd_size);

		    /* Now convert initrd to virtual addresses */
		    initrd_start = __phys_to_virt(phys_initrd_start);           //0x41000000转为0xc1000000
		    initrd_end = initrd_start + phys_initrd_size;
	    }
    #endif

	    arm_mm_memblock_reserve();
	    arm_dt_memblock_reserve();

	    /* reserve any platform specific memblock areas */
	    if (mdesc-&gt;reserve)
		    mdesc-&gt;reserve();

	    arm_memblock_steal_permitted = false;
	    memblock_allow_resize();
	    memblock_dump_all();
    }

    void __init bootmem_init(void)
    {
	    unsigned long min, max_low, max_high;

	    max_low = max_high = 0;

	    find_limits(&amp;min, &amp;max_low, &amp;max_high);

	    arm_bootmem_init(min, max_low);

	    /*
	     * Sparsemem tries to allocate bootmem in memory_present(),
	     * so must be done after the fixed reservations
	     */
	    arm_memory_present();

	    /*
	     * sparse_init() needs the bootmem allocator up and running.
	     */
	    sparse_init();

	    /*
	     * Now free the memory - free_area_init_node needs
	     * the sparse mem_map arrays initialized by sparse_init()
	     * for memmap_init_zone(), otherwise all PFNs are invalid.
	     */
	    arm_bootmem_free(min, max_low, max_high);

	    /*
	     * This doesn't seem to be used by the Linux memory manager any
	     * more, but is used by ll_rw_block.  If we can get rid of it, we
	     * also get rid of some of the stuff above as well.
	     *
	     * Note: max_low_pfn and max_pfn reflect the number of _pages_ in
	     * the system, not the maximum PFN.
	     */
	    max_low_pfn = max_low - PHYS_PFN_OFFSET;
	    max_pfn = max_high - PHYS_PFN_OFFSET;
    }
   
4). start_kernel(void)--&gt;parse_early_param()--&gt;
	parse_args(&quot;Booting kernel&quot;, static_command_line, __start___param,
		   __stop___param - __start___param,
		   &amp;unknown_bootoption);
    
    解析commandline的其余参数&quot;root=&quot; &quot;rootfstype=&quot; &quot;init=&quot; &quot;ro&quot; &quot;rw&quot; &quot;console=&quot;等
    static int __init root_dev_setup(char *line)
    {
           strlcpy(saved_root_name, line, sizeof(saved_root_name));
           return 1;
    }
    __setup(&quot;root=&quot;, root_dev_setup);
    
    
</rich_text><rich_text foreground="#00000000ffff" scale="h1">__setup与early_param</rich_text><rich_text>
#define __setup_param(str, unique_id, fn, early)            /
    static char __setup_str_##unique_id[] __initdata = str;    /
    static struct obs_kernel_param __setup_##unique_id    /
        __attribute_used__                /
        __attribute__((__section__(&quot;.init.setup&quot;)))    /
        __attribute__((aligned((sizeof(long)))))    /
        = { __setup_str_##unique_id, fn, early }
        
#define __setup(str, fn)                    /
    __setup_param(str, fn, fn, 0)
    
#define early_param(str, fn)                    /
    __setup_param(str, fn, fn, 1)

 
__setup与early_param不同的是，early_param 宏注册的内核选项必须要在其他内核选项之前被处理。
在函数start_kernel中，parse_early_param处理early_param定义的参数，parse_args处理__setup定义的参数。

  parse_early_param();
  parse_args(&quot;Booting kernel&quot;, static_command_line, __start___param,
      __stop___param - __start___param,
      &amp;unknown_bootoption);
    
 1,所有的系统启动参数都是由形如 static int __init foo(char *str);的函数来支持的
 注:#define __init        __attribute__ ((__section__ (&quot;.init.text&quot;)))
 申明所有的启动参数支持函数都放入.init.text段

 
2.1,用__setup宏来导出参数的支持函数
 __setup(&quot;foo=&quot; , foo);
 展开后就是如下的形式
static char __setup_str_foo[] __initdata = &quot;foo=&quot;;    
 static struct obs_kernel_param __setup_foo    
         __attribute_used__                
         __attribute__((__section__(&quot;.init.setup&quot;)))    
         __attribute__((aligned((sizeof(long)))))    
         = { __setup_str_foo, foo, 0 };//&quot;foo=&quot;,foo,0
 也就是说,启动参数(函数指针)被封装到obs_kernel_param结构中,
 所有的内核启动参数形成内核映像.init.setup段中的一个
 obs_kernel_param数组
2.2用early_param宏来申明需要'早期'处理的启动参数,例如在
 arch/i386/kernel/setup.c就有如下的申明:
 early_param(&quot;mem&quot;, parse_mem);
 展开后和__setup是一样的只是early参数不一样,因此会在do_early_param
 中被处理
3,内核对启动参数的解析:下面函数历遍obs_kernel_param数组,调用
 支持函数
 static int __init do_early_param(char *param, char *val)
 {
     struct obs_kernel_param *p;
    for (p = __setup_start; p &lt; __setup_end; p++) {
         if (p-&gt;early &amp;&amp; strcmp(param, p-&gt;str) == 0) {
             if (p-&gt;setup_func(val) != 0)
                 printk(KERN_WARNING
                        &quot;Malformed early option '%s'/n&quot;, param);
         }
     }
     /* We accept everything at this stage. */
     return 0;
 }
 这个函数在parse_early_param中被调用,而parse_early_param在start_kernel
 中被调用,parse_early_param之后的parse_args会调用下面函数
 static int __init obsolete_checksetup(char *line)
 {
     struct obs_kernel_param *p;
     int had_early_param = 0;
    p = __setup_start;
     do {
         int n = strlen(p-&gt;str);
         if (!strncmp(line, p-&gt;str, n)) {
             if (p-&gt;early) {
                 /* Already done in parse_early_param?
                  * (Needs exact match on param part).
                  * Keep iterating, as we can have early
                  * params and __setups of same names 8( */
                 if (line[n] == '/0' || line[n] == '=')
                     had_early_param = 1;
             } else if (!p-&gt;setup_func) {
                 printk(KERN_WARNING &quot;Parameter %s is obsolete,&quot;
                        &quot; ignored/n&quot;, p-&gt;str);
                 return 1;
             } else if (p-&gt;setup_func(line + n))//调用支持函数
                 return 1;
         }
         p++;
     } while (p &lt; __setup_end);
    return had_early_param;
 }
init/main.c中启动参数申明列表:
 __setup(&quot;nosmp&quot;, nosmp);
 __setup(&quot;maxcpus=&quot;, maxcpus);
 __setup(&quot;reset_devices&quot;, set_reset_devices);
__setup(&quot;debug&quot;, debug_kernel);
 __setup(&quot;quiet&quot;, quiet_kernel);
__setup(&quot;loglevel=&quot;, loglevel);
__setup(&quot;init=&quot;, init_setup);
 __setup(&quot;rdinit=&quot;, rdinit_setup);
__setup(&quot;initcall_debug&quot;, initcall_debug_setup);


</rich_text><encoded_png char_offset="4005">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</encoded_png><encoded_png char_offset="5187">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</encoded_png><encoded_png char_offset="12037"></encoded_png></node><node name="mkimage" prog_lang="custom-colors" readonly="False" tags="" unique_id="18"><rich_text>    </rich_text><rich_text foreground="#ffff00000000">bootm命令</rich_text><rich_text>是用来引导经过u-boot的工具mkimage打包后的kernel image的，什么叫做经过u-boot的工具mkimage打包后的kernel image，这个就要看mkimage的代码，看看它做了些什么，虽然我很希望大家不要偷懒，认真地去看看，但是我知道还是有很多人懒得去做这件，那么我就j将分析mkimage代码后得到的总结告诉大家，mkimage做了些什么，怎么用这个工具。
    
</rich_text><rich_text scale="h2">mkimage的用法</rich_text><rich_text>
uboot源代码的tools/目录下有mkimage工具，这个工具可以用来制作不压缩或者压缩的多种可启动映象文件。
mkimage在制作映象文件的时候，是在原来的可执行映象文件的前面加上一个0x40字节的头，记录参数所指定的信息，这样uboot才能识别这个映象是针对哪个CPU体系结构的，哪个OS的，哪种类型，加载内存中的哪个位置， 入口点在内存的那个位置以及映象名是什么
</rich_text><rich_text foreground="#00000000ffff">root@Glym:/tftpboot# ./mkimage
Usage: ./mkimage -l image
    -l ==&gt; list image header information
    ./mkimage -A arch -O os -T type -C comp -a addr -e ep -n name -d data_file[:data_file...] image
    -A ==&gt; set architecture to 'arch'
    -O ==&gt; set operating system to 'os'
    -T ==&gt; set image type to 'type'
    -C ==&gt; set compression type 'comp'
    -a ==&gt; set load address to 'addr' (hex)
    -e ==&gt; set entry point to 'ep' (hex)
    -n ==&gt; set image name to 'name'
    -d ==&gt; use image data from 'datafile'
    -x ==&gt; set XIP (execute in place)</rich_text><rich_text>
参数说明：
-A 指定CPU的体系结构：
    取值 表示的体系结构
    alpha Alpha
    arm A RM
    x86 Intel x86
    ia64 IA64
    mips MIPS
    mips64 MIPS 64 Bit
    ppc PowerPC
    s390 IBM S390
    sh SuperH
    sparc SPARC
    sparc64 SPARC 64 Bit
    m68k MC68000
    
-O 指定操作系统类型，可以取以下值：
    openbsd、netbsd、freebsd、4_4bsd、linux、svr4、esix、solaris、irix、sco、dell、ncr、lynxos、vxworks、psos、qnx、u-boot、rtems、artos
-T 指定映象类型，可以取以下值：
    standalone、kernel、ramdisk、multi、firmware、script、filesystem
-C 指定映象压缩方式，可以取以下值：
    none 不压缩
    gzip 用gzip的压缩方式
    bzip2 用bzip2的压缩方式
    
-a 指定映象在内存中的加载地址，映象下载到内存中时，要按照用mkimage制作映象时，这个参数所指定的地址值来下载
-e 指定映象运行的入口点地址，这个地址就是-a参数指定的值加上0x40（因为前面有个mkimage添加的0x40个字节的头）
-n 指定映象名
-d 指定制作映象的源文件

mkimage
   解压内核源码包,编辑Makefile
   设置 cross_compile:=[编译器的绝对路径]     ;这个绝对路径既上面2.95.3放到的路径
   进入内核文件夹,执行下面命令
   [root@hostname]# make clean
   [root@hostname]# make dep
   [root@hostname]# make
   [root@hostname]# [编译器的绝对路径]/bin/arm-linux-objcopy -O binary -S vmlinux linux.bin    ;编译器的绝对路径也是上面说到的路径
    [root@hostname]# gzip linux.bin
下面的比较重要了,主要是u-boot的安装,这个在H9200的手册上说的很不清楚
    [root@hostname]# tar xzvf u-boot-1.0.0.tar.gz      ;解压u-boot
    [root@hostname]# cd u-boot-1.0.0
    [root@hostname]# make distclean
    [root@hostname]# make at91rm9200dk_config
    [root@hostname]# make all
    然后在/usr/local下建立uboot文件夹将u-boot-1.0.0下的所有文件都复制到uboot下
    [root@hostname]# [uboot的绝对路径]/tools/mkimage -A arm -O linux -C gzip -a 0x20008000 -e 0x20008000 -d linux.bin.gz uImage           ;这里的绝对路径是/usr/local/uboot
        vmlinux linux.bin linux.bin.gz uImage(uboot制作的image)
        mkimage -a -e
        -a参数后是内核的运行地址，-e参数后是入口地址。
1）如果我们没用mkimage对内核进行处理的话，那直接把内核下载到0x30008000再运行就行，内核会自解压运行（不过内核运行需要一个tag来传递参数，而这个tag建议是由bootloader提供的，在u-boot下默认是由bootm命令建立的）。
2）如果使用mkimage生成内核镜像文件的话，会在内核的前头加上了64byte的信息，供建立tag之用。bootm命令会首先判断bootm xxxx 这个指定的地址xxxx是否与-a指定的加载地址相同。
(1)如果不同的话会从这个地址开始提取出这个64byte的头部，对其进行分析，然后把去掉头部的内核复制到-a指定的load地址中去运行之
(2)如果相同的话那就让其原封不同的放在那，但-e指定的入口地址会推后64byte，以跳过这64byte的头部。

QUESTIONS
1. I have built a vmlinux image but I can boot it.
2: The mkimage tool, ARMboot's tftp command, and the bootm command require
   certain load and entry addresses. I'm confused which ones to chose.
ANSWERS
1. I have built a vmlinux image but I can boot it.
--------------------------------------------------
ARMboot is designed to boot Images as created by the mkimage tool, that
comes with ARMboot and is automatically built, too. You cannot directly load
the vmlinux image, as it expects a number of prerequisits such as special
register contents etc.
2. The mkimage tool, ARMboot's tftp command, and the bootm command require
   certain load and entry addresses. I'm confused which ones to chose.
--------------------------------------------------------------------------
Well, there are 3 different addresses:
1. Kernel Load Address. This is the address, where the kernel was linked
   to when you built the vmlinux and can be found in arch/arm/Makefile.
   The default for it is:
   
   ifeq ($(CONFIG_CPU_32),y)
   PROCESSOR    = armv
   TEXTADDR     = 0xC0008000
   LDSCRIPT     = arch/arm/vmlinux-armv.lds.in
   endif
   
   Provide this as &quot;-a&quot; parameter to mkimage.
2. Kernel Entry Point. This is the address, where ARMboot jumps to to
   enter the Kernel. It usually is the same as the kernel load address.
   Provide this as &quot;-e&quot; parameter to mkimage.
3. The Network Download Address. This is where you download the mkimage
   File. This address MUST BE different to the Kernel Load Address, and
   should be sufficiently far away to allow ARMboot to relocate the 
   image to the final Kernel Load Address. Loading to the 5th MB
   within the RAM is usually a good idea, eg. if the RAM begins at
   0xc0000000, you can do this:
   
   LART # tftp c0400000 linux.img
   ARP broadcast 1
   eth addr: 00:02:03:04:05:06
   TFTP from server 192.168.1.1; our IP address is 192.168.1.2
   Filename 'image.img'.
   Load address: 0xc0400000
   Loading: 
   ##################################################################done
   Bytes transferred = 567252 (8a7d4 hex)
   LART # bootm c0400000
      Image Name:   Linux 2.4.18
      Created:      Mon Jun 24 12:00:01 2002
      Image Type:   ARM Linux Kernel Image (gzip compressed)
      Data Size:    567188 Bytes = 553 kB = 0 MB
      Load Address: 0xc0008000
      Entry Point: 0xc0008000
      Verifying Checksum ... OK
      Loading Kernel Image ... OK 
   Starting kernel ...
   Linux version 2.4.18 (
[email=mag@mag]</rich_text><rich_text foreground="#0000ff">mag@mag</rich_text><rich_text>[/email]
) (gcc version 2.95.3 20010315 (release)) #4 Mon Jun 17 20:35:32 CST 2002
   ...</rich_text></node><node name="kernel version" prog_lang="custom-colors" readonly="False" tags="" unique_id="19"><rich_text>１.cat /proc/version的实现:
平时的时候我们都在用cat/proc/version来获得我们内核的版本号，代码在:fs/proc/version.c。
static int version_proc_show(struct seq_file *m, void *v)  
{  
    seq_printf(m, linux_proc_banner,  
        utsname()-&gt;sysname,  
        utsname()-&gt;release,  
        utsname()-&gt;version);  
    return 0;  
}  
  
  
static int version_proc_open(struct inode *inode, struct file *file)  
{  
    return single_open(file, version_proc_show, NULL);  
}  
  
  
static const struct file_operations version_proc_fops = {  
    .open       = version_proc_open,  
    .read       = seq_read,  
    .llseek     = seq_lseek,  
    .release    = single_release,  
};  
  
  
static int __init proc_version_init(void)  
{  
    proc_create(&quot;version&quot;, 0, NULL, &amp;version_proc_fops);  
    return 0;  
}  
module_init(proc_version_init);  


这里看到show，是不是紧张了，现在就看看这些值是哪里赋值的。来看include/linux/utsname.h
static inline struct new_utsname *utsname(void)  
{  
    return &amp;current-&gt;nsproxy-&gt;uts_ns-&gt;name;  
}  

在utsname中有一个nsproxy。这个在kernel/nsproxy.c中定义了uts_ns
struct nsproxy init_nsproxy = {  
    .count  = ATOMIC_INIT(1),  
    .uts_ns = &amp;init_uts_ns,  
#if defined(CONFIG_POSIX_MQUEUE) || defined(CONFIG_SYSVIPC)  
    .ipc_ns = &amp;init_ipc_ns,  
#endif  
    .mnt_ns = NULL,  
    .pid_ns = &amp;init_pid_ns,  
#ifdef CONFIG_NET  
    .net_ns = &amp;init_net,  
#endif  
};  

看到了所使用的uts_ns了吧，在init/version.c中
struct uts_namespace init_uts_ns = {  
    .kref = {  
        .refcount   = ATOMIC_INIT(2),  
    },  
    .name = {  
        .sysname    = UTS_SYSNAME,  
        .nodename   = UTS_NODENAME,  
        .release    = UTS_RELEASE,  
        .version    = UTS_VERSION,  
        .machine    = UTS_MACHINE,  
        .domainname = UTS_DOMAINNAME,  
    },  
}; 

EXPORT_SYMBOL_GPL(init_uts_ns);

const char linux_banner[] =
       &quot;Linux version &quot; UTS_RELEASE &quot; (&quot; LINUX_COMPILE_BY &quot;@&quot;
       LINUX_COMPILE_HOST &quot;) (&quot; LINUX_COMPILER &quot;) &quot; UTS_VERSION&quot;\n&quot;;

const char linux_proc_banner[]=
       &quot;%s version %s\n&quot;;
    &quot; (&quot; LINUX_COMPILE_BY &quot;@&quot; LINUX_COMPILE_HOST &quot;)&quot;
   &quot; (&quot;LINUX_COMPILER &quot;) %s\n&quot;;



所以我们在version_proc_show中看到的utsname中使用了version等等。


言归正传，看看init_uts_ns中的UTS_VERSION的定义，where？
在include/generated/compile.h中，看到这里去找文件，( ⊙ o ⊙)啊！，怎么没有你说的？？稍等，继续往下看。
在scripts/mkcompile_h文件中呢，这里都是用脚本来生成的compile.h这个文件。

等编译完后会成include/generated下生成
autoconf.h bounds.h compile.h utsrelease.h version.h
</rich_text><rich_text foreground="#00000000ffff">cat utstrelease.h :</rich_text><rich_text>
</rich_text><rich_text foreground="#ffff00000000">#define UTS_RELEASE &quot;3.0.8&quot;
</rich_text><rich_text>
2. utstrelease.h的生成:
Makefile:
 
uts_len := 64
define filechk_utsrelease.h
       if [ `echo -n &quot;$(KERNELRELEASE)&quot; | wc -c ` -gt $(uts_len) ]; then\
         echo '&quot;$(KERNELRELEASE)&quot; exceeds $(uts_len) characters'&gt;&amp;2;   \
         exit1;                                                        \
       fi;                                                              \
       (echo \#define UTS_RELEASE \&quot;$(KERNELRELEASE)\&quot;;)
endef

define filechk_version.h
       (echo \#define LINUX_VERSION_CODE$(shell                            \
       expr $(VERSION) \* 65536 + $(PATCHLEVEL) \* 256 +$(SUBLEVEL));    \
       echo '#define KERNEL_VERSION(a,b,c) (((a)&lt;&lt; 16) + ((b)&lt;&lt; 8) + (c))';)
endef

include/linux/version.h: $(srctree)/Makefile FORCE　　　　　　　　//version.h的生成
       $(call filechk,version.h)

include/linux/utsrelease.h: include/config/kernel.release FORCE         //utstrelease.h的生成
       $(call filechk,utsrelease.h)

可以看出UTS_RELEASE 是由KERNELRELEASE生成:


# Read KERNELRELEASE from include/config/kernel.release (if itexists)
KERNELRELEASE = $(shell cat include/config/kernel.release2&gt; /dev/null)
KERNELVERSION =$(VERSION).$(PATCHLEVEL).$(SUBLEVEL)$(EXTRAVERSION)

３.kernel.release 的生成:

# Build the kernel release string
#
# The KERNELRELEASE value built here is stored in the file
# include/config/kernel.release, and is used when executingseveral
# make targets, such as &quot;make install&quot; or &quot;makemodules_install.&quot;
#
# The eventual kernel release string consists of the followingfields,
# shown in a hierarchical format to show how smaller parts areconcatenated
# to form the larger and final value, with values coming fromplaces like
# the Makefile, kernel config options, make command line optionsand/or
# SCM tag information.
#
#      $(KERNELVERSION)
#        $(VERSION)                   eg, 2
#        $(PATCHLEVEL)                eg, 6
#        $(SUBLEVEL)                  eg, 18
#        $(EXTRAVERSION)              eg, -rc6
#      $(localver-full)
#        $(localver)
#          localversion*              (files without backups, containing '~')
#          $(CONFIG_LOCALVERSION)     (from kernel config setting)
#        $(localver-auto)             (only if CONFIG_LOCALVERSION_AUTO is set)
#          ./scripts/setlocalversion  (SCMtag, if one exists)
#          $(LOCALVERSION)            (from make command line if provided)
#
# Note how the final $(localver-auto) string isincluded *only* if the
# kernel config option CONFIG_LOCALVERSION_AUTO isselected. Also, at the
# moment, only git is supported but other SCMs can edit thescript
# scripts/setlocalversion and add the appropriate checks asneeded.
pattern = &quot;.*/localversion[^~]*&quot;
string = $(shell cat /dev/null \
          `find $(objtree) $(srctree) -maxdepth 1 -regex $(pattern) | sort-u`)

localver = $(subst $(space),, $(string) \
                             $(patsubst &quot;%&quot;,%,$(CONFIG_LOCALVERSION)))

# If CONFIG_LOCALVERSION_AUTO is set scripts/setlocalversion iscalled
# and if the SCM is know a tag from the SCM is appended.
# The appended tag is determined by the SCM used.
#
# .scmversion is used when generating rpm packages so we do notloose
# the version information from the SCM when we do the build of thekernel
# from the copied source
ifdefCONFIG_LOCALVERSION_AUTO      //yes

ifeq ($(wildcard.scmversion),)                //don,thave .scmversion
       _localver-auto = $(shell $(CONFIG_SHELL) \
                        $(srctree)/scripts/setlocalversion$(srctree))  //如果带--save-scmversion参数就会生成.scmversion,但是脚本没有带,所以不会有.scmversion
else
       _localver-auto = $(shell cat .scmversion 2&gt;/dev/null)
endif

       localver-auto =$(LOCALVERSION)$(_localver-auto)
endif

localver-full = $(localver)$(localver-auto)

# Store (new) KERNELRELASE string ininclude/config/kernel.release
kernelrelease =$(KERNELVERSION)$(localver-full)
include/config/kernel.release:include/config/auto.conf FORCE
       $(Q)rm -f $@
       $(Q)echo $(kernelrelease) &gt; $@

/kernel/scripts/setlocalversion:

#!/bin/sh
#
# This scripts adds localversion information from the version
# control systems git,mercurial (hg) and subversion (svn).
#
# If something goes wrong,send a mail the kernel build mailinglist
# (see MAINTAINERS) and CCNico Schottelius
#&lt;nico-linuxsetlocalversion -at-schottelius.org&gt;.
#
#

usage() {
   echo &quot;Usage: $0 [--save-scmversion] [srctree]&quot;&gt;&amp;2
   exit 1
}

scm_only=false
srctree=.
if test &quot;$1&quot; =&quot;--save-scmversion&quot;; then
   scm_only=true
   shift
fi
if test $# -gt 0;then
   srctree=$1
   shift
fi
if test $# -gt 0 -o ! -d&quot;$srctree&quot;; then
   usage
fi


# Check for git and a git repo.
if head=`git rev-parse--verify --short HEAD 2&gt;/dev/null`;then

   # If we are at a tagged commit (like &quot;v2.6.30-rc6&quot;), we ignoreit,
   # because this version is defined in the top levelMakefile.
   if [ -z &quot;`git describe --exact-match 2&gt;/dev/null`&quot;]; then

      # If we arepast a tagged commit (like&quot;v2.6.30-rc5-302-g72357d5&quot;),
      # we prettyprint it.
      ifatag=&quot;`git describe 2&gt;/dev/null`&quot;;then
         echo &quot;$atag&quot;| awk -F- '{printf(&quot;-d-%s&quot;, $(NF-1),$(NF))}'

      # If wedon't have a tag at all we print -g{commitish}.
      else
         printf'%s%s' -g $head
      fi
   fi

   # Is this git on svn?
   if git config --get svn-remote.svn.url &gt;/dev/null;then
          printf -- '-svn%s' &quot;`git svn find-rev $head`&quot;
   fi

   # Update index only on r/w media
   [ -w . ] &amp;&amp; git update-index--refresh --unmerged &gt; /dev/null

   # Check for uncommitted changes　//如果kernelcode有修改并且没有git commit,就会生成-dirty
   if git diff-index--name-only HEAD | grep -v &quot;^scripts/package&quot;\
      | readdummy; then
      printf '%s'-dirty
   fi

   # All done with git
   exit
fi

# Check for mercurial and amercurial repo.
if hgid=`hg id2&gt;/dev/null`; then
   tag=`printf '%s' &quot;$hgid&quot; | cut -d' ' -f2`

   # Do we have an untagged version?
   if [ -z &quot;$tag&quot; -o &quot;$tag&quot; = tip ]; then
      id=`printf'%s' &quot;$hgid&quot; | sed 's/[+ ].*//'`
      printf'%s%s' -hg &quot;$id&quot;
   fi

   # Are there uncommitted changes?
   # These are represented by + after the changesetid.
   case &quot;$hgid&quot; in
      *+|*+\ *)printf '%s' -dirty ;;
   esac

   # All done with mercurial
   exit
fi

# Check for svn and a svnrepo.
if rev=`svn info2&gt;/dev/null | grep '^Last Changed Rev'`;then
   rev=`echo $rev | awk '{print $NF}'`
   printf -- '-svn%s' &quot;$rev&quot;

   # All done with svn
   exit
fi</rich_text></node><node name="mkbootimg" prog_lang="custom-colors" readonly="False" tags="" unique_id="20"><rich_text scale="h1">一.mkbootfs</rich_text><rich_text>
</rich_text><rich_text scale="h2">1.使用</rich_text><rich_text>
    mkbootfs root | gzip &gt; ramdisk.img
 
 
</rich_text><rich_text scale="h1">二.mkbootimg</rich_text><rich_text>
</rich_text><rich_text scale="h2">1.使用</rich_text><rich_text>
    mkbootimg  --kernel your-kernel-file --ramdisk newramdisk.cpio.gz --cmdline  &quot;mem=128 console=ttymxc0,115200n8 init=/init rw&quot; --output mynewimage.img
    或
    mkbootimg --kernel your-kernel-file --ramdisk newramdisk.cpio.gz --cmdline  --output mynewimage.img</rich_text></node><node name="postcore_initcall(), arch_initcall(), subsys_initcall(), device_initcall() 调用顺序 " prog_lang="custom-colors" readonly="False" tags="" unique_id="76"><rich_text>在内核源代码中，platform设备的初始化（注册）用arch_initcall()调用，它的initcall的level为3；

而驱动的注册用module_init()调用，即device_initcall()，它的initcall的level为6。

#define module_init(x) __initcall(x);
#define __initcall(fn) device_initcall(fn)

    kernel初始化时（kernel_init@init/main.c），按照内核链接文件中（arm系统：kernel/arch/arm/vmlinux.lds）的</rich_text><rich_text link="webs http://zhidao.baidu.com/search?word=__init&amp;fr=qb_search_exp&amp;ie=utf8">__init</rich_text><rich_text> call_start段的序列依次执行，
这样level小的初始化函数先于level大的初始化函数被调用。
    所以platform设备先被注册，驱动加载时会调用驱动程序中的probe（），扫描系统中已注册的设备，找到匹配设备后将驱动和设备绑定。

比如I2C，适配器先需要 设备注册；

============================= 
LINUX内核中有很多的初始化指示标志postcore_initcall(), arch_initcall(), subsys_initcall(), device_initcall(), etc. 这些起什么作用呢？
</rich_text><rich_text scale="h3" weight="heavy">1. 初始化标号</rich_text><rich_text>
先看这些宏的定义（定义在文件include/linux/init.h中）
1. </rich_text><rich_text foreground="#808080">#define pure_initcall(fn)               __define_initcall(&quot;0&quot;,fn,0)</rich_text><rich_text>  
2. </rich_text><rich_text foreground="#808080">#define core_initcall(fn)               __define_initcall(&quot;1&quot;,fn,1)</rich_text><rich_text>  
3. </rich_text><rich_text foreground="#808080">#define core_initcall_sync(fn)          __define_initcall(&quot;1s&quot;,fn,1s)</rich_text><rich_text>  
4. </rich_text><rich_text foreground="#808080">#define postcore_initcall(fn)           __define_initcall(&quot;2&quot;,fn,2)</rich_text><rich_text>  
5. </rich_text><rich_text foreground="#808080">#define postcore_initcall_sync(fn)      __define_initcall(&quot;2s&quot;,fn,2s)</rich_text><rich_text>  
6. </rich_text><rich_text foreground="#808080">#define</rich_text><rich_text foreground="#FF0000"> arch_initcall</rich_text><rich_text>(fn)               __define_initcall(&quot;3&quot;,fn,3)  
7. </rich_text><rich_text foreground="#808080">#define arch_initcall_sync(fn)          __define_initcall(&quot;3s&quot;,fn,3s)</rich_text><rich_text>  
8. </rich_text><rich_text foreground="#808080">#define subsys_initcall(fn)             __define_initcall(&quot;4&quot;,fn,4)</rich_text><rich_text>  
9. </rich_text><rich_text foreground="#808080">#define subsys_initcall_sync(fn)        __define_initcall(&quot;4s&quot;,fn,4s)</rich_text><rich_text>  
10. </rich_text><rich_text foreground="#808080">#define fs_initcall(fn)                 __define_initcall(&quot;5&quot;,fn,5)</rich_text><rich_text>  
11. </rich_text><rich_text foreground="#808080">#define fs_initcall_sync(fn)            __define_initcall(&quot;5s&quot;,fn,5s)</rich_text><rich_text>  
12. </rich_text><rich_text foreground="#808080">#define rootfs_initcall(fn)             __define_initcall(&quot;rootfs&quot;,fn,rootfs)</rich_text><rich_text>  
13. </rich_text><rich_text foreground="#808080">#define </rich_text><rich_text foreground="#FF0000">device_initcall</rich_text><rich_text>(fn)             __define_initcall(&quot;6&quot;,fn,6)  
14. </rich_text><rich_text foreground="#808080">#define device_initcall_sync(fn)        __define_initcall(&quot;6s&quot;,fn,6s)</rich_text><rich_text>  
15. </rich_text><rich_text foreground="#808080">#define </rich_text><rich_text foreground="#FF0000">late_initcall</rich_text><rich_text>(fn)               __define_initcall(&quot;7&quot;,fn,7)  
16. </rich_text><rich_text foreground="#808080">#define late_initcall_sync(fn)          __define_initcall(&quot;7s&quot;,fn,7s)</rich_text><rich_text>  

</rich_text><rich_text scale="h3" weight="heavy">2、__define_initcall</rich_text><rich_text>
这些宏都用到了__define_initcall()，再看看它的定义（同样定义在文件include/linux/init.h中）
1. </rich_text><rich_text foreground="#808080">#define __define_initcall(level,fn,id) \</rich_text><rich_text>  
2.         </rich_text><rich_text foreground="#006699">static</rich_text><rich_text> initcall_t __initcall_##fn##id __used \  
3.         __attribute__((__section__(</rich_text><rich_text foreground="#0000ff">&quot;.initcall&quot;</rich_text><rich_text> level </rich_text><rich_text foreground="#0000ff">&quot;.init&quot;</rich_text><rich_text>))) = fn  

这其中initcall_t是函数指针，原型如下，
1. </rich_text><rich_text foreground="#006699">typedef</rich_text><rich_text> </rich_text><rich_text foreground="#2e8b57">int</rich_text><rich_text> (*initcall_t)(</rich_text><rich_text foreground="#006699">void</rich_text><rich_text>);  
而属性 __attribute__((__section__())) 则表示把对象放在一个这个由括号中的名称所指代的section中。

所以__define_initcall的含义是：
1) 声明一个名称为__initcall_##fn的函数指针；
2) 将这个函数指针初始化为fn；
3) 编译的时候需要把这个函数指针变量放置到名称为 &quot;.initcall&quot; level &quot;.init&quot;的section中。

</rich_text><rich_text scale="h3" weight="heavy">3.放置.initcall.init SECTION</rich_text><rich_text>
明确了__define_initcall的含义，就知道了是分别将这些初始化标号修饰的函数指针放到各自的section中的。
SECTION“.initcall”level”.init”被放入INITCALLS（include/asm-generic/vmlinux.lds.h）
1. </rich_text><rich_text foreground="#808080">#define INITCALLS                                                   \</rich_text><rich_text>  
2.             *(.initcallearly.init)                                  \  
3.             VMLINUX_SYMBOL(__early_initcall_end) = .;               \  
4.             *(.initcall0.init)                                      \  
5.             *(.initcall0s.init)                                     \  
6.             *(.initcall1.init)                                      \  
7.             *(.initcall1s.init)                                     \  
8.             *(.initcall2.init)                                      \  
9.             *(.initcall2s.init)                                     \  
10.             *(.initcall3.init)                                      \  
11.             *(.initcall3s.init)                                     \  
12.             *(.initcall4.init)                                      \  
13.             *(.initcall4s.init)                                     \  
14.             *(.initcall5.init)                                      \  
15.             *(.initcall5s.init)                                     \  
16.             *(.initcallrootfs.init)                                 \  
17.             *(.initcall6.init)                                      \  
18.             *(.initcall6s.init)                                     \  
19.             *(.initcall7.init)                                      \  
20.             *(.initcall7s.init)  

__initcall_start和__initcall_end以及INITCALLS中定义的SECTION都是在arch/xxx/kernel/vmlinux.lds.S中放在.init段的。
1. SECTIONS  
2. {  
3.         .init : {  
4.                 __initcall_start = .;  
5.                         INITCALLS  
6.                 __initcall_end = .;  
7.         }  
8. }  

</rich_text><rich_text scale="h3" weight="heavy">4.   初始化.initcallxx.init里的函数</rich_text><rich_text>
而这些SECTION里的函数在初始化时被顺序执行（init内核线程-&gt;do_basic_setup()[main.c#778]-&gt;do_initcalls()）。
程序（init/main.c文件do_initcalls()函数）如下，do_initcalls()把.initcallXX.init中的函数按顺序都执行一遍。
1. </rich_text><rich_text foreground="#006699">for</rich_text><rich_text> (call = __early_initcall_end; call &lt; __initcall_end; call++)  
2.         do_one_initcall(*call);  
</rich_text></node><node name="linux内核线程migration_thread和kthreadd的创建" prog_lang="custom-colors" readonly="False" tags="" unique_id="92"><rich_text>    linux内核中两大重要的线程，migration_thread负责cpu的负载均衡(将进程从本地队列移动到目标cpu的队列)，kthreadd负责为kthread_create_list链表中的成员创建内核线程。
内核版本2.6.24中的引导部分，start_kernel()-&gt;rest_init():
1. static void noinline __init_refok rest_init</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>void</rich_text><rich_text foreground="#0000cc">)</rich_text><rich_text>
2.         __releases</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>kernel_lock</rich_text><rich_text foreground="#0000cc">)</rich_text><rich_text>
3. </rich_text><rich_text foreground="#0000cc">{</rich_text><rich_text>
4.         </rich_text><rich_text foreground="#ff0000">int</rich_text><rich_text> pid</rich_text><rich_text foreground="#0000cc">;</rich_text><rich_text>
5. 
6.         kernel_thread</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>kernel_init</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> </rich_text><rich_text foreground="#0000ff">NULL</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> CLONE_FS </rich_text><rich_text foreground="#0000cc">|</rich_text><rich_text> CLONE_SIGHAND</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
7.         numa_default_policy</rich_text><rich_text foreground="#0000cc">();</rich_text><rich_text>
8.         pid </rich_text><rich_text foreground="#0000cc">=</rich_text><rich_text> kernel_thread</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>kthreadd</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> </rich_text><rich_text foreground="#0000ff">NULL</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> CLONE_FS </rich_text><rich_text foreground="#0000cc">|</rich_text><rich_text> CLONE_FILES</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
9.         kthreadd_task </rich_text><rich_text foreground="#0000cc">=</rich_text><rich_text> find_task_by_pid</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>pid</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
10. ……
11. </rich_text><rich_text foreground="#0000cc">}</rich_text><rich_text>
    以上依次创建了kernel_init线程和kthreadd线程，rest_init()是在禁用抢占(preempt_disable)的情况下运行，因此保证了kernel_init()运行时kthreadd_task 已经指向ktheadd线程。
kernel_init（）调用do_pre_smp_initcalls()-&gt;migration_init(); 创建了负责将进程在cpu间移动(cpu负载均衡)的内核线程migration_thread(</rich_text><rich_text foreground="#ffff00000000">每个cpu一个</rich_text><rich_text>)，创建线程是通过将包含待运行函数及参数的kthread_create_info结构挂入kthread_create_list链表，然后唤醒kthreadd_task(即ktheadd线程)，而ktheadd线程负责为链表上的每个结构创建相应的线程。
</rich_text><rich_text weight="heavy">kernel/sched/core.c</rich_text><rich_text>
static int __init migration_init(void)
{
	void *cpu = (void *)(long)smp_processor_id();
	int err;

	/* Initialize migration for the boot CPU */
	err = migration_call(&amp;migration_notifier, CPU_UP_PREPARE, cpu);
	BUG_ON(err == NOTIFY_BAD);
	migration_call(&amp;migration_notifier, CPU_ONLINE, cpu);
	register_cpu_notifier(&amp;migration_notifier);

	/* Register cpu active notifiers */
	cpu_notifier(sched_cpu_active, CPU_PRI_SCHED_ACTIVE);
	cpu_notifier(sched_cpu_inactive, CPU_PRI_SCHED_INACTIVE);

	return 0;
}
    首先直接调用migration_call两次创建了引导cpu的migration_thread线程并唤醒，然后调用register_cpu_notifier()将migration_notifier挂入cpu_chain链表，在之后kernel_init()-&gt;smp_init()中将依次对其余未上线的cpu调用cpu_up()-&gt;_cpu_up(),该函数分别以参数CPU_UP_PREPARE和CPU_ONLINE调用两次__raw_notifier_call_chain(), 实则是运行cpu_chain链表上的函数，也包括了migration_call(), 因此其余cpu的migration_thread也得以创建，最终是每个cpu上都有一个migration_thread线程。
</rich_text><rich_text weight="heavy">kernel/smp.c</rich_text><rich_text>
/* Called by boot processor to activate the rest. */
void __init smp_init(void)
{
	unsigned int cpu;

	/* FIXME: This should be done in userspace --RR */
	for_each_present_cpu(cpu) {
		if (num_online_cpus() &gt;= setup_max_cpus)
			break;
		if (!cpu_online(cpu))
			cpu_up(cpu);
	}

	/* Any cleanup work */
	printk(KERN_INFO &quot;Brought up %ld CPUs\n&quot;, (long)num_online_cpus());
	smp_cpus_done(setup_max_cpus);
}

</rich_text><rich_text weight="heavy">kernel/cpu.c</rich_text><rich_text>
/* Requires cpu_add_remove_lock to be held */
static int __cpuinit _cpu_up(unsigned int cpu, int tasks_frozen)
{
	int ret, nr_calls = 0;
	void *hcpu = (void *)(long)cpu;
	unsigned long mod = tasks_frozen ? CPU_TASKS_FROZEN : 0;

	if (cpu_online(cpu) || !cpu_present(cpu))
		return -EINVAL;

	cpu_hotplug_begin();
	ret = __cpu_notify(CPU_UP_PREPARE | mod, hcpu, -1, &amp;nr_calls);
	if (ret) {
		nr_calls--;
		printk(KERN_WARNING &quot;%s: attempt to bring up CPU %u failed\n&quot;,
				__func__, cpu);
		goto out_notify;
	}

	/* Arch-specific enabling code. */
	ret = __cpu_up(cpu);
	if (ret != 0)
		goto out_notify;
	BUG_ON(!cpu_online(cpu));

	/* Now call notifier in preparation. */
	cpu_notify(CPU_ONLINE | mod, hcpu);

out_notify:
	if (ret != 0)
		__cpu_notify(CPU_UP_CANCELED | mod, hcpu, nr_calls, NULL);
	cpu_hotplug_done();

	return ret;
}

int __cpuinit cpu_up(unsigned int cpu)
{
	int err = 0;

#ifdef	CONFIG_MEMORY_HOTPLUG
	int nid;
	pg_data_t	*pgdat;
#endif

	if (!cpu_possible(cpu)) {
		printk(KERN_ERR &quot;can't online cpu %d because it is not &quot;
			&quot;configured as may-hotadd at boot time\n&quot;, cpu);
#if defined(CONFIG_IA64)
		printk(KERN_ERR &quot;please check additional_cpus= boot &quot;
				&quot;parameter\n&quot;);
#endif
		return -EINVAL;
	}

#ifdef	CONFIG_MEMORY_HOTPLUG
	nid = cpu_to_node(cpu);
	if (!node_online(nid)) {
		err = mem_online_node(nid);
		if (err)
			return err;
	}

	pgdat = NODE_DATA(nid);
	if (!pgdat) {
		printk(KERN_ERR
			&quot;Can't online cpu %d due to NULL pgdat\n&quot;, cpu);
		return -ENOMEM;
	}

	if (pgdat-&gt;node_zonelists-&gt;_zonerefs-&gt;zone == NULL) {
		mutex_lock(&amp;zonelists_mutex);
		build_all_zonelists(NULL);
		mutex_unlock(&amp;zonelists_mutex);
	}
#endif

	cpu_maps_update_begin();

	if (cpu_hotplug_disabled) {
		err = -EBUSY;
		goto out;
	}

	err = _cpu_up(cpu, 0);

out:
	cpu_maps_update_done();
	return err;
}

</rich_text><rich_text foreground="#00000000ffff">/*
1、以CPU_UP_PREPARE为参数调用时，创建migration_thread线程，并绑定到cpu，设置调用策略为实时进程SCHED_FIFO，优先级99, cpu运行队列的migration_thread指向该内核线程，此时线程是不可中断睡眠状态。
2、以CPU_ONLINE为参数调用时，唤醒cpu_rq(cpu)-&gt;migration_thread指向的migration_thread线程。
*/</rich_text><rich_text>
1. static </rich_text><rich_text foreground="#ff0000">int</rich_text><rich_text> __cpuinit
2. migration_call</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>struct notifier_block </rich_text><rich_text foreground="#0000cc">*</rich_text><rich_text>nfb</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> unsigned long action</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> void </rich_text><rich_text foreground="#0000cc">*</rich_text><rich_text>hcpu</rich_text><rich_text foreground="#0000cc">)</rich_text><rich_text>
3. </rich_text><rich_text foreground="#0000cc">{</rich_text><rich_text>
4.         struct task_struct </rich_text><rich_text foreground="#0000cc">*</rich_text><rich_text>p</rich_text><rich_text foreground="#0000cc">;</rich_text><rich_text>
5.         </rich_text><rich_text foreground="#ff0000">int</rich_text><rich_text> cpu </rich_text><rich_text foreground="#0000cc">=</rich_text><rich_text> </rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>long</rich_text><rich_text foreground="#0000cc">)</rich_text><rich_text>hcpu</rich_text><rich_text foreground="#0000cc">;</rich_text><rich_text>
6.         unsigned long flags</rich_text><rich_text foreground="#0000cc">;</rich_text><rich_text>
7.         struct rq </rich_text><rich_text foreground="#0000cc">*</rich_text><rich_text>rq</rich_text><rich_text foreground="#0000cc">;</rich_text><rich_text>
8. 
9.         switch </rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>action</rich_text><rich_text foreground="#0000cc">)</rich_text><rich_text> </rich_text><rich_text foreground="#0000cc">{</rich_text><rich_text>
10.         </rich_text><rich_text foreground="#0000ff">case</rich_text><rich_text> CPU_LOCK_ACQUIRE</rich_text><rich_text foreground="#0000cc">:</rich_text><rich_text>
11.                 mutex_lock</rich_text><rich_text foreground="#0000cc">(&amp;</rich_text><rich_text>sched_hotcpu_mutex</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
12.                 break</rich_text><rich_text foreground="#0000cc">;</rich_text><rich_text>
13. 
14.         </rich_text><rich_text foreground="#0000ff">case</rich_text><rich_text> CPU_UP_PREPARE</rich_text><rich_text foreground="#0000cc">:</rich_text><rich_text>
15.             </rich_text><rich_text foreground="#0000ff">case</rich_text><rich_text> CPU_UP_PREPARE_FROZEN</rich_text><rich_text foreground="#0000cc">:</rich_text><rich_text>
16.         p </rich_text><rich_text foreground="#0000cc">=</rich_text><rich_text> kthread_create</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>migration_thread</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> hcpu</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> </rich_text><rich_text foreground="#ff00ff">&quot;migration/%d&quot;</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> cpu</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
17.         </rich_text><rich_text foreground="#0000ff">if</rich_text><rich_text> </rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>IS_ERR</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>p</rich_text><rich_text foreground="#0000cc">))</rich_text><rich_text>
18.             return NOTIFY_BAD</rich_text><rich_text foreground="#0000cc">;</rich_text><rich_text>
19.         kthread_bind</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>p</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> cpu</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
20.         </rich_text><rich_text foreground="#0000cc">/*</rich_text><rich_text> Must be high prio</rich_text><rich_text foreground="#0000cc">:</rich_text><rich_text> stop_machine expects </rich_text><rich_text foreground="#0000ff">to</rich_text><rich_text> yield </rich_text><rich_text foreground="#0000ff">to</rich_text><rich_text> it</rich_text><rich_text foreground="#0000cc">.</rich_text><rich_text> </rich_text><rich_text foreground="#0000cc">*/</rich_text><rich_text>
21.         rq </rich_text><rich_text foreground="#0000cc">=</rich_text><rich_text> task_rq_lock</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>p</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> </rich_text><rich_text foreground="#0000cc">&amp;</rich_text><rich_text>flags</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
22.         __setscheduler</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>rq</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> p</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> SCHED_FIFO</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> MAX_RT_PRIO</rich_text><rich_text foreground="#0000cc">-</rich_text><rich_text>1</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
23.         task_rq_unlock</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>rq</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> </rich_text><rich_text foreground="#0000cc">&amp;</rich_text><rich_text>flags</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
24.         cpu_rq</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>cpu</rich_text><rich_text foreground="#0000cc">)-&gt;</rich_text><rich_text>migration_thread </rich_text><rich_text foreground="#0000cc">=</rich_text><rich_text> p</rich_text><rich_text foreground="#0000cc">;</rich_text><rich_text>
25.         break</rich_text><rich_text foreground="#0000cc">;</rich_text><rich_text>
26. 
27.     </rich_text><rich_text foreground="#0000ff">case</rich_text><rich_text> CPU_ONLINE</rich_text><rich_text foreground="#0000cc">:</rich_text><rich_text>
28.     </rich_text><rich_text foreground="#0000ff">case</rich_text><rich_text> CPU_ONLINE_FROZEN</rich_text><rich_text foreground="#0000cc">:</rich_text><rich_text>
29.         </rich_text><rich_text foreground="#0000cc">/*</rich_text><rich_text> Strictly unnecessary</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> as first user will wake it</rich_text><rich_text foreground="#0000cc">.</rich_text><rich_text> </rich_text><rich_text foreground="#0000cc">*/</rich_text><rich_text>
30.         wake_up_process</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>cpu_rq</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>cpu</rich_text><rich_text foreground="#0000cc">)-&gt;</rich_text><rich_text>migration_thread</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
31.         break</rich_text><rich_text foreground="#0000cc">;</rich_text><rich_text>
32. ……
33. </rich_text><rich_text foreground="#0000cc">}</rich_text><rich_text>

</rich_text><rich_text foreground="#00000000ffff">/*
创建线程是通过将包含线程运行函数和参数的kthread_create_info结构挂入kthread_create_list链表，并唤醒内核线程kthreadd_task对链表上的各个线程创建需求进行处理来实现的，当创建成功后返回进程指针，这是通过wait_for_completion(&amp;create.done)进行同步的。此内核线程创建函数不负责将线程绑定到cpu, 绑定工作须由调用函数负责。
*/</rich_text><rich_text>
1. struct task_struct </rich_text><rich_text foreground="#0000cc">*</rich_text><rich_text>kthread_create</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text foreground="#ff0000">int</rich_text><rich_text> </rich_text><rich_text foreground="#0000cc">(*</rich_text><rich_text>threadfn</rich_text><rich_text foreground="#0000cc">)(</rich_text><rich_text>void </rich_text><rich_text foreground="#0000cc">*</rich_text><rich_text>data</rich_text><rich_text foreground="#0000cc">),</rich_text><rich_text>
2.                                    void </rich_text><rich_text foreground="#0000cc">*</rich_text><rich_text>data</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text>
3.                                    </rich_text><rich_text foreground="#0000ff">const</rich_text><rich_text> char namefmt</rich_text><rich_text foreground="#0000cc">[],</rich_text><rich_text>
4.                                    </rich_text><rich_text foreground="#0000cc">...)</rich_text><rich_text>
5. </rich_text><rich_text foreground="#0000cc">{</rich_text><rich_text>
6.         struct kthread_create_info create</rich_text><rich_text foreground="#0000cc">;</rich_text><rich_text>
7. 
8.         create</rich_text><rich_text foreground="#0000cc">.</rich_text><rich_text>threadfn </rich_text><rich_text foreground="#0000cc">=</rich_text><rich_text> threadfn</rich_text><rich_text foreground="#0000cc">;</rich_text><rich_text>
9.         create</rich_text><rich_text foreground="#0000cc">.</rich_text><rich_text>data </rich_text><rich_text foreground="#0000cc">=</rich_text><rich_text> data</rich_text><rich_text foreground="#0000cc">;</rich_text><rich_text>
10.         init_completion</rich_text><rich_text foreground="#0000cc">(&amp;</rich_text><rich_text>create</rich_text><rich_text foreground="#0000cc">.</rich_text><rich_text>started</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
11.         init_completion</rich_text><rich_text foreground="#0000cc">(&amp;</rich_text><rich_text>create</rich_text><rich_text foreground="#0000cc">.</rich_text><rich_text>done</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
12. 
13.         spin_lock</rich_text><rich_text foreground="#0000cc">(&amp;</rich_text><rich_text>kthread_create_lock</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
14.         list_add_tail</rich_text><rich_text foreground="#0000cc">(&amp;</rich_text><rich_text>create</rich_text><rich_text foreground="#0000cc">.</rich_text><rich_text>list</rich_text><rich_text foreground="#0000cc">,</rich_text><rich_text> </rich_text><rich_text foreground="#0000cc">&amp;</rich_text><rich_text>kthread_create_list</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
15.         wake_up_process</rich_text><rich_text foreground="#0000cc">(</rich_text><rich_text>kthreadd_task</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
16.         spin_unlock</rich_text><rich_text foreground="#0000cc">(&amp;</rich_text><rich_text>kthread_create_lock</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
17. 
18.     wait_for_completion</rich_text><rich_text foreground="#0000cc">(&amp;</rich_text><rich_text>create</rich_text><rich_text foreground="#0000cc">.</rich_text><rich_text>done</rich_text><rich_text foreground="#0000cc">);</rich_text><rich_text>
19. ……
20.         return create</rich_text><rich_text foreground="#0000cc">.</rich_text><rich_text>result</rich_text><rich_text foreground="#0000cc">;</rich_text><rich_text>
21. </rich_text><rich_text foreground="#0000cc">}</rich_text><rich_text>
</rich_text></node><node name="《Linux启动过程分析》内核挂载根文件系统 " prog_lang="custom-colors" readonly="False" tags="" unique_id="94"><rich_text>说明：本文基于Linux2.6内核分析；其他内核版本仅供参考。
   前边通过源码情景分析，看过了总线、设备、驱动及其发现机制，Linux2.6内核udev设备节点创建相关；对于文件系统，一直望而生畏，但内核学习、 这部分又不可能绕的过去。目前对VFS中使用的hash表还未做研究，它在dentry和vfsmount下查找节点起关键作用；后边在做分析。下边将根 文件系统挂载过程做简单分析：
</rich_text><rich_text scale="h2" weight="heavy">一、rootfs的诞生</rich_text><rich_text>
引子：
Linux一切皆文件的提出：在Linux中，普通文件、目录、字符设备、块设备、套接字等都以文件被对待；他们具体的类型及其操作不同，但需要向上层提供统一的操作接口。
虚拟文件系统VFS就是Linux内核中的一个软件层，向上给用户空间程序提供文件系统操作接口；向下允许不同的文件系统共存。所以，所有实际文件系统都必须实现VFS的结构封装。
矛盾的提出：
Linux系统中任何文件系统的挂载必须满足两个条件：挂载点和文件系统。
直接挂载nfs或flash文件系统有如下两个问题必须解决：

1.谁来提供挂载点？我们可以想象自己创建一个超级块(包含目录项和i节点)，这时挂载点不是就有了吗；很可惜，linux引入VFS(一切皆文 件,所有类型文件系统必须提供一个VFS的软件层、以向上层提供统一接口)后该问题不能这么解决，因为挂载点必须关联到文件系统、也就是说挂载点必须属于 某个文件系统。
2.怎样访问到nfs或flash上的文件系统？我们可以说直接访问设备驱动读取其上边的文件系统（设备上的文件系统是挂载在自己的根目录），不就可以了吗；别忘了还是Linux的VFS，设备访问也不例外。因为访问设备还是需要通过文件系统来访问它的挂载点，不能直接访问(要满足Linux的VFS架构，一切皆文件)。所以，一句话：</rich_text><rich_text foreground="#ff0000">rootfs之所以存在，是因为需要在VFS机制下给系统提供最原始的挂载点。</rich_text><rich_text>
如此矛盾，需要我们引入一种特殊文件系统：
1.它是系统自己创建并加载的第一个文件系统；该文件系统的挂载点就是它自己的根目录项。
2.该文件系统不能存在于nfs或flash上，因为如此将会陷入之前的矛盾。
rootfs的诞生：
上述问题需要我们创建具有如下三个特点的特殊文件系统：
1.它是系统自己创建并加载的第一个文件系统；
2.该文件系统的挂载点就是它自己的根目录项对象；
3.该文件系统仅仅存在于内存中。
   由以上分析可以看出，rootfs是Linux的VFS(一切皆文件，所有类型文件系统必须提供一个VFS的软件层、以向上层提供统一接口)存在的基石； 二者关系密切。如果没有VFS机制，rootfs也就没有存在的必要；同样，如果没有rootfs、VFS机制也就不能实现。
  这就是两者之间的真正关系，之前看网上什么说法都有：有的只说关系密切，没有指明具体关系；有的干脆误人子弟，说VFS就是rootfs。
  其实，VFS是一种机制、是Linux下每一种文件系统（包括刚才说的rootfs，还有常见的ext3、yaffs等）都必须按照这个机制去实现的一种规范；而rootfs仅仅是符合VFS规范的而且又具有如上3个特点的一个文件系统。
  VFS是Linux文件系统实现必须遵循的一种机制，rootfs是一种具体实现的文件系统、Linux下所有文件系统的实现都必须符合VFS的机制(符合VFS的接口)；这就是二者的真正关系。
以下分析基于Android模拟器Linux2.6.29内核：

</rich_text><rich_text scale="h2" weight="heavy">二、相关数据结构</rich_text><rich_text>
Linux内核中</rich_text><rich_text foreground="#ff0000">current指针</rich_text><rich_text>作为全局变量，使用非常广泛；例如：进程上下文中获取当前进程ID、任务调度，以及open等文件系统调用中路径搜索等；首先介绍下current结构体：
各个平台、各个内核版本中current的实现可能不同；但原理是一样的。该指针一般定义在具体平台的current.h头文件中，类型为struct task_struct：
1. #define current (get_current())  
2. static inline struct task_struct *get_current(void)  
</rich_text><rich_text weight="heavy">include/linux/sched.h</rich_text><rich_text>
1. struct task_struct {  
2.   ......  
3.   struct thread_info *thread_info;  
4.   struct list_head tasks;  
5.   pid_t pid;  
6.   pid_t tgid;  
7.   uid_t uid,euid,suid,fsuid;  
8.   gid_t gid,egid,sgid,fsgid;  
9.   struct fs_struct *fs;  //本节将大量使用这个  
10.   struct files_struct *files;  
11.   ......  
12. }  

</rich_text><rich_text scale="h3" weight="heavy">1.文件系统注册</rich_text><rich_text>
</rich_text><rich_text weight="heavy">kernel/include/include/fs.h</rich_text><rich_text>
1. struct file_system_type {  
2.   const char *name; //文件系统名字；如:rootfs及ext3等  
3.   int fs_flags;  
4.   int (*get_sb) (struct file_system_type *, int, const char *, void *, struct vfsmount *);  
5.   //安装/挂载文件系统时，会调用；获取超级块。  
6.   void (*kill_sb) (struct super_block *);  
7.   //卸载文件系统时会调用。  
8.   struct module *owner;  
9.   struct file_system_type * next;  
10.   //指向下一个文件系统类型。  
11.   struct list_head fs_supers;  
12.   //同一个文件系统类型中所有超级块组成双向链表。  
13.   struct lock_class_key s_lock_key;  
14.   struct lock_class_key s_umount_key;  
15.   
16.   struct lock_class_key i_lock_key;  
17.   struct lock_class_key i_mutex_key;  
18.   struct lock_class_key i_mutex_dir_key;  
19.   struct lock_class_key i_alloc_sem_key;  
20. };  

</rich_text><rich_text scale="h3" weight="heavy">2.文件系统挂载vfsmount(struct vfsmount)：</rich_text><rich_text>
  本质上，mount操作的过程就是新建一个vfsmount结构，然后将此结构和挂载点(目录项对象)关联。关联之后，目录查找时就能沿着vfsmount挂载点一级级向下查找文件了。
对于每一个mount的文件系统，都由一个vfsmount实例来表示。
</rich_text><rich_text weight="heavy">kernel/include/linux/mount.h</rich_text><rich_text>
1. struct vfsmount {  
2.   struct list_head mnt_hash; //内核通过哈希表对vfsmount进行管理  
3.   struct vfsmount *mnt_parent;  //指向父文件系统对应的vfsmount  
4.   struct dentry *mnt_mountpoint; //指向该文件系统挂载点对应的目录项对象dentry  
5.   struct dentry *mnt_root; //该文件系统对应的设备根目录dentry  
6.   struct super_block *mnt_sb; //指向该文件系统对应的超级块  
7.   struct list_head mnt_mounts;   
8.   struct list_head mnt_child;  //同一个父文件系统中的所有子文件系统通过该字段链接成双联表  
9.   int mnt_flags;  
10.   /* 4 bytes hole on 64bits arches */  
11.   const char *mnt_devname;  /* Name of device e.g. /dev/dsk/hda1 */  
12.   struct list_head mnt_list;  //所有已挂载文件系统的vfsmount结构通过该字段链接在一起  
13.   struct list_head mnt_expire;  /* link in fs-specific expiry list */  
14.   struct list_head mnt_share;   /* circular list of shared mounts */  
15.   struct list_head mnt_slave_list;/* list of slave mounts */  
16.   struct list_head mnt_slave;   /* slave list entry */  
17.   struct vfsmount *mnt_master;  /* slave is on master-&gt;mnt_slave_list */  
18.   struct mnt_namespace *mnt_ns; /* containing namespace */  
19.   int mnt_id;           /* mount identifier */  
20.   int mnt_group_id;     /* peer group identifier */  
21.   /* 
22.   * We put mnt_count &amp; mnt_expiry_mark at the end of struct vfsmount 
23.   * to let these frequently modified fields in a separate cache line 
24.   * (so that reads of mnt_flags wont ping-pong on SMP machines) 
25.   */  
26.   atomic_t mnt_count;  
27.   int mnt_expiry_mark;      /* true if marked for expiry */  
28.   int mnt_pinned;  
29.   int mnt_ghosts;  
30.   /* 
31.   * This value is not stable unless all of the mnt_writers[] spinlocks 
32.   * are held, and all mnt_writer[]s on this mount have 0 as their -&gt;count 
33.   */  
34.   atomic_t __mnt_writers;  
35. };  

</rich_text><rich_text scale="h3" weight="heavy">3.超级块(struct super_bloc)：</rich_text><rich_text>
</rich_text><rich_text weight="heavy">kernel/include/linux/fs.h</rich_text><rich_text>
1. struct super_block {  
2.   struct list_head  s_list;     /* Keep this first */  
3.   dev_t         s_dev;      /* search index; _not_ kdev_t */  
4.   unsigned long     s_blocksize;  
5.   unsigned char     s_blocksize_bits;  
6.   unsigned char     s_dirt;  
7.   unsigned long long    s_maxbytes; /* Max file size */  
8.   struct file_system_type   *s_type; //文件系统类型  
9.   //(kernel/include/linux/fs.h,struct file_system_type)  
10.   const struct super_operations *s_op;  
11.   struct dquot_operations   *dq_op;  
12.   struct quotactl_ops   *s_qcop;  
13.   const struct export_operations *s_export_op;  
14.   unsigned long     s_flags;  
15.   unsigned long     s_magic;  
16.   struct dentry     *s_root;  //超级块要指向目录项对象  
17.   struct rw_semaphore   s_umount;  
18.   struct mutex      s_lock;  
19.   int           s_count;  
20.   int           s_need_sync_fs;  
21.   atomic_t      s_active;  
22. #ifdef CONFIG_SECURITY  
23.   void                    *s_security;  
24. #endif  
25.   struct xattr_handler  **s_xattr;  
26.   
27.   struct list_head  s_inodes;   /* all inodes */  
28.   struct list_head  s_dirty;    /* dirty inodes */  
29.   struct list_head  s_io;       /* parked for writeback */  
30.   struct list_head  s_more_io;  /* parked for more writeback */  
31.   struct hlist_head s_anon;//哈希表头       /* anonymous dentries for (nfs) exporting */  
32.   struct list_head  s_files;  
33.   /* s_dentry_lru and s_nr_dentry_unused are protected by dcache_lock */  
34.   struct list_head  s_dentry_lru;   /* unused dentry lru */  
35.   int           s_nr_dentry_unused; /* # of dentry on lru */  
36.   
37.   struct block_device   *s_bdev;  
38.   struct mtd_info       *s_mtd;  
39.   struct list_head  s_instances;  
40.   struct quota_info s_dquot;    /* Diskquota specific options */  
41.   
42.   int           s_frozen;  
43.   wait_queue_head_t s_wait_unfrozen;  
44.   
45.   char s_id[32];                /* Informational name */  
46.   
47.   void          *s_fs_info; /* Filesystem private info */  
48.   fmode_t           s_mode;  
49.   
50.   /* 
51.   * The next field is for VFS *only*. No filesystems have any business 
52.   * even looking at it. You had been warned. 
53.   */  
54.   struct mutex s_vfs_rename_mutex;  /* Kludge */  
55.   
56.   /* Granularity of c/m/atime in ns.Cannot be worse than a second */  
57.   u32          s_time_gran;  
58.   
59.   /* 
60.   * Filesystem subtype.  If non-empty the filesystem type field 
61.   * in /proc/mounts will be &quot;type.subtype&quot; 
62.   */  
63.   char *s_subtype;  
64.   
65.   /* 
66.   * Saved mount options for lazy filesystems using 
67.   * generic_show_options() 
68.   */  
69.   char *s_options;  
70.   
71.   /* 
72.   * storage for asynchronous operations 
73.   */  
74.   struct list_head s_async_list;  
75. };  

</rich_text><rich_text scale="h3" weight="heavy">4.目录索引节点(struct inode)：</rich_text><rich_text>
</rich_text><rich_text weight="heavy">kernel/include/linux/fs.h</rich_text><rich_text>
1. struct inode {  
2.   struct hlist_node i_hash; //哈希表节点  
3.   struct list_head  i_list;  
4.   struct list_head  i_sb_list;  
5.   struct list_head  i_dentry;  
6.   unsigned long     i_ino;  
7.   atomic_t      i_count;  
8.   unsigned int      i_nlink;  
9.   uid_t         i_uid;  
10.   gid_t         i_gid;  
11.   dev_t         i_rdev;  
12.   u64           i_version;  
13.   loff_t            i_size;  
14. #ifdef __NEED_I_SIZE_ORDERED  
15.   seqcount_t        i_size_seqcount;  
16. #endif  
17.   struct timespec       i_atime;  
18.   struct timespec       i_mtime;  
19.   struct timespec       i_ctime;  
20.   unsigned int      i_blkbits;  
21.   blkcnt_t      i_blocks;  
22.   unsigned short          i_bytes;  
23.   umode_t           i_mode;  
24.   spinlock_t        i_lock; /* i_blocks, i_bytes, maybe i_size */  
25.   struct mutex      i_mutex;  
26.   struct rw_semaphore   i_alloc_sem;  
27.   const struct inode_operations *i_op;  
28.   const struct file_operations  *i_fop; /* former -&gt;i_op-&gt;default_file_ops */  
29.   struct super_block    *i_sb;  
30.   struct file_lock  *i_flock;  
31.   struct address_space  *i_mapping;  
32.   struct address_space  i_data;  
33. #ifdef CONFIG_QUOTA  
34.   struct dquot      *i_dquot[MAXQUOTAS];  
35. #endif  
36.   struct list_head  i_devices;  
37.   union {  
38.     struct pipe_inode_info  *i_pipe;  
39.     struct block_device *i_bdev;  
40.     struct cdev     *i_cdev;  
41.   };  
42.   int           i_cindex;  
43.   
44.   __u32         i_generation;  
45.   
46. #ifdef CONFIG_DNOTIFY  
47.   unsigned long     i_dnotify_mask; /* Directory notify events */  
48.   struct dnotify_struct *i_dnotify; /* for directory notifications */  
49. #endif  
50.   
51. #ifdef CONFIG_INOTIFY  
52.   struct list_head  inotify_watches; /* watches on this inode */  
53.   struct mutex      inotify_mutex;  /* protects the watches list */  
54. #endif  
55.   
56.   unsigned long     i_state;  
57.   unsigned long     dirtied_when;   /* jiffies of first dirtying */  
58.   
59.   unsigned int      i_flags;  
60.   
61.   atomic_t      i_writecount;  
62. #ifdef CONFIG_SECURITY  
63.   void          *i_security;  
64. #endif  
65.   void          *i_private; /* fs or device private pointer */  
66. };  

</rich_text><rich_text scale="h3" weight="heavy">5.目录项对象(struct dentry)：</rich_text><rich_text>
</rich_text><rich_text weight="heavy">kernel/include/linux/dcache.h</rich_text><rich_text>
1. struct dentry {  
2.   atomic_t d_count;  
3.   unsigned int d_flags;     /* protected by d_lock */  
4.   spinlock_t d_lock;        /* per dentry lock */  
5.   int d_mounted;  
6.   struct inode *d_inode; //目录项对象与目录索引的关联          
7.   /* Where the name belongs to - NULL is 
8.   * negative */  
9.   /* 
10.   * The next three fields are touched by __d_lookup.  Place them here 
11.   * so they all fit in a cache line. 
12.   */  
13.   struct hlist_node d_hash; //哈希表节点 /* lookup hash list */  
14.   struct dentry *d_parent; //目录项对象的父亲   /* parent directory */  
15.   struct qstr d_name; //d_name.name这个是文件名，目录对象与目录名的关联  
16.   
17.   struct list_head d_lru;       /* LRU list */  
18.   /* 
19.   * d_child and d_rcu can share memory 
20.   */  
21.   union {  
22.     struct list_head d_child;   /* child of parent list */  
23.     struct rcu_head d_rcu;  
24.   } d_u;  
25.   struct list_head d_subdirs;   /* our children */  
26.   struct list_head d_alias; /* inode alias list */  
27.   unsigned long d_time;     /* used by d_revalidate */  
28.   struct dentry_operations *d_op;  
29.   struct super_block *d_sb; //指向文件系统的超级块/* The root of the dentry tree */  
30.   void *d_fsdata;           /* fs-specific data */  
31.   
32.   unsigned char d_iname[DNAME_INLINE_LEN_MIN];  /* small names */  
33. };  
其他：
</rich_text><rich_text weight="heavy">include/linux/fs.h</rich_text><rich_text>
1. struct file {  
2.   /* 
3.   * fu_list becomes invalid after file_free is called and queued via 
4.   * fu_rcuhead for RCU freeing 
5.   */  
6.   union {  
7.     struct list_head    fu_list;  
8.     struct rcu_head     fu_rcuhead;  
9.   } f_u;  
10.   struct path       f_path;  //重要！！！记录挂载信息和目录项信息  
11. #define f_dentry    f_path.dentry  
12. #define f_vfsmnt    f_path.mnt  
13.   const struct file_operations  *f_op;  
14.   atomic_long_t     f_count;  
15.   unsigned int      f_flags;  
16.   fmode_t           f_mode;  
17.   loff_t            f_pos;  
18.   struct fown_struct    f_owner;  
19.   const struct cred *f_cred;  
20.   struct file_ra_state  f_ra;  
21.   
22.   u64           f_version;  
23. #ifdef CONFIG_SECURITY  
24.   void          *f_security;  
25. #endif  
26.   /* needed for tty driver, and maybe others */  
27.   void          *private_data;  
28.   
29. #ifdef CONFIG_EPOLL  
30.   /* Used by fs/eventpoll.c to link all the hooks to this file */  
31.   struct list_head  f_ep_links;  
32.   spinlock_t        f_ep_lock;  
33. #endif /* #ifdef CONFIG_EPOLL */  
34.   struct address_space  *f_mapping;  
35. #ifdef CONFIG_DEBUG_WRITECOUNT  
36.   unsigned long f_mnt_write_state;  
37. #endif  
38. };  
</rich_text><rich_text weight="heavy">include/linux/fs_struct.h</rich_text><rich_text>
1. struct fs_struct {  
2.   atomic_t count;  
3.   rwlock_t lock;  
4.   int umask;  
5.   struct path root, pwd; //重要！！！记录挂载信息和目录项信息  
6. };  
</rich_text><rich_text weight="heavy">include/linux/namei.h</rich_text><rich_text>
1. struct nameidata {  
2.   struct path   path;  //重要！！！记录挂载信息和目录项信息  
3.   struct qstr   last;  //重要！！！记录目录名  
4.   unsigned int  flags;  
5.   int       last_type;  
6.   unsigned  depth;  
7.   char *saved_names[MAX_NESTED_LINKS + 1];  
8.   
9.   /* Intent data */  
10.   union {  
11.     struct open_intent open;  
12.   } intent;  
13. };  
</rich_text><rich_text weight="heavy">include/linux/path.h</rich_text><rich_text>
1. struct path {  
2.   struct vfsmount *mnt; //重要！！！记录文件系统挂载信息  
3.   struct dentry *dentry;  //重要！！！记录目录项信息  
4. };  
</rich_text><rich_text weight="heavy">include/linux/dcache.h</rich_text><rich_text>
1. struct qstr {  
2.   unsigned int hash;  
3.   unsigned int len;  
4.   const unsigned char *name;//重要！！！目录/文件名字，如&quot;/&quot;,&quot;tank1&quot;等具体的文件名  
5. };  

</rich_text><rich_text scale="h2" weight="heavy">三、注册/创建、安装/挂载rootfs，并调用set_fs_root设置系统current的根文件系统为rootfs</rich_text><rich_text>
过程：
第一步：建立rootfs文件系统；
第二步：调用其get_sb函数(对于rootfs这种内存/伪文件系统是get_sb_nodev，实际文件系统比如ext2等是get_sb_bdev)、建立超级块(包含目录项和i节点)；
第三步：挂载该文件系统(该文件系统的挂载点指向该文件系统超级块的根目录项)；
第四步：将系统current的根文件系统和根目录设置为rootfs和其根目录。
</rich_text><rich_text weight="heavy">kernel/init/main.c</rich_text><rich_text>
1. asmlinkage void __init start_kernel(void)  
2. {  
3.   setup_arch(&amp;command_line);//解析uboot命令行，实际文件系统挂载需要  
4.   parse_args(&quot;Booting kernel&quot;, static_command_line, __start___param,  
5.            __stop___param - __start___param,  
6.            &amp;unknown_bootoption);  
7.   vfs_caches_init(num_physpages);  
8. }  
</rich_text><rich_text weight="heavy">kernel/fs/dcache.c</rich_text><rich_text>
1. void __init vfs_caches_init(unsigned long mempages)  
2. {  
3.   mnt_init();  
4.   bdev_cache_init(); //块设备文件创建  
5.   chrdev_init();//字符设备文件创建  
6. }  
</rich_text><rich_text weight="heavy">kernel/fs/namespace.c</rich_text><rich_text>
1. void __init mnt_init(void)  
2. {  
3.   init_rootfs(); //向内核注册rootfs  
4.   init_mount_tree();//重要！！！rootfs根目录的建立以及rootfs文件系统的挂载；设置系统current根目录和根文件系统为rootfs  
5. }  

下边分两步：
</rich_text><rich_text weight="heavy">1.向内核注册rootfs虚拟文件系统init_rootfs</rich_text><rich_text>
</rich_text><rich_text weight="heavy">kernel/fs/ramfs/inode.c</rich_text><rich_text>
1. int __init init_rootfs(void)  
2. {  
3.   err = register_filesystem(&amp;rootfs_fs_type);  
4. }  
5. static struct file_system_type rootfs_fs_type = {  
6.   .name     = &quot;rootfs&quot;,  
7.   .get_sb       = rootfs_get_sb,  
8.   .kill_sb  = kill_litter_super,  
9. };  

</rich_text><rich_text weight="heavy">2.建立rootfs的根目录，并将rootfs挂载到自己的根目录；设置系统current根目录和根文件系统</rich_text><rich_text>
</rich_text><rich_text weight="heavy">kernel/fs/namespace.c</rich_text><rich_text>
1. static void __init init_mount_tree(void)  
2. {  
3.   struct vfsmount *mnt;  
4.   struct mnt_namespace *ns;  
5.   struct path root;  
6.   //创建rootfs的vfsmount结构，建立rootfs的超级块、并将rootfs挂载到自己的根目录。  
7.   /* 
8.   mnt-&gt;mnt_mountpoint = mnt-&gt;mnt_root = dget(sb-&gt;s_root)，而该mnt和自己的sb是关联的； 
9.   所以，是把rootfs文件系统挂载到了自己对应的超级块的根目录上。 
10.   这里也是实现的关键：一般文件系统的挂载是调用do_mount-&gt;do_new_mount而该函数中首先调用do_kern_mount，这时mnt-&gt;mnt_mountpoint = mnt-&gt;mnt_root；但后边 
11.   它还会调用do_add_mount-&gt;graft_tree-&gt;attach_recursive_mnt如下代码mnt_set_mountpoint(dest_mnt, dest_dentry, source_mnt)改变了其挂载点！！！ 
12.   */  
13.   mnt = do_kern_mount(&quot;rootfs&quot;, 0, &quot;rootfs&quot;, NULL);  
14.   list_add(&amp;mnt-&gt;mnt_list, &amp;ns-&gt;list);  
15.   ns-&gt;root = mnt; //将创建好的mnt加入系统当前  
16.   mnt-&gt;mnt_ns = ns;  
17.   
18.   init_task.nsproxy-&gt;mnt_ns = ns; //设置进程的命名空间  
19.   get_mnt_ns(ns);  
20.   
21.   root.mnt = ns-&gt;root; //文件系统为rootfs，相当与root.mnt = mnt;  
22.   root.dentry = ns-&gt;root-&gt;mnt_root;//目录项为根目录项，相当与root.dentry = mnt-&gt;mnt_root;  
23.   
24.   //设置系统current的pwd目录和文件系统  
25.   set_fs_pwd(current-&gt;fs, &amp;root);  
26.   //设置系统current根目录,根文件系统。这个是关键！！！整个内核代码最多只有两处调用  
27.   set_fs_root(current-&gt;fs, &amp;root);    
28. }  
以下着重分析do_kern_mount函数，它实现了rootfs在自己根目录上的挂载：
</rich_text><rich_text weight="heavy">kernel/fs/super.c</rich_text><rich_text>
1. struct vfsmount *  
2. do_kern_mount(const char *fstype, int flags, const char *name, void *data)  
3. {  
4.   mnt = vfs_kern_mount(type, flags, name, data);  
5.   return mnt;  
6. }  
</rich_text><rich_text weight="heavy">kernel/fs/super.c</rich_text><rich_text>
1. struct vfsmount *  
2. vfs_kern_mount(struct file_system_type *type, int flags, const char *name, void *data)  
3. {  
4.   mnt = alloc_vfsmnt(name); //建立并填充vfsmount  
5.   error = type-&gt;get_sb(type, flags, name, data, mnt);//为文件系统建立并填充超级块(主要是其dentry和inode)，建立rootfs根目录  
6.   mnt-&gt;mnt_mountpoint = mnt-&gt;mnt_root; //文件系统挂载点目录,其实就是刚才建立的”/”目录。挂载点就是自己！！！！  
7.   mnt-&gt;mnt_parent = mnt; //父对象是自己！！！！  
8.   return mnt;  
9. }  
</rich_text><rich_text weight="heavy">kernel/fs/ramfs/inode.c</rich_text><rich_text>
1. static int rootfs_get_sb(struct file_system_type *fs_type,  
2.     int flags, const char *dev_name, void *data, struct vfsmount *mnt)  
3. {  
4.   return get_sb_nodev(fs_type, flags|MS_NOUSER, data, ramfs_fill_super,  
5.                 mnt);  
6. }  
</rich_text><rich_text weight="heavy">kernel/fs/super.c</rich_text><rich_text>
1. int get_sb_nodev(struct file_system_type *fs_type,  
2.     int flags, void *data,  
3.     int (*fill_super)(struct super_block *, void *, int),  
4.     struct vfsmount *mnt)  
5. {  
6.   struct super_block *s = sget(fs_type, NULL, set_anon_super, NULL);  
7.   //在内存中分配一个超级块  
8.   error = fill_super(s, data, flags &amp; MS_SILENT ? 1 : 0);  
9.   //执行回调，填充超级块，并建立根目录项及对应i节点  
10.   /* 
11.   kernel/fs/ramfs/inode.c 
12.   static int ramfs_fill_super(struct super_block * sb, void * data, int silent) 
13.   { 
14.     struct inode * inode; 
15.     struct dentry * root; 
16.     sb-&gt;s_maxbytes = MAX_LFS_FILESIZE; 
17.     sb-&gt;s_blocksize = PAGE_CACHE_SIZE; 
18.     sb-&gt;s_blocksize_bits = PAGE_CACHE_SHIFT; 
19.     sb-&gt;s_magic = RAMFS_MAGIC; 
20.     sb-&gt;s_op = &amp;ramfs_ops; 
21.     //static const struct super_operations ramfs_ops; 
22.     sb-&gt;s_time_gran = 1; 
23.     //建立根目录索引节点，我们最终的目标是要找到目录项对象关联的索引节点。 
24.     //根目录索引节点会有自己的ops。 
25.     inode = ramfs_get_inode(sb, S_IFDIR | 0755, 0);  
26.     //ramfs_get_inode 
27.     kernel/fs/ramfs/inode.c 
28.     struct inode *ramfs_get_inode(struct super_block *sb, int mode, dev_t dev) 
29.     { 
30.       struct inode * inode = new_inode(sb); 
31.       switch (mode &amp; S_IFMT) {  //判断文件类型 
32.         default: 
33.       init_special_inode(inode, mode, dev); 
34.       //init_special_inode 
35.           void init_special_inode(struct inode *inode, umode_t mode, dev_t rdev) 
36.           { 
37.         inode-&gt;i_mode = mode; 
38.         if (S_ISCHR(mode)) {//字符设备文件 
39.           inode-&gt;i_fop = &amp;def_chr_fops; 
40.           inode-&gt;i_rdev = rdev; 
41.         } else if (S_ISBLK(mode)) {//块设备文件 
42.           inode-&gt;i_fop = &amp;def_blk_fops; 
43.           inode-&gt;i_rdev = rdev; 
44.         } else if (S_ISFIFO(mode)) 
45.           inode-&gt;i_fop = &amp;def_fifo_fops; 
46.         else if (S_ISSOCK(mode)) //网络设备文件 
47.           inode-&gt;i_fop = &amp;bad_sock_fops; 
48.         else 
49.           printk(KERN_DEBUG &quot;init_special_inode: bogus i_mode (%o) for&quot; 
50.                   &quot; inode %s:%lu\n&quot;, mode, inode-&gt;i_sb-&gt;s_id, 
51.                   inode-&gt;i_ino); 
52.            } 
53.           //init_special_inode end 
54.           break; 
55.         case S_IFREG: //普通文件 
56.           inode-&gt;i_op = &amp;ramfs_file_inode_operations;  //索引节点的操作方法 
57.           inode-&gt;i_fop = &amp;ramfs_file_operations;  //缺省普通文件的操作方法 
58.           break; 
59.         case S_IFDIR:  //目录文件 
60.           inode-&gt;i_op = &amp;ramfs_dir_inode_operations; 
61.           //ramfs_dir_inode_operations 
62.           static const struct inode_operations ramfs_dir_inode_operations; 
63.           kernel/include/linux/fs.h 
64.           struct inode_operations { 
65.             int (*create) (struct inode *,struct dentry *,int, struct nameidata *); 
66.             int (*mkdir) (struct inode *,struct dentry *,int); 
67.         int (*rmdir) (struct inode *,struct dentry *); 
68.         int (*mknod) (struct inode *,struct dentry *,int,dev_t); 
69.           } 
70.           //ramfs_dir_inode_operations end 
71.           inode-&gt;i_fop = &amp;simple_dir_operations;  //目录文件的操作方法 
72.           inc_nlink(inode); 
73.           break; 
74.       } 
75.     } 
76.     //ramfs_get_inode end 
77.     //建立根目录目录对象，目录项对象的存在主要是为了我们进行路径的查找。 
78.     root = d_alloc_root(inode);    
79.     //d_alloc_root 
80.     kernel/fs/dcache.c 
81.     struct dentry * d_alloc_root(struct inode * root_inode) 
82.     { 
83.       struct dentry *res = NULL; 
84.       static const struct qstr name = { .name = &quot;/&quot;, .len = 1 }; 
85.       res = d_alloc(NULL, &amp;name); 
86.       res-&gt;d_sb = root_inode-&gt;i_sb; //指向该文件系统的超级块 
87.       res-&gt;d_parent = res;  //根目录的父亲是它自己 
88.       d_instantiate(res, root_inode); //关联 dentry 和 inode 
89.     } 
90.     //d_alloc_root end 
91.     sb-&gt;s_root = root;  //超级块的s_root指向刚建立的根目录对象。 
92.   } 
93.   */  
94.   return simple_set_mnt(mnt, s); //关联超级块(包含目录项dentry和i节点inode)和vfsmount  
95. }  
</rich_text><rich_text weight="heavy">kernel/fs/namespace.c</rich_text><rich_text>
1. int simple_set_mnt(struct vfsmount *mnt, struct super_block *sb)  
2. {  
3.   printk(&quot;TK-------_&gt;&gt;&gt;&gt;&gt;&gt;&gt;namespace.c&gt;&gt;&gt;&gt;simple_set_mnt\n&quot;);//add by tankai  
4.   mnt-&gt;mnt_sb = sb;  //对 mnt_sb超级块指针附值  
5.   mnt-&gt;mnt_root = dget(sb-&gt;s_root); //对mnt_root指向的根目录赋值  
6.   return 0;  
7. }  
至此，rootfs文件系统建立、并且挂载于自己超级块(包括目录项dentry和i节点inod)对应的目录项，设置了系统current根目录和根文件系统、pwd的目录和文件系统。
========================================
释放Initramfs到rootfs；如果Initramfs中有init，这种情况比较特殊、rootfs就是最后系统使用的根文件系统。
而且此时，不需要在单独烧录根文件系统的img；此时，根文件系统就是内核 uImage的一部分。当然，缺陷就是该文件系统运行时的介质是ramdisk即内存盘、它不再与磁盘对应；因此，此时修改根目录下的文件将不被得到保 存。它的内核配置项为：CONFIG_INITRAMFS_SOURCE。实际项目中会经常碰到。
make menuconfig-&gt;General setup-&gt;Initial RAM filesystem and RAM disk(initramfs/initrd) support
 底下的Initramfs source file(s)填写根文件系统的路径，如：../out/target/product/tclm6/root；不填的话，将导致initrd或磁盘文件系统的挂载（因为下边将会看到，内核将找不到“/init”）。
 
对应内核源码：
</rich_text><rich_text weight="heavy">kernel/init/main.c</rich_text><rich_text>
1. static int __init kernel_init(void * unused){  
2.   ......  
3.   do_basic_setup();  //初始化设备驱动，加载静态内核模块；释放Initramfs到rootfs  
4.   /* 
5.   kernel/init/initramfs.c 
6.   rootfs_initcall(populate_rootfs); 
7.   static int __init populate_rootfs(void) 
8.   { 
9.     printk(KERN_INFO &quot;checking if image is initramfs...&quot;); 
10.     err = unpack_to_rootfs((char *)initrd_start, 
11.                         initrd_end - initrd_start, 1); //释放ramdisk到rootfs 
12.   } 
13.   */  
14.   ......  
15.   if (!ramdisk_execute_command)  ramdisk_execute_command = &quot;/init&quot;;  
16.   if (sys_access((const char __user *) ramdisk_execute_command, 0) != 0) {  
17.     ramdisk_execute_command = NULL;  
18.     //如果此时rootfs中没有init，则加载initfd、nfs或磁盘文件系统  
19.     //也即磁盘的文件系统挂载至rootfs的/root目录，并设置系统current对应的根目录项为磁盘根目录项、系统current根文件系统为磁盘文件系统  
20.     //至此，rootfs对于以后所有进程而言、已被隐藏。  
21.     prepare_namespace();   
22.   }  
23.   init_post(); //启动init进程  
24.   ......  
25. }  
看看init_post实现：
1. static noinline int init_post(void)  
2. {  
3.   if (ramdisk_execute_command) {  //Initramfs从这里启动init  
4.     run_init_process(ramdisk_execute_command);  
5.     printk(KERN_WARNING &quot;Failed to execute %s\n&quot;, ramdisk_execute_command);  
6.   }  
7.   //initrd、nfs和磁盘都是从如下启动的init  
8.   if (execute_command) {  
9.     run_init_process(execute_command);  
10.     printk(KERN_WARNING &quot;Failed to execute %s.  Attempting &quot;  
11.                     &quot;defaults...\n&quot;, execute_command);  
12.   }  
13.   //一般执行如下  
14.   run_init_process(&quot;/sbin/init&quot;);  
15.   run_init_process(&quot;/etc/init&quot;);  
16.   run_init_process(&quot;/bin/init&quot;);  
17.   run_init_process(&quot;/bin/sh&quot;);  
18. }  

</rich_text><rich_text scale="h2" weight="heavy">四、挂载实际文件系统至rootfs，并调用set_fs_root设置为系统current的根文件系统</rich_text><rich_text>
下边从uboot启动内核参数的角度来简单说明：
以下三种情况都是将文件系统挂载到rootfs的/root目录，并将系统current的根目录切换为/root、系统current的根文件系统切换为磁盘文件系统。
</rich_text><rich_text weight="heavy">kernel/init/do_mounts.c</rich_text><rich_text>
1. void __init prepare_namespace(void)  
2. {  
3.   if (initrd_load()) //如果挂载initrd并执行成功，则不再挂载磁盘文件系统  
4.     goto out;  
5.   if (saved_root_name[0]) {  
6.     root_device_name = saved_root_name;  
7.     if (!strncmp(root_device_name, &quot;mtd&quot;, 3) ||  
8.         !strncmp(root_device_name, &quot;ubi&quot;, 3)) {  
9.       mount_block_root(root_device_name, root_mountflags); //启动时root=参数，如《四.2》中“root=/dev/mtdblock0”  
10.       goto out;  
11.     }  
12.     ROOT_DEV = name_to_dev_t(root_device_name);  
13.     if (strncmp(root_device_name, &quot;/dev/&quot;, 5) == 0)  
14.       root_device_name += 5;  
15.   }  
16.   mount_root(); //将实际文件系统挂载到rootfs的/root目录  
17. out:  
18.   //sys_mount(&quot;.&quot;, &quot;/&quot;, NULL, MS_MOVE, NULL); 这句话无关紧要，影响理解；屏蔽不影响功能  
19.   sys_chroot(&quot;.&quot;);  //将当前目录(/root)设置为系统current根目录，磁盘文件系统设置为系统current根文件系统。  
20. }  

下边分两步解释mount_root()和sys_chroot(&quot;.&quot;)调用：
</rich_text><rich_text weight="heavy">1.将nfs或磁盘文件系统挂载至rootfs的/root目录（以磁盘为例）</rich_text><rich_text>
1. void __init mount_root(void)  
2. {  
3.   if (mount_nfs_root())  //如果网络文件系统挂载成功，则nfs作为根文件系统  
4.     return;  
5.   //挂载磁盘文件系统为根文件系统  
6.   //在rootfs中建立/dev/root设备文件  
7.   create_dev(&quot;/dev/root&quot;, ROOT_DEV);  //在rootfs中建立/dev/root设备文件，也就是/dev/mtdblock0设备。  
8.   //挂载/dev/root到rootfs的/root目录  
9.   mount_block_root(&quot;/dev/root&quot;, root_mountflags);  
10. }  
11. void __init mount_block_root(char *name, int flags)  
12. {  
13.   int err = do_mount_root(name, p, flags, root_mount_data);    
14. }  
15. static int __init do_mount_root(char *name, char *fs, int flags, void *data)  
16. {  
17.   int err = sys_mount(name, &quot;/root&quot;, fs, flags, data);//将/dev/root挂载到/root  
18.   sys_chdir(&quot;/root&quot;); //系统current-&gt;fs-&gt;pwd为当前目录/root  
19.   ROOT_DEV = current-&gt;fs-&gt;pwd.mnt-&gt;mnt_sb-&gt;s_dev;  
20.   return 0;  
21. }  

</rich_text><rich_text weight="heavy">2.将当前目录/root设置为系统current根目录，磁盘文件系统设置为系统current根文件系统</rich_text><rich_text>
分析sys_chroot(&quot;.&quot;)：见</rich_text><rich_text link="webs http://blog.csdn.net/tankai19880619/article/details/12015305">Linux内核编程之C语言预处理功能与宏</rich_text><rich_text>
</rich_text><rich_text weight="heavy">fs/open.c</rich_text><rich_text>
1. SYSCALL_DEFINE1(chroot, const char __user *, filename)  
2. {  
3.   struct path path;  
4.   error = user_path_dir(filename, &amp;path);  
5.   //这才是完成切换的关键！！！！整个内核代码只有两处调用  
6.   set_fs_root(current-&gt;fs, &amp;path);   
7. }  
</rich_text><rich_text foreground="#ffff00000000">SYSCALL_DEFINE后面的1表示一个参数, const char user* filename;</rich_text><rich_text>
注意，如下情况：rootfs特殊文件系统没有被卸载，他只是隐藏在基于磁盘的根文件系统下了。
initrd作为根文件系统
setenv bootargs root=/dev/ram0 initrd=0x2800000,24M rootfstype=ext2 mem=64M console=ttyAMA0
参数说明：
root：用来指定rootfs的位置。
rootfstype：用来指定文件系统的类型。

nfs作为根文件系统
setenv bootargs root=/dev/nfs nfsroot=192.168.1.7:/opt/yz/nfs,rw ip=192.168.1.160 mem=64M console=ttyAMA0
参数说明：
nfsroot：文件系统在哪台主机的哪个目录下。
ip：指定系统启动之后网卡的ip地址。
flash作为根文件系统
setenv bootargs root=/dev/mtdblock0 mem=16M mtdparts=armflash.1:4M@0x400000(jffs2) macaddr=9854 rootfstype=jffs2 console=ttyAMA0
参数说明：
mtdparts：根文件系统在flash中的位置。
总结：rootfs永远不会被卸载，它只是被隐藏了。在用户空间下，更多地情况是只能见到rootfs这棵大树的一叶，而且还是被安装过文件系统了的。

</rich_text><rich_text scale="h2" weight="heavy">五、其他说明</rich_text><rich_text>
至于在mirco2440下mount出的结果：
1. rootfs on / type rootfs (rw)  
2. /dev/root on / type yaffs (rw,relatime)  
3. none on /proc type proc (rw,relatime)  
4. none on /sys type sysfs (rw,relatime)  
5. none on /proc/bus/usb type usbfs (rw,relatime)  
6. none on /dev type ramfs (rw,relatime)  
7. none on /dev/pts type devpts (rw,relatime,mode=622)  
8. tmpfs on /dev/shm type tmpfs (rw,relatime)  
9. none on /tmp type ramfs (rw,relatime)  
10. none on /var type ramfs (rw,relatime)  
从log中体会一下这个过程：
1. s3c2410-rtc s3c2410-rtc: setting system clock to 2006-04-16 22:15:34 UTC (1145225734)  
2. TK-------&gt;&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;&gt;&gt;&gt;kernel_init&gt;&gt;before&gt;prepare_namespace  
3. ##################################################################################################################  
4. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_name.name is /  
5. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
6. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_name.name is /  
7. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
8. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_name.name is /  
9. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
10. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is rootfs  
11. ##################################################################################################################  
12. ##################################################################################################################  
13. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_name.name is /  
14. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
15. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_name.name is /  
16. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
17. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_name.name is /  
18. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
19. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is rootfs  
20. ##################################################################################################################  
21. TK-------&gt;&gt;&gt;&gt;&gt;init/do_mounts.c&gt;&gt;&gt;&gt;&gt;&gt;prepare_namespace&gt;&gt;before&gt;mount_root  
22. ##################################################################################################################  
23. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_name.name is /  
24. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
25. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_name.name is /  
26. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
27. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_name.name is /  
28. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
29. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is rootfs  
30. ##################################################################################################################  
31. ##################################################################################################################  
32. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_name.name is /  
33. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
34. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_name.name is /  
35. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
36. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_name.name is /  
37. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
38. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is rootfs  
39. ##################################################################################################################  
40. yaffs: dev is 32505859 name is &quot;mtdblock3&quot;  
41. yaffs: passed flags &quot;&quot;  
42. yaffs: Attempting MTD mount on 31.3, &quot;mtdblock3&quot;  
43. yaffs_read_super: isCheckpointed 0  
44. VFS: Mounted root (yaffs filesystem) on device 31:3.  
45. TK-------&gt;&gt;&gt;&gt;&gt;init/do_mounts.c&gt;&gt;&gt;&gt;&gt;&gt;prepare_namespace&gt;&gt;before&gt;sys_mount  
46. ##################################################################################################################  
47. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_name.name is /  
48. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
49. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_name.name is /  
50. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
51. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_name.name is /  
52. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
53. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is rootfs  
54. ##################################################################################################################  
55. ##################################################################################################################  
56. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_name.name is /  
57. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
58. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_name.name is root  
59. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
60. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_name.name is /  
61. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
62. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is yaffs  
63. ##################################################################################################################  
64. TK-------&gt;&gt;&gt;&gt;&gt;init/do_mounts.c&gt;&gt;&gt;&gt;&gt;&gt;prepare_namespace&gt;&gt;before&gt;sys_chroot  
65. ##################################################################################################################  
66. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_name.name is /  
67. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
68. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_name.name is /  
69. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
70. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_name.name is /  
71. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
72. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is rootfs  
73. ##################################################################################################################  
74. ##################################################################################################################  
75. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_name.name is /  
76. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
77. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_name.name is root  
78. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
79. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_name.name is /  
80. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
81. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is yaffs  
82. ##################################################################################################################  
83. TK-------&gt;&gt;&gt;&gt;&gt;fs/open.c&gt;&gt;&gt;&gt;&gt;&gt;SYSCALL_DEFINE1(chroot&gt;&gt;before&gt;set_fs_root  
84. ##################################################################################################################  
85. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_name.name is /  
86. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
87. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_name.name is /  
88. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
89. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_name.name is /  
90. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
91. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is rootfs  
92. ##################################################################################################################  
93. ##################################################################################################################  
94. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_name.name is /  
95. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
96. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_name.name is root  
97. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
98. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_name.name is /  
99. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
100. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is yaffs  
101. ##################################################################################################################  
102. TK-------&gt;&gt;&gt;&gt;&gt;init/do_mounts.c&gt;&gt;&gt;&gt;&gt;&gt;SYSCALL_DEFINE1(chroot&gt;&gt;after&gt;set_fs_root  
103. ##################################################################################################################  
104. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_name.name is /  
105. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
106. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_name.name is root  
107. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
108. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_name.name is /  
109. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
110. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is yaffs  
111. ##################################################################################################################  
112. ##################################################################################################################  
113. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_name.name is /  
114. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
115. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_name.name is root  
116. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
117. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_name.name is /  
118. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
119. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is yaffs  
120. ##################################################################################################################  
121. TK-------&gt;&gt;&gt;&gt;&gt;init/do_mounts.c&gt;&gt;&gt;&gt;&gt;&gt;prepare_namespace&gt;&gt;after&gt;sys_chroot  
122. ##################################################################################################################  
123. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_name.name is /  
124. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
125. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_name.name is root  
126. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
127. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_name.name is /  
128. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
129. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is yaffs  
130. ##################################################################################################################  
131. ##################################################################################################################  
132. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_name.name is /  
133. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
134. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_name.name is root  
135. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
136. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_name.name is /  
137. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
138. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is yaffs  
139. ##################################################################################################################  
140. TK-------&gt;&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;&gt;&gt;&gt;kernel_init&gt;&gt;after&gt;prepare_namespace  
141. ##################################################################################################################  
142. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_name.name is /  
143. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
144. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_name.name is root  
145. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
146. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_name.name is /  
147. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
148. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is yaffs  
149. ##################################################################################################################  
150. ##################################################################################################################  
151. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_name.name is /  
152. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
153. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_name.name is root  
154. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
155. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_name.name is /  
156. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is yaffs  
157. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is yaffs  
158. ##################################################################################################################  
159. Freeing init memory: 156K  
160. [16/Apr/2006:14:15:35 +0000] boa: server version Boa/0.94.13  
161. [16/Apr/2006:14:15:35 +0000] boa: server built Mar 26 2009 at 15:28:42.  
162. [16/Apr/2006:14:15:35 +0000] boa: starting server pid=681, port 80  
163.                           
164. Try to bring eth0 interface up......eth0: link down  
165. Done  
166.   
167. Please press Enter to activate this console.   
168. [root@FriendlyARM /]# mount  
169. rootfs on / type rootfs (rw)  
170. /dev/root on / type yaffs (rw,relatime)  
171. none on /proc type proc (rw,relatime)  
172. none on /sys type sysfs (rw,relatime)  
173. none on /proc/bus/usb type usbfs (rw,relatime)  
174. none on /dev type ramfs (rw,relatime)  
175. none on /dev/pts type devpts (rw,relatime,mode=622)  
176. tmpfs on /dev/shm type tmpfs (rw,relatime)  
177. none on /tmp type ramfs (rw,relatime)  
178. none on /var type ramfs (rw,relatime)  
179. [root@FriendlyARM /]#   
ubuntu下mount出的结果：
1. /dev/sda5 on / type ext3 (rw,errors=remount-ro,commit=0)  
2. proc on /proc type proc (rw,noexec,nosuid,nodev)  
3. sysfs on /sys type sysfs (rw,noexec,nosuid,nodev)  
4. fusectl on /sys/fs/fuse/connections type fusectl (rw)  
5. none on /sys/kernel/debug type debugfs (rw)  
6. none on /sys/kernel/security type securityfs (rw)  
7. udev on /dev type devtmpfs (rw,mode=0755)  
8. devpts on /dev/pts type devpts (rw,noexec,nosuid,gid=5,mode=0620)  
9. tmpfs on /run type tmpfs (rw,noexec,nosuid,size=10%,mode=0755)  
10. none on /run/lock type tmpfs (rw,noexec,nosuid,nodev,size=5242880)  
11. none on /run/shm type tmpfs (rw,nosuid,nodev)  
12. /dev/sda7 on /home type ext3 (rw,commit=0)  
13. binfmt_misc on /proc/sys/fs/binfmt_misc type binfmt_misc (rw,noexec,nosuid,nodev)  
14. rpc_pipefs on /var/lib/nfs/rpc_pipefs type rpc_pipefs (rw)  
15. nfsd on /proc/fs/nfsd type nfsd (rw)  
16. gvfs-fuse-daemon on /home/tankai/.gvfs type fuse.gvfs-fuse-daemon (rw,nosuid,nodev,user=tankai)  
     一个还显示rootfs，一个干脆不显示。这个无关紧要。可能micro2440中执行mount命令还会将系统current根目录的父节点也显示出 来；而ubuntu下不会再去关心系统current根目录的父节点。但所有的文件搜索，内核都是从系统current根目录开始向下查找的，因此、可以 说我们不能在访问rootfs中除了作为系统current根文件系统之外的其他任何节点。

</rich_text><rich_text scale="h2" weight="heavy">六、测试用例，说明系统current的文件系统布局，不管在那个目录、其根都不会改变：</rich_text><rich_text>
</rich_text><rich_text weight="heavy">hello.c</rich_text><rich_text>
1. #include &lt;linux/syscalls.h&gt;  
2. #include &lt;linux/slab.h&gt;  
3. #include &lt;linux/sched.h&gt;  
4. #include &lt;linux/smp_lock.h&gt;  
5. #include &lt;linux/init.h&gt;  
6. #include &lt;linux/kernel.h&gt;  
7. #include &lt;linux/acct.h&gt;  
8. #include &lt;linux/capability.h&gt;  
9. #include &lt;linux/cpumask.h&gt;  
10. #include &lt;linux/module.h&gt;  
11. #include &lt;linux/sysfs.h&gt;  
12. #include &lt;linux/seq_file.h&gt;  
13. #include &lt;linux/mnt_namespace.h&gt;  
14. #include &lt;linux/namei.h&gt;  
15. #include &lt;linux/security.h&gt;  
16. #include &lt;linux/mount.h&gt;  
17. #include &lt;linux/ramfs.h&gt;  
18. #include &lt;linux/log2.h&gt;  
19. #include &lt;linux/idr.h&gt;  
20. #include &lt;asm/uaccess.h&gt;  
21. #include &lt;asm/unistd.h&gt;  
22. //#include &quot;pnode.h&quot;  
23. //#include &quot;internal.h&quot;  
24.   
25.   
26. #include &lt;linux/init.h&gt;  
27. #include &lt;linux/module.h&gt;  
28. MODULE_LICENSE(&quot;Dual BSD/GPL&quot;);  
29.   
30. static int hello_init(void)  
31. {  
32.     printk(KERN_ALERT &quot;Hello, world\n&quot;);  
33.     printk(&quot;TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_name.name is %s\n&quot;,current-&gt;fs-&gt;root.dentry-&gt;d_name.name);  
34.     printk(&quot;TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_sb-&gt;s_type-&gt;name is %s\n&quot;,current-&gt;fs-&gt;root.dentry-&gt;d_sb-&gt;s_type-&gt;name);  
35.     printk(&quot;TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_name.name is %s\n&quot;,current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_name.name);  
36.     printk(&quot;TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is %s\n&quot;,current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name);  
37.     printk(&quot;TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_name.name is %s\n&quot;,current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_name.name);  
38.     printk(&quot;TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is %s\n&quot;,current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name);  
39.     printk(&quot;TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is %s\n&quot;,current-&gt;fs-&gt;root.mnt-&gt;mnt_sb-&gt;s_type-&gt;name);  
40.     printk(&quot;########################################################################################\n&quot;);  
41.     printk(&quot;TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_name.name is %s\n&quot;,current-&gt;fs-&gt;pwd.dentry-&gt;d_name.name);  
42.     printk(&quot;TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_sb-&gt;s_type-&gt;name is %s\n&quot;,current-&gt;fs-&gt;pwd.dentry-&gt;d_sb-&gt;s_type-&gt;name);  
43.     printk(&quot;TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_name.name is %s\n&quot;,current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_name.name);  
44.     printk(&quot;TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is %s\n&quot;,current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name);  
45.     printk(&quot;TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_name.name is %s\n&quot;,current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_name.name);  
46.     printk(&quot;TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is %s\n&quot;,current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name);  
47.     printk(&quot;TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is %s\n&quot;,current-&gt;fs-&gt;pwd.mnt-&gt;mnt_sb-&gt;s_type-&gt;name);  
48.     return 0;  
49. }  
50.   
51. static void hello_exit(void)  
52. {  
53.     printk(KERN_ALERT&quot;Goodbye, cruel world\n&quot;);  
54. }  
55.   
56. module_init(hello_init);  
57. module_exit(hello_exit);  

</rich_text><rich_text weight="heavy">Makefile</rich_text><rich_text>
1. ifneq ($(KERNELRELEASE),)  
2. obj-m:=hello.o  
3. else  
4. KERNELDIR:=/home/android2.3/android2.3_kernel/  
5. PWD:=$(shell pwd)  
6. default:  
7.     $(MAKE) -C $(KERNELDIR)  M=$(PWD) modules  
8. clean:  
9.     rm -rf *.o *.mod.c *.mod.o *.ko  
10. endif  
make生成hello.ko
先看下文件系统布局：
</rich_text><rich_text weight="heavy">mount</rich_text><rich_text>
1. rootfs / rootfs ro 0 0  
2. tmpfs /dev tmpfs rw,mode=755 0 0  
3. devpts /dev/pts devpts rw,mode=600 0 0  
4. proc /proc proc rw 0 0  
5. sysfs /sys sysfs rw 0 0  
6. none /acct cgroup rw,cpuacct 0 0  
7. tmpfs /mnt/asec tmpfs rw,mode=755,gid=1000 0 0  
8. tmpfs /mnt/obb tmpfs rw,mode=755,gid=1000 0 0  
9. none /dev/cpuctl cgroup rw,cpu 0 0  
10. /dev/block/mtdblock0 /system yaffs2 rw 0 0  
11. /dev/block/mtdblock1 /data yaffs2 rw,nosuid,nodev 0 0  
12. /dev/block/mtdblock2 /cache yaffs2 rw,nosuid,nodev 0 0  
13. /dev/block/vold/179:0 /mnt/sdcard vfat rw,dirsync,nosuid,nodev,noexec,uid=1000,gid=1015,fmask=0702,dmask=0702,allow_utime=0020,codepage=cp437,iocharset=iso8859-1,shortname=mixed,utf8,errors=remount-ro 0 0  
14. /dev/block/vold/179:0 /mnt/secure/asec vfat rw,dirsync,nosuid,nodev,noexec,uid=1000,gid=1015,fmask=0702,dmask=0702,allow_utime=0020,codepage=cp437,iocharset=iso8859-1,shortname=mixed,utf8,errors=remount-ro 0 0  
15. tmpfs /mnt/sdcard/.android_secure tmpfs ro,size=0k,mode=000 0 0  

</rich_text><rich_text weight="heavy">1.放入/data/下运行insmod hello.ko rmmod hello.ko</rich_text><rich_text>
1. Hello, world  
2. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_name.name is /  
3. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
4. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_name.name is /  
5. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
6. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_name.name is /  
7. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
8. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is rootfs  
9. ########################################################################################  
10. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_name.name is /  
11. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_sb-&gt;s_type-&gt;name is yaffs2  
12. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_name.name is data  
13. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
14. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_name.name is /  
15. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is yaffs2  
16. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is yaffs2  
17. Goodbye, cruel world  

</rich_text><rich_text weight="heavy">2.放在/sdcard/tank/下运行insmod hello.ko rmmod hello.ko</rich_text><rich_text>  
1. Hello, world
2. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_name.name is /  
3. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.dentry-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
4. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_name.name is /  
5. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
6. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_name.name is /  
7. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
8. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;root.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is rootfs  
9. ########################################################################################  
10. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_name.name is tank  
11. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.dentry-&gt;d_sb-&gt;s_type-&gt;name is vfat  
12. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_name.name is sdcard  
13. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_mountpoint-&gt;d_sb-&gt;s_type-&gt;name is rootfs  
14. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_name.name is /  
15. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_root-&gt;d_sb-&gt;s_type-&gt;name is vfat  
16. TK----&gt;&gt;&gt;&gt;init/main.c&gt;&gt;&gt;kernel_init&gt;&gt;&gt;&gt;current-&gt;fs-&gt;pwd.mnt-&gt;mnt_sb-&gt;s_type-&gt;name is vfat  
17. Goodbye, cruel world  
由此证明；current-&gt;fs-&gt;root就是系统承认的根文件系统。
</rich_text></node><node name="《Linux启动过程分析》之区别Initramfs与initrd " prog_lang="custom-colors" readonly="False" tags="" unique_id="93"><rich_text>之前</rich_text><rich_text link="webs http://blog.csdn.net/tankai19880619/article/details/12093239">《Linux启动过程分析》内核挂载根文件系统</rich_text><rich_text>一文，分析的rootfs、其实就是解决了Linux的VFS架构下初始挂载点的创建问题。
  下边说的Initramfs/initrd则是填充（仅仅是释放文件到rootfs根目录）/扩充（通过挂载其他文件系统类型到rootfs指定目录）rootfs的关键，以保证Linux系统的后续启动。
  另外一个好处是，这样配置可以将一些驱动编译成内核模块、从而减小内核img的开销。
一、简介
1.initrd
   在早期的linux系统中，一般只有硬盘或者软盘被用来作为linux根文件系统的存储设备，因此也就很容易把这些设备的驱动程序集成到内核中。但是现在 的嵌入式系统中可能将根文件系统保存到各种存储设备上，包括scsi、sata，u-disk等等。因此把这些设备的驱动代码全部编译到内核中显然就不是 很方便。
  为了解决这一矛盾，于是出现了基于ramdisk的initrd( bootloader initialized RAM disk  )。Initrd是一个被压缩过的小型根目录，这个目录中包含了启动阶段中必须的驱动模块，可执行文件和启动脚本。当系统启动的时 候，bootloader会把initrd文件读到内存中，然后把initrd文件在内存中的起始地址和大小传递给内核。内核在启动初始化过程中会解压缩 initrd文件，然后将解压后的initrd挂载为根目录，然后执行根目录中的/linuxrc脚本（cpio格式的initrd为/init,而 image格式的initrd&lt;也称老式块设备的initrd或传统的文件镜像格式的initrd&gt;为/initrc），您就可以在这个脚本 中加载realfs（真实文件系统）存放设备的驱动程序以及在/dev目录下建立必要的设备节点。这样，就可以mount真正的根目录，并切换到这个根目 录中来。
2.Initramfs
   在linux2.5中出现了initramfs，它的作用和initrd类似，只是和内核编译成一个文件(该initramfs是经过gzip压缩后的 cpio格式的数据文件)，该cpio格式的文件被链接进了内核中特殊的数据段.init.ramfs上，其中全局变量 __initramfs_start和__initramfs_end分别指向这个数据段的起始地址和结束地址。内核启动时会对.init.ramfs段 中的数据进行解压，然后使用它作为临时的根文件系统。
二、区别
1.内核配置
make menuconfig
支持Initramfs的内核配置：
General setup-&gt;Initial RAM filesystem and RAM disk(initramfs/initrd) support
General setup-&gt;Initramfs source file(s)
填写根文件系统的具体路径，如：../out/target/product/tclm6/root
这时，根文件系统编入内核vmlinux\zImage\uImage。
支持initrd的内核配置（需要内核支持内存盘驱动）：
General setup-&gt;Initial RAM filesystem and RAM disk(initramfs/initrd) support
RamDisk内存盘驱动
Device Drivers-&gt;Block devices-&gt;RAM block device support
启动参数
Boot options-&gt;Default kernel command string
填写如下：mem=32M console=ttySAC0 root=/dev/ram initrd=0xc1000000,0x00600000 ramdisk_size=8192 rw</rich_text></node></node><node name="linux命名空间" prog_lang="custom-colors" readonly="False" tags="" unique_id="28"><rich_text>    在linux中，命名空间主要提供一种轻量级的资源虚拟，可以从不同方面来查看系统的全局属性，不同命名空间可以互相不干扰，为进程的一部分嗯。例如：同一个进程pid,可以被多个进程共享使用，可以查看同一用户的所有资源消费情况等等。
     总体定义
     定义如下：
struct nsproxy {
 atomit_t count;//指向同一个nsproxy的进程个数
 struct uts_namespace *uts_ns;//运行的内核
 struct ipc_namespace *ipc_ns;//进程通信ipc
 struct mnt_namespace *mnt_ns;//文件系统
 struct pid_namespace *pid_ns;
 struct net    *net_ns;//网络
}

             
在创建进程(fork,clone系统调用)时，需要设置一些标志来指明命名空间的创建与否
1. </rich_text><rich_text foreground="#000000">#define CLONE_NEWUTS    0x04000000</rich_text><rich_text>
2. #define CLONE_NEWIPC    0x08000000
3. #define CLONE_NEWUSER  0x10000000
4. #define CLONE_NEWPID      0x20000000
5. #define CLONE_NEWNET     0x40000000
             
同时在每个任务的定义中也包含命名空间的相关域:
</rich_text><rich_text foreground="#000000">struct task_struct</rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
     …</rich_text><rich_text foreground="#0000CC">..</rich_text><rich_text>
     </rich_text><rich_text foreground="#0000CC">//</rich_text><rich_text>指针形式，这样可以被多个进程共享，修改一个命名空间，其它进程就可见了
     struct nsproxy </rich_text><rich_text foreground="#0000CC">*</rich_text><rich_text>nsproxy</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
     …</rich_text><rich_text foreground="#0000CC">....</rich_text><rich_text>
 </rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>

                 
值得注意的是，命名空间需要在编译其间进行选择，如果没有指明，则所有的属性都是全局的，即只存在一个命名空间，全局命名空间为init_proxy,指向每个子系统的对象:
struct nsproxy init_nsproxy = {
	.count	= ATOMIC_INIT(1),
	.uts_ns	= &amp;init_uts_ns,
#if defined(CONFIG_POSIX_MQUEUE) || defined(CONFIG_SYSVIPC)
	.ipc_ns	= &amp;init_ipc_ns,
#endif
	.mnt_ns	= NULL,
	.pid_ns	= &amp;init_pid_ns,
#ifdef CONFIG_NET
	.net_ns	= &amp;init_net,
#endif
};
                 
    相对应的系统调用有unshare,可以将父子进程的命名空间进行分开或共享。
    UTS命名空间
    定义如下：
    </rich_text><rich_text foreground="#000000">struct uts_namespace </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
         struct kref kref</rich_text><rich_text foreground="#0000CC">;//</rich_text><rich_text>使用计数
         struct new_utsname name</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
         struct user_namespace *user_ns;
     </rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>
    #define __NEW_UTS_LEN 64

    struct old_utsname {
	    char sysname[65];
	    char nodename[65];
	    char release[65];
	    char version[65];
	    char machine[65];
    };

    struct new_utsname {
	    char sysname[__NEW_UTS_LEN + 1];
	    char nodename[__NEW_UTS_LEN + 1];
	    char release[__NEW_UTS_LEN + 1];
	    char version[__NEW_UTS_LEN + 1];
	    char machine[__NEW_UTS_LEN + 1];
	    char domainname[__NEW_UTS_LEN + 1];
    };
             
测试结果如下：
</rich_text><rich_text foreground="#000000">sys</rich_text><rich_text foreground="#0000CC">:</rich_text><rich_text>Linux
 node</rich_text><rich_text foreground="#0000CC">:</rich_text><rich_text>ubuntu</rich_text><rich_text foreground="#0000CC">-</rich_text><rich_text>laptop
 release</rich_text><rich_text foreground="#0000CC">:</rich_text><rich_text>2</rich_text><rich_text foreground="#0000CC">.</rich_text><rich_text>6</rich_text><rich_text foreground="#0000CC">.</rich_text><rich_text>32</rich_text><rich_text foreground="#0000CC">-</rich_text><rich_text>33</rich_text><rich_text foreground="#0000CC">-</rich_text><rich_text>generic
 version</rich_text><rich_text foreground="#0000CC">:#</rich_text><rich_text>68</rich_text><rich_text foreground="#0000CC">-</rich_text><rich_text>Ubuntu SMP Fri Jun 17 16</rich_text><rich_text foreground="#0000CC">:</rich_text><rich_text>25</rich_text><rich_text foreground="#0000CC">:</rich_text><rich_text>19 UTC 2011
 machine</rich_text><rich_text foreground="#0000CC">:</rich_text><rich_text>i686
 domain</rich_text><rich_text foreground="#0000CC">:(</rich_text><rich_text>none</rich_text><rich_text foreground="#0000CC">)</rich_text><rich_text>
                 
init进程初始化时，utsname赋值如下：
</rich_text><rich_text foreground="#000000">struct uts_namespace init_uts_ns     </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text>     </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
     </rich_text><rich_text foreground="#0000CC">.</rich_text><rich_text>kref      </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text>  </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
         </rich_text><rich_text foreground="#0000CC">.</rich_text><rich_text>refcount         </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> ATOMIC_INIT</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>2</rich_text><rich_text foreground="#0000CC">),</rich_text><rich_text>
     </rich_text><rich_text foreground="#0000CC">},</rich_text><rich_text>
     </rich_text><rich_text foreground="#0000CC">.</rich_text><rich_text>name </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
         </rich_text><rich_text foreground="#0000CC">.</rich_text><rich_text>sysname        </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> UTS_SYSNAME</rich_text><rich_text foreground="#0000CC">,</rich_text><rich_text>
         </rich_text><rich_text foreground="#0000CC">.</rich_text><rich_text>nodename        </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> UTS_NODENAME</rich_text><rich_text foreground="#0000CC">,</rich_text><rich_text>
         </rich_text><rich_text foreground="#0000CC">.</rich_text><rich_text>release        </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> UTS_RELEASE</rich_text><rich_text foreground="#0000CC">,</rich_text><rich_text>
         </rich_text><rich_text foreground="#0000CC">.</rich_text><rich_text>version         </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> UTS_VERSION</rich_text><rich_text foreground="#0000CC">,</rich_text><rich_text>
          </rich_text><rich_text foreground="#0000CC">.</rich_text><rich_text>machine        </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> UTS_MACHINE</rich_text><rich_text foreground="#0000CC">,</rich_text><rich_text>
          </rich_text><rich_text foreground="#0000CC">.</rich_text><rich_text>domainname    </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> UTS_DOMAINNAME</rich_text><rich_text foreground="#0000CC">,</rich_text><rich_text>
      </rich_text><rich_text foreground="#0000CC">},</rich_text><rich_text>
  </rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>
                 
这些宏常量定义在内核的各个地方， 有些通过编译内核形成的，如UTS_RElEASE，定义在文件
 &lt;utsrelease.h&gt;中。有些域可以进行修改，但是有些域不能修改，如UTS_SYSNAME只能是Linux,而UTS_NODENAME则可以进行修改。

struct ipc_namespace {
	atomic_t	count;
	struct ipc_ids	ids[3];

	int		sem_ctls[4];
	int		used_sems;

	int		msg_ctlmax;
	int		msg_ctlmnb;
	int		msg_ctlmni;
	atomic_t	msg_bytes;
	atomic_t	msg_hdrs;
	int		auto_msgmni;

	size_t		shm_ctlmax;
	size_t		shm_ctlall;
	int		shm_ctlmni;
	int		shm_tot;
	/*
	 * Defines whether IPC_RMID is forced for _all_ shm segments regardless
	 * of shmctl()
	 */
	int		shm_rmid_forced;

	struct notifier_block ipcns_nb;

	/* The kern_mount of the mqueuefs sb.  We take a ref on it */
	struct vfsmount	*mq_mnt;

	/* # queues in this ns, protected by mq_lock */
	unsigned int    mq_queues_count;

	/* next fields are set through sysctl */
	unsigned int    mq_queues_max;   /* initialized to DFLT_QUEUESMAX */
	unsigned int    mq_msg_max;      /* initialized to DFLT_MSGMAX */
	unsigned int    mq_msgsize_max;  /* initialized to DFLT_MSGSIZEMAX */

	/* user_ns which owns the ipc ns */
	struct user_namespace *user_ns;
};

当需要一个新用户命名空间时，当前用户命名空间就会被复制，并与当前任务的nsproxy相关联，声明如下：
</rich_text><rich_text foreground="#000000">struct  user_namespace </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
    struct kref         kref</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
    struct hlist_head   uidhash_table</rich_text><rich_text foreground="#0000CC">[</rich_text><rich_text>UIDHASH_SZ</rich_text><rich_text foreground="#0000CC">];</rich_text><rich_text>
    struct user_struct </rich_text><rich_text foreground="#0000CC">*</rich_text><rich_text>root_user</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
</rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>
            
其中root_user用于记录单个用户资源情况，而uidhash_table将所有user_struct连接起来.
</rich_text><rich_text foreground="#000000">struct user_struct </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
     atomic_t __count</rich_text><rich_text foreground="#0000CC">;//</rich_text><rich_text>该结构体引用计数
     atomic_t processes</rich_text><rich_text foreground="#0000CC">;//</rich_text><rich_text>该用户拥有的进程数量
     atomic_t sigpending</rich_text><rich_text foreground="#0000CC">;//</rich_text><rich_text>该用户拥有的悬而未决的信号量数目
     …</rich_text><rich_text foreground="#0000CC">.</rich_text><rich_text>
     unsigned long locked_shm</rich_text><rich_text foreground="#0000CC">;//</rich_text><rich_text>锁住的共享页个数
     </rich_text><rich_text foreground="#0000CC">//</rich_text><rich_text>hash表所维护的信息
     struct hlist_node uidhash_node</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
     uid_t uid</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
      …</rich_text><rich_text foreground="#0000CC">...</rich_text><rich_text>
  </rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>

               
当设置新的用户时，用户命名空间创建如下：
</rich_text><rich_text foreground="#000000">static struct user_namespace </rich_text><rich_text foreground="#0000CC">*</rich_text><rich_text>clone_user_ns</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>struct user_namespace </rich_text><rich_text foreground="#0000CC">*</rich_text><rich_text>old_ns</rich_text><rich_text foreground="#0000CC">)</rich_text><rich_text>
 </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
     struct user_namespace </rich_text><rich_text foreground="#0000CC">*</rich_text><rich_text>ns</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
     struct user_struct </rich_text><rich_text foreground="#0000CC">*</rich_text><rich_text>new_user</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
     </rich_text><rich_text foreground="#FF0000">int</rich_text><rich_text> n</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
     
     ns </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> kmalloc</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>sizeof</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>struct user_namespace</rich_text><rich_text foreground="#0000CC">),</rich_text><rich_text>GFP_KERNEL</rich_text><rich_text foreground="#0000CC">);</rich_text><rich_text>
     </rich_text><rich_text foreground="#0000FF">if</rich_text><rich_text foreground="#0000CC">(!</rich_text><rich_text>ns</rich_text><rich_text foreground="#0000CC">)</rich_text><rich_text> 
         return ERR_PTR</rich_text><rich_text foreground="#0000CC">(-</rich_text><rich_text>ENOMEM</rich_text><rich_text foreground="#0000CC">);</rich_text><rich_text>
      
      kref_init</rich_text><rich_text foreground="#0000CC">(&amp;</rich_text><rich_text>ns</rich_text><rich_text foreground="#0000CC">-&gt;</rich_text><rich_text>kref</rich_text><rich_text foreground="#0000CC">);</rich_text><rich_text>
      
      </rich_text><rich_text foreground="#0000FF">for</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>n</rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text>0</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text> n</rich_text><rich_text foreground="#0000CC">&lt;</rich_text><rich_text> UIDHASH_SZ</rich_text><rich_text foreground="#0000CC">;++</rich_text><rich_text>n</rich_text><rich_text foreground="#0000CC">)</rich_text><rich_text>
          INIT_HLIST_HEAD</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>ns</rich_text><rich_text foreground="#0000CC">-&gt;</rich_text><rich_text>uidhash_table</rich_text><rich_text foreground="#0000CC">+</rich_text><rich_text>n</rich_text><rich_text foreground="#0000CC">);</rich_text><rich_text>
      
      </rich_text><rich_text foreground="#0000CC">/*</rich_text><rich_text>insert into new root user</rich_text><rich_text foreground="#0000CC">*/</rich_text><rich_text>
      ns</rich_text><rich_text foreground="#0000CC">-&gt;</rich_text><rich_text>root_user </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> alloc_uid</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>ns</rich_text><rich_text foreground="#0000CC">,</rich_text><rich_text>0</rich_text><rich_text foreground="#0000CC">);</rich_text><rich_text>
      </rich_text><rich_text foreground="#0000FF">if</rich_text><rich_text foreground="#0000CC">(!</rich_text><rich_text>ns</rich_text><rich_text foreground="#0000CC">-&gt;</rich_text><rich_text>root_user</rich_text><rich_text foreground="#0000CC">)</rich_text><rich_text> </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
          kfree</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>ns</rich_text><rich_text foreground="#0000CC">);</rich_text><rich_text>
          return ERR_PTR</rich_text><rich_text foreground="#0000CC">(-</rich_text><rich_text>ENOMEM</rich_text><rich_text foreground="#0000CC">);</rich_text><rich_text>
      </rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>
  
      new_user </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> alloc_uid</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>ns</rich_text><rich_text foreground="#0000CC">,</rich_text><rich_text>current</rich_text><rich_text foreground="#0000CC">-&gt;</rich_text><rich_text>uid</rich_text><rich_text foreground="#0000CC">);</rich_text><rich_text>
      </rich_text><rich_text foreground="#0000FF">if</rich_text><rich_text foreground="#0000CC">(!</rich_text><rich_text>new_user</rich_text><rich_text foreground="#0000CC">)</rich_text><rich_text> </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
          free_uid</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>ns</rich_text><rich_text foreground="#0000CC">-&gt;</rich_text><rich_text>root_user</rich_text><rich_text foreground="#0000CC">);</rich_text><rich_text>
          kfree</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>ns</rich_text><rich_text foreground="#0000CC">);</rich_text><rich_text>
          return ERR_PTR</rich_text><rich_text foreground="#0000CC">(-</rich_text><rich_text>ENOMEM</rich_text><rich_text foreground="#0000CC">);</rich_text><rich_text>        
      </rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>
          switch</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>new_user</rich_text><rich_text foreground="#0000CC">);</rich_text><rich_text>
          return ns</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
  </rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>
            
    命名空间增加了pid管理的复杂性，pid命名空间按照树型层次化管理。当一个新的命名空间创建，该命名空间内所有的pid都对其父命名空间可见，但是子命名空间却不能看到父命名空间中pid,这样就意味着有些任务包含有多个pid:父命名空间，子命名空间。这样就产生了两种类型的pid:
    Global pid:内核本身包含有效的pid,init任务中可见的全局唯一的pid,也就是系统唯一的pid。
    Local pid:在该命名空间内部的pid,全局不是唯一的，在不同的命名空间中，可能存在相同的pid。
    task的pid_namespace描述 
    task_struct  中结构体部分结构如下：
    </rich_text><rich_text foreground="#000000">struct task_struct </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
         …</rich_text><rich_text foreground="#0000CC">..</rich_text><rich_text>
         pid_t pid</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
         pid_t tgid</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
         struct task_struct </rich_text><rich_text foreground="#0000CC">*</rich_text><rich_text>group_leader</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
         struct list_head thread_group</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
         …</rich_text><rich_text foreground="#0000CC">..</rich_text><rich_text>
     </rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>

            
而session id和进程组id没有直接包含在task_struct内部，而是存放在signal结构体中
</rich_text><rich_text foreground="#000000">struct signal_struct </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
     …</rich_text><rich_text foreground="#0000CC">.....</rich_text><rich_text>
     struct task_struct </rich_text><rich_text foreground="#0000CC">*</rich_text><rich_text>curr_target</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
     union </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
         pid_t pgrp __deprecated</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
         pid_t __pgrp</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
 </rich_text><rich_text foreground="#0000CC">};</rich_text><rich_text>
     union </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
         pid_t session  __deprecated</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
          pid_t __session</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
  </rich_text><rich_text foreground="#0000CC">};</rich_text><rich_text>
      …</rich_text><rich_text foreground="#0000CC">.....</rich_text><rich_text>
  </rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>
             
    对应的修改函数有:set_task_session,set_task_pgrp。
    pid的管理 
    对应的pid_namespace定义如下：
    </rich_text><rich_text foreground="#0000CC">[</rich_text><rich_text>include</rich_text><rich_text foreground="#0000CC">/</rich_text><rich_text>linux</rich_text><rich_text foreground="#0000CC">/</rich_text><rich_text>pid_namespace</rich_text><rich_text foreground="#0000CC">.</rich_text><rich_text>h</rich_text><rich_text foreground="#0000CC">]</rich_text><rich_text>
     </rich_text><rich_text foreground="#0000CC">//</rich_text><rich_text>每个命名空间都包含一个所有pid的分配图，系统中各个命名空间互不交叉
    struct pid_namespace {
	    struct kref kref;                                               //进程的引用计数
	    struct pidmap pidmap[PIDMAP_ENTRIES];     //pid分配图
	    int last_pid;
	    struct task_struct *child_reaper;                    //当前命名空间中waitpid角色的task
	    struct kmem_cache *pid_cachep;
	    unsigned int level;                                          //当前pid_namespace的深度
	    struct pid_namespace *parent;                      //父pid_namespace
    #ifdef CONFIG_PROC_FS
	    struct vfsmount *proc_mnt;
    #endif
    #ifdef CONFIG_BSD_PROCESS_ACCT
	    struct bsd_acct_struct *bacct;
    #endif
	    gid_t pid_gid;
	    int hide_pid;
    };

    /*
     * PID-map pages start out as NULL, they get allocated upon
     * first use and are never deallocated. This way a low pid_max
     * value does not cause lots of bitmaps to be allocated, but
     * the scheme scales to up to 4 million PIDs, runtime.
     */
    struct pid_namespace init_pid_ns = {
	    .kref = {
		    .refcount       = ATOMIC_INIT(2),
	    },
	    .pidmap = {
		    [ 0 ... PIDMAP_ENTRIES-1] = { ATOMIC_INIT(BITS_PER_PAGE), NULL }
	    },
	    .last_pid = 0,
	    .level = 0,
	    .child_reaper = &amp;init_task,
    };
    EXPORT_SYMBOL_GPL(init_pid_ns);
                       
    pid的管理主要集中在两个数据结构:
    struct pid为内核形式的pid,
    struct upid代表在特定命名空间中可见的信息，定义如下：
    </rich_text><rich_text foreground="#0000CC">[</rich_text><rich_text>include</rich_text><rich_text foreground="#0000CC">/</rich_text><rich_text>linux</rich_text><rich_text foreground="#0000CC">/</rich_text><rich_text>pid</rich_text><rich_text foreground="#0000CC">.</rich_text><rich_text>h</rich_text><rich_text foreground="#0000CC">]</rich_text><rich_text>
     struct upid
     </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
         </rich_text><rich_text foreground="#FF0000">int</rich_text><rich_text> nr</rich_text><rich_text foreground="#0000CC">;                                        //</rich_text><rich_text>真正的pid值
         struct pid_namespace </rich_text><rich_text foreground="#0000CC">*</rich_text><rich_text>ns</rich_text><rich_text foreground="#0000CC">;      //</rich_text><rich_text>该nr属于哪个pid_namespace
         struct hlist_node pid_chain</rich_text><rich_text foreground="#0000CC">;     //</rich_text><rich_text>所有upid的hash链表 find_pid
     </rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>
     
     </rich_text><rich_text foreground="#0000CC">//</rich_text><rich_text>一个pid可以属于不同的级别，每一级别又包含一个upid
     struct pid
      </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
          atomic_t count</rich_text><rich_text foreground="#0000CC">;                                           //</rich_text><rich_text>引用计数
          struct hlist_head tasks</rich_text><rich_text foreground="#0000CC">[</rich_text><rich_text>PIDTYPE_MAX</rich_text><rich_text foreground="#0000CC">];     //</rich_text><rich_text>该pid被使用的task链表
          struct rcu_head rcu</rich_text><rich_text foreground="#0000CC">;                                    //</rich_text><rich_text>互斥访问
          </rich_text><rich_text foreground="#FF0000">int</rich_text><rich_text> level</rich_text><rich_text foreground="#0000CC">;                                                      //</rich_text><rich_text>该pid所能到达的最大深度
          struct upid numbers</rich_text><rich_text foreground="#0000CC">[0];                              //</rich_text><rich_text>每一层次</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>level</rich_text><rich_text foreground="#0000CC">)</rich_text><rich_text>的upid
      </rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>
             
    一个进程可以在多个命名空间中，但是每个命名空间的local id却不相同，numbers则表示每一层level的upid实例，这里的数组只包含一个元素，如果系统只有一个进程，这是可行的，但如果包含多个进程的话，就需要进行分配更多的空间，这个放在结构体中最后一个元素就是方便扩容。
 其中PIDTYPE_MAX定义如下：
</rich_text><rich_text foreground="#000000">enum  pid_type
</rich_text><rich_text> </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
     PIDTYPE_PID</rich_text><rich_text foreground="#0000CC">,</rich_text><rich_text>
     PIDTYPE_PGID</rich_text><rich_text foreground="#0000CC">,</rich_text><rich_text>
     PIDTYPE_SID</rich_text><rich_text foreground="#0000CC">,</rich_text><rich_text>
     PIDTYPE_MAX
 </rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>

             
线程组id没有包含在内，因为它与thread group leader的pid一样，没有必要放在里面。
 一个任务可以包含多个命名空间，task_struct的结构体中显示如下：
</rich_text><rich_text foreground="#000000">struct task_struct </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
     …</rich_text><rich_text foreground="#0000CC">...</rich_text><rich_text>
     struct pid_link pids</rich_text><rich_text foreground="#0000CC">[</rich_text><rich_text>PIDTYPE_MAX</rich_text><rich_text foreground="#0000CC">];</rich_text><rich_text>
     …</rich_text><rich_text foreground="#0000CC">...</rich_text><rich_text>
 </rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>

             
pid_link就是链接所有的pid:
</rich_text><rich_text foreground="#000000">struct pid_link </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
 struct hlist_node node</rich_text><rich_text foreground="#0000CC">;//</rich_text><rich_text>由于每个task包含多个pid</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>多个命名空间可见</rich_text><rich_text foreground="#0000CC">)</rich_text><rich_text>，指向的是自己
 struct pid    </rich_text><rich_text foreground="#0000CC">*</rich_text><rich_text>pid</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
 </rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>

                 
而实现upid中的数值nr到pid对象的hash映射如下：
</rich_text><rich_text foreground="#000000">static struct hlist_head </rich_text><rich_text foreground="#0000CC">*</rich_text><rich_text>pid_hash</rich_text><rich_text foreground="#0000CC">;//</rich_text><rich_text>双向hash链表
 pid_hash是一个hlist_head数组，大小根据机器的内存配置，从16到4096</rich_text><rich_text foreground="#0000CC">,</rich_text><rich_text>初始化代码如下：
 </rich_text><rich_text foreground="#0000CC">[</rich_text><rich_text>kernel</rich_text><rich_text foreground="#0000CC">/</rich_text><rich_text>pid</rich_text><rich_text foreground="#0000CC">.</rich_text><rich_text>c</rich_text><rich_text foreground="#0000CC">]</rich_text><rich_text>
 void __init pidhash_init</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>void</rich_text><rich_text foreground="#0000CC">)</rich_text><rich_text>
 </rich_text><rich_text foreground="#0000CC">{</rich_text><rich_text>
     </rich_text><rich_text foreground="#FF0000">int</rich_text><rich_text> i</rich_text><rich_text foreground="#0000CC">,</rich_text><rich_text> pidhash_size</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
     </rich_text><rich_text foreground="#0000CC">//#</rich_text><rich_text>define PAGE_SHIFT 12
     unsigned long megabytes </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> nr_kernel_pages </rich_text><rich_text foreground="#0000CC">&gt;&gt;</rich_text><rich_text> </rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>20</rich_text><rich_text foreground="#0000CC">-</rich_text><rich_text>PAGE_SHIFT</rich_text><rich_text foreground="#0000CC">);</rich_text><rich_text>
     
      pidhash_shift </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> max</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>4</rich_text><rich_text foreground="#0000CC">,</rich_text><rich_text>fls</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>megabytes </rich_text><rich_text foreground="#0000CC">*</rich_text><rich_text> 4</rich_text><rich_text foreground="#0000CC">));</rich_text><rich_text>
      pidhash_shift </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> min</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>12</rich_text><rich_text foreground="#0000CC">,</rich_text><rich_text>pidhash_shift</rich_text><rich_text foreground="#0000CC">);</rich_text><rich_text>
      </rich_text><rich_text foreground="#0000CC">//</rich_text><rich_text>16项到4096项
      pidhash_size </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> 1 </rich_text><rich_text foreground="#0000CC">&lt;&lt;</rich_text><rich_text> pidhash_shift</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>
      
      …</rich_text><rich_text foreground="#0000CC">.....</rich_text><rich_text>
      pid_hash </rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text> alloc_bootmem</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>pidhash_size</rich_text><rich_text foreground="#0000CC">*</rich_text><rich_text>sizeof</rich_text><rich_text foreground="#0000CC">(*(</rich_text><rich_text>pid_hash</rich_text><rich_text foreground="#0000CC">)));</rich_text><rich_text>
      </rich_text><rich_text foreground="#0000FF">if</rich_text><rich_text foreground="#0000CC">(!</rich_text><rich_text>pid_hash</rich_text><rich_text foreground="#0000CC">)</rich_text><rich_text>
          panic</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>“Could </rich_text><rich_text foreground="#0000FF">not</rich_text><rich_text> alloc pidhash”</rich_text><rich_text foreground="#0000CC">);</rich_text><rich_text>
      </rich_text><rich_text foreground="#0000FF">for</rich_text><rich_text foreground="#0000CC">(</rich_text><rich_text>i</rich_text><rich_text foreground="#0000CC">=</rich_text><rich_text>0</rich_text><rich_text foreground="#0000CC">;</rich_text><rich_text>i</rich_text><rich_text foreground="#0000CC">&lt;</rich_text><rich_text> pidhash_size</rich_text><rich_text foreground="#0000CC">;++</rich_text><rich_text>i</rich_text><rich_text foreground="#0000CC">)</rich_text><rich_text>
              INIT_HLIST_HEAD</rich_text><rich_text foreground="#0000CC">(&amp;</rich_text><rich_text>pid_hash</rich_text><rich_text foreground="#0000CC">[</rich_text><rich_text>i</rich_text><rich_text foreground="#0000CC">]);</rich_text><rich_text>
  </rich_text><rich_text foreground="#0000CC">}</rich_text><rich_text>
</rich_text></node><node name="printk的log level" prog_lang="custom-colors" readonly="False" tags="" unique_id="10"><rich_text>Printk的loglevel和日志记录分析
（分析版本是ubuntu7.10，内核源码是2.6.23）
 
首先，printk有8个loglevel,定义在&lt;linux/kernel.h&gt;中，其中数值范围从0到7，数值越小，优先级越高。
#define    KERN_EMERG      &quot;&lt;0&gt;&quot;      /* system is unusable     */ 系统崩溃
#define    KERN_ALERT       &quot;&lt;1&gt;&quot;/* action must be taken immediately*/必须紧急处理
#define    KERN_CRIT  &quot;&lt;2&gt;&quot;      /* critical conditions      */ 临界条件，严重的硬软件错误
#define    KERN_ERR    &quot;&lt;3&gt;&quot;      /* error conditions  */ 报告错误
#define    KERN_WARNING &quot;&lt;4&gt;&quot;      /* warning conditions           */警告
#define    KERN_NOTICE     &quot;&lt;5&gt;&quot;      /* normal but significant condition */普通但还是须注意
#define    KERN_INFO  &quot;&lt;6&gt;&quot;      /* informational                    */ 信息
#define    KERN_DEBUG      &quot;&lt;7&gt;&quot;      /* debug-level messages               */ 调试信息
从这里也可以看出他们的优先级是数值越小，其紧急和严重程度就越高。
extern int console_printk[];
 
#define console_loglevel (console_printk[0])
#define default_message_loglevel (console_printk[1])
#define minimum_console_loglevel (console_printk[2])
#define default_console_loglevel (console_printk[3])
 
未指定优先级的默认级别定义在/kernel/printk.c中：
 
/* printk's without a loglevel use this.. */
#define DEFAULT_MESSAGE_LOGLEVEL 4 /* KERN_WARNING */
/* We show everything that is MORE important than this.. */
 
#define MINIMUM_CONSOLE_LOGLEVEL 1 /* Minimum loglevel we let people use */
#define DEFAULT_CONSOLE_LOGLEVEL 7 /* anything MORE serious than KERN_DEBUG */
 
int console_printk[4] = {
       DEFAULT_CONSOLE_LOGLEVEL,   /* console_loglevel */ 终端级别
       DEFAULT_MESSAGE_LOGLEVEL,   /* default_message_loglevel */默认级别
       MINIMUM_CONSOLE_LOGLEVEL,  /* minimum_console_loglevel */让用户使用的最小级别
       DEFAULT_CONSOLE_LOGLEVEL,   /* default_console_loglevel */默认终端级别
};
当优先级的值小于console_loglevel这个整数变量的值，信息才能显示出来。而console_loglevel的初始值DEFAULT_CONSOLE_LOGLEVEL也定义在/kernel/printk.c中： 
 
cat /proc/sys/kernel/printk
4   4   1   7
这个默认值是在sysctl.conf中写的，在系统启动时就把这个值写到/proc/sys/kernel/printk这个文件了。也可以使用下面的命令修改其值
echo 0 &gt; /proc/sys/kernel/printk 
cat /proc/sys/kernel/printk
0   4   1   7
 
它们根据日志记录消息的重要性，定义将其发送到何处。关于不同日志级别的更多信息，请阅读 syslog(2) 联机帮助页。该文件的四个值为：
控制台日志级别：优先级高于该值的消息将被打印至控制台
缺省的消息日志级别：将用该优先级来打印没有优先级的消息
最低的控制台日志级别：控制台日志级别可被设置的最小值（最高优先级）
缺省的控制台日志级别：控制台日志级别的缺省值
以下是我的测试程序和作的相关的测试。
#include &lt;linux/module.h&gt;
#include &lt;linux/init.h&gt;
#include &lt;linux/kernel.h&gt;
 
static int __init pinit(void)
{
 printk(&quot;&lt;0&gt;goodluck0!/n&quot;);
 printk(&quot;&lt;1&gt;goodluck1!/n&quot;);
 printk(&quot;&lt;2&gt;goodluck2!/n&quot;);
 printk(&quot;&lt;3&gt;goodluck3!/n&quot;);
 printk(&quot;&lt;4&gt;goodluck4!/n&quot;);
 printk(&quot;&lt;5&gt;goodluck5!/n&quot;);
 printk(&quot;&lt;6&gt;goodluck6!/n&quot;);
 printk(&quot;&lt;7&gt;goodluck7!/n&quot;);
 printk(&quot;&lt;8&gt;goodluck8!/n&quot;);//虽然没有这级别，我还是试了一把。目的是看默认级别。
 return 0;
}
 
static void __exit pexit(void)
{
 printk(&quot;&lt;0&gt;goodbey!0/n&quot;);
 printk(&quot;&lt;1&gt;goodbey!1/n&quot;);
 printk(&quot;&lt;2&gt;goodbey!2/n&quot;);
 printk(&quot;&lt;3&gt;goodbey!3/n&quot;);
 printk(&quot;&lt;4&gt;goodbey!4/n&quot;);
 printk(&quot;&lt;5&gt;goodbey!5/n&quot;);
printk(&quot;&lt;6&gt;goodbey!6/n&quot;);
 printk(&quot;&lt;7&gt;goodbey!7/n&quot;);
}
 
module_init(pinit);
module_exit(pexit);
 
在这里我只观察了四个比较重要的日志文件：messages，kern.log，syslog，debug。这四个文件都在/var/log/这个目录下。它的日志文件经观察未出现这些printk信息。
cat /proc/sys/kernel/printk
4   4   1   7
在上面这种情况下日志文件的变化情况是：
l         kern.log：   纪录了级别是0—7包括&lt;8&gt;的所有信息，在这些纪录当中，其中&lt;8&gt;的纪录是这样的。&lt;8&gt;goodluck8!
l         Messages： 只是记录了456和&lt;8&gt;。
l         Syslog：     记录和kern.log一样。
l         Debug：     之记录级别是7的信息。
cat /proc/sys/kernel/printk
0   4   1   7
在上面这种情况下日志文件的变化情况是：
l         kern.log：   纪录了级别是0—7包括&lt;8&gt;的所有信息，在这些纪录当中，其中&lt;8&gt;的纪录是这样的。&lt;8&gt;goodluck8!
l         Messages： 只是记录了456和&lt;8&gt;。
l         Syslog：     记录和kern.log一样。
l         Debug：     之记录级别是7的信息。
 
cat /proc/sys/kernel/printk
7   4   1   7
l         kern.log：   纪录了级别是0—7包括&lt;8&gt;的所有信息，在这些纪录当中，其中&lt;8&gt;的纪录是这样的。&lt;8&gt;goodluck8!
l         Messages： 只是记录了456和&lt;8&gt;。
l         Syslog：     记录和kern.log一样。
l         Debug：     之记录级别是7的信息。
分析结论：在操作系统是图形化的界面下测试证明-日志记录和终端级别是没有关系的，但是在文本界面下的结果和这里是不太一样的，根据不同的设置有些信息会输出到终端。这里就不多说了。
其次有关于系统的日志记录工具有两种主要的：syslog和klog。
Linux系统中/etc/init.d/sysklogd会启动2个守护进程:Klogd, Syslogd。
syslog 是 Unix 系统的一个常见组件，用于执行系统日志记录活动。syslogd 是它的守护进程。syslogd 从一组日志源（如 /dev/log 和  /dev/klog ）中读取数据，并按照 /etc/syslog.conf  中的说明处理这些日志消息。通过调用syslog()，可将应用程序日志消息记录到 syslog 中。syslog  消息采用一种包含可选优先级和设备的标准格式。优先级指示消息的紧急程度。设备指示发布消息的子系统。/usr/include/syslog.h中定义 了它的优先级和设备资源。
klog是一个从Unix内核接受消息的设备klogd 守护进程获得并记录 Linux 内核信息。通常，syslogd 会记录 klogd 传来的所有内核信息。
 
syslogd的配置文件是/etc/syslog.conf。
下面是我机子上这个文件的部分内容。主要是对debug和messages文件要记录内容的设置。
*.=debug;/
        auth,authpriv.none;/
        news.none;mail.none     -/var/log/debug
*.=info;*.=notice;*.=warn;/
        auth,authpriv.none;/
        cron,daemon.none;/
        mail,news.none          -/var/log/messages
 
本文来自CSDN博客，转载请标明出处：</rich_text><rich_text link="webs http://blog.csdn.net/brfeng/archive/2008/08/05/2772502.aspx">http://blog.csdn.net/brfeng/archive/2008/08/05/2772502.aspx</rich_text><rich_text>
 
要将linux内核的带级别控制的printk内容打印出来，在命令行 输入 dmesg -n 8 就将2010-12-13 17:01 
</rich_text><rich_text justification="left"></rich_text><rich_text>

 
上面显示的4个数据分别对应控制台日志级别、默认的消息日志级别、最低的控制台日志级别和默认的控制台日志级别。
可用下面的命令设置当前日志级别：
 
</rich_text><rich_text justification="left"></rich_text><rich_text>

 
另外为了防止 printk() 瞬时被调用次数过多，可以通过 printk_ratelimit()  来控制速度。printk_ratelimit() 通过跟踪发送到控制台的消息数量工作，当输出速度超过一个临界值，就返回零。可通过修改  /proc/sys/kernel/{printk_ratelimit, printk_ratelimit_burst} 来调节  printk_ratelimit() 的计算。
printk_ratelimit() 的典型用法如下：
if (printk_ratelimit())
    printk(KERN_INFO &quot;Hello, world!/n&quot;);
</rich_text><codebox char_offset="4649" frame_height="150" frame_width="300" highlight_brackets="False" show_line_numbers="False" syntax_highlighting="custom-colors" width_in_pixels="True">#cat /proc/sys/kernel/printk
6 4 1 7 </codebox><codebox char_offset="4727" frame_height="150" frame_width="300" highlight_brackets="False" show_line_numbers="False" syntax_highlighting="custom-colors" width_in_pixels="True"># echo 8 &gt; /proc/sys/kernel/printk </codebox></node><node name="原子操作" prog_lang="custom-colors" readonly="False" tags="" unique_id="3"><rich_text>  在任何处理器平台下，都会有一些原子性操作，供操作系统使用，我们这里只讲x86下面的。在单处理器情况下，每条指令的执行都是原子性的，但在多处理器情 况下，只有那些单独的读操作或写操作才是原子性的。为了弥补这一缺点，x86提供了附加的lock前缀，使带lock前缀的读修改写指令也能原子性执行。 带lock前缀的指令在操作时会锁住总线，使自身的执行即使在多处理器间也是原子性执行的。xchg指令不带lock前缀也是原子性执行，也就是说 xchg执行时默认会锁内存总线。原子性操作是线程间同步的基础，linux专门定义了一种只进行原子操作的类型atomic_t，并提供相关的原子读写 调用API。本节就来分析这些原子操作在x86下的实现。
1. typedef struct {  
2.     volatile int counter;  
3. } atomic_t;  
 原子类型其实是int类型，只是禁止寄存器对其暂存。
1. #define ATOMIC_INIT(i)  { (i) }  
原子类型的初始化。32位x86平台下atomic API在arch/x86/include/asm/atomic_32.h中实现。
1. static inline int atomic_read(const atomic_t *v)  
2. {  
3.     return v-&gt;counter;  
4. }  
5.   
6. static inline void atomic_set(atomic_t *v, int i)  
7. {  
8.     v-&gt;counter = i;  
9. }  
单独的读操作或者写操作，在x86下都是原子性的。
1. static inline void atomic_add(int i, atomic_t *v)  
2. {  
3.     asm volatile(LOCK_PREFIX &quot;addl %1,%0&quot;  
4.              : &quot;+m&quot; (v-&gt;counter)  
5.              : &quot;ir&quot; (i));  
6. }  
7.   
8. static inline void atomic_sub(int i, atomic_t *v)  
9. {  
10.     asm volatile(LOCK_PREFIX &quot;subl %1,%0&quot;  
11.              : &quot;+m&quot; (v-&gt;counter)  
12.              : &quot;ir&quot; (i));  
13. }  
atomic_add和atomic_sub属于读修改写操作，实现时需要加lock前缀。
1. static inline int atomic_sub_and_test(int i, atomic_t *v)  
2. {  
3.     unsigned char c;  
4.   
5.     asm volatile(LOCK_PREFIX &quot;subl %2,%0; sete %1&quot;  
6.              : &quot;+m&quot; (v-&gt;counter), &quot;=qm&quot; (c)  
7.              : &quot;ir&quot; (i) : &quot;memory&quot;);  
8.     return c;  
9. }  
atomic_sub_and_test执行完减操作后检查结果是否为0。
1. static inline void atomic_inc(atomic_t *v)  
2. {  
3.     asm volatile(LOCK_PREFIX &quot;incl %0&quot;  
4.              : &quot;+m&quot; (v-&gt;counter));  
5. }  
6.   
7. static inline void atomic_dec(atomic_t *v)  
8. {  
9.     asm volatile(LOCK_PREFIX &quot;decl %0&quot;  
10.              : &quot;+m&quot; (v-&gt;counter));  
11. }  
atomic_inc和atomic_dec是递增递减操作。
1. static inline int atomic_dec_and_test(atomic_t *v)  
2. {  
3.     unsigned char c;  
4.   
5.     asm volatile(LOCK_PREFIX &quot;decl %0; sete %1&quot;  
6.              : &quot;+m&quot; (v-&gt;counter), &quot;=qm&quot; (c)  
7.              : : &quot;memory&quot;);  
8.     return c != 0;  
9. }  
atomic_dec_and_test在递减后检查结果是否为0。
1. static inline int atomic_inc_and_test(atomic_t *v)  
2. {  
3.     unsigned char c;  
4.   
5.     asm volatile(LOCK_PREFIX &quot;incl %0; sete %1&quot;  
6.              : &quot;+m&quot; (v-&gt;counter), &quot;=qm&quot; (c)  
7.              : : &quot;memory&quot;);  
8.     return c != 0;  
9. }  
atomic_inc_and_test在递增后检查结果是否为0。
1. static inline int atomic_add_negative(int i, atomic_t *v)  
2. {  
3.     unsigned char c;  
4.   
5.     asm volatile(LOCK_PREFIX &quot;addl %2,%0; sets %1&quot;  
6.              : &quot;+m&quot; (v-&gt;counter), &quot;=qm&quot; (c)  
7.              : &quot;ir&quot; (i) : &quot;memory&quot;);  
8.     return c;  
9. }  
atomic_add_negative在加操作后检查结果是否为负数。
1. static inline int atomic_add_return(int i, atomic_t *v)  
2. {  
3.     int __i;  
4. #ifdef CONFIG_M386  
5.     unsigned long flags;  
6.     if (unlikely(boot_cpu_data.x86 &lt;= 3))  
7.         goto no_xadd;  
8. #endif  
9.     /* Modern 486+ processor */  
10.     __i = i;  
11.     asm volatile(LOCK_PREFIX &quot;xaddl %0, %1&quot;  
12.              : &quot;+r&quot; (i), &quot;+m&quot; (v-&gt;counter)  
13.              : : &quot;memory&quot;);  
14.     return i + __i;  
15.   
16. #ifdef CONFIG_M386  
17. no_xadd: /* Legacy 386 processor */  
18.     local_irq_save(flags);  
19.     __i = atomic_read(v);  
20.     atomic_set(v, i + __i);  
21.     local_irq_restore(flags);  
22.     return i + __i;  
23. #endif  
24. }  
atomic_add_return 不仅执行加操作，而且把相加的结果返回。它是通过xadd这一指令实现的。
1. static inline int atomic_sub_return(int i, atomic_t *v)  
2. {  
3.     return atomic_add_return(-i, v);  
4. }  
atomic_sub_return 不仅执行减操作，而且把相减的结果返回。它是通过atomic_add_return实现的。
1. static inline int atomic_cmpxchg(atomic_t *v, int old, int new)  
2. {  
3.     return cmpxchg(&amp;v-&gt;counter, old, new);  
4. }  
5.   
6. #define cmpxchg(ptr, o, n)                      \  
7.     ((__typeof__(*(ptr)))__cmpxchg((ptr), (unsigned long)(o),   \  
8.                        (unsigned long)(n),      \  
9.                        sizeof(*(ptr))))  
10.   
11. static inline unsigned long __cmpxchg(volatile void *ptr, unsigned long old,  
12.                       unsigned long new, int size)  
13. {  
14.     unsigned long prev;  
15.     switch (size) {  
16.     case 1:  
17.         asm volatile(LOCK_PREFIX &quot;cmpxchgb %b1,%2&quot;  
18.                  : &quot;=a&quot;(prev)  
19.                  : &quot;q&quot;(new), &quot;m&quot;(*__xg(ptr)), &quot;0&quot;(old)  
20.                  : &quot;memory&quot;);  
21.         return prev;  
22.     case 2:  
23.         asm volatile(LOCK_PREFIX &quot;cmpxchgw %w1,%2&quot;  
24.                  : &quot;=a&quot;(prev)  
25.                  : &quot;r&quot;(new), &quot;m&quot;(*__xg(ptr)), &quot;0&quot;(old)  
26.                  : &quot;memory&quot;);  
27.         return prev;  
28.     case 4:  
29.         asm volatile(LOCK_PREFIX &quot;cmpxchgl %k1,%2&quot;  
30.                  : &quot;=a&quot;(prev)  
31.                  : &quot;r&quot;(new), &quot;m&quot;(*__xg(ptr)), &quot;0&quot;(old)  
32.                  : &quot;memory&quot;);  
33.         return prev;  
34.     case 8:  
35.         asm volatile(LOCK_PREFIX &quot;cmpxchgq %1,%2&quot;  
36.                  : &quot;=a&quot;(prev)  
37.                  : &quot;r&quot;(new), &quot;m&quot;(*__xg(ptr)), &quot;0&quot;(old)  
38.                  : &quot;memory&quot;);  
39.         return prev;  
40.     }  
41.     return old;  
42. }  

 atomic_cmpxchg是由cmpxchg指令完成的。它把旧值同atomic_t类型的值相比较，如果相同，就把新值存入atomic_t类型的值中，返回atomic_t类型变量中原有的值。
 
 
1. static inline int atomic_xchg(atomic_t *v, int new)  
2. {  
3.     return xchg(&amp;v-&gt;counter, new);  
4. }  
5.   
6. #define xchg(ptr, v)                            \  
7.     ((__typeof__(*(ptr)))__xchg((unsigned long)(v), (ptr), sizeof(*(ptr))))  
8.   
9. static inline unsigned long __xchg(unsigned long x, volatile void *ptr,  
10.                    int size)  
11. {  
12.     switch (size) {  
13.     case 1:  
14.         asm volatile(&quot;xchgb %b0,%1&quot;  
15.                  : &quot;=q&quot; (x)  
16.                  : &quot;m&quot; (*__xg(ptr)), &quot;0&quot; (x)  
17.                  : &quot;memory&quot;);  
18.         break;  
19.     case 2:  
20.         asm volatile(&quot;xchgw %w0,%1&quot;  
21.                  : &quot;=r&quot; (x)  
22.                  : &quot;m&quot; (*__xg(ptr)), &quot;0&quot; (x)  
23.                  : &quot;memory&quot;);  
24.         break;  
25.     case 4:  
26.         asm volatile(&quot;xchgl %k0,%1&quot;  
27.                  : &quot;=r&quot; (x)  
28.                  : &quot;m&quot; (*__xg(ptr)), &quot;0&quot; (x)  
29.                  : &quot;memory&quot;);  
30.         break;  
31.     case 8:  
32.         asm volatile(&quot;xchgq %0,%1&quot;  
33.                  : &quot;=r&quot; (x)  
34.                  : &quot;m&quot; (*__xg(ptr)), &quot;0&quot; (x)  
35.                  : &quot;memory&quot;);  
36.         break;  
37.     }  
38.     return x;  
39. }  

 atomic_xchg则是将新值存入atomic_t类型的变量，并将变量的旧值返回。它使用xchg指令实现。
 
1. /** 
2.  * atomic_add_unless - add unless the number is already a given value 
3.  * @v: pointer of type atomic_t 
4.  * @a: the amount to add to v... 
5.  * @u: ...unless v is equal to u. 
6.  * 
7.  * Atomically adds @a to @v, so long as @v was not already @u. 
8.  * Returns non-zero if @v was not @u, and zero otherwise. 
9.  */  
10. static inline int atomic_add_unless(atomic_t *v, int a, int u)  
11. {  
12.     int c, old;  
13.     c = atomic_read(v);  
14.     for (;;) {  
15.         if (unlikely(c == (u)))  
16.             break;  
17.         old = atomic_cmpxchg((v), c, c + (a));  
18.         if (likely(old == c))  
19.             break;  
20.         c = old;  
21.     }  
22.     return c != (u);  
23. }  

 atomic_add_unless的功能比较特殊。它检查v是否等于u，如果不是则把v的值加上a，返回值表示相加前v是否等于u。因为在atomic_read和atomic_cmpxchg中间可能有其它的写操作，所以要循环检查自己的值是否被写进去。
 
1. #define atomic_inc_not_zero(v) atomic_add_unless((v), 1, 0)  
2.   
3. #define atomic_inc_return(v)  (atomic_add_return(1, v))  
4. #define atomic_dec_return(v)  (atomic_sub_return(1, v))  

atomic_inc_not_zero在v值不是0时加1。
atomic_inc_return对v值加1，并返回相加结果。
atomic_dec_return对v值减1，并返回相减结果。
 
1. #define atomic_clear_mask(mask, addr)               \  
2.     asm volatile(LOCK_PREFIX &quot;andl %0,%1&quot;           \  
3.              : : &quot;r&quot; (~(mask)), &quot;m&quot; (*(addr)) : &quot;memory&quot;)  
atomic_clear_mask清除变量某些位。
1. #define atomic_set_mask(mask, addr)             \  
2.     asm volatile(LOCK_PREFIX &quot;orl %0,%1&quot;                \  
3.              : : &quot;r&quot; (mask), &quot;m&quot; (*(addr)) : &quot;memory&quot;)  

 atomic_set_mask将变量的某些位置位。
1. /* Atomic operations are already serializing on x86 */  
2. #define smp_mb__before_atomic_dec() barrier()  
3. #define smp_mb__after_atomic_dec()  barrier()  
4. #define smp_mb__before_atomic_inc() barrier()  
5. #define smp_mb__after_atomic_inc()  barrier()  
因为x86的atomic操作大多使用原子指令或者带lock前缀的指令。带lock前缀的指令执行前会完成之前的读写操作，对于原子操作来说不会 受之前对同一位置的读写操作，所以这里只是用空操作barrier()代替。barrier()的作用相当于告诉编译器这里有一个内存屏障，放弃在寄存器 中的暂存值，重新从内存中读入。
 
本节的atomic_t类型操作是最基础的，为了介绍下面的内容，必须先介绍它。如果可以使用atomic_t类型代替临界区操作，也可以加快不少速度。


=======================================================================================
如没有赋值，则返回非零；否则返回零。
int android_atomic_cmpxchg(int32_t oldvalue, int32_t newvalue, volatile int32_t* addr) {
    return OSAtomicCompareAndSwap32Barrier(oldvalue, newvalue,(int32_t*)addr) == 0;
}

OSAtomicCompareAndSwap32Barrier :

if (*addr == oldvalue) {
     *addr = newvalue;
     return 1;
  } else {
     return 0;
  }

</rich_text></node><node name="关于热插拔hotplug /proc/sys/kernel mdev udev busybox " prog_lang="custom-colors" readonly="False" tags="" unique_id="9"><rich_text foreground="#000000">这篇文章说的很好http://blog.chinaunix.net/u1/38994/showart_2022040.html：</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">如何使用busybox精简版本udev程序--mdev动态创建插入的u盘和鼠标等设备 </rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">busybox的mdev是一个精简了的udev管理程序,它可以间接的以hotplug方式被内核调用,进而在arm平台上/dev目录下动态创建设备 节点,因为hotplug会被内核发送uevent之前调用,所以如果动态可插拔设备很多,很频繁,那么每次内核都会调用elf格式的用户空间的 hotplug,生成一个独立的hotplug程序来处理,所以hotplug是一个非常笨重的实现方法,但是在我们的arm开发板上,可插拔设备并没有 想象中的频繁
 目前还没有必要移植完全版的udev,所以完全可以在不复杂的嵌入式设备上使用mdev来管理动态节点,
 方法也很简单,就是在rcS脚本中加入下面一句,将用户空间的应用程序路径传递给内核,
 echo /sbin/mdev &gt; /proc/sys/kernel/hotplug
 之后kernel会在每次设备出现变动时调用上面一句传递进去的用户空间应用程序/sbin/mdev来处理对应的信息,进而mdev应用程序操作/dev目录下的设备,进行添加或删除,可以参考</rich_text><rich_text foreground="#000000" link="webs http://blog.chinaunix.net/u1/38994/showart_1981836.html">添加hotplug函数到内核,监控uevent信息</rich_text><rich_text foreground="#000000"> 
   mdev的另外一个很有用的地方是,他可以通过proc和sys文件系统来动态整理出注册的设备,进而到/dev/下生成他们对应的节点,
 使用该功能之前必须mount上proc和sys文件系统,然后简单的执行下面的一句就弯成了:
   mdev -s
 
 如果需要编译udev,下面是udev的下载地址：</rich_text><rich_text foreground="#000000" link="webs http://www.us.kernel.org/pub/linux/utils/kernel/hotplug/udev-145.tar.bz2">http://www.us.kernel.org/pub/linux/utils/kernel/hotplug/udev-145.tar.bz2</rich_text><rich_text foreground="#000000"> </rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">
 </rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">这个哥们也说得比较详细：</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">http://203.208.39.132/search?q=cache:c8dPpXQD5HwJ:jimmy-lee.blog.hexun.com/31155612_d.html+busybox+hotplug&amp;cd=9&amp;hl=zh-CN&amp;ct=clnk&amp;gl=cn&amp;st_usg=ALhdy28vvvlS7owkZsMZfoX5oCEEE3l8aA</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">
 </rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">1, </rich_text><rich_text background="#ffffff" foreground="#000000">busybox</rich_text><rich_text>   添加mdev支持  
</rich_text><rich_text foreground="#000000">
 </rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">2, 在/etc/rc.d/rcS中添加</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">#mount filesystem</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">/bin/mount -a</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">#start mdev</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">#设置系统的hotplug 程序为mdev</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">echo /sbin/mdev &gt; /proc/sys/kernel/</rich_text><rich_text background="#ffffff" foreground="#000000">hotplug  </rich_text><rich_text>   
   
</rich_text><rich_text foreground="#000000">#</rich_text><rich_text foreground="#ff0000">扫描并创建节点，这一步可不能少</rich_text><rich_text> 
   
</rich_text><rich_text foreground="#000000">mdev –s </rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">
 </rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">/etc/fstab的内容如下：</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">proc    /proc   proc    defaults    0       0</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">none    /tmp    ramfs   defaults 0       0</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">mdev    /dev    ramfs   defaults 0       0</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">sysfs   /sys    sysfs   defaults    0       0</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">
 </rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">执行mdev -s  ：以‘-s’为参数调用位于 /sbin目录写的mdev（其实是个链接，作用是传递参数给/bin目录下的</rich_text><rich_text background="#ffffff" foreground="#000000">busybox </rich_text><rich_text> 程序并调用它），mdev扫描 /sys/class 和 /sys/block 中所有的类设备目录，如果在目录中含有名为“dev”的文件，且文件中包含的是设备号，则mdev就利用这些信息为这个设备在/dev 下创建设备节点文件。一般只在启动时才执行一次 “mdev -s”。  
</rich_text><rich_text foreground="#000000">
 </rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">热插拔事件：由于启动时运行了命令：echo /sbin/mdev &gt; /proc/sys/kernel/</rich_text><rich_text background="#ffffff" foreground="#000000"> </rich_text><rich_text> hotplug ，那么当有热插拔事件产生时，内核就会调用位于 /sbin目录的mdev。这时mdev通过环境变量中的 ACTION 和 DEVPATH，来确定此次热插拔事件的动作以及影响了/sys中的那个目录。接着会看看这个目录中是否有“dev”的属性文件，如果有就利用这些信息为 这个设备在/dev 下创建设备节点文件。  
</rich_text><rich_text foreground="#000000">
 </rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">解决使用mdev时“cannot create /proc/sys/kernel/hotplug :nonexistent directory”错误</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">确保编译内核时编译如下选项：</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">CONFIG_PROC_FS=y</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">CONFIG_PROC_SYSCTL=y</rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">CONFIG_HOTPLUG=y </rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">CONFIG_NET=y </rich_text><rich_text>  
</rich_text><rich_text foreground="#000000">如果CONFIG_HOTPLUG和CONFIG_NET不选或没全选上的话，/proc/sys/kernel下将不会创建</rich_text><rich_text background="#ffffff" foreground="#000000"> </rich_text><rich_text> hotplug文件.(参见kernel/sysctl.c)
</rich_text><rich_text foreground="#000000">////////////////////////////////////////////////////////</rich_text><rich_text>
</rich_text><rich_text foreground="#000000">这里有一段翻译的：</rich_text><rich_text>
 
</rich_text><rich_text foreground="#000000">MDEV 入门(转)
</rich_text><rich_text> 
Busybox-1.7.0/docs/mdev.txt
翻译：tekkamanninja Email：tekkamanninja@163.com - 1 -
-------------
MDEV Primer
</rich_text><rich_text foreground="#0000ff">MDEV 入门</rich_text><rich_text>
-------------
For those of us who know how to use mdev, a primer might seem lame. For
</rich_text><rich_text foreground="#0000ff">这份文档对于那些知道如何使用 mdev 的人看来可能有些肤浅。</rich_text><rich_text>
everyone else, mdev is a weird black box that they hear is awesome, but can't
</rich_text><rich_text foreground="#0000ff">但对于其他人，mdev 可能是一个神秘的黑匣子，以至让人敬畏。</rich_text><rich_text>
seem to get their head around how it works. Thus, a primer.
</rich_text><rich_text foreground="#0000ff">而这份文档又不足以让他们知道mdev 是如何工作的。 因此，这是一份入门文档。
</rich_text><rich_text>-----------
Basic Use
</rich_text><rich_text foreground="#0000ff">基本使用方法
</rich_text><rich_text>-----------
Mdev has two primary uses: initial population and dynamic updates. Both
</rich_text><rich_text foreground="#0000ff">mdev 有两个主要的应用：初始化对象和动态更新。</rich_text><rich_text>
require sysfs support in the kernel and have it mounted at /sys. For dynamic
</rich_text><rich_text foreground="#0000ff">两个应用都需要内核 sysfs 的支持，且必须挂载到 /sys 。为了实现动态更新，</rich_text><rich_text>
updates, you also need to have hotplugging enabled in your kernel.
</rich_text><rich_text foreground="#0000ff">你还必须在内核配置时增加热插拔支持（hotplugging）。</rich_text><rich_text>
Here's a typical code snippet from the init script:
</rich_text><rich_text foreground="#0000ff">以下是系统初始化脚本中一个典型的使用mdev 的代码片段：
</rich_text><rich_text>    [1] mount -t sysfs sysfs /sys
    [2] echo /bin/mdev &gt; /proc/sys/kernel/hotplug
    [3] mdev -s
Of course, a more &quot;full&quot; setup would entail executing this before the previous
</rich_text><rich_text foreground="#0000ff">当然，一个对mdev 更完整的安装还必须在以上代码片段前执行下面的命令：</rich_text><rich_text>
code snippet:
    [4] mount -t tmpfs mdev /dev
    [5] mkdir /dev/pts
    [6] mount -t devpts devpts /dev/pts
The simple explanation here is that [1] you need to have /sys mounted before
</rich_text><rich_text foreground="#0000ff">简单说明一下上面的代码：[1]你必须在执行mdev 前挂载 /sys 。</rich_text><rich_text>
executing mdev. Then you [2] instruct the kernel to execute /bin/mdev whenever
</rich_text><rich_text foreground="#0000ff">随后你 [2] 命令内核在增删设备时执行 /bin/mdev ，</rich_text><rich_text>
a device is added or removed so that the device node can be created or
</rich_text><rich_text foreground="#0000ff">使设备节点文件会被创建和删除。</rich_text><rich_text>
destroyed. Then you [3] seed /dev with all the device nodes that were created
</rich_text><rich_text foreground="#0000ff">最后你 [3] 设置mdev，让它在系统启动时创建所有的设备节点。</rich_text><rich_text>
while the system was booting.
For the &quot;full&quot; setup, you want to [4] make sure /dev is a tmpfs filesystem
</rich_text><rich_text foreground="#0000ff">而对mdev 更完整的安装，你必须[4]确保 /dev 是 tmpfs 文件系统</rich_text><rich_text>
(assuming you're running out of flash). Then you want to [5] create the
</rich_text><rich_text foreground="#0000ff">(假设文件系统在 flash 外运行)。 而且你必须 [5] 创建</rich_text><rich_text>

-------------
MDEV Config (/etc/mdev.conf)
</rich_text><rich_text foreground="#0000ff">MDEV 配置 (/etc/mdev.conf)</rich_text><rich_text>
-------------
Mdev has an optional config file for controlling ownership/permissions of
device nodes if your system needs something more than the default root/root
660 permissions.
</rich_text><rich_text foreground="#0000ff">如果你的系统需要一些比默认的 root/root 660 更多的权限，
你可以使用 mdev 的可选配置文件，以控制设备节点的 所有者 和 权限。</rich_text><rich_text>
The file has the format:
</rich_text><rich_text foreground="#0000ff">这个文件的格式如下：</rich_text><rich_text>
    &lt;device regex&gt; &lt;uid&gt;:&lt;gid&gt; &lt;octal permissions&gt;
For example:
</rich_text><rich_text foreground="#0000ff">例如：</rich_text><rich_text>
    hd[a-z][0-9]* 0:3 660
The config file parsing stops at the first matching line. If no line is
</rich_text><rich_text foreground="#0000ff">这个配置文件在第一个匹配行处停止解析。 如果没有匹配行，</rich_text><rich_text>
matched, then the default of 0:0 660 is used. To set your own default, simply
</rich_text><rich_text foreground="#0000ff">那么就使用默认的 0:0 660 。 你也可以通过在最后创建如下的全匹配
</rich_text><rich_text>create your own total match like so:
</rich_text><rich_text foreground="#0000ff">行，来设置你自己的默认设置：</rich_text><rich_text>
    .* 1:1 777
If you also enable support for executing your own commands, then the file has
</rich_text><rich_text foreground="#0000ff">如果你想 mdev 在找到匹配行时可以执行自定义的命令，那么文件格式如下：</rich_text><rich_text>
the format:
    &lt;device regex&gt; &lt;uid&gt;:&lt;gid&gt; &lt;octal permissions&gt; [&lt;@|$|*&gt; &lt;command&gt;]
The special characters have the meaning:
</rich_text><rich_text foreground="#0000ff">特殊字符的意义如下：</rich_text><rich_text>
   @ Run after creating the device.
</rich_text><rich_text foreground="#0000ff">    @ 在创建设备节点后运行命令。
</rich_text><rich_text>    $ Run before removing the device.
</rich_text><rich_text foreground="#0000ff">    $ 在删除设备节点前运行命令。</rich_text><rich_text>
    * Run both after creating and before removing the device.
</rich_text><rich_text foreground="#0000ff">    * 在创建设备节点后和删除设备节点前都运行命令。
</rich_text><rich_text>The command is executed via the system() function (which means you're giving a
</rich_text><rich_text foreground="#0000ff">这些命令是通过系统函数（system()）执行的（也就是说你在对shell 下命令）</rich_text><rich_text>
command to the shell), so make sure you have a shell installed at /bin/sh.
</rich_text><rich_text foreground="#0000ff">，所以请确保你已在 /bin/sh 安装了shell。</rich_text><rich_text>
For your convenience, the shell env var $MDEV is set to the device name. So if
</rich_text><rich_text foreground="#0000ff">为了方便，shell 的环境变量 $MDEV 会被设置成设备名。 例如</rich_text><rich_text>
the device 'hdc' was matched, MDEV would be set to &quot;hdc&quot;.
</rich_text><rich_text foreground="#0000ff">mdev 解析到设备 'hdc' 匹配，MDEV 将会被设置为 &quot;hdc&quot;。</rich_text><rich_text>

----------
FIRMWARE
</rich_text><rich_text foreground="#0000ff">固件</rich_text><rich_text>
----------
Some kernel device drivers need to request firmware at runtime in order to
</rich_text><rich_text foreground="#0000ff">有些设备驱动程序在运行时，为了正确的初始化设备，需要上传固件。</rich_text><rich_text>
properly initialize a device. Place all such firmware files into the
</rich_text><rich_text foreground="#0000ff">请将所有的固件文件放入</rich_text><rich_text>
/lib/firmware/ directory. At runtime, the kernel will invoke mdev with the
</rich_text><rich_text foreground="#0000ff">/lib/firmware/ 目录。 在运行时，内核将会按固件文件名调用 mdev ，</rich_text><rich_text>
filename of the firmware which mdev will load out of /lib/firmware/ and into
</rich_text><rich_text foreground="#0000ff">之后 mdev 会通过 sysfs 接口将固件从 /lib/firmware/</rich_text><rich_text>
the kernel via the sysfs interface. The exact filename is hardcoded in the
</rich_text><rich_text foreground="#0000ff">装载到内核。 确定的文件名被固化在内核中，</rich_text><rich_text>
kernel, so look there if you need to want to know what to name the file in
</rich_text><rich_text foreground="#0000ff">如有必要，你必须知道如何在用户空间命名这个文件。</rich_text><rich_text>
userspace.
</rich_text></node><node name="戴文linux内核" prog_lang="custom-colors" readonly="False" tags="" unique_id="4"><rich_text>
</rich_text><node name="01 介绍" prog_lang="custom-colors" readonly="False" tags="" unique_id="5"><rich_text>本文作者戴文.科利尔.约翰逊(Devyn Collier Johnson)今年才19岁，但是他在Linux内核、人工智能、编程语言方面拥有丰富的经验，本文是其在</rich_text><rich_text link="webs http://www.linux.org/threads/%EF%BB%BFthe-linux-kernel-introduction.4203/">linux.org上连载的一系列关于内核的文章</rich_text><rich_text>。文章写的深入浅出，本站不揣浅陋，由LCTT成员geekpi进行了系列翻译，以分享给广大Linux爱好者。
 
在1991年，一个叫林纳斯·本纳第克特·托瓦兹的芬兰学生制作了一个现在非常流行的操作系统的内核。他于1991年9月发 布了Linux  0.01，并且于1992年以GPL许可证的方式授权了该内核。GNU通用许可证(GPL)允许人们使用、拥有、修改，以及合法和免费的分发源代码。这使 得内核变得非常流行，因为任何人都可以免费地下载。现在任何人都可以生成他们自己的内核，这有助于人们学习如何获取、编辑、配置、编译并安装Linux内 核。
内核是操作系统的核心。操作系统是一系列的管理硬件并允许用户在电脑上运行应用的程序。内核控制着硬件和应用。应用并不直接和硬件打交道，而是首先和内核交互。总之，软件运行在内核上，而内核操作着硬件。没有内核，电脑就是一个没用的物件。
用户制作他们自己的内核有各种各样的原因。许多用户也许想要一个只包含他们需要的代码的系统内核。比如说我的内核包含了火线 设备驱动，但是我的电脑缺乏这些端口。当系统启动时，时间和内存就会浪费在那些我系统上并没有安装的设备上。如果我想要简化我的内核，我会制作自己不包含 火线驱动的内核。至于另外一个理由，某个用户可能拥有一台有特殊硬件的设备，但是最新的Ubuntu版本中的内核缺乏所需的驱动。这个用户可以下载最新的 内核(比当前Ununtu的Linux内核要新)，并制作他们自己的有相应驱动的内核。不管怎样，这两个原因是用户想要制作自己的Linux内核的普遍原 因。
在下载内核前，我们应该讨论一些重要的术语和事实。Linux内核是一个宏内核，这意味着整个操作系统都运行在内核预留的内 存里。说的更清楚一些，内核是放在内存里的。内核所使用的空间是内核预留的。只有内核可以使用预留的内核空间。内核拥有这些内存空间，直到系统关闭。与内 核空间相对应的还是用户空间。用户空间是内存上用户程序拥有的空间。比如浏览器、电子游戏、文字处理器、媒体播放器、壁纸、主题等都是放在内存里的用户空 间。当一个程序关闭的时候，任何程序都可以使用新释放的空间。在内核空间，一旦内存被占用，则没有任何其他程序可以使用这块空间。
Linux内核也是一个抢占式多任务内核。这意味该内核可以暂停一些任务来保证任何应用都有机会来使用CPU。举个例子，如 果一个应用正在运行但是正在等待一些数据，内核会把这个应用暂停并允许其他的程序使用新释放的CPU资源，直到数据到来。否则的话，系统就会浪费资源给那 些正在等待数据或者其他程序执行的的任务。内核将会强制程序去等待或者停止使用CPU。没有内核的允许，应用程序不能脱离暂停或者使用CPU。
Linux内核使得设备作为文件显示在/dev文件夹下。举个例子，USB端口位于/dev/bus/usb。硬盘分区则位 于/dev/disk/分区。因为这个特性，许多人说：“在Linux上，一切皆文件”。举个例子，如果一个用户想要访问在存储卡上的数据，他们能通过设 备文件访问这些数据。（译注：此处原文是“If a user wanted to access data on their memory  card, for example, they cannot access the data through these device files.”，但根据上下文和实际经验看，应该是“can 能”）
Linux内核是可移植的。可移植性是Linux流行的一个最重要的原因。可移植性使得内核可以工作在各种处理器和系统上。 一些内核支持的处理器的型号包括：Alpha、AMD、ARM、C6X、Intel、x86、Microblaze、MIPS、PowerPC、 SPARC、UltraSPARC等，这还不是全部的列表。
在引导文件夹(/boot),用户会看到诸如“vmlinux”或者“vmlinuz”的文件。这两者都是已编译的 Linux内核。以“z”结尾的是已压缩的。“vm”代表虚拟内存。在SPARC处理器的系统上，用户可以看见一个zImage文件。一小部分用户可以发 现一个bzImage文件，这也是一个已压缩的Linux内核。无论用户有哪个文件，这些引导文件都是不能更改的，除非用户知道他们正在做什么。否则系统 会变成无法引导，也就是说系统启动不了了。
内核源代码就是程序编码。有了源代码，程序员可以修改内核并能观察到内核是如何工作的。

</rich_text><rich_text scale="h3">下载内核:</rich_text><rich_text>
现在我们想更多地了解了内核，就要下载内核源代码了。进入kernel.org并点击那个巨大的下载按钮。下载完成后，解压下载的文件。
对于本文，我使用的源代码是Linux kernel 3.9.4.这个文章系列的所有指导对于所有的内核版本是相同的(或者非常相似的)
</rich_text></node><node name="02 源代码" prog_lang="custom-colors" readonly="False" tags="" unique_id="6"><rich_text>在下载并解压内核源代码后，用户可以看到许多文件夹和文件。尝试去找一个特定的文件或许是一个挑战。谢天谢地，源代码以一个特定的方式组织的。这使开发者能够轻松找到任何文件或者内核的一部分。
内核源代码的根目录下包含了以下文件夹
arch
block
crypto
Documentation
drivers
firmware
fs
include
init
ipc
kernel
lib
mm
net
samples
scripts
security
sound
tools
usr
virt还有一些文件在源代码的根目录下。它们会在下面列出。
COPYING -许可和授权信息。Linux内核在GPLv2许可证下授权。该许可证授予任何人有权免费去使用、修改、分发和共享源代码和编译代码。然而，没有人可以出售源代码。
CREDITS - 贡献者列表
Kbuild - 这是一个设置一些内核设定的脚本。打个比方，这个脚本设定一个ARCH变量，这是开发者想要生成的内核支持的处理器类型。
Kconfig - 这个脚本会在开发人员配置内核的时候用到，这会在以后的文章中讨论。
MAINTAINERS - 这是一个目前维护者列表，他们的电子邮件地址，主页，和他们负责开发和维护的内核的特定部分或文件。当一个开发者在内核中发现一个问题，并希望能够报告给能够处理这个问题的维护者时，这是是很有用的。
Makefile - This script is the main file  that is used to compile the kernel. This file passes parameters to the  compiler as well as the list of files to compile and any other necessary  information. 这个脚本是编译内核的主要文件。这个文件将编译参数和编译所需的文件和必要的信息传给编译器。
README - 这个文档提供给开发者想要知道的如何编译内核的信息。
REPORTING-BUGS - 这个文档提供如何报告问题的信息。
内核的代码是以“.c”或“.h”为扩展名的文件。 “.c”的扩展名表明内核是用众多的编程语言之一的C语言写的，  “h”的文件是头文件，而他们也是用C写成。头文件包含了许多“.c”文件需要使用的代码，因为他们可以引入已有的代码而不是重新编写代码，这节省了程序 员的时间。否则，一组执行相同的动作的代码，将存在许多或全部都是“c”文件。这也会消耗和浪费硬盘空间。（译注：头文件不仅仅可节省重复编码，而且代码 复用也会降低代码错误的几率）
所有上面列出的文件夹中的文件都组织得很好。文件夹名称至少可以帮助开发人员很好地猜测文件夹中的内容。下面提供了一个目录树和描述。
arch -  这个文件夹包含了一个Kconfig文件，它用于设置这个目录里的源代码编译所需的一系列设定。每个支持的处理器架构都在它相应的文件夹中。 如，Alpha处理器的源代码在alpha文件夹中。请记住，随着时间的推移，一些新的处理器将被支持,有些会被放弃。对于Linux  v3.9.4，arch下有以下文件夹：
alpha
arc
arm
arm64
avr32
blackfin
c6x
cris
frv
h8300
hexagon
ia64
m32r
m68k
metag
microblaze
mips
mn10300
openrisc
parisc
powerpc
s390
score
sh
sparc
tile
um
unicore32
x86
xtensablock – 此文件夹包含块设备驱动程序的代码。块设备是以数据块方式接收和发送的数据的设备。数据块都是一块一块的数据而不是持续的数据流。
crypto - 这个文件夹包含许多加密算法的源代码。例如，“sha1_generic.c”这个文件包含了SHA1加密算法的代码。
Documentation - 此文件夹包含了内核信息和其他许多文件信息的文本文档。如果开发者需要一些信息，他们也许能在这里找到所需要的信息。
drivers -  该目录包含了驱动代码。驱动是一个控制硬件的软件。例如，要让计算机知道键盘并使其可用，键盘驱动是必要的。这个文件夹中存在许多文件夹。每个文件夹都以 硬件的种类或者型号命名。例如，'bluetooth'包含了蓝牙驱动程序的代码。还有其他很明显的驱动像SCSI、USB和火线等。有些驱动程序可能会 比较难找到。例如，操纵杆驱动不在'joystick'文件夹中，它们却在./drivers/input/joystick。同样键盘和鼠标驱动也在这 个input文件夹中。 'Macintosh'包含了苹果的硬件代码。 'Xen'包含了Xen  hypervisor代码。（hypervisor是一种允许用户在一台计算机上运行多个操作系统的软件或硬件。这意味着在Xen允许用户在一台计算机上 同时运行的两个或两个以上的Linux系统。用户还可以运行Windows，Solaris，FreeBSD或其他操作系统在Linux系统 上。）driver文件夹下还有许多其他的文件夹，但他们在这篇文章中无法一一列举，他们将在以后的文章中提到。
firmware -  fireware中包含了让计算机读取和理解从设备发来的信号的代码。举例来说，一个摄像头管理它自己的硬件，但计算机必须了解摄像头给计算机发送的信 号。Linux系统会使用vicam固件（firmware）来理解摄像头的通讯。否则，没有了固件，Linux系统将不知道如何处理摄像头发来的信息。 另外，固件同样有助于将Linux系统发送消息给该设备。这样Linux系统可以告诉摄像头重新调整或关闭摄像头。
fs -  这是文件系统的文件夹。理解和使用的文件系统所需要的所有的代码就在这里。在这个文件夹里，每种文件系统都有自己的文件夹。例如，ext4文件系统的代码 在ext4文件夹内。  在fs文件夹内，开发者会看到一些不在文件夹中的文件。这些文件用来控制整个文件系统。例如，mount.h中会包含挂载文件系统的代码。文件系统是以结 构化的方式来存储和管理的存储设备上的文件和目录。每个文件系统都有自己的优点和缺点。这是由文件系统的设计决定的。举例来说，NTFS文件系统支持的透 明压缩（当启用时，会在用户不知道的情况下自动压缩存储文件）。大多数文件系统缺乏此功能，但如果在fs文件夹里编入相应的文件，它们也有这种能力。
include - include包含了内核所需的各种头文件.这个名字来自于C语言用&quot;include&quot;来在编译时导入头文件。
init - init文件夹包含了内核启动的处理代码(INITiation)。main.c是内核的核心文件，这是用来衔接所有的其他文件的源代码主文件。
ipc -  IPC代表进程间通讯。此文件夹中的代码是作为内核与进程之间的通信层。内核控制着硬件，因此程序只能请求内核来执行任务。假设用户有一个打开DVD托盘 的程序。程序不直接打开托盘，相反，该程序通知内核托盘应该被打开。然后，内核给硬件发送一个信号去打开托盘。这些代码同样管理kill信号。举例来说， 当系统管理员打开进程管理器去关闭一个已经锁死的程序，这个关闭程序的信号被称为kill信号。内核接收到信号，然后内核会要求程序停止或直接把进程从内 存和CPU中移除（取决于kill的类型）。命令行中的管道同样用于进程间通信。管道会告诉内核在某个内存页上写入输出数据。程序或者命令得到的数据是来 自内存页上的某个给定的指针。
kernel - 这个文件夹中的代码控制内核本身。例如，如果一个调试器需要跟踪问题，内核将使用这个文件夹中代码来将内核指令通知调试器跟踪内核进行的所有动作。这里也有跟踪时间的代码。在内核文件夹下有个&quot;power&quot;文件夹，这里的代码可以使计算机重新启动、关机和挂起。
lib - 这个文件夹包含了内核需要引用的一系列内核库文件代码。
mm - mm文件夹中包含了内存管理代码。内存并不是任意存储在RAM芯片上的。相反，内核小心地将数据放在RAM芯片上。内核不会覆盖任何正在使用或保存重要数据的内存区域。
net - net文件夹中包含了网络协议代码。这包括IPv6、AppleTalk、以太网、WiFi、蓝牙等的代码，此外处理网桥和DNS解析的代码也在net目录。
samples - 此文件夹包含了程序示例和正在编写中的模块代码。假设一个新的模块引入了一个想要的有用功能，但没有程序员说它已经可以正常运行在内核上。那么，这些模块就会移到这里。这给了新内核程序员一个机会通过这个文件夹来获得帮助，或者选择一个他们想要协助开发的模块。
scripts - 这个文件夹有内核编译所需的脚本。最好不要改变这个文件夹内的任何东西。否则，您可能无法配置或编译内核。
security - 这个文件夹是有关内核安全的代码。它对计算机免于受到病毒和黑客的侵害很重要。否则，Linux系统可能会遭到损坏。关于内核的安全性，将在以后的文章中讨论。
sound - 这个文件夹中包含了声卡驱动。
tools - 这个文件夹中包含了和内核交互的工具。
usr - 还记得在以前的文章中提到vmlinuz和其他类似的文件么？这个文件夹中的代码在内核编译完成后创建这些文件。
virt -  此文件夹包含了虚拟化代码，它允许用户一次运行多个操作系统。这与先前提到的Xen是不同的。通过虚拟化，客户机操作系统就像任何其他运行在Linux主 机的应用程序一样运行。通过Xen这样的hypervisor(注:虚拟机管理程序)，两个操作系统可以同时管理硬件。在虚拟化中，在客户机操作系统上运 行在Linux内核上，而在hypervisor中，它没有客户系统并且所有的系统不互相依赖。
提示: 绝不在内核源代码内移动文件，除非你知道你在做什么。否则，编译会由于缺失文件失败。
Linux内核的文件夹结构保持相对稳定。内核开发者会做一些修改，但总体来说，这些设置对整个内核版本都是一样。驱动程序文件夹的布局也基本保持一样。
</rich_text></node><node name="03 驱动程序" prog_lang="custom-colors" readonly="False" tags="" unique_id="11"><rich_text>驱动程序是使内核能够沟通和操作硬件或协议（规则和标准）的小程序。没有驱动程序，内核不知道如何与硬件沟通或者处理协议 （内核实际上先发送指令给BIOS，然后BIOS传给硬件）。  Linux的内核代码在驱动程序文件夹中以源代码的形式包含了许多驱动程序。驱动文件夹中的每个文件夹会在下面说明。在配置和  编译内核时，这样有助于你了解驱动程序。否则，用户可能会在编译时加入不必要的或者漏掉重要的驱动。驱动代码通常会包含一个单行注释来指出驱动的目的。  比如，tc的驱动代码，有一行的注释说是用于TURBOchannel总线。由于这些文档，用户应该看驱动前几行的注释来了解它们的用途。
有几个术语你应该已经知道，所以下面的信息应该是明白的。一个I/O设备指的是输入/输出设备。例如调制解调器和网卡，他们 发送和接收数据。监视器是一个输出设备 -  只有信息出来。键盘、鼠标和游戏杆是数据输入系统。存储设备用于存储数据，例如SD卡、硬盘、光盘、存储卡等。CPU（处理器）是计算机的“大脑”或“心 脏”  ，如果没有它，电脑就无法运作。主板则是一块连接板上不同组件的印刷线路板。主板及各个组件是计算机的运行的基础。许多计算机用户说主板是电脑的心脏（主 板上有CPU）。主板包含了用于连接外设的端口，外设包括输入、输出和存储设备。总线是主板的电路，它连接着外设。网络设备用于两台或多台计算机之间的连 接。端口则是用户可以插入另外一台设备或一根电缆的设备，例如，用户可以将插入一根火线记忆棒插入一个火线端口；将以太网电缆插入一个以太网端口。光碟的 读取是利用激光，从可以散射或反射的激光的反射面上读出数据，一个常见的  光盘是DVD。许多系统说自己是32位或者64位，这指的是寄存器、地址总线或数据总线的位数。例如，在一块64位的主板上，数据总线（组件之间的银线） 有64根并排到目的的线。存储器地址以位(0和1)的形式在存储器中编址，因此，一个32位存储地址包含32个0和1来表示存储器上的某处地址。

许多驱动程序是通用驱动程序，这意味着一个通用键盘驱动可以使内核可以处理几乎所有的键盘。然而，有些驱动是专用驱动，像苹 果和Commodore就分别为苹果电脑和Amiga系统制造了专门的硬件。Linux内核中已经包含了许多诸如智能手机、苹果、Amiga系统、 PS3、Android平板，和许多其他设备的驱动程序。
注意有些设备的驱动不在本目录中。比如，射频驱动在net和media文件夹下。
</rich_text><rich_text foreground="#00000000ffff">accessibility</rich_text><rich_text> - 这些驱动提供支持一些辅助设备。在Linux 3.9.4中，这个文件夹中只有一个驱动就是盲文设备驱动。
</rich_text><rich_text foreground="#00000000ffff">acpi</rich_text><rich_text> - 高级配置和电源接口（ACPI : Advanced Configuration and Power Interface）驱动用来管理电源使用。
</rich_text><rich_text foreground="#00000000ffff">amba</rich_text><rich_text> - 高级微控制器总线架构（AMBA : Advanced  Microcontroller Bus  Architecture）是与片上系统（SoC）的管理和互连的协议。SoC是一块包含许多或所有必要的计算机组件的芯片。这里的AMBA驱动让内核能 够运行在这上面。
</rich_text><rich_text foreground="#00000000ffff">ata</rich_text><rich_text> - 该目录包含PATA和SATA设备的驱动程序。串行ATA（SATA）是一种连接主机总线适配器到像硬盘那样的存储器的计算机总线接口。并行ATA（PATA）用于连接存储设备，如硬盘驱动器，软盘驱动器，光盘驱动器的标准。PATA就是我们所说的IDE。
</rich_text><rich_text foreground="#00000000ffff">atm</rich_text><rich_text> - 异步通信模式(ATM : Asynchronous Transfer Mode)是一种通信标准。这里有各种接到PCI桥的驱动(他们连接到PCI总线)和以太网控制器(控制以太网通信的集成电路芯片)。
</rich_text><rich_text foreground="#00000000ffff">auxdisplay</rich_text><rich_text> - 这个文件夹提供了三个驱动。LCD 帧缓存（framebuffer）驱动、LCD控制器驱动和一个LCD驱动。这些驱动用于管理液晶显示器 —— 液晶显示器会在按压时显示波纹。注意:按压会损害屏幕,所以请不要用力戳LCD显示屏。
</rich_text><rich_text foreground="#00000000ffff">base</rich_text><rich_text> - 这是个重要的目录包含了固件、系统总线、虚拟化能力等基本的驱动。
</rich_text><rich_text foreground="#00000000ffff">bcma</rich_text><rich_text> - 这些驱动用于使用基于AMBA协议的总线。AMBA是由博通公司开发。
</rich_text><rich_text foreground="#00000000ffff">block</rich_text><rich_text> - 这些驱动提供对块设备的支持，像软驱、SCSI磁带、TCP网络块设备等等。
</rich_text><rich_text foreground="#00000000ffff">bluetooth</rich_text><rich_text> - 蓝牙是一种安全的无线个人区域网络标准(PANs)。蓝牙驱动就在这个文件夹，它允许系统使用各种蓝牙设备。例如，一个蓝牙鼠标不用电缆，并且计算机有一个电子狗(小型USB接收器)。Linux系统必须能够知道进入电子狗的信号，否则蓝牙设备无法工作。
</rich_text><rich_text foreground="#00000000ffff">bus</rich_text><rich_text> - 这个目录包含了三个驱动。一个转换ocp接口协议到scp协议。一个是设备间的互联驱动，第三个是用于处理互联中的错误处理。
</rich_text><rich_text foreground="#00000000ffff">cdrom</rich_text><rich_text> - 这个目录包含两个驱动。一个是cd-rom，包括DVD和CD的读写。第二个是gd-rom(只读GB光盘)，GD光盘是1.2GB容量的光盘，这像一个更大的CD或者更小的DVD。GD通常用于世嘉游戏机中。
</rich_text><rich_text foreground="#00000000ffff">char</rich_text><rich_text> - 字符设备驱动就在这里。字符设备每次传输数据传输一个字符。这个文件夹里的驱动包括打印机、PS3闪存驱动、东芝SMM驱动和随机数发生器驱动等。
</rich_text><rich_text foreground="#00000000ffff">clk </rich_text><rich_text>- 这些驱动用于系统时钟。
</rich_text><rich_text foreground="#00000000ffff">clocksource </rich_text><rich_text>- 这些驱动用于作为定时器的时钟。
</rich_text><rich_text foreground="#00000000ffff">connector</rich_text><rich_text> - 这些驱动使内核知道当进程fork并使用proc连接器更改UID(用户ID)、GID(组ID)和SID(会话ID)。内核需要知道什么时候进程fork(CPU中运行多个任务)并执行。否则,内核可能会低效管理资源。
</rich_text><rich_text foreground="#00000000ffff">cpufreq</rich_text><rich_text> - 这些驱动改变CPU的电源能耗。
</rich_text><rich_text foreground="#00000000ffff">cpuidle</rich_text><rich_text> - 这些驱动用来管理空闲的CPU。一些系统使用多个CPU，其中一个驱动可以让这些CPU负载相当。
</rich_text><rich_text foreground="#00000000ffff">crypto</rich_text><rich_text> - 这些驱动提供加密功能。
</rich_text><rich_text foreground="#00000000ffff">dca</rich_text><rich_text> - 直接缓存访问（DCA ： Direct Cache Access）驱动允许内核访问CPU缓存。CPU缓存就像CPU内置的RAM。CPU缓存的速度比RAM更快。然而,CPU缓存的容量比RAM小得多。CPU在这个缓存系统上存储了最重要的和执行的代码。
</rich_text><rich_text foreground="#00000000ffff">devfreq</rich_text><rich_text> - 这个驱动程序提供了一个通用的动态电压和频率调整(DVFS ： Generic Dynamic Voltage and Frequency Scaling)框架，可以根据需要改变CPU频率来节约能源。这就是所谓的CPU节能。
</rich_text><rich_text foreground="#00000000ffff">dio</rich_text><rich_text> - 数字输入/输出（DIO ：Digital Input/Output）总线驱动允许内核可以使用DIO总线。
</rich_text><rich_text foreground="#00000000ffff">dma</rich_text><rich_text> - 直接内存访问(DMA)驱动允许设备无需CPU直接访问内存。这减少了CPU的负载。
</rich_text><rich_text foreground="#00000000ffff">edac</rich_text><rich_text> - 错误检测和校正（ Error Detection And Correction）驱动帮助减少和纠正错误。
</rich_text><rich_text foreground="#00000000ffff">eisa </rich_text><rich_text>- 扩展工业标准结构总线（Extended Industry Standard Architecture）驱动提供内核对EISA总线的支持。
</rich_text><rich_text foreground="#00000000ffff">extcon </rich_text><rich_text>- 外部连接器（EXTernal CONnectors）驱动用于检测设备插入时的变化。例如，extcon会检测用户是否插入了USB驱动器。
</rich_text><rich_text foreground="#00000000ffff">firewire</rich_text><rich_text> - 这些驱动用于控制苹果制造的类似于USB的火线设备。
</rich_text><rich_text foreground="#00000000ffff">firmware</rich_text><rich_text> -  这些驱动用于和像BIOS(计算机的基本输入输出系统固件)这样的设备的固件通信。BIOS用于启动操作系统和控制硬件与设备的固件。一些BIOS允许用 户超频CPU。超频是使CPU运行在一个更快的速度。CPU速度以MHz(百万赫兹)或GHz衡量。一个3.7  GHz的CPU的的速度明显快于一个700Mhz的处理器。
</rich_text><rich_text foreground="#00000000ffff">gpio</rich_text><rich_text> - 通用输入/输出(GPIO ：General Purpose Input/Output)是可由用户控制行为的芯片的管脚。这里的驱动就是控制GPIO。
</rich_text><rich_text foreground="#00000000ffff">gpu </rich_text><rich_text>- 这些驱动控制VGA、GPU和直接渲染管理(DRM ：Direct Rendering Manager )。VGA是640*480的模拟计算机显示器或是简化的分辨率标准。GPU是图形处理器。DRM是一个Unix渲染系统。
</rich_text><rich_text foreground="#00000000ffff">hid</rich_text><rich_text> - 这驱动用于对USB人机界面设备的支持。
</rich_text><rich_text foreground="#00000000ffff">hsi</rich_text><rich_text> - 这个驱动用于内核访问像Nokia N900这样的蜂窝式调制解调器。
</rich_text><rich_text foreground="#00000000ffff">hv</rich_text><rich_text> - 这个驱动用于提供Linux中的键值对(KVP ：Key Value Pair)功能。
</rich_text><rich_text foreground="#00000000ffff">hwmon</rich_text><rich_text> - 硬件监控驱动用于内核读取硬件传感器上的信息。比如，CPU上有个温度传感器。那么内核就可以追踪温度的变化并相应地调节风扇的速度。
</rich_text><rich_text foreground="#00000000ffff">hwspinlock</rich_text><rich_text> - 硬件转锁驱动允许系统同时使用两个或者更多的处理器，或使用一个处理器上的两个或更多的核心。
</rich_text><rich_text foreground="#00000000ffff">i2c</rich_text><rich_text> - I2C驱动可以使计算机用I2C协议处理主板上的低速外设。系统管理总线(SMBus ：System Management Bus)驱动管理SMBus,这是一种用于轻量级通信的two-wire总线。
</rich_text><rich_text foreground="#00000000ffff">ide</rich_text><rich_text> - 这些驱动用来处理像CDROM和硬盘这些PATA/IDE设备。
</rich_text><rich_text foreground="#00000000ffff">idle</rich_text><rich_text> - 这个驱动用来管理Intel处理器的空闲功能。
</rich_text><rich_text foreground="#00000000ffff">iio</rich_text><rich_text> - 工业I/O核心驱动程序用来处理数模转换器或模数转换器。
</rich_text><rich_text foreground="#00000000ffff">infiniband</rich_text><rich_text> - Infiniband是在企业数据中心和一些超级计算机中使用的一种高性能的端口。这个目录中的驱动用来支持Infiniband硬件。
</rich_text><rich_text foreground="#00000000ffff">input</rich_text><rich_text> - 这里包含了很多驱动，这些驱动都用于输入处理，包括游戏杆、鼠标、键盘、游戏端口（旧式的游戏杆接口）、遥控器、触控、耳麦按钮和许多其他的驱动。如今的操纵杆使用USB端口，但是在上世纪80、90年代，操纵杆是插在游戏端口的。
</rich_text><rich_text foreground="#00000000ffff">iommu</rich_text><rich_text> - 输入/输出内存管理单元(IOMMU ：Input/Output  Memory Management Unit)驱动用来管理内存管理单元中的IOMMU。IOMMU连接DMA  IO总线到内存上。IOMMU是设备在没有CPU帮助下直接访问内存的桥梁。这有助于减少处理器的负载。
</rich_text><rich_text foreground="#00000000ffff">ipack</rich_text><rich_text> - Ipack代表的是IndustryPack。 这个驱动是一个虚拟总线,允许在载体和夹板之间操作。
</rich_text><rich_text foreground="#00000000ffff">irqchip</rich_text><rich_text> - 这些驱动程序允许硬件的中断请求(IRQ)发送到处理器，暂时挂起一个正在运行的程序而去运行一个特殊的程序（称为一个中断处理程序）。
</rich_text><rich_text foreground="#00000000ffff">isdn</rich_text><rich_text> - 这些驱动用于支持综合业务数字网(ISDN)，这是用于同步数字传输语音、视频、数据和其他网络服务使用传统电话网络的电路的通信标准。
</rich_text><rich_text foreground="#00000000ffff">leds</rich_text><rich_text> - 用于LED的驱动。
</rich_text><rich_text foreground="#00000000ffff">lguest</rich_text><rich_text> - lguest用于管理客户机系统的中断。中断是CPU被重要任务打断的硬件或软件信号。CPU接着给硬件或软件一些处理资源。
</rich_text><rich_text foreground="#00000000ffff">macintosh</rich_text><rich_text> - 苹果设备的驱动在这个文件夹里。
</rich_text><rich_text foreground="#00000000ffff">mailbox</rich_text><rich_text> - 这个文件夹(pl320-pci)中的驱动用于管理邮箱系统的连接。
</rich_text><rich_text foreground="#00000000ffff">md</rich_text><rich_text> - 多设备驱动用于支持磁盘阵列，一种多块硬盘间共享或复制数据的系统。
</rich_text><rich_text foreground="#00000000ffff">media</rich_text><rich_text> - 媒体驱动提供了对收音机、调谐器、视频捕捉卡、DVB标准的数字电视等等的支持。驱动还提供了对不同通过USB或火线端口插入的多媒体设备的支持。
</rich_text><rich_text foreground="#00000000ffff">memory</rich_text><rich_text> - 支持内存的重要驱动。
</rich_text><rich_text foreground="#00000000ffff">memstick</rich_text><rich_text> - 这个驱动用于支持Sony记忆棒。
</rich_text><rich_text foreground="#00000000ffff">message</rich_text><rich_text> - 这些驱动用于运行LSI Fusion MPT(一种消息传递技术)固件的LSI PCI芯片/适配器。LSI大规模集成，这代表每片芯片上集成了几万晶体管、
</rich_text><rich_text foreground="#00000000ffff">mfd</rich_text><rich_text> - 多用途设备(MFD)驱动提供了对可以提供诸如电子邮件、传真、复印机、扫描仪、打印机功能的多用途设备的支持。这里的驱动还给MFD设备提供了一个通用多媒体通信端口(MCP)层。
</rich_text><rich_text foreground="#00000000ffff">misc</rich_text><rich_text> - 这个目录包含了不适合在其他目录的各种驱动。就像光线传感器驱动。
</rich_text><rich_text foreground="#00000000ffff">mmc</rich_text><rich_text> - MMC卡驱动用于处理用于MMC标准的闪存卡。
</rich_text><rich_text foreground="#00000000ffff">mtd</rich_text><rich_text> - 内存技术设备(MTD ：Memory technology  devices)驱动程序用于Linux和闪存的交互，这就就像一层闪存转换层。其他块设备和字符设备的驱动程序不会以闪存设备的操作方式来做映射。尽管 USB记忆卡和SD卡是闪存设备，但它们不使用这个驱动，因为他们隐藏在系统的块设备接口后。这个驱动用于新型闪存设备的通用闪存驱动器驱动。
</rich_text><rich_text foreground="#00000000ffff">net</rich_text><rich_text> - 网络驱动提供像AppleTalk、TCP和其他的网络协议。这些驱动也提供对调制解调器、USB 2.0的网络设备、和射频设备的支持。
</rich_text><rich_text foreground="#00000000ffff">nfc</rich_text><rich_text> - 这个驱动是德州仪器的共享传输层之间的接口和NCI核心。
</rich_text><rich_text foreground="#00000000ffff">ntb</rich_text><rich_text> - 不透明的桥接驱动提供了在PCIe系统的不透明桥接。PCIe是一种高速扩展总线标准。
</rich_text><rich_text foreground="#00000000ffff">nubus</rich_text><rich_text> - NuBus是一种32位并行计算总线。用于支持苹果设备。
</rich_text><rich_text foreground="#00000000ffff">of</rich_text><rich_text> - 此驱动程序提供设备树中创建、访问和解释程序的OF助手。设备树是一种数据结构，用于描述硬件。
</rich_text><rich_text foreground="#00000000ffff">oprofile</rich_text><rich_text> - 这个驱动用于从驱动到用户空间进程(运行在用户态下的应用)评测整个系统。这帮助开发人员找到性能问题
</rich_text><rich_text foreground="#00000000ffff">parisc</rich_text><rich_text> - 这些驱动用于HP生产的PA-RISC架构设备。PA-RISC是一种特殊指令集的处理器。
</rich_text><rich_text foreground="#00000000ffff">parport</rich_text><rich_text> - 并口驱动提供了Linux下的并口支持。
</rich_text><rich_text foreground="#00000000ffff">pci</rich_text><rich_text> - 这些驱动提供了PCI总线服务。
</rich_text><rich_text foreground="#00000000ffff">pcmcia</rich_text><rich_text> - 这些是笔记本的pc卡驱动
</rich_text><rich_text foreground="#00000000ffff">pinctrl</rich_text><rich_text> - 这些驱动用来处理引脚控制设备。引脚控制器可以禁用或启用I/O设备。
</rich_text><rich_text foreground="#00000000ffff">platform</rich_text><rich_text> -这个文件夹包含了不同的计算机平台的驱动像Acer、Dell、Toshiba、IBM、Intel、Chrombooks等等。
</rich_text><rich_text foreground="#00000000ffff">pnp</rich_text><rich_text> - 即插即用驱动允许用户在插入一个像USB的设备后可以立即使用而不必手动配置设备。
</rich_text><rich_text foreground="#00000000ffff">power</rich_text><rich_text> - 电源驱动使内核可以测量电池电量，检测充电器和进行电源管理。
</rich_text><rich_text foreground="#00000000ffff">pps</rich_text><rich_text> - Pulse-Per-Second驱动用来控制电流脉冲速率。这用于计时。
</rich_text><rich_text foreground="#00000000ffff">ps3</rich_text><rich_text> - 这是Sony的游戏控制台驱动- PlayStation3。
</rich_text><rich_text foreground="#00000000ffff">ptp</rich_text><rich_text> - 图片传输协议(PTP)驱动支持一种从数码相机中传输图片的协议。
</rich_text><rich_text foreground="#00000000ffff">pwm</rich_text><rich_text> - 脉宽调制(PWM)驱动用于控制设备的电流脉冲。主要用于控制像CPU风扇。
</rich_text><rich_text foreground="#00000000ffff">rapidio</rich_text><rich_text> - RapidIO驱动用于管理RapidIO架构，它是一种高性能分组交换，用于电路板上交互芯片的交互技术，也用于互相使用底板的电路板。
</rich_text><rich_text foreground="#00000000ffff">regulator</rich_text><rich_text> - 校准驱动用于校准电流、温度、或其他可能系统存在的校准硬件。
</rich_text><rich_text foreground="#00000000ffff">remoteproc</rich_text><rich_text> - 这些驱动用来管理远程处理器。
</rich_text><rich_text foreground="#00000000ffff">rpmsg</rich_text><rich_text> - 这个驱动用来控制支持大量驱动的远程处理器通讯总线(rpmsg)。这些总线提供消息传递设施,促进客户端驱动程序编写自己的连接协议消息。
</rich_text><rich_text foreground="#00000000ffff">rtc</rich_text><rich_text> - 实时时钟(RTC)驱动使内核可以读取时钟。
</rich_text><rich_text foreground="#00000000ffff">s390</rich_text><rich_text> - 用于31/32位的大型机架构的驱动。
</rich_text><rich_text foreground="#00000000ffff">sbus</rich_text><rich_text> - 用于管理基于SPARC的总线驱动。
</rich_text><rich_text foreground="#00000000ffff">scsi</rich_text><rich_text> - 允许内核使用SCSI标准外围设备。例如,Linux将在与SCSI硬件传输数据时使用SCSI驱动。
</rich_text><rich_text foreground="#00000000ffff">sfi</rich_text><rich_text> -简单固件接口(SFI)驱动允许固件发送信息表给操作系统。这些表的数据称为SFI表。
</rich_text><rich_text foreground="#00000000ffff">sh</rich_text><rich_text> - 该驱动用于支持SuperHway总线。
</rich_text><rich_text foreground="#00000000ffff">sn</rich_text><rich_text> - 该驱动用于支持IOC3串口。
</rich_text><rich_text foreground="#00000000ffff">spi</rich_text><rich_text> - 这些驱动处理串行设备接口总线(SPI)，它是一个在在全双工下运行的同步串行数据链路标准,。全双工是指两个设备可以同一时间同时发送和接收信息。双工指的是双向通信。设备在主/从模式下通信(取决于设备配置)。
</rich_text><rich_text foreground="#00000000ffff">ssb</rich_text><rich_text> - ssb(Sonics Silicon Backplane)驱动提供对在不同博通芯片和嵌入式设备上使用的迷你总线的支持。
</rich_text><rich_text foreground="#00000000ffff">staging</rich_text><rich_text> - 该目录含有许多子目录。这里所有的驱动还需要在加入主内核前经过更多的开发工作。
</rich_text><rich_text foreground="#00000000ffff">target</rich_text><rich_text> - SCSI设备驱动
</rich_text><rich_text foreground="#00000000ffff">tc</rich_text><rich_text> - 这些驱动用于TURBOchannel，TURBOchannel是数字设备公司开发的32位开放总线。这主要用于DEC工作站。
</rich_text><rich_text foreground="#00000000ffff">thermal</rich_text><rich_text> - thermal驱动使CPU保持较低温度。
</rich_text><rich_text foreground="#00000000ffff">tty</rich_text><rich_text> - tty驱动用于管理物理终端连接。
</rich_text><rich_text foreground="#00000000ffff">uio</rich_text><rich_text> - 该驱动允许用户编译运行在用户空间而不是内核空间的驱动。这使用户驱动不会导致内核崩溃。
</rich_text><rich_text foreground="#00000000ffff">usb</rich_text><rich_text> - USB设备允许内核使用USB端口。闪存驱动和记忆卡已经包含了固件和控制器,所以这些驱动程序允许内核使用USB接口和与USB设备。
</rich_text><rich_text foreground="#00000000ffff">uwb</rich_text><rich_text> - Ultra-WideBand驱动用来管理短距离，高带宽通信的超低功耗的射频设备
</rich_text><rich_text foreground="#00000000ffff">vfio</rich_text><rich_text> - 允许设备访问用户空间的VFIO驱动。
</rich_text><rich_text foreground="#00000000ffff">vhost</rich_text><rich_text> - 这是用于宿主内核中的virtio服务器驱动。用于虚拟化中。
</rich_text><rich_text foreground="#00000000ffff">video</rich_text><rich_text> - 这是用来管理显卡和监视器的视频驱动。
</rich_text><rich_text foreground="#00000000ffff">virt</rich_text><rich_text> - 这些驱动用来虚拟化。
</rich_text><rich_text foreground="#00000000ffff">virtio</rich_text><rich_text> - 这个驱动用来在虚拟PCI设备上使用virtio设备。用于虚拟化中。
</rich_text><rich_text foreground="#00000000ffff">vlynq</rich_text><rich_text> - 这个驱动控制着由德州仪器开发的专有接口。这些都是宽带产品，像WLAN和调制解调器，VOIP处理器，音频和数字媒体信号处理芯片。
</rich_text><rich_text foreground="#00000000ffff">vme</rich_text><rich_text> - WMEbus最初是为摩托罗拉68000系列处理器开发的总线标准
</rich_text><rich_text foreground="#00000000ffff">w1</rich_text><rich_text> - 这些驱动用来控制one-wire总线。
</rich_text><rich_text foreground="#00000000ffff">watchdog</rich_text><rich_text> - 该驱动管理看门狗定时器，这是一个可以用来检测和恢复异常的定时器。
</rich_text><rich_text foreground="#00000000ffff">xen</rich_text><rich_text> -  该驱动是Xen管理程序系统。这是个允许用户运行多个操作系统在一台计算机的软件或硬件。这意味着xen的代码将允许用户在同一时间的一台计算机上运行两 个或更多的Linux系统。用户也可以在Linux上运行Windows、Solaris、FreeBSD、或其他操作系统。
</rich_text><rich_text foreground="#00000000ffff">zorro</rich_text><rich_text> - 该驱动提供Zorro Amiga总线支持。
</rich_text></node><node name="04 安全" prog_lang="custom-colors" readonly="False" tags="" unique_id="7"><rich_text>Linux内核是所有Linux系统的核心。如果有任何恶意代码控制或破害了内核的任何一部分，那么系统会严重受损，文件可 能被删除或损坏，私人信息可能被盗等等。很明显，保持内核安全涉及到用户的最大利益。值得庆幸的是，由于Linux内核极其安全，Linux是一个非常安 全的系统。在用户比例上，Linux病毒比Windows病毒更少，并且Linux用户比Windows用户个人更少感染病毒。(这就是为什么许多公司使 用Linux来管理他们的服务器的一个原因。)  然而，我们仍然没有借口去忽视内核的安全。Linux有几个安全特性和程序，但本文只讨论Linux安全模块(LSM)及其它的内核安全特性。

</rich_text><rich_text foreground="#00000000ffff">AppArmor（应用盔甲）</rich_text><rich_text>最初是由Immunix写的安全模块。自从2009年以来，Canonical维护着这些代码 （Novell在Immunix之后，Canonical以前管理这些代码）。这个安全模块已经从2.6.36版本进入Linux主分支之中。 AppArmor限制了程序的能力。AppArmor使用文件路径来跟踪程序限制。许多Linux管理员称AppArmor是最容易配置的安全模块。然 而，而许多Linux用户觉得这个模块与其它的替代品相比很糟糕。

</rich_text><rich_text foreground="#00000000ffff">安全增强Linux(SELinux)</rich_text><rich_text>是AppArmor的替代品，它最初由美国国家安全局开发（NSA）。SELinux 自从2.6版本就进入内核主分支中。SELinux是限制修改内核和用户空间的工具。SELinux给可执行文件(主要是守护进程和服务端程序)最小特权 去完成它们的任务。SELinux也可以用来控制用户权限。SELinux不像AppArmor那样使用文件路径，而SELinux在追踪权限时使用文件 系统去标记可执行文件。因为SElinux本身使用文件系统管理可执行文件，所以SELinux不能像AppArmor那样对整个文件系统提供保护。
注意：守护进程是在后台运行的程序
注意：虽然在内核中有AppArmor、SELinux及其它安全模块，但只能有一个安全模块被激活。

</rich_text><rich_text foreground="#00000000ffff">Smack</rich_text><rich_text>是安全模块的另一种选择。Smack从2.6.25起进入内核主分支。Smack应能比AppArmor更安全，但比SELinux更容易配置。
</rich_text><rich_text foreground="#00000000ffff">TOMOYO</rich_text><rich_text>，是另外一个安全模块，在2.6.30进入内核主分支。TOMOYO可以提供安全防护，但是它的主要用途是分析系统安全缺陷。

AppArmor、SELinux、Smack和TOMYO组成了四个标准Linux安全模块。这些都通过使用强制访问控制 (MAC ： mandatory access  control)工作，这种访问控制是通过限制程序或者用户执行一些任务来实现的。安全模块还有某些形式的列表规定了它们可以做什么不可以做什么。

</rich_text><rich_text foreground="#00000000ffff">Yama</rich_text><rich_text>在Linux内核中一个新安全模块。Yama还没有作为标准的安全模块，但是在将来他会成为第5个标准安全模块。Yama和其他安全模块一样使用相同的机制。
</rich_text><rich_text foreground="#00000000ffff">“grsecurity”</rich_text><rich_text>是一系列Linux内核安全补丁的集合。多数补丁用于处理远程网络连接和缓冲区溢出的安全问题(以 后讨论)。grsecurity中有一个叫PaX的有趣组件。PaX补丁允许内存里的代码使用最少的所需权限。例如，存储程序的内存段被标为不可写。想想 看，为什么一个可执行的程序需要在内存中是可写的？通过这个补丁，恶意代码就不能修改目前正在执行的程序。缓冲区溢出是一种当程序由于bug或者恶意代码 在内存上写入数据，并让它的内存边界超出到其他程序的内存页上的安全事件。当Pax被激活时，它会帮助阻止这些缓冲区溢出，因为程序没有写到其他内存页上 的权限了。
</rich_text><rich_text foreground="#00000000ffff">Linux入侵检测系统(LIDS)</rich_text><rich_text>是一个内核安全补丁，提供了强制访问控制(MAC)的特性。这个补丁就像扮演LSM模块的角色。
</rich_text><rich_text foreground="#00000000ffff">Systrace</rich_text><rich_text>是一个减少和控制应用程序访问系统文件和系统调用的工具。系统调用是对内核的服务请求。比如，当一个文本编辑器写入一个文件到硬盘上时，程序将会发送一个系统请求让内核写入文件到硬盘中。
这些是在Linux安全系统中非常重要的组件。这些安全模块和补丁使内核免于受到恶意代码的攻击。没有这些特性，Linux系统将会变成一个不安全的操作系统。
</rich_text></node><node name="05 配置内核 (1)" prog_lang="custom-colors" readonly="False" tags="" unique_id="8"><rich_text>现在我们已经了解了内核，现在我们可以进入主要工作：配置并编译内核代码。配置内核代码并不会花费太长时间。配置工具会询问许多问题并且允许开发者配置内核的每个方面。如果你有不确定的问题或者特性，你最好使用配置工具提供的默认值。本系列教程会使读者逐步了解配置内核的整个过程。

配置代码前需要在源文件的文件夹内打开一个终端。当终端打开后，基于你喜好的配置界面，这里有几种不同的配置方法：
    • make config - 纯文本界面 (最常用的选择)。
    • make menuconfig - 基于文本彩色菜单和单选列表。这个选项可以加快开发者开发速度。需要安装ncurses(ncurses-devel)。
    • make nconfig - 基于文本的彩色菜单。需要安装curses (libcdk5-dev)。
    • make xconfig - QT/X-windows 界面。需要安装QT。
    • make gconfig - Gtk/X-windows 界面。需要安装GTK。
    • make oldconfig - 纯文本界面，但是其默认的问题是基于已有的本地配置文件。
    • make silentoldconfig - 和oldconfig相似，但是不会显示配置文件中已有的问题的回答。
    • make olddefconfig -和silentoldconfig相似，但有些问题已经以它们的默认值选择。
    • make defconfig - 这个选项将会创建一份以当前系统架构为基础的默认设置文件。
    • make ${PLATFORM}defconfig - 创建一份使用arch/$ARCH/configs/${PLATFORM}defconfig中的值的配置文件。
    • make allyesconfig - 这个选项将会创建一份尽可能多的问题回答都为‘yes’的配置文件。
    • make allmodconfig - 这个选项将会创建一份将尽可能多的内核部分配置为模块的配置文件。
注意：内核代码可以放进内核自身，也可以成为一个模块。例如，用户可以将蓝牙驱动作为一个模块加入(独立于内核)，或者直接放到内核里，或者完全不加蓝牙驱动。当代码放到内核本身时，内核将会请求更多的内存并且启动会花费更长的时间。然而，内核会执行的更好。如果代码作为模块加入，代码将会一直存在于硬盘上直到被需要时加载。接着模块被加载到内存中。这可以减少内核的内存使用并减少启动的时间。然而，因为内核和模块在内存上相互独立所以会影响内核的性能。另一种选择是不添加一些代码。举例来说，内核开发人员假如知道系统永远都不会使用蓝牙设备，因此这个驱动就可以不加到内核 中。这提升了内核的性能。然而，如果用户之后需要蓝牙设备，那么他么需要安装蓝牙模块或者升级内核才行。
    • make allnoconfig - 这个选项只会生成内核所必要代码的配置文件。它对尽可能多的问题都回答no。这有时会导致内核无法工作在为编译该内核的硬件上。
    • make randconfig - 这个选项会对内核选项随机选择（译注：这是做什么用途的？！）。
    • make localmodconfig - 这个选项会根据当前已加载模块列表和系统配置来生成配置文件。
    • make localyesconfig - 将所有可装载模块（LKM）都编译进内核(译者注：这里与原文 ‘This will set all module options to yes - most (or all) of the kernel will not be in modules’的意思不同，作者也作出了解释：</rich_text><rich_text link="webs http://www.linux.org/threads/the-linux-kernel-configuring-the-kernel-part-1.4274/#post-13307%29&amp;%2312290">http://www.linux.org/threads/the-linux-kernel-configuring-the-kernel-part-1.4274/#post-13307)。</rich_text><rich_text>;
贴士：最好使用“make menuconfig”，因为用户可以保存进度。“make config”不会提供这样的便利，因为配置过程会耗费大量时间。

</rich_text><rich_text scale="h3">配置:</rich_text><rich_text>
大多数开发者选择使用“make  menucongfig”或者其他图形菜单之一。当键入上述配置命令后，第一个问题，是受否将内核编译成64位。选项有“Y”、“n”和“?”。问号用来 解释这个问题，“n”代表这个问题回答否(no),&quot;Y&quot;代表这个问题回答是(yes)。在这个教程里，我选择是。  
这里我输入&quot;Y&quot;(这里是大小写敏感的)并输入回车。
注意：当内核在32位系统上编译时，编译工具会询问内核是否编译成32位。第一个问题在不同的处理器上不一样。
下一行显示的是&quot;Cross-compiler tool prefix (CROSS_COMPILE)  []&quot;（交叉编译器工具前缀）。如果你不是做交叉编译就直接按下回车。如果你正在交叉编译，对ARM系统输入像&quot;arm-unknown-linux-gnu-&quot;，对64位PC输入像&quot;x86_64-pc-linux-gnu-&quot;的字样。对其他处理器而言还有许多其他可能的命令，但是这个表太大了。一旦一名开发者知道他们想要支持的处理器，很容易就可研究出处理器需要的命令。
注意：交叉编译是为别的处理器编译代码。比如，一台Intel系统正编译着不在Intel处理器上运行的程序，比如，这个系统可能正在编译着要在ARM或AMD处理器上运行的代码。
注意：每一项选择会改变接下来显示什么问题及何时显示。我会(在教程里)包含上我的选择让读者可以在他们自己的系统上跟上配置的进度。
接下来,用户会看到“Local version - append to kernel release  (LOCALVERSION)  []”（本地版本号，附加到内核版本号后面）。这使开发人员可以给定一个特殊版本号或命名他们自定义的内核。我将输入“LinuxDotOrg”，这样， 内核版本会显示为“3.9.4-LinuxDotOrg”。接下来，配置工具会询问“Automatically append version  information to the version string (LOCALVERSION_AUTO)  [N/y/?]”（是否自动添加版本信息到版本号后）。如果本地有一个git版本库，git的修订号会被添加到版本号后面。这个例子中我们没有使用 git，所以我回答&quot;no&quot;。不然git修订号将会追加到版本号中。还记得vmlinuz和几个类似的文件么？好了，下一个问题就是问使用哪一种格式压缩内核。开发人员可以从五个选项中选择一个。它们是
    1. Gzip (KERNEL_GZIP)
    2. Bzip2 (KERNEL_BZIP2)
    3. LZMA (KERNEL_LZMA)
    4. XZ (KERNEL_XZ)
    5. LZO (KERNEL_LZO)
Gzip是默认值，所以我选择&quot;1&quot;并按回车。每种压缩格式和其他压缩格式相比都有更高或者更低的压缩比。更好的压缩比意味着更小的体积，但是与低压缩比文件相比，它解压时需要更多的时间。
现在这行显示“Default hostname (DEFAULT_HOSTNAME) [(none)]”（默认主机名）。这里可以配置主机名。通常地，开发者这行留空(我这里留空)，以便以后Linux用户可以自己设置他们的主机名。
接下来开发者可以启用或者禁用交换分区。Linux使用一个叫做&quot;swap  space&quot;的独立分区来使用虚拟内存。这相当于Windows中的页面文件。典型地，开发者在这行“Support for paging of  anonymous memory (swap) (SWAP) [Y/n/?]”（是否支持匿名内存换页）回答“Y”。
接下来的一行（System V IPC (SYSVIPC)  [Y/n/?]）询问内核是否支持IPC。进程间通信使进程间可以通信和同步。最好启用IPC不然许多程序将无法工作。这个问题回答“Y”会使配置工具接 下来问“POSIX Message Queues (POSIX_MQUEUE)  [Y/n/?]”（是否使用POSIX消息队列），这个问题只会在IPC启用后看见。POSIX消息队列是一种给每条消息一个优先级的消息队列（一种进程 间通信形式）。默认的选择是“Y”。按回车选择默认选择（以大写选择指示默认）。
下一个问题“open by fhandle syscalls (FHANDLE) [Y/n/?]”（是否使用文件句柄系统调用来打开文件）是问当有需要进行文件系统操作的时候，程序是否允许使用文件句柄而不是文件名进行。默认上，这个选择是“Y”。
有时，开发者在做了一些选择后，某些问题会自动回答。比如，下一个问题“Auditing support (AUDIT)   [Y/?]”（是否支持审计）会在没有提示的情况下自动回答，因为先前的选项需要这个特性。审计支持会记录所有文件的访问和修改。下一个关于审计的问题 “Enable system-call auditing support (AUDITSYSCALL)  [Y/n/?]”（是否启用系统调用审计支持）。如果启用，所有的系统调用都会记录下来。如果开发者想要更好的性能，那么最好尽可能地禁用审计特性并且不 把它加入内核。而另外一些开发者可能为了安全监控而启用审计。这个问题我选择“n”。下一个审计方面的问题“Make audit loginuid  immutable (AUDITLOGINUIDIMMUTABLE)  [N/y/?]”（是否要审计进程身份ID不可变）是询问进程是否可以改变它们的loginuid(LOGIN User  ID)，如果启用，用户空间的进程将无法改变他们的loginuid。为了更好的性能，我们这里禁用这个特性。（译注：对于使用systemd这样的系 统，其是通过中央进程来重启登录服务的，设置为“y”可以避免一些安全问题；而使用较旧的SysVinit和Upstart的系统，其需要管理员手工重启 登录服务，应该设置为“N”）
注意：当通过“make config”配置时，这些通过配置工具回答的问题会显示出来但是用户无法改变答案。当通过&quot;make menuconfig&quot;配置时，无论用户按任何键都无法改变选项。开发者不需要去改变这些选项，因为之前的选择决定了另外一个问题的选择。
</rich_text></node><node name="06 内核配置(2)" prog_lang="custom-colors" readonly="False" tags="" unique_id="12"><rich_text>这一部分我们讲配置内核IRQ子系统。中断请求(IRQ)是硬件发给处理器的一个信号，它暂时停止一个正在运行的程序并允许一个特殊的程序占用CPU运行。
这个目录中的第一个问题属于内核特性(Expose hardware/virtual IRQ mapping via debugfs  (IRQ_DOMAIN_DEBUG))（通过debugfs来显示硬件/虚拟的IRQ映射），它询问是否可以使用虚拟的调试文件系统来映射硬件及 Linux上对应的IRQ中断号。这个用作调试目的，大多数用户不需要用到，所以我选择了&quot;no&quot;。
下一个标题显示&quot;Timers subsystem&quot;（计时器子系统）。第一个有关定时器子系统的问题是“Tickless System  (Dynamic Ticks)  (NO_HZ)”（无滴答系统）。我选择了“yes”，这会启用一个无滴答系统。这意味着定时器中断将会按需使用，定时器中断允许任务以特定的时间间隔执 行。下一个问题(High Resolution Timer Support  (HIGH_RES_TIMERS))问是否支持高精度定时器。并不是所有的硬件支持这个，通常地说，如果硬件很慢或很旧，那么选择&quot;no&quot;,否则像我一 样选择&quot;yes&quot;。
下一个标题&quot;CPU/Task time and stats accounting&quot;（CPU/任务用时与状态统计），这个是关于进程的追踪。第一个问题看上去像这样：
Cputime accounting （CPU用时统计）
    1. Simple tick based cputime accounting (TICK_CPU_ACCOUNTING) （简单基于滴答的用时统计）
    2. Full dynticks CPU time accounting (VIRT_CPU_ACCOUNTING_GEN) (NEW) （全动态滴答的用时统计）
    3. Fine granularity task level IRQ time accounting (IRQ_TIME_ACCOUNTING) （细粒度的任务级IRQ用时统计）
TICKCPUACCOUNTING会在每个CPU滴答中检测/proc/stat。这是默认的选项，这个记账方法非常简单。
注意：CPU滴答是抽象测量CPU时间的方式。每个处理器、操作系统和安装的系统都不同，比如说，一个更强大的处理器会比老的处理器拥有更多的 CPU滴答。如果你安装了一个Linux系统，然后接着在同一块磁盘上重新安装了它，你可能会得到一个更快或更慢的CPU滴答时间(至少一些计算机技术书 上这么说)。通常来讲，一个更快的时钟速度意味着更多的CPU滴答。
如果启用了VIRT_CPU_ACCOUNTING_GEN，任务和CPU时间统计将由监视内核-用户边界实现。这个选择的代价是会增加额外的开销。
IRQ_TIME_ACCOUNTING记账方式则通过检测IRQ状态间的时间戳工作，这个性能开销很小。
我选择了&quot;1&quot;并被询问有关BSD记账&quot;BSD Process Accounting (BSD_PROCESS_ACCT)&quot;（BSD进程记账）的问题。这个内核特性会记录每个进程不同的关闭信息。为了得到一个更小和更快的内核，我选择了&quot;no&quot;.
下一组问题看上去就像下面这样。
    • Export task/process statistics through netlink (TASKSTATS) （通过netlink导出任务/进程统计数据）
    • Enable per-task delay accounting (TASK_DELAY_ACCT) （启用针对每个任务的延迟统计）
    • Enable extended accounting over taskstats (TASK_XACCT) （启用taskstats的扩展统计）
TASKSTATS使内核可以通过网络套接字导出进程统计。网络套接字是内核和用户空间进程间IPC通信的一种形式。TASKDELAY\ACCT监视进程并注意资源访问的延迟。比如，TASKDELAYACCT可以看到X进程正在为了CPU时间而等待，如果TASK_DELAY_ACCT观察到进程已经等待了太长时间，这个进程接着就会被给予一些CPU时间。TASK_XACCT会收集额外的统计数据，为了更小的内核负载我会禁用这个。
现在接下来的目录就会显示RCU子系统：读取-复制-更新子系统是一种低负载的同步机制，它允许程序查看到正在被修改/更新的文件。配置工具已经回答了第一个问题。
RCU Implementation （RCU 实现方式）
&gt; 1. Tree-based hierarchical RCU (TREE_RCU) （树形分层结构的RCU）
choice[1]: 1
这里就选择“1”。除了TREE_RCU，还有classic RCU(更老的实现)。下一个问题(Consider userspace as  in RCU extended quiescent state (RCU_USER_QS)  [N/y/?])（是否在用户空间记录扩展的quiescent状态）问RCU是否可以在CPU运行在用户空间时设置一个特殊的quiescent状态。 这个选项通常被禁用，因为这会增加太多消耗。下面是另一个RCU问题(Tree-based hierarchical RCU fanout  value (RCU_FANOUT) [64])（树形分层结构的RCU端点数），问的是关于端点数。下一个问题(Tree-based  hierarchical RCU leaf-level fanout value (RCU_FANOUT_LEAF)  [16])（树形分层结构的RCU叶级端点数），是另外一个关于端点数的问题，但它只处理叶级。还有另外一个RCU问题(Disable  tree-based hierarchical RCU auto-balancing (RCU_FANOUT_EXACT)  [N/y/?])（是否禁用树形分层结构的RCU的自动平衡），询问是否禁用RCU自动平衡树，而采用上述的端点数。
接下来，配置脚本将会询问&quot;Accelerate last non-dyntick-idle CPU's grace periods  (RCU_FAST_NO_HZ)&quot;（加速最后的非dyntick-idle CPU的RCU宽限期）。在这之后会显示&quot;Offload RCU  callback processing from boot-selected CPUs  (RCU_NOCB_CPU)&quot;（从选择引导的CPU里面卸载RCU回调）。（译注：此处作者没做解释。前一个能够节省电力，但是降低了性能；后一个用于 调试。）
下一个问题非常重要(Kernel .config support  (IKCONFIG))（内核的.config支持）。开发人员可以选择保存由这个配置工具生成的设置到一个文件中。这个文件可以放在内核中，也可在一个 模块中，或者完全不保存。这个文件可以被想要编译一个完全跟某人相同内核的开发者使用。这个文件还可以帮助开发人员使用一个更新的编译器重新编译一个内 核。举例来说，开发人员配置并编译了一个内核，然而编译器有一些bug，但开发人员仍然需要一个使用这些设置的内核。而值得庆幸的是，开发人员可以升级他 们的编译器，并使用设置文件来节省他们重新配置内核的时间。开发人员也可以在另一台计算机上保存源代码和配置文件并编译内核。至于另一个目的，开发人员可 以加载该文件，并根据需要调整设置。我选择保存配置文件在一个模块中，这个问题 &quot;Enable access to .config through  /proc/config.gz  (IKCONFIG_PROC)&quot;（启用通过/proc/config.gz来访问.config的功能）是询问这个文件是否是可以通过这次方式访问的， 我选择了&quot;yes&quot;。
下一个问题是内核使用多大的log缓冲区(Kernel log buffer size (16 =&gt; 64KB, 17 =&gt;  128KB) (LOG_BUF_SHIFT)  [17])（内核日志缓冲区大小）。小的缓冲区意味着它无法像更大的缓冲区那样保持日志更长的时间。这个选择取决于开发者想要日志保持的时间，我选择的 是&quot;12&quot;。
接着，出现了另外一个问题。该问题询问关于是否启用NUMA(非一致性内存访问)的内存/任务的均衡(Automatically enable  NUMA aware memory/task placement  (NUMA_BALANCING_DEFAULT_ENABLED))（自动启用NUMA的内存/任务均衡）。如果在NUMA的机器上设置了该选项，那么 NUMA自动平衡就会启用。在NUMA下，处理器可以比非本地内存(内存分配给另外一个处理器或在处理器之间共享的内存)更快地访问它的本地内存。如果上 面启用了(我启用了)，那么最好对这个问题&quot;Memory placement aware NUMA scheduler  (NUMA_BALANCING)&quot;（由NUMA调度器进行内存分配）回答&quot;yes&quot;，这是一个NUMA调度器。
在新的标题&quot;Control Group support&quot;（Cgroup支持）下，因为先前的选择，&quot;Control Group support (CGROUPS)&quot;（Cgroup支持）被自动地回答了&quot;yes&quot;。
以下设定(Example debug cgroup subsystem  (CGROUP_DEBUG))（导出Cgroup子系统的调试信息）是启用一个用于调试cgroup框架的一个简单cgroup子系统。下一个选项 (Freezer cgroup subsystem  (CGROUP_FREEZER))（冻结Cgroup子系统）可以让程序员可以冻结或解冻cgroup内的任务。
注意：cgroup是一组进程。
下面我们要求回答&quot;Device controller for cgroups  (CGROUP_DEVICE)&quot;(Cgroup的设备控制器)。cgroup(控制组)是一种用来控制资源使用的特性。回答&quot;yes&quot;可以允许设备 cgroup的白名单可以使用open和mknod系统调用(用来创建文件系统节点的系统调用)。
下一个问题(Cpuset support  (CPUSETS))（CPU分组支持）询问的是内核是否可以创建和管理CPU分组。这允许管理员可以在一个系统上动态分配各组内存节点，并分配任务在这 些内存上运行。这通常用于SMP和NUMA系统中。我这个问题回答的是&quot;no&quot;。
注意：请记住，如果我没有指定我选的是什么，那么我选的就是默认选项。
启用cgroup统计子系统(Simple CPU accounting cgroup subsystem  (CGROUP_CPUACCT))（Cgroup子系统的简单CPU统计）会生成一个资源控制器来监控在一个cgroup组内的独立任务的CPU使用情 况。我选择了&quot;no&quot;。
资源计数器(Resource counters (RESOURCE_COUNTERS))使控制器的独立资源统计功能能够统计cgroup。我选择了&quot;no&quot;。
下一个问题(Enable perf_event per-cpu per-container group (cgroup)  monitoring  (CGROUP_PERF))（启用每个CPU、每个容器组的pref_event监控）允许开发者扩展每个CPU的模式，使它可以只监控运行在特定 CPU上的一个特别的cgroup组的线程。
下一章节是&quot;Group CPU Scheduler&quot;（CPU分组调度器）。前两个已经回答的问题包括：
Group CPU scheduler (CGROUPSCHED)（CPU分组调度器） Group scheduling for SCHEDOTHER (FAIRGROUP\SCHED)（SCHED_OTHER分组调度）
第一个已回答的问题(CPU bandwidth provisioning for FAIR_GROUP_SCHED  (CFS_BANDWIDTH))（CPU带宽分配）询问的是内核是否允许用户设置在公平组调度器内执行的任务的CPU带宽限制。没有限制的组会被认为不 受约束，并会没有限制地运行。
注意：并不是所有内核选项都在这里。我这里提到的组只是为了便于阅读，并挑出那些新的和大的部分。并不需要了解所有的分组。分组有助于使用图形工具配置内核，这样开发者可以在搜索特定的设置时，直接通过分组菜单找到。
开发者可以通过回答&quot;Group scheduling for SCHED_RR/FIFO (RT_GROUP_SCHED)&quot;（SCHED_RR/FIFO分组调度）这个问题为&quot;yes&quot;来让用户可以分配CPU带宽到任务组中。
下一个问题是&quot;Block IO controller (BLK_CGROUP)&quot;（块IO控制器）。任务组可以被识别，并且它们的磁盘带宽是由使用块IO控制器实现的CFQ IO调度器分配的。BIO在块级的限制逻辑使用块IO控制器来提供设备上的IO速率上限。
这里有一个调试问题(Enable Block IO controller debugging (DEBUGBLKCGROUP) [N/y/?])（启用阻塞IO控制器的调试）询问是否启用块IO控制器的调试。为了制作一个精简的内核，最好禁用这个特性。
为了启用内核中的检查点和还原特性。这个问题“Checkpoint/restore support  (CHECKPOINT_RESTORE)”（检查点及还原支持）可以选择“yes”，不过为了更低的负载这里我选择了“n”。启用这个特性会增加辅助的 进程控制代码来设置进程的代码段、数据段和堆的大小，并增加了一些额外的程序入口。
下面我们就要配置命名空间的支持了。命名空间是一组标识符的容器。比如，/usr/lib/python3/dist-packages /re.py就是一个标识符，/usr/lib/python3/dist-packages/就是一个命名空间。而re.py是这个命名空间下的本地名 称。
第一个命名空间问题(Namespaces support  (NAMESPACES))询问的是是否启用命名空间。这允许可以使用相同的PID但在不同的命名空间内(译注：原文为&quot; This will  allow the same PIDs (Process ID) to be used but indifferent  namespaces&quot;,这里indiffernt根据上下文应该是少了空格)，否则PID永远不会重复。
下一个问题(UTS namespace (UTS_NS))询问是否可以让UTS命名空间内的任务可以在uname()系统调用中看到不同的信息。uname()系统调用提供查看机器和操作系统的信息。
启用IPC命名空间(IPC namespace (IPC_NS))将允许在这个命名空间内的任务与其他命名空间内相对应IPC ID的对象协同工作。
PID命名空间(PID Namespaces (PID_NS))就是进程ID命名空间。这可以使不同的进程在不同的PID命名空间使用相同的PID。这是一个容器的构建块。
接下来，启用网络命名空间(Network namespace (NET_NS))可以使用户创建一个拥有多个实例的网络栈。
当启用后,自动进程分组调度(SCHED_AUTOGROUP)会填充并创建任务组来优化桌面程序的调度。它将把占用大量资源的应用程序放在它们自己的任务组，这有助于性能提升。
这里是一个调试特性，除非你有特别的需求否则应该禁用它。这个问题(Enable deprecated sysfs features to  support old userspace tools  (SYSFS_DEPRECATED))（启用不推荐的sysfs功能来支持旧式的用户空间工具）询问是否启用sysfs，这是调试内核时用的虚拟文件系 统。
接下来，因为当前的配置需要它，所以&quot;Kernel-&gt;user space relay support (formerly  relayfs)  (RELAY)&quot;（内核-&gt;用户空间的中继支持，即relayfs）已经被设成&quot;yes&quot;了。最好启用initrd支持(Initial RAM  filesystem and RAM disk (initramfs/initrd) support  (BLK_DEV_INITRD))（初始化内存文件系统和内存盘(initramfs/initrd)）。
用户会被问及哪里放置initramfs源文件。如果没有需要，请留空。
接下来,开发人员会被询问关于初始虚拟磁盘(Linux的内核映像文件)所支持的压缩格式。你可以启用所有支持的压缩格式。
    • Support initial ramdisks compressed using gzip (RD_GZIP)
    • Support initial ramdisks compressed using bzip2 (RD_BZIP2)
    • Support initial ramdisks compressed using LZMA (RD_LZMA)
    • Support initial ramdisks compressed using XZ (RD_XZ)
    • Support initial ramdisks compressed using LZO (RD_LZO)
这里设置了内核的编译内核编译选项(Optimize for size (CC_OPTIMIZE_FOR_SIZE))（优化大小）。开发者可以让编译器在编译时优化代码。我选择了&quot;yes&quot;。
用户想要配置更多的内核特性，那么下个问题就回答&quot;yes&quot;(Configure standard kernel features (expert users) (EXPERT))（配置标准内核特性（专家级用户））。
要启用过时的16位UID系统调用封装器，这个问题设成&quot;yes&quot;(Enable 16-bit UID system calls (UID16))。系统调用就会使用16位UID。
推荐启用&quot;sysctl syscall&quot;(Sysctl syscall support (SYSCTL_SYSCALL))支持。这使/proc/sys成为二进制路径的接口。
接下来的两个问题已经被预先回答了&quot;yes&quot;,它们是&quot;Load all symbols for debugging/ksymoops  (KALLSYMS)&quot;（载入所以的调试符号）和&quot;“Include all symbols in kallsyms  (KALLSYMS_ALL)&quot;（包括所有的kallsyms符号）。这些都是启用调试标志。
下一步，开发者应该启用printk支持( (Enable support for printk  (PRINTK)))，这会输出内核消息到内核日志中。这在内核出错时是很重要的。编译一个&quot;哑巴&quot;内核并不是一个好主意。然而，如果我们启用了这个支 持，就会被一些开发者看到这些出错，要么就不要启用。
除非有必要，开发者可以禁用bug支持(BUG() support (BUG))。禁用这项将会不支持WARN信息和BUG信息。这会减小内核的体积。
</rich_text></node><node name="07 配置内核 (3)" prog_lang="custom-colors" readonly="False" tags="" unique_id="13"><rich_text>下一个问题(Enable ELF core dumps (ELF_CORE))询问的是内核是否可以生成内核转储文件。这会使内核变大4KB。所以我选择了&quot;no&quot;。
注意：内核转储文件(内存或者系统的转储)是程序崩溃前已记录的状态。内核转储是用来调试问题的。这个转储文件的格式是ELF(Executable and Linkable Format )。
下面可以启用PC扬声器(Enable PC-Speaker support (PCSPKR_PLATFORM))。大多数计算机用户拥有并使用扬声器，所以这个启用它。
虽然下面的特性会增加内核的大小(Enable full-sized data structures for core (BASE_FULL))（启用完全大小的内核数据结构），但性能也随之增加。所以我选择&quot;yes&quot;。
为了使内核可以运行基于glibc的程序，必须启用FUTEX(Enable futex support (FUTEX))。这个特性启用了快速用户空间互斥锁(Fast Userspace muTEXes)。
注意：glibc(GNU C Library)是由GNU实现的标准C库。
注意：FUTEX (fast userspace mutex)是用来防止两个线程访问同一个不能被多个线程使用的共享资源。
下一个问题(Enable eventpoll support (EPOLL))可以通过回答&quot;no&quot;来禁用epoll系统调用。然而，为了含有epoll系统调用，我选择了&quot;yes&quot;。epoll是一种I/O事件通知系统。
为了收到来自文件描述符的信号，我们启用signalfd系统调用(Enable signalfd() system call (SIGNALFD)。
如果启用这个特性(Enable timerfd() system call (TIMERFD))，它允许程序使用定时器事件获取文件描述符。
我们现在的配置必须启用eventfd系统调用(Enable eventfd() system call  (EVENTFD))。它默认启用访问共享内存文件系统(Use full shmem filesystem  (SHMEM)。共享内存文件系统是一种虚拟内存文件系统。
下一个问题是&quot;Enable AIO support (AIO)&quot;。这个特性启用了线程化程序使用的POSIX异步I/O。
注意：异步I/O用来处理输入/输出，它允许线程在传输完成前就完成处理。
如果你正在给一个嵌入式系统配置一个内核，那么问题“Embedded system (EMBEDDED)”可以选择&quot;yes&quot;。否则就像我一样选择&quot;no&quot;。
注意：嵌入式系统是运行在一个更大的电子系统的实时计算机。
现在，我们可以配置内核性能事件和计时器了。配置工具没有给开发者选择，直接启用了事件和计数器(Kernel performance events and counters (PERF_EVENTS))（内核性能事件和计数器）。这是一个重要特性。
接下来，我们可以禁用另外一个调试特性(ebug: use vmalloc to back perf mmap() buffers (DEBUG_PERF_USE_VMALLOC))。
如果启用了VM事件计数器，那么事件计数就会显示在/proc/vmstat(Enable VM event counters for  /proc/vmstat (VM_EVENT_COUNTERS))。如果禁用了事件计数就不会显示，/proc/vmstat只会显示内存页计数。
为了更好地支持PCI芯片，(Enable PCI quirk workarounds (PCI_QUIRKS))回答yes。这会启用对PCI芯片的怪异行为和bug的临时解决方案。
下面一个调试特性可以像我一样禁用掉(Enable SLUB debugging support  (SLUB_DEBUG))。这个特性会耗费很多空间并且会禁用用于调试内核的SLB  sysfs。如果这个特性被禁用，那么/sys/slab就不会存在并且系统上也不再支持缓冲验证。
堆随机化是一个让利用堆漏洞更加困难的特性(Disable heap randomization  (COMPAT_BRK))。然而我们不应该去启用它，因为任何基于libc5的软件都无法工作在这个系统上！只有我们有特别的理由这么做或者如果你不会 使用基于libc5的软件时才去启用它。我禁用了这个特性。当编译一个通用的内核时，开发这会希望禁用这个特性。
接下来必须选择一个SLAB分配器。SLAB分配器是一个没有碎片且有效率地将内核对象放置在内存中的内存管理系统。默认选择是&quot;2&quot;。
Choose SLAB allocator
1. SLAB (SLAB)
&gt; 2. SLUB (Unqueued Allocator) (SLUB)
3. SLOB (Simple Allocator) (SLOB)
choice[1-3?]: 2
为了支持扩展性能支持，(Profiling support (PROFILING))回答&quot;yes&quot;。
下一个问题让开发者选择是否启用OProfile系统。它可以禁用、启用或者添加为一个模块在需要时载入。我选择禁用这个特性。
Kprobes允许用户捕捉几乎任意的内核地址去启动一个回调函数。这是一个可以像我一样禁用的调试工具(Kprobes (KPROBES))。
这个优化特性可以启用(Optimize very unlikely/likely branches (JUMP_LABEL))（优化非常近似/不近似的分支）。这使分支预判更加简单并可以减小开销。
配置工具启用了一个实验性特性&quot;透明用户空间探针&quot;(Transparent user-space probes (EXPERIMENTAL) (UPROBES))。不过不要担心，系统可以很好工作，并不是所有的实验性特性是不稳定或者坏的。
接下来，我们会被询问基于gcov的内核分析(Enable gcov-based kernel profiling (GCOV_KERNEL))。这可以被禁用。
为了允许内核加载模块，需要启用可加载模块支持(Enable loadable module support (MODULES))。
内核一般只能加载有版本号的模块。如果想允许内核加载没有版本号的模块，就启用这个特性(Forced module loading  (MODULE_FORCE_LOAD))（强制模块载入）。这么做是一个很糟糕的注意，所以我已经禁用了它，除非你有特定的需求需要这个特性。
如果启用了这个特性(Module unloading  (MODULE_UNLOAD))，Linux内核也能卸载模块，最好启用。如果内核判断你要卸载的模块不应该被卸载，那么用户则无法卸载模块。启用强制 卸载也行，但是不建议(Forced module unloading (MODULE_FORCE_UNLOAD)。
为了使用不是为你的内核开发的或者并不适用你的版本号的模块，可以启用版本支持(Module versioning support (MODVERSIONS))。最好不要混用不同版本号的模块，所以我禁用了这个特性。
模块在它们的modinfo(模块信息)里有一个字段名为&quot;srcverion&quot;。这个字段允许开发者知道使用什么源码版本来编译模块。启用这个选 项可以在编译模块的时候加入这个字段。这个并不必要，所以我禁用了它(Source checksum for all modules  (MODULE_SRCVERSION_ALL))。如果启用了先前的选项，开发者可以将校验和加入到模块中(Source checksum for  all modules (MODULE_SRCVERSION_ALL))。
为了启用模块签名验证(Module signature verification (MODULE_SIG))，这个选项回答&quot;yes&quot;。因为这个并不必要，我选择了&quot;no&quot;，否则内核在加载模块前会检查并验证签名。
为了启用块级支持(Enable the block layer (BLOCK)),像我一样选择&quot;yes&quot;。禁用这个将会使块设备无法使用并且无法启用某些文件系统。
下面，SG支持已经默认启用(Block layer SG support v4  (BLK_DEV_BSG))（块级SG支持V4版），并且辅助库也启用了(Block layer SG support v4 helper lib  (BLK_DEV_BSGLIB))。
下面回答的问题是关于对块设备的数据完整性支持(Block layer data integrity support (BLK_DEV_INTEGRITY))。这个特性允许拥有更好的数据完整性来提供设备数据保护特性。许多设备不支持这个特性，所以我禁用了它。
如果启用了块级bio带宽限制(Block layer bio throttling support (BLK_DEV_THROTTLING))那就可以限制设备的IO速率。
为了启用外部分区方案的支持，这个问题就回答&quot;yes&quot;(Advanced partition selection (PARTITION_ADVANCED))。我禁用了这个特性。
为了启用CSCAN(译注：循环扫描)和FIFO过期请求，那就启用最后期限IO调度器(Deadline I/O scheduler (IOSCHED_DEADLINE))。
CFQ IO调度器在处理器之间平均地分配带宽。因此启用这个特性feature (CFQ I/O scheduler (IOSCHED_CFQ))是个好主意。
下面，开发者可以启用或禁用CFQ组支持(CFQ Group Scheduling support (CFQ_GROUP_IOSCHED))。接下来，开发者可以选择默认的IO调度器，最好选择DEFAULT_DEADLINE。
对于小于32位寻址的设备，下面的特性会分配16MB的寻址空间(DMA memory allocation support (ZONE_DMA))。如果你不使用这些设备，那么这个是可以禁用的，所以我禁用了它。
对于有多个CPU的系统，最好启用SMP(Symmetric multi-processing support (SMP))。对于只有单个处理器的设备，内核会在禁用这个特性后执行得更快。我启用了这个特性。
对于支持x2apic的CPU，启用x2apic支持support (Support x2apic (X86_X2APIC))。如果你的系统缺乏这个特性就像我一样禁用它。
接下来我们可以启用对那些缺乏合适的ACPI支持的旧式SMP系统的MPS表(Enable MPS table (X86_MPPARSE))。一些拥有ACPI、DSDT、MADT支持的更新的系统不需要这个特性。我禁用了它。
下面的问题允许我们启用扩展x86平台的支持(Support for extended (non-PC) x86 platforms  (X86_EXTENDED_PLATFORM))。只有在你需要一个通用内核或者内核运行在某个特定的需要扩展支持的处理器上时才启用它。我禁用了这个 特性。
为了支持Intel低功耗子系统，就启用这个特性(Intel Low Power Subsystem Support (X86_INTEL_LPSS))。
单一深度WCHAN输出(Single-depth WCHAN output (SCHED_OMIT_FRAME_POINTER))是用来计算电量(/proc//wchan)，然而这会导致更多的功耗。
下面，我们启用虚拟客户系统支持(Paravirtualized guest support (PARAVIRT_GUEST))。这允许一个Guest操作系统与主操作系统一起运行。我会禁用这个特性。
Memtest是一个在系统启动时检测内存的软件。Memtest可以配置为每次或者有时开机运行。Memtest并不必要，所以我禁用了它。
这里我们可以选择一个内核应该支持的处理器家族。我选择了5 – Generic-x86-64。这是一个64位的系统，x86是32系统。
下面我们能选择也支持x86(32位)处理器 (Supported processor vendors (PROCESSOR_SELECT))。
为了发现机器异常，我们可以启用DMI扫描(Enable DMI scanning (DMI))，这可以检测异常。
要启用DMA访问系统上32位内存的3GB以上的内存，下一个问题(GART IOMMU support (GART_IOMMU))我们回答&quot;yes&quot;。
</rich_text></node><node name="08 配置内核(4)" prog_lang="custom-colors" readonly="False" tags="" unique_id="22"><rich_text>这里我们被问及关于&quot;IBM Calgary IOMMU support (CALGARY_IOMMU)&quot;。这个选项将会提供对IBM  xSeries x366和x460的IOMMU的支持。这也将让那些32位PCI的设备工作正常——在这些系统上不支持双地址周期(DAC :  Double Address  Cycle)——因为该系统设置在访问超过3GB内存的时候会有问题。如果需要这些IOMMU设备可以用&quot;iommu=off&quot;在启动时关闭。(这些内核 /模块参数会在以后的文章中讨论)
IOMMU(input/output memory management  unit)是一个内存管理单元(MMU)，它连接具有DMA功能的I/O总线到主内存上。DMA(Direct Memory  Access)是许多计算机支持的一种允许特定设备不借助CPU直接访问内存的特性。双地址周期(Double Address Cycle,  DAC)是64位DMA；而通常的DMA使用32位。
下面，我们被问及是否默认启用Calgary(Should Calgary be enabled by default?  (CALGARY_IOMMU_ENABLED_BY_DEFAULT))。Calgary与上面提到的IOMMU是同一个概念。这两者之间的不同是 IOMMU可以支持许多设备而Calgary只能支持IBM  IOMMU设备。如果禁用了它，但是以后需要使用到它，可以使用内核参数(iommu=calgary)。
这里有个问题需要小心处理(Enable Maximum number of SMP Processors and NUMA Nodes  (MAXSMP))。只有在内核运行在拥有很多SMP处理器和NUMA节点的情况下才启用它，如Core i7和许多AMD  CPU芯片。如果系统缺乏或者只有少量的SMP处理器和NUMA节点，内核就会变得低效。这个最好选择&quot;No&quot;。
非一致性内存访问(Non-Uniform Memory Access  (NUMA))是一个每块内存都需要花费更长时间访问其他部分内存的系统。一个节点就是一组内存。例如，一个NUMA系统可能有三块内存芯片。每块芯片是 一个节点，在带CPU的主板上有一个节点/芯片(这是最快的节点)，另外两个在不同的总线上。这两个节点需要比第一个节点花费更长的时间去访问。
注意：ccNUMA和NUMA目前是一样的，至少是非常相似的。
对称多处理器(Symmetric Multi-Processing (SMP))是NUMA的替代品。它的内存在同一根总线上。只有限定数量的CPU可以访问总线，所以这限制了SMP系统上处理器的数量。然而它内存的访问速度一样块。
注意：我是在为AMD64系统在编译内核，所以我会告诉你我的选择，来帮助读者理解过程和选择。如果我没有指出我的选择，那么我用的就是默认选择。如果你在为不同的系统编译或者你有不同的需求，你需要在你的情况下做出替代的选择。
接下来，除非配置工具已经为你做了选择，选择一个内核需要支持的最多CPU的数量。这个配置根据你给的数量优化内核。
接着启用或禁用&quot;SMT (Hyperthreading) scheduler support  (SCHED_SMT)&quot;（超线程调度器支持）。SMT调度器提升了在使用了超线程技术的Pentium  4处理器上的CPU决策能力。然而，这会带来额外的功耗，在一些系统上最好像我一样选择&quot;no&quot;。
超线程一种专有的SMT并行微处理器(Intel 实现了它)。这是多任务/多线程(同时做许多任务)的一种特殊形式，并行多线程(Simultaneous multithreading (SMT))提升了多线程执行的效率。
在这之后，启用或者禁用&quot;Multi-core scheduler support (SCHED_MC)&quot;。这样也是一种提升多核CPU决策的特性。然而这回带来额外功耗，我选择了&quot;No&quot;。
在下一个选项中可以选择抢占模式。
Preemption Model（抢占模式）
1. No Forced Preemption (Server) (PREEMPT_NONE) （非强制抢占）
&gt; 2. Voluntary Kernel Preemption (Desktop) (PREEMPT_VOLUNTARY) （自愿内核抢占）
3. Preemptible Kernel (Low-Latency Desktop) (PREEMPT) （可抢占内核）
choice[1-3]: 2
抢占就是暂停一个意图让它之后继续执行的中断任务的过程。抢占强制一个进程暂停，执行中的任务无法忽视抢占。
接着，我们被询问关于&quot;Reroute for broken boot IRQs  (X86_REROUTE_FOR_BROKEN_BOOT_IRQS)&quot;。这是一个对于假中断的简单修复。假中断是一种无用的硬件中断，这些通常是有电 子干扰或者错误连接的电子产品触发。记住，中断是发送给处理器需要马上注意的信号。
这个选项对任何机器都很重要；我怀疑任何人可能都会有禁用这个特性的理由(Machine Check / overheating reporting (X86_MCE))。内核必须意识到过热和数据损坏，不然，系统将会继续操作，这样只会导致进一步的破坏。
下面，用户可以启用禁用&quot;Intel MCE features (X86_MCE_INTEL)&quot;，这是一种额外的对像热度监控的Intel  MCE特性的支持。因为我是为AMD64处理器编译内核所以我选择了&quot;no&quot;。机器检测异常(MCE)是一种当处理器发现硬件问题时的错误输出。MCE通 常会导致内核严重错误(kernel panic)(相当于Windows中的&quot;蓝屏&quot;)。
这个除了是AMD设备外是同一个问题Intel MCE features (X86_MCE_INTEL)。
下一个是我会禁用的调试特性(Machine check injector support  (X86_MCE_INJECT))。这个会允许注射检查。如果你偶尔执行机器注射，那最好编译成模块而不是编译进内核。机器注射可以使设备即使实际没有 错误也可以发送一个伪造的错误信息。这个用来确认内核和其他进程可以正常处理错误。比如，如果CPU过热，接着应该关机，但是开发者如何在不损坏CPU的 情况下测试代码。注射错误是一种最好的方法，因为它只是一种告诉硬件发送错误信号的软件。
注:模块是对可能被使用或者很少执行的特性/驱动而言的。只加入在许多使用该内核的系统中用到的特性/驱动到内核中。
如果内核很可能用在Dell笔记本上，那么启用这个特性(Dell laptop support  (I8K))。否则，如果一些用户可能在戴尔笔记本电脑上用到这个内核，将其作为一个模块加入。如果这个内核不打算支持Dell笔记本，那就像我一样忽略 掉它。特别地，这个支持是一个允许Dell Inspiron  8000系列笔记本访问处理器的系统管理模式的驱动。系统管理模式的目的是得到处理器的温度和风扇状态，这对一些需要控制风扇的系统有用。
下面，用户可以选择微码加载支持(CPU microcode loading support (MICROCODE))。这可以允许用户在支持这个特性的AMD或者Intel芯片上更新微码。
注意：为了加载微码，你必须拥有一个为你的处理器设计的合法的二进制微代码拷贝。
如果要加载微码补丁(修复bug或加入次要的特性)到intel芯片上(Intel microcode loading support (MICROCODE_INTEL))，这个就必须启用。这里我禁用了它。
然后是AMD芯片的类似选项(AMD microcode loading support (MICROCODE_AMD))。
启用这个支持(/dev/cpu/*/msr - Model-specific register support  (X86_MSR))可以允许某个处理器有权限使用x86特殊模块寄存器(Model-Specific Registers  (MSRs))。这些寄存器是一些字符设备，包括major 202下minor 0到31的设备((/dev/cpu/0/msr to  /dev/cpu/31/msr))。这个特性用在多处理器系统上。每个虚拟字符设备都连接到一个特定的CPU。
注意：MSRs被用来改变CPU设备、调试、性能监控和执行追踪。MSRs使用x86指令集。
在这之后，我们有一个选项&quot;CPU information support (X86_CPUID)&quot;，启用这个特性允许处理器访问x86  CPUID指令，这需要通过字符设备在一个特定的CPU上执行。这些字符设备包括major 202下minor  0到31的设备(/dev/cpu/0/msr to /dev/cpu/31/msr)，就像上面x86_MSR支持的这些。
如果处理器支持，启用内核线性映射来使用1GB的内存页(Enable 1GB pages for kernel pagetables (DIRECT_GBPAGES))。启用这个可以帮助减轻TLB的压力。
页是内存本身的基本单位(位是数据的基本单位)。页的大小是由硬件自身决定的。页码表是虚拟和物理内存间的映射。物理内存是设备上的内存。虚拟内存 是到内存的地址。依赖于系统架构，硬件可以访问大于实际内存地址的地址。举例来说，一个64位系统拥有6GB内存，管理员在需要时可以加上更多的内存。这 是因为还有很多虚拟内存地址。然而，在很多32位系统上，系统管理员可以增加一条8GB的内存，但是系统无法完全使用它，因为系统中没有足够的虚拟内存地 址去访问大容量的内存。转换后援缓冲器(Translation Lookaside Buffer  (TLB))是一种提升虚拟内存转换速度的缓存系统。
下面，我们看到了NUMA选项(Numa Memory Allocation and Scheduler Support  (NUMA))。这可以允许内核在CPU本地内存分配器上分配CPU可使用的内存。这个支持同样可使内核更好感知到NUMA。很少的32位系统需要这个特 性，但是一些通用的645位处理器使用这个特性。我选择了&quot;no&quot;。
为了系统使用旧方式来检测AMD NUMA节点拓扑，启用这个特性(Old style AMD Opteron NUMA detection  (AMD_NUMA))。下一个选项是一种更新的检测方式(ACPI NUMA detection  (X86_64_ACPI_NUMA))。如果两个都启用，新的方式将会占支配作用。一些硬件在使用其中一种方式而不是另外一个时工作得更好。
如果为了调试目的的NUMA仿真，可以启用下一个特性(NUMA emulation (NUMA_EMU))。
注意：如果你不打算进行调试并且你需要一个快速、轻量级系统，那么禁用尽可能多的调试特性。
下一个选项中，选择你的内核打算如何处理NUMA节点的最大数量。接下来选择内存模型，这里可能只有一个内存模型选择。内存模型指定了内存如何存储。
Maximum NUMA Nodes (as a power of 2) (NODES_SHIFT) [6]
Memory model
&gt; 1. Sparse Memory (SPARSEMEM_MANUAL)
choice[1]: 1
为了提升性能，这里有一个选项用通过虚拟内存映射(Sparse Memory virtual memmap  (SPARSEMEM_VMEMMAP))来优化pfn_to_page和page_to_pfn操作。页帧号是每页被给定的号码。这两个操作用来从号码 得到页或者从页得到号码。
下一个选项是允许一个节点可以移除内存(Enable to assign a node which has only movable  memory  (MOVABLE_NODE))。内核页通常无法移除。当启用后，用户可以热插拔内存节点，同样可移除内存允许内存整理。作为出入内存的数据，只要有可用 空间一组数据可能被划分到不同内存。
接着前面的内存问题，我们还有更多的问题。这些可能已被配置工具预配置了。第三个选项(BALLOON_COMPACTION)，当启用时可以帮助 减少内存碎片。碎片内存会减慢系统速度。第四个选项(COMPACTION)允许内存压缩。下面列到的第五个选项(MIGRATION)允许页面被移动。
    • Allow for memory hot-add (MEMORY_HOTPLUG) (允许内存热添加)
    • Allow for memory hot remove (MEMORY_HOTREMOVE) （允许内存热移除）
    • Allow for balloon memory compaction/migration (BALLOON_COMPACTION) （允许泡状内存规整和合并）
    • Allow for memory compaction (允许内存规整)
    • Page migration (MIGRATION) (页合并)
注意：启用可移动内存会启用以上5个特性。
下一步，我们可以&quot;Enable KSM for page merging (KSM)&quot;。内核同页合并(Kernel Samepage  Merging  (KSM))会查看程序认为可以合并的内核。如果两页内存完全相同这可以节约内存。一块内存可以被删除或者被合并，并且只有一块可以使用。
配置工具可能会自动选择保存多少内存用于用户分配(Low address space to protect from user allocation (DEFAULT_MMAP_MIN_ADDR) [65536])。
下一个选项很重要(Enable recovery from hardware memory errors  (MEMORY_FAILURE))。如果内存故障并且系统有MCA恢复或者ECC内存，系统就可以继续运行并且恢复。要使用这个特性，硬件自身和内核都 必须支持。
机器检测架构(Machine Check Architecture  (MCA))是一个一些CPU上可以发送硬件错误信息给操作系统的特性。错误更正码内存(Error-correcting code memory  (ECC memory))是一种内存设备检测和纠正错误的形式。
下面，配置工具会自动启用&quot;HWPoison pages injector (HWPOISON_INJECT)&quot;。这个特性允许内核标记一块坏页为&quot;poisoned&quot;，接着内核会杀死创建坏页的程序。这有助于停止并纠正错误。
为了允许内核使用大页(Transparent Hugepage Support (TRANSPARENT_HUGEPAGE))，启用这个特性。这可以加速系统但是需要更多内存。嵌入式系统不必使用这个特性。嵌入式系统通常只有非常小的内存。
如果启用了上面的，那么必须配置大页的sysfs支持。
Transparent Hugepage Support sysfs defaults
1. always (TRANSPARENT_HUGEPAGE_ALWAYS)
&gt; 2. madvise (TRANSPARENT_HUGEPAGE_MADVISE)
choice[1-2?]: 2
下面的选项是增加process_vm_readv和process_vm_writev这两个系统调用(Cross Memory Support (CROSS_MEMORY_ATTACH))。这允许特权进程访问另外一个程序的地址空间。
如果有tmem，启用缓存清理(cleancache)通常是一个好主意 (Enable cleancache driver to cache  clean pages if Transcendent Memory (tmem) is present  (CLEANCACHE))。当一些内存页需要从内存中移除时，cleancache会将页面放在cleancache-enabled的文件系统上。当 需要该页时，页会被重新放回内存中。超内存(tmem)没有一组已知大小的内存，内核对此内存使用间接寻址。
下一个选项允许在tmen激活后缓存交换页(Enable frontswap to cache swap pages if tmem is present (FRONTSWAP))。frontswap在交换分区放置数据。交换特性的支持需要这个。
最好启用下一个特性(Check for low memory corruption  (X86_CHECK_BIOS_CORRUPTION))。这会检测低位内存的内存损坏情况。这个特性在执行期被禁止。为了启用这个特性,在内核命令行 内加入  &quot;memory_corruption_check=1&quot;(这会在以后的文章中讨论;这不同于任何命令行)。即使经常执行这个特性，也只使用非常小的开销 (接近没有)。
接下来我门可以设置内存损坏检测的默认设置(“Set the default setting of  memory_corruption_check  (X86_BOOTPARAM_MEMORY_CORRUPTION_CHECK))。这可以选择是否开启或关闭 memory_corruption_check。最好启用内存损坏检测不然如果一部分重要内存损坏后可能会导致数据丢失和系统崩溃。
这个选项关注的是BIOS(Amount of low memory, in kilobytes, to reserve for the BIOS (X86_RESERVE_LOW) [64])。配置工具通常知道给BIOS预留内存的最佳大小。
对于Intel P6处理器，开发者可以启用存储区域类型寄存器(MTRR (Memory Type Range Register) support (MTRR))。这用于连接着VGA卡的AGP和PCI卡。启用这个特性内核会创建/proc/mtrr。
如果X驱动需要加入回写入口，那么启用下面的选项(MTRR cleanup support  (MTRR_SANITIZER))。这会将MTRR的布局从连续转换到离散。存储区域类型寄存器(Memory type range  registers (MTRRs))提供了一种软件访问CPU缓存的方法。
下面，配置工具已经设置了一些MTRR选项
    •     MTRR cleanup enable value (0-1) (MTRR_SANITIZER_ENABLE_DEFAULT) [1]
    
    •     MTRR cleanup spare reg num (0-7) (MTRR_SANITIZER_SPARE_REG_NR_DEFAULT) [1]
    
为了设置页级缓冲控制，那就启用PAT属性(x86 PAT support (X86_PAT))。页属性表(Page Attribute  Table  (PATs))是现在版的MTRRs并比它更灵活。如果你经历过因启用它而引发的启动问题，那么禁用这个特性后重新编译内核。我选择了&quot;no&quot;。
</rich_text></node></node><node name="Linux 内核中的 Device Mapper 机制" prog_lang="custom-colors" readonly="False" tags="" unique_id="32"><rich_text>    本文结合具体代码对 Linux 内核中的 device mapper 映射机制进行了介绍。Device mapper 是 Linux  2.6 内核中提供的一种从逻辑设备到物理设备的映射框架机制，在该机制下，用户可以很方便的根据自己的需要制定实现存储资源的管理策略，当前比较流行的  Linux 下的逻辑卷管理器如 LVM2（Linux Volume Manager 2 version)、EVMS(Enterprise  Volume Management System)、dmraid(Device Mapper Raid  Tool)等都是基于该机制实现的。理解该机制是进一步分析、理解这些卷管理器的实现及设计的基础。通过本文也可以进一步理解 Linux 系统块一级  IO的设计和实现。

  Device Mapper 是 Linux2.6 内核中支持逻辑卷管理的通用设备映射机制，它为实现用于存储资源管理的块设备驱动提供了一个高度模块化的内核架构，如图 1。
</rich_text><rich_text weight="heavy">图1 Device Mapper的内核体系架构</rich_text><rich_text>
    </rich_text><rich_text justification="left"></rich_text><rich_text>
    在内核中它通过一个一个模块化的 target driver 插件实现对 IO 请求的过滤或者重新定向等工作，当前已经实现的 target  driver 插件包括软 raid、软加密、逻辑卷条带、多路径、镜像、快照等，图中  linear、mirror、snapshot、multipath 表示的就是这些 target driver。Device mapper  进一步体现了在 Linux  内核设计中策略和机制分离的原则，将所有与策略相关的工作放到用户空间完成，内核中主要提供完成这些策略所需要的机制。Device mapper  用户空间相关部分主要负责配置具体的策略和控制逻辑，比如逻辑设备和哪些物理设备建立映射，怎么建立这些映射关系等等，而具体过滤和重定向 IO  请求的工作由内核中相关代码完成。因此整个 device mapper 机制由两部分组成--内核空间的 device mapper  驱动、用户空间的device mapper 库以及它提供的 dmsetup 工具。在下文中，我们分内核和用户空间两部分进行介绍。

</rich_text><rich_text scale="h1" weight="heavy">内核部分</rich_text><rich_text>
    Device  mapper 的内核相关代码已经作为 Linux 2.6 内核发布版的一部分集成到内核源码中了，相关代码在内核源码的 driver/md/  目录中，其代码文件可以划分为实现 device mapper 内核中基本架构的文件和实现具体映射工作的 target driver  插件文件两部分。文章下面的分析结果主要是基于上述源码文件得到的。
重要概念
    Device  mapper 在内核中作为一个块设备驱动被注册的，它包含三个重要的对象概念，mapped device、映射表、target  device。Mapped device 是一个逻辑抽象，可以理解成为内核向外提供的逻辑设备，它通过映射表描述的映射关系和 target  device 建立映射。从 Mapped device 到一个 target device 的映射表由一个多元组表示，该多元组由表示  mapped device 逻辑的起始地址、范围、和表示在 target device 所在物理设备的地址偏移量以及target  类型等变量组成（这些地址和偏移量都是以磁盘的扇区为单位的，即 512 个字节大小）。Target device 表示的是 mapped  device 所映射的物理空间段，对 mapped device 所表示的逻辑设备来说，就是该逻辑设备映射到的一个物理设备。Device  mapper 中这三个对象和 target driver  插件一起构成了一个可迭代的设备树。在该树型结构中的顶层根节点是最终作为逻辑设备向外提供的 mapped device，叶子节点是 target  device 所表示的底层物理设备。最小的设备树由单个 mapped device 和 target device 组成。每个 target  device 都是被mapped device 独占的，只能被一个 mapped device 使用。一个 mapped device  可以映射到一个或者多个 target device 上，而一个 mapped device 又可以作为它上层 mapped device的  target device 被使用，该层次在理论上可以在 device mapper 架构下无限迭代下去。
</rich_text><rich_text weight="heavy">图2 Device mapper 内核中各对象的层次关系</rich_text><rich_text>
        </rich_text><rich_text justification="left"></rich_text><rich_text>
    在 图2 中我们可以看到 mapped device1 通过映射表和 a、b、c 三个 target device 建立了映射关系，而 target  device a 又是通过 mapped device 2 演化过来，mapped device 2 通过映射表和 target device  d 建立映射关系。
    我们进一步看一下上述三个对象在代码中的具体实现，dm.c 文件定义的 mapped_device 结构用于表示  mapped device，它主要包括该 mapped device  相关的锁，注册的请求队列和一些内存池以及指向它所对应映射表的指针等域。Mapped device 对应的映射表是由 dm_table.c  文件中定义的 dm_table 结构表示的，该结构中包含一个 dm_target结构数组，dm_target 结构具体描述了  mapped_device 到它某个 target device 的映射关系。而在 dm_table 结构中将这些 dm_target 按照 B  树的方式组织起来方便 IO 请求映射时的查找操作。Dm_target 结构具体记录该结构对应 target device 所映射的  mapped device 逻辑区域的开始地址和范围，同时还包含指向具体 target device 相关操作的 target_type  结构的指针。Target_type 结构主要包含了 target device 对应的 target driver  插件的名字、定义的构建和删除该类型target device的方法、该类target  device对应的IO请求重映射和结束IO的方法等。而表示具体的target  device的域是dm_target中的private域，该指针指向mapped device所映射的具体target  device对应的结构。表示target device的具体结构由于不同的target  类型而不同，比如最简单的线性映射target类型对应target  device的结构是dm-linear.c文件中定义的linear_c结构。其定义如下：
    struct linear_c {
	    struct dm_dev *dev;
	    sector_t start;
    };
    </rich_text><rich_text foreground="#00000000ffff">该target device的定义相当简单，就只包括了表示对应物理设备的dm_dev结构指针和在该物理设备中以扇区为单位的偏移地址start。上述几个数据结构关系如图3所示：</rich_text><rich_text>
</rich_text><rich_text weight="heavy">图3  device mapper中几个重要数据结构的关系内核中建立过程</rich_text><rich_text>
    </rich_text><rich_text justification="left"></rich_text><rich_text>
</rich_text><rich_text scale="h3">    </rich_text><rich_text scale="h3" weight="heavy">内核中建立过程</rich_text><rich_text scale="h3">    </rich_text><rich_text>
    在下面我们结合具体的代码简要介绍下在内核中创建一个mapped device的过程：
    1、  根据内核向用户空间提供的ioctl 接口传来的参数，用dm-ioctl.c文件中的dev_create函数创建相应的mapped  device结构。这个过程很简单，主要是向内核申请必要的内存资源，包括mapped  device和为进行IO操作预申请的内存池，通过内核提供的blk_queue_make_request函数注册该mapped  device对应的请求队列dm_request。并将该mapped device作为磁盘块设备注册到内核中。
    2、 调用dm_hash_insert将创建好的mapped device插入到device mapper中的一个全局hash表中，该表中保存了内核中当前创建的所有mapped device。
    3、  用户空间命令通过ioctl调用table_load函数，该函数根据用户空间传来的参数构建指定mapped  device的映射表和所映射的target  device。该函数先构建相应的dm_table、dm_target结构，再调用dm-table.c中的dm_table_add_target函 数根据用户传入的参数初始化这些结构，并且根据参数所指定的target类型，调用相应的target类型的构建函数ctr在内存中构建target  device对应的结构，然后再根据所建立的dm_target结构更新dm_table中维护的B树。上述过程完毕后，再将建立好的dm_table添 加到mapped device的全局hash表对应的hash_cell结构中。
    4、  最后通过ioctl调用do_resume函数建立mapped  device和映射表之间的绑定关系，事实上该过程就是通过dm_swap_table函数将当前dm_table结构指针值赋予 mapped_device相应的map域中，然后再修改mapped_device表示当前状态的域。
通过上述的4个主要步骤，device mapper在内核中就建立一个可以提供给用户使用的mapped device逻辑块设备。

    </rich_text><rich_text scale="h3" weight="heavy">IO流</rich_text><rich_text>
    Device  mapper本质功能就是根据映射关系和target driver描述的IO处理规则，将IO请求从逻辑设备mapped  device转发相应的target device上。Device  mapper处理所有从内核中块一级IO子系统的generic_make_request和submit_bio接口[两个接口具体的描述可以查看</rich_text><rich_text link="webs http://www.ibm.com/developerworks/cn/linux/l-devmapper/#resources">参考文献</rich_text><rich_text>[1] 和[2]，这两本书对内核中的块IO层有比较详尽的讲解。] 中定向到mapped device的所有块读写IO请求。IO请求在device  mapper的设备树中通过请求转发从上到下地进行处理。当一个bio请求在设备树中的mapped  deivce向下层转发时，一个或者多个bio的克隆被创建并发送给下层target  device。然后相同的过程在设备树的每一个层次上重复，只要设备树足够大理论上这种转发过程可以无限进行下去。在设备树上某个层次中，target  driver结束某个bio请求后，将表示结束该bio请求的事件上报给它上层的mapped  device，该过程在各个层次上进行直到该事件最终上传到根mapped device的为止，然后device mapper结束根mapped  device上原始bio请求，结束整个IO请求过程。
Bio在device  mapper的设备树进行逐层的转发时，最终转发到一个或多个叶子target节点终止。因为一个bio请求不可以跨多个target  device(亦即物理空间段)， 因此在每一个层次上，device mapper根据用户预先告知的mapped device  的target映射信息克隆一个或者多个bio，将bio进行拆分后转发到对应的target device上。这些克隆的bio先交给mapped  device上对应的target driver上进行处理，根据target  driver中定义的IO处理规则进行IO请求的过滤等处理，然后再提交给target  device完成。上述过程在dm.c文件中的dm_request函数中完成。Target driver可以对这些bio做如下处理：
    １、 将这些bio在本驱动内部排队等待以后进行处理；
    ２、 将bio重新定向到一个或多个target device上或者每个target device上的不同扇区；
    ３、 向device mapper返回error 状态。
IO请求就按照上文中描述的过程在图2中所示的设备树中逐层进行处理，直到IO请求结束。

</rich_text><rich_text scale="h3">    </rich_text><rich_text scale="h3" weight="heavy">小结</rich_text><rich_text>
    Device   mapper在内核中向外提供了一个从逻辑设备到物理设备的映射架构，只要用户在用户空间制定好映射策略，按照自己的需要编写处理具体IO请求的 target driver插件，就可以很方便的实现一个类似LVM的逻辑卷管理器。Device  mapper以ioctl的方式向外提供接口，用户通过用户空间的device mapper库，向device  mapper的字符设备发送ioctl命令，完成向内的通信。它还通过ioctl提供向往的事件通知机制，允许target  driver将IO相关的某些事件传送到用户空间。

</rich_text><rich_text scale="h1" weight="heavy">用户空间部分</rich_text><rich_text>
Device  mapper在用户空间相对简单，主要包括device mapper库和dmsetup工具。Device  mapper库就是对ioctl、用户空间创建删除device  mapper逻辑设备所需必要操作的封装，dmsetup是一个提供给用户直接可用的创建删除device  mapper设备的命令行工具。因为它们的功能和流程相对简单，在本文中对它们的细节就不介绍了，用户空间主要负责如下工作：
    1、 发现每个mapped device相关的target device；
    2、 根据配置信息创建映射表；
    3、 将用户空间构建好的映射表传入内核，让内核构建该mapped device对应的dm_table结构；
    4、 保存当前的映射信息，以便未来重新构建。
    
    以下我们主要通过实例来说明dmsetup的使用，同时进一步说明device mapper这种映射机制。用户空间中最主要的工作就是构建并保存映射表，下面给出一些映射表的例子：
</rich_text><rich_text foreground="#00000000ffff">    1)
        0  1024  linear   /dev/sda 204
        1024  512  linear  /dev/sdb  766
        1536  128  linear  /dev/sdc  0  
    2) 0 2048 striped 2 64 /dev/sda 1024 /dev/sdb 0
    3) 0 4711  mirror core  2 64 nosync 2 /dev/sda 2048 /dev/sdb 1024</rich_text><rich_text>
    
    例子1中将逻辑设备0~1023扇区、1024~1535扇区以及1536~1663三个地址范围分别以线形映射的方式映射到/dev/sda设备第204号扇区、/dev/sdb设备第766号扇区和/dev/sdc设备的第0号扇区开始的区域。
    例子2中将逻辑设备从0号扇区开始的，长度为2048个扇区的段以条带的方式映射的到/dev/sda设备的第1024号扇区以及/dev/sdb设备的第 0号扇区开始的区域。同时告诉内核这个条带类型的target  driver存在2个条带设备与逻辑设备做映射，并且条带的大小是64个扇区，使得驱动可以该值来拆分跨设备的IO请求。
    例子3中将逻辑设备从0号扇区开始的，长度为4711个扇区的段以镜像的方式映射到/dev/sda设备的第2048个扇区以及/dev/sdb设备的第1024号扇区开始的区域。
映射表确定后，创建、删除逻辑设备的操作就相对简单，通过dmsetup如下命令就可以完成相应的操作。

    dmsetup create  设备名  映射表文件 /* 根据指定的映射表创建一个逻辑设备 */

    dmsetup reload  设备名 映射表文件  /* 为指定设备从磁盘中读取映射文件，重新构建映射关系 */
    
    dmsetup remove 设备名  /* 删除指定的逻辑设备 */
    
   </rich_text><rich_text weight="heavy"> 图4 根据例子1中映射表在内核中建立的逻辑设备</rich_text><rich_text>
    </rich_text><rich_text justification="left"></rich_text><rich_text>
    当用户空间根据映射表下达创建逻辑设备命令后，device  mapper在内核中就根据传入的参数和映射关系建立逻辑地址到物理地址的映射关系。根据映射表例子1中的映射关系建立的设备如图4所示，图中的下半部分就抽象地描绘出了按照该映射表在内核中建立的逻辑地址到物理地址的映射关系。
    Device  mapper的用户空间部分对开发者要实现自己的存储管理工具来说是可选的，事实上，很多我们常见的逻辑卷管理器，比如LVM2、dmraid等工具都利用device mapper的提供的device  mapper用户空间库，根据自己的管理需求建立独立的一套管理工具，而并没有使用它提供的dmsetup工具，甚至IBM的开源项目企业级的逻辑卷管理系统-EVMS，在实现中都没有采用device mapper的用户空间库，完全根据内核中的ioctl定义实现了一套自己的函数库。

</rich_text><rich_text scale="h1" weight="heavy">Target Driver</rich_text><rich_text>
    Device  mapper提供了一个统一的架构，通过target driver 插件的方式允许用户根据实际的需要指定自己的IO处理规则，因此target  driver充分体现了device mapper的灵活性。在上文中我们已经不止一次的提到过target driver，也描述过target  driver的功能，在这里我们结合最简单的linear target driver具体介绍target driver的实现。
    Target driver主要定义对IO请求的处理规则，在device mapper中对target driver的操作已定义好了统一的接口，在实现中该接口由我们上文提到的target_type结构中定义，它定义了以下target driver的方法：
    １、 构建target device 的方法；
    ２、 删除target device 的方法；
    ３、 Target的映射IO请求的方法；
    ４、 Target结束IO请求的方法；
    ５、 暂停target device读写的方法；
    ６、 恢复target device读写的访问；
    ７、 获取当前target device状态的访问；
    ８、 Target 处理用户消息的方法；
    
    用户可以根据具体需求选择性地实现上述方法，但一般最少要实现前3种方法，否则在device  mapper下不能够正常的工作。linear target  driver就只实现了前3种方法和方法7，它完成逻辑地址空间到物理地址空间的线性映射，可以将多个物理设备以线性连接的方式组成一个逻辑设备，就如图 4中描述的那样，通过linear target  driver将/dev/sda、/dev/sdb、/dev/sdc的三段连续空间组成了一个大的逻辑块设备。Linear  target的实现很简单，它的创建和删除方法主要完成申请和释放描述linear target  device所用结构的内存资源；IO映射处理方法的实现更是简单，如下代码所示：
    static int linear_map(struct dm_target *ti, struct bio *bio,
		          union map_info *map_context)
    {
	    struct linear_c *lc = (struct linear_c *) ti-&gt;private;

	    bio-&gt;bi_bdev = lc-&gt;dev-&gt;bdev;
	    bio-&gt;bi_sector = lc-&gt;start + (bio-&gt;bi_sector - ti-&gt;begin);

	    return 1;
    }
    该映射方法就是将发送给逻辑设备mapped  device的bio请求，根据映射关系以线性的方式重新定向到linear target  device所表示物理设备的相应位置，如代码所示具体实现方法就是修改bio的bi_bdev设备指针为target  device对应的设备指针，并根据target device的起始地址和该bio请求在mapped  device设备上的偏移值改变IO请求开始的扇区号bi_sector，从而完成IO请求的重定向。其他target  driver的实现也都大同小异，按照device  mapper所定义的接口规范，结合自己需要的功能进行实现即可，这里就不一一介绍了，有兴趣的读者可以看内核中具体的target driver代码。

</rich_text><rich_text scale="h1" weight="heavy">总结</rich_text><rich_text>
    Device   Mapper是Linux操作系统中块设备一级提供的一种主要映射机制，现在已被多数Linux下的逻辑卷管理器所采用。在该机制下，实现用户自定义的存 储资源管理策略变得极其方便。理解device mapper所提供的映射机制，也是进一步理解Linux下一些常见逻辑卷管理器实现的基础。
</rich_text><encoded_png char_offset="468"></encoded_png><encoded_png char_offset="1963"></encoded_png><encoded_png char_offset="3106"></encoded_png><encoded_png char_offset="6785"></encoded_png></node><node name="linux wifi工具" prog_lang="custom-colors" readonly="False" tags="" unique_id="2"><rich_text>Wireless tools for Linux介绍 
Wireless tools for  Linux是一个Linux命令行工具包，用来设置支持Linux Wireless Extension的无线设备。Wireless tools  for Linux 和 Linux Wireless Extension 由 Jean  Tourrilhes在维护，由Hewlett-Packard（HP惠普）赞助。
大多数基于Linux内核的操作系统都包含Wireless tools。在许多GNU/Linux 发行版中，都缺省安装这个工具包，即使是没有自动安装，也能很容易地找到其二进制代码安装包。
Wireless Extension  (WE)是一组通用的API，能在用户空间对通用Wireless  LANs进行配置和统计。它的好处在于仅通过一组单一的工具就能对各种各样的Wireless  LANs进行管理，不过它们是什么类型，只要其驱动支持Wireless  Extension就行；另一个好处就是不用重启驱动或Linux就能改变这些参数。
       Wireless Tools  (WT)就是用来操作Wireless Extensions的工具集，它们使用字符界面，虽然粗糙，但支持所有Wireless  Extension。虽然还有很多其他管理Wireless Extensions的工具，但Wireless Tools是参考实现，它包括以下工具：
        iwconfig：设置基本无线参数
        iwlist：扫描、列出频率，比特率，密钥等 
        iwspy：获取每个节点链接的质量
        iwpriv：操作Wireless Extensions 特定驱动
        ifrename： 基于各种静态标准命名接口
大多数 Linux 发行版本都在其网络初始化脚本中集成Wireless Extension，以便启动时配置无线接口。他们还将Wireless Tools作为其标准封装包。
无线配置也可以使用hotplug或uDev脚本来完成，需要发行版特定的支持，这样能支持任何可移动的无线接口（Pcmcia，CardBus，USB接口...）。
Wireless Tools（从版本19）开始完全支持IEEE 802.11标准参数和设备，支持旧风格的设备和最专有协议，并准备处理HiperLan。较新版本增加了更多802.11支持。但不幸的是，并非所有的驱动程序支持所有这些功能。
最新的稳定版本的Wireless Tools是版本29，大多数愚蠢的错误已被删除，并支持所有的Wireless Extension（从版本v11至v21）。可以从</rich_text><rich_text link="webs http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/wireless_tools.29.tar.gz">http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/wireless_tools.29.tar.gz</rich_text><rich_text>下载最新的Wireless Tools。
     我们经常会用到的主要是iwlist、iwconfig、 iwpriv： 命令行：(ap不需要验证密码)
iwlist mlan0 scan //搜索ap
iwconfig mlan0 essid “linksys” //连接ap
udhcpc –i mlan0  //获得动态IP
 
命令行：(ap需要验证密码)
iwlist mlan0 scan //搜索ap
iwconfig mlan0 key  xxxxxxxxxx  // 输入验证密码
iwconfig mlan0 key open //密码验证功能打开
iwconfig mlan0 essid “linksys” //连接ap
udhcpc –i mlan0 //获得动态IP
  
   关于iwconfig 可以看上一篇文章；这里补充一下有关iwpriv：       [root@root- /]#iwpriv    mlan0     Available private ioctls :
          extscan          (8BFA) : set   0 int   &amp; get   2 char
          hostcmd          (8BE4) : set 2047 byte  &amp; get 2047 byte
          arpfilter        (8BE6) : set 2047 byte  &amp; get 2047 byte
          regrdwr          (8BE3) : set 256 char  &amp; get 256 char
          sdcmd52rw        (8BFE) : set   7 byte  &amp; get   7 byte
          sdcmd53rw        (8BFF) : set   0 char  &amp; get   0 char
          setgetconf       (8BEA) : set 2000 byte  &amp; get 2000 byte
          getcis           (8BE1) : set   0       &amp; get 512 byte
          scantype         (8BEB) : set   8 char  &amp; get   8 char
          deauth           (0001) : set   1 addr  &amp; get   0
          getNF            (0001) : set   1 int   &amp; get   1 int
          getRSSI          (0002) : set   1 int   &amp; get   1 int
          bgscan           (0004) : set   1 int   &amp; get   1 int
          enable11d        (0005) : set   1 int   &amp; get   1 int
          adhocgrate       (0006) : set   1 int   &amp; get   1 int
          sdioclock        (0007) : set   1 int   &amp; get   1 int
          wmm              (0008) : set   1 int   &amp; get   1 int
          uapsdnullgen     (000A) : set   1 int   &amp; get   1 int
          setcoalescing    (000B) : set   1 int   &amp; get   1 int
          adhocgprot       (000C) : set   1 int   &amp; get   1 int
          disable_chsw     (000F) : set   1 int   &amp; get   1 int
          setpowercons     (0001) : set   1 int   &amp; get   1 int
          wmm_qosinfo      (0002) : set   1 int   &amp; get   1 int
          lolisteninter    (0003) : set   1 int   &amp; get   1 int
          psnullinterval   (0005) : set   1 int   &amp; get   1 int
          bcnmisto         (0006) : set   1 int   &amp; get   1 int
          ldocfg           (0008) : set   1 int   &amp; get   1 int
          rtsctsctrl       (000F) : set   1 int   &amp; get   1 int
          moduletype       (000B) : set   1 int   &amp; get   1 int
          autodeepsleep    (000C) : set   1 int   &amp; get   1 int
          enhanceps        (000D) : set   1 int   &amp; get   1 int
          wakeupmt         (000E) : set   1 int   &amp; get   1 int
          setrxant         (0001) : set   1 int   &amp; get   0
          settxant         (0002) : set   1 int   &amp; get   0
          authalgs         (0004) : set   1 int   &amp; get   0
          encryptionmode   (0005) : set   1 int   &amp; get   0
          setregioncode    (0006) : set   1 int   &amp; get   0
          setlisteninter   (0007) : set   1 int   &amp; get   0
          setmultipledtim  (0008) : set   1 int   &amp; get   0
          setbcnavg        (0009) : set   1 int   &amp; get   0
          setdataavg       (000A) : set   1 int   &amp; get   0
          associate        (000B) : set   1 int   &amp; get   0
          getregioncode    (0001) : set   0       &amp; get   1 int
          getlisteninter   (0002) : set   0       &amp; get   1 int
          getmultipledtim  (0003) : set   0       &amp; get   1 int
          gettxrate        (0004) : set   0       &amp; get   1 int
          getbcnavg        (0005) : set   0       &amp; get   1 int
          getdataavg       (0006) : set   0       &amp; get   1 int
          getauthtype      (0007) : set   0       &amp; get   1 int
          getrsnmode       (0008) : set   0       &amp; get   1 int
          act_paircipher   (0009) : set   0       &amp; get   1 int
          act_groupcipher  (000A) : set   0       &amp; get   1 int
          getdtim          (000B) : set   0       &amp; get   1 int
          getrxant         (0001) : set   0       &amp; get  12 char
          gettxant         (0002) : set   0       &amp; get  12 char
          gettsf           (0003) : set   0       &amp; get  12 char
          wpssession       (0004) : set   0       &amp; get  12 char
          deepsleep        (8BFB) : set   1 char  &amp; get   6 char
          adhocstop        (0004) : set   0       &amp; get   0
          radioon          (0001) : set   0       &amp; get   0
          radiooff         (0002) : set   0       &amp; get   0
          rmaeskey         (0003) : set   0       &amp; get   0
          crypto_test      (0006) : set   0       &amp; get   0
          reasso-on        (0007) : set   0       &amp; get   0
          reasso-off       (0008) : set   0       &amp; get   0
          wlanidle-on      (0009) : set   0       &amp; get   0
          wlanidle-off     (000A) : set   0       &amp; get   0
          softreset        (000C) : set   0       &amp; get   0
          sleepparams      (0002) : set  64 char  &amp; get  64 char
          requesttpc       (0004) : set  64 char  &amp; get  64 char
          powercap         (0005) : set  64 char  &amp; get  64 char
          measreq          (000C) : set  64 char  &amp; get  64 char
          bca-ts           (0003) : set  64 char  &amp; get  64 char
          scanmode         (0006) : set  64 char  &amp; get  64 char
          getadhocstatus   (0009) : set  64 char  &amp; get  64 char
          setgenie         (000A) : set  64 char  &amp; get  64 char
          getgenie         (000B) : set  64 char  &amp; get  64 char
          qstatus          (000D) : set  64 char  &amp; get  64 char
          ts_status        (000E) : set  64 char  &amp; get  64 char
          setaeskey        (0001) : set  32 char  &amp; get   0
          getaeskey        (0001) : set   1 int   &amp; get 128 char
          version          (0002) : set   1 int   &amp; get 128 char
          verext           (0003) : set   1 int   &amp; get 128 char
          setwpaie         (8BE0) : set  24 char  &amp; get   0
          setband          (0001) : set  10 char  &amp; get   0
          setadhocch       (0002) : set  10 char  &amp; get   0
          chanswann        (0003) : set  10 char  &amp; get   0
          getband          (0001) : set   0       &amp; get  10 char
          getadhocch       (0002) : set   0       &amp; get  10 char
          getlog           (8BE9) : set   0       &amp; get 512 char
          tpccfg           (0001) : set  16 int   &amp; get  16 int
          scanprobes       (0006) : set  16 int   &amp; get  16 int
          ledgpio          (0005) : set  16 int   &amp; get  16 int
          sleeppd          (0007) : set  16 int   &amp; get  16 int
          rateadapt        (0008) : set  16 int   &amp; get  16 int
          getSNR           (0009) : set  16 int   &amp; get  16 int
          getrate          (000A) : set  16 int   &amp; get  16 int
          getrxinfo        (000B) : set  16 int   &amp; get  16 int
          atimwindow       (000C) : set  16 int   &amp; get  16 int
          bcninterval      (000D) : set  16 int   &amp; get  16 int
          sdiopullctrl     (000E) : set  16 int   &amp; get  16 int
          scantime         (000F) : set  16 int   &amp; get  16 int
          sysclock         (0010) : set  16 int   &amp; get  16 int
          txcontrol        (0012) : set  16 int   &amp; get  16 int
          hscfg            (0014) : set  16 int   &amp; get  16 int
          hssetpara        (0015) : set  16 int   &amp; get  16 int
          inactoext        (0016) : set  16 int   &amp; get  16 int
          dbgscfg          (0017) : set  16 int   &amp; get  16 int
          drvdbg           (0018) : set  16 int   &amp; get  16 int
          drvdelaymax      (001A) : set  16 int   &amp; get  16 int
          intfctrl         (001B) : set  16 int   &amp; get  16 int
          setquietie       (001C) : set  16 int   &amp; get  16 int
          ctspowerctrl     (001E) : set  16 int   &amp; get  16 int
          psmode           (001F) : set  16 int   &amp; get  16 int
          setuserscan      (0001) : set 2000 byte  &amp; get 2000 byte
          getscantable     (0002) : set 2000 byte  &amp; get 2000 byte
          setmrvltlv       (0003) : set 2000 byte  &amp; get 2000 byte
          getassocrsp      (0004) : set 2000 byte  &amp; get 2000 byte
          addts            (0005) : set 2000 byte  &amp; get 2000 byte
          delts            (0006) : set 2000 byte  &amp; get 2000 byte
          qconfig          (0007) : set 2000 byte  &amp; get 2000 byte
          qstats           (0008) : set 2000 byte  &amp; get 2000 byte
          txpktstats       (000C) : set 2000 byte  &amp; get 2000 byte
          getcfptable      (0009) : set 2000 byte  &amp; get 2000 byte
          mefcfg           (000A) : set 2000 byte  &amp; get 2000 byte
          getmem           (000B) : set 2000 byte  &amp; get 2000 byte
    通过iwpriv，我们可以得到AP的一些参数设置，也可以设置自己的WIFI参数。       [root@root- /]#iwpriv mlan0 getband
       mlan0     getband:bg -----------------------------------------------------------------1.WIFI介绍
Wi-Fi（WirelessFidelity），即无线保真，与蓝牙技术一样，同属于在办公室和家庭中使用的短距离无线 技术。该技术使用的使2.4GHz附近的频段，该频段目前尚属没用许可的无线频段。其目前可使用的标准有两个，分别是IEEE802.11a和 IEEE802.11b。Wi-Fi技术突出的优势在于：  其一，无线电波的覆盖范围广，基于蓝牙技术的电波覆盖范围非常小，半径大约只有50英尺左右约合15米，而Wi-Fi的半径则可达300英尺左右约合 100米。  其二，传输速度非常快，可以达到11mbps，符合个人和社会信息化的需求。根据无线网卡使用的标准不同，WIFI的速度也有所不同。其中 IEEE802.11b最高为11Mbps（部分厂商在设备配套的情况下可以达到22Mbps），IEEE802.11a为54Mbps、 IEEE802.11g也是54Mbps。WIFI无线网络由AP(Access  Point)和无线网卡组成。AP一般称为网络桥接器或接入点，AP每100ms将SSID（Service Set  Identifier）经由beacons（信号台）封包广播一次，beacons封包的传输速率是1  Mbit/s，并且长度相当的短，所以这个广播动作对网络效能的影响不大。因为Wi-Fi规定的最低传输速率是1 Mbit/s  ，所以确保所有的Wi-Fi client端都能收到这个SSID广播封包，client  可以借此决定是否要和这一个SSID的AP连线。使用者可以设定要连线到哪一个SSID。Wi-Fi系统总是对用户端开放其连接标准，并支援漫游，这就是 Wi-Fi的好处。但亦意味着，一个无线适配器有可能在性能上优于其他的适配器。由于Wi-Fi通过空气传送信号，所以和非交换以太网有相同的特点。  Wifi加密方式主要有以下三种：WEP（有线等效加密）——采用WEP 64位或者128位数据加密 WPA-PSK  [TKIP]——采用预共享密钥的Wi-Fi保护访问，采用WPA-PSK标准加密技术，加密类型为TKIP WPA2-PSK  [AES]——采用预共享密钥的Wi-Fi保护访问（版本2），采用WPA2-PSK标准加密技术，加密类型为AES 
2.WIFI相关工具安装
在加载wifi驱动之前，我们需要安装应用层的工具，即wireless tools与wpa_supplicant。
2.1 wireless-tools安装
wireless-tools是一组无线网络扫描器及监控工具，可以用于监控、分析、以及测试WiFi网络，支持几乎所有的无线网卡和驱动，它可以支持WEP的AP，但它不能连接到那些只支持WPA的AP。连接AP需要使用它所编译出来的工具。
1、资源下载
下载wireless_tools.29.tar.gz
2、解压
# tar zxvf wireless_tools.29.tar.gz
#cd wireless_tools.29
3、修改Makefile
## Compiler to use (modify this for cross compile).
CC = mipsel-linux-gcc
4、编译
#make
5、拷贝
将生成的工具:iwlist、iwconfig、iwpriv等拷贝到目标板上，路径为:/root/app/bin/wifitools/
2.3 wpa-supplicant安装
由于wireless tools只能支持连接WEP的AP，所以要支持WPA的AP就需要移植wpa_supplicant。
Rt73的原始驱动中采用的wpa_supplicant的版本比较旧，是0.5.8，我们采用版本。
1、下载资源
本文使用的是：
</rich_text><rich_text link="webs http://hostap.epitest.fi/releases/wpa_supplicant-0.5.11.tar.gz">http://hostap.epitest.fi/releases/wpa_supplicant-0.5.11.tar.gz</rich_text><rich_text>
最新 wpa-supplicant 
</rich_text><rich_text link="webs http://hostap.epitest.fi/releases/wpa_supplicant-0.6.9.tar.gz">http://hostap.epitest.fi/releases/wpa_supplicant-0.6.9.tar.gz</rich_text><rich_text>
2、文件修改
对照2009_0206_RT73_Linux_STA_Drv.bz2中WPA_Supplicant-0.5.8的文件，修改0.5.11中的对应文件，
3、解压
# tar zxvf wpa_supplicant-0.5.11.tar.gz
# cd wpa_supplicant-0.5.11
4、编译
#cp defconfig .config #使用默认的config
#export CC=mipsel-linux-gcc
#make
5、安装
将生成的wpa_supplicant 拷贝到目标板上, 路径为:/root/app/bin/wifitools/下
6、编写wpa网络的配置文件wpa_supplicant.conf
在目标板上目录为/root/appb/conf/wifi/下，创建一个wpa_supplicant.conf，键入以下内容：
ctrl_interface=/var/run/wpa_supplicant
ctrl_interface_group=0
ap_scan=1
network={
ssid=&quot;a&quot; #essid
psk=&quot;111&quot; #密码
}
3. WIFI驱动安装
1、驱动下载
</rich_text><rich_text link="webs http://www.ralinktech.com.tw/data/drivers/2009_0206_RT73_Linux_STA_Drv1.1.0.2.tar.bz2">http://www.ralinktech.com.tw/data/drivers/2009_0206_RT73_Linux_STA_Drv1.1.0.2.tar.bz2</rich_text><rich_text>
2、解压
# tar jxvf 2009_0206_RT73_Linux_STA_Drv1.1.0.2.tar.bz2
# cd 2009_2006_RT73_Linux_STA_Drv_1.1.0.2/Module
3、修改Makefile
5 #PLATFORM=PC
6 PLATFORM=CMPC
40 ifeq ($(PLATFORM),CMPC)
41 LINUX_SRC = /opt/smp86xx_kernel_source_2.8.4.1/linux-2.6.15
42 endif
4、编译
# cp Makefile.6 ./Makefile
# make
5、安装
在目标板上，先将生成的rt73.ko以及文件rt73sta.dat 与 rt73.bin 拷贝到目标板上。
# cp rt73.ko /root/app/lib/ modules/2.6.15/
# mkdir –p /etc/Wireless/RT73STA
# cp rt73.bin /etc/Wireless/RT73STA
# cp rt73sta.dat /etc/Wireless/RT73STA
# insmod rt73.ko
# lsmod
另：ifrename 的使用
touch /etc/iftab 
ifrename -i ra0 -n wlan0 
ifrename -i rausb0 -n wlan0 
/etc/iftab  wlan1 mac 
</rich_text><rich_text link="webs http://linux.die.net/man/8/ifrename">http://linux.die.net/man/8/ifrename</rich_text><rich_text>
 ---------------------------------------------------------------------------
移植wireless tools for liunx
要正常使用无线网卡，还要正确配置。linux下的配置工具是wireless-tools，可以在这里下载到它的最新版。</rich_text><rich_text link="webs http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/Tools.html">http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/Tools.html</rich_text><rich_text>下载后，将源代码解压。再修改其中的makefile文件，将其中的
CC = gcc
AR = ar
RANLIB = ranlib
改为</rich_text><rich_text background="#fff700">
CC = arm-linux-gcc</rich_text><rich_text>
</rich_text><rich_text background="#fff700">AR = arm-linux-ar</rich_text><rich_text>
</rich_text><rich_text background="#fff700">RANLIB = arm-linux-ranlib</rich_text><rich_text>再执行make，编译完成后，将生成的iwconfig，iwlist文件拷贝到rat-linux for mini2440的根文件系统中的/bin目录下，将libiw.so.29拷贝到/lib目录下。启动mini2440开发板，进入linux命令行后，执行ifconfig wlan0 up，启动无线网卡。再执行iwlist scanning，此命令可以搜索到可用的无线网络接入点。我的无线接入点是一台无线路由器，ESSID是&quot;rat-linux&quot;，执行此命令后就会下列输出wlan0     Scan completed :
          Cell 01 - Address: 00:19:C6:53:B9:CE
                    ESSID:&quot;rat-linux&quot;
                    Mode:Master
                    Channel:2
                    Frequency:2.417 GHz (Channel 2)
                    Quality=11/100  Signal level:66/100
                    Encryption key:on
                    Bit Rates:1 Mb/s; 2 Mb/s; 5.5 Mb/s; 11 Mb/s; 6 Mb/s
                              9 Mb/s; 12 Mb/s; 18 Mb/s; 24 Mb/s; 36 Mb/s
                              48 Mb/s; 54 Mb/s
                    Extra:tsf=000000056306469f
                    Extra: Last beacon: 1065ms ago
其中可以看到我的无线接入点是需要密码的。假设密码是123456。使用如下的命令设置密码。
  iwconfig wlan0 key 123456为了能接无线网，还要使用下面的命令设置ESSID  iwconfig wlan0 essid &quot;rat-linux&quot;其它的参数可以都采用默认的，不用再设了。可以使用下面的命令加入无线网了。
 
  iwconfig wlan0 ap auto再执行iwconfig wlan0，就可以看到下面的信息。wlan0     IEEE 802.11bg  ESSID:&quot;rat-linux&quot;
          Mode:Managed  Frequency:2.417 GHz  Access Point: 00:19:C6:53:B9:CE
          Bit Rate=1 Mb/s   Tx-Power=27 dBm
          Retry min limit:7   RTS thr:off   Fragment thr=2352 B
          Encryption key:1234-56   Security mode:open
          Power Management:off
          Link Quality=100/100  Signal level:66/100
          Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0
          Tx excessive retries:0  Invalid misc:0   Missed beacon:0这就表示已接入无线网。最后，为无线网卡指定IP地址。命令如下  ifconfig wlan0 192.168.1.30 netmask 255.255.255.0我的开发主机和无线网卡处于同一网段，因此是可以相互PING通的。因此可以用从开发主机上PING无线网卡的IP地址的方法来确网卡是否工作正常。从主机上执行ping 192.168.1.30，正常PING通。
至此，无线网卡安装全部完成。最后，为了方便配置，可以将上述的配置命令写入linux脚本文件，以后，只要执行此脚本，即可完成上述步骤的配置。脚本文件内容如下。
#! /bin/shifconfig wlan0 up
iwconfig wlan0 key 123456
iwconfig wlan0 essid &quot;rat-linux&quot;
iwconfig wlan0 ap auto
ifconfig wlan0 192.168.1.30 netmask 255.255.255.0</rich_text></node><node name="常用命令" prog_lang="custom-colors" readonly="False" tags="" unique_id="33"><rich_text>###############################################################################
</rich_text><rich_text scale="h3" weight="heavy">从指定类型文件中查找</rich_text><rich_text>
find . -name '*.c' | awk '{print &quot;grep -i -nH keyword &quot;$1}' | /bin/bash
find . -name '*.c' -exec grep -i -nH &quot;keyword&quot; {} \;
</rich_text><rich_text scale="h3" weight="heavy">更好的搜索方法：</rich_text><rich_text>
grep -i &quot;search_string&quot; . -r --include=*.txt
grep &quot;search_string&quot; . -r --include=*.txt --include=*.cpp --include=*.h

</rich_text><rich_text scale="h3" weight="heavy">只显示目录名</rich_text><rich_text>
ls -l | grep ^d
或
ls -d */

</rich_text><rich_text scale="h3" weight="heavy">只显示文件</rich_text><rich_text>
ls -l | grep ^-

</rich_text><rich_text scale="h3" weight="heavy">分别设置子目录和文件不同权限</rich_text><rich_text>
find . -type d -exec chmod 755 {} \;
find . -type f -exec chmod 644 {} \;

</rich_text><rich_text scale="h3" weight="heavy">为指定文件设置可执行权限</rich_text><rich_text>
</rich_text><rich_text scale="h3">find . -name 'commit-msg' -type f -exec chmod +x {} \;</rich_text><rich_text>
find . -name '*.sh' -type f -exec chmod +x {} \;

找出在/home/user中的所有空子目录:
find /home/user -maxdepth 1 -type d -empty

得到test.txt中50到60行的文本:
&lt; test.txt sed -n '50,60p'

以sudo权限重新运行上一个执行的命令 (如果是: mkdir /root/test, 下面会运行: sudo mkdir /root/tes
sudo !!

创建临时RAM文件系统 - ramdisk (请先创建 /tmpram 目录):
mount -t tmpfs tmpfs /tmpram -o size=512m

Grep完整的单词（译注：而不是其它单词的一部分）:
grep -w &quot;name&quot; test.txt

提升权限后在一个文件后追加文本:
echo &quot;some text&quot; | sudo tee -a /path/file

列出所有支持的kill信号:
kill -l

生成随机密码 (本例中16个字符长):
openssl rand -base64 16

在bash历史中不记录最后的会话:
kill -9 $$

扫描网络来找出开放的端口:
nmap -p 8081 172.20.0.0/16

将文件名中含有txt的所有文件移动到/home/user:
find -iname &quot;*txt*&quot; -exec mv -v {} /home/user \;

按行将两个文件中的对应行合并显示:
paste test.txt test1.txt

shell中的进度条:
pv data.log

转换tab为空格:
expand test.txt &gt; test1.txt

找出文件中带有末尾空格的文件:
find . -type f -exec egrep -l &quot; +$&quot; &quot;{}&quot; \;

找出用tab缩进的文件:
find . -type f -exec egrep -l $'\t' &quot;{}&quot; \;

用&quot;=&quot;打印水平行
printf '%100s\n' | tr ' ' =


###############################################################################
</rich_text><rich_text scale="h2" weight="heavy">kernel patch</rich_text><rich_text>
###############################################################################
	(1).产生补丁
	生成patch命令用diff命令，该命令的基本用法是：
	diff [选项] 旧文件或目录 新文件或目录
	该命令根据选项产生新旧文件或目录之间的patch，并把该patch输出到标准输出上。
	选项用来指定输出的patch文件格式，如果比较的是目录是否需要递归，对只在一边目录中存在的文件的处理方法，如何处理空格、制表符、小写等；常用选项有
	-c 表示产生context格式的patch
	-u 表示产生unified格式的patch
	-r 表示对目录进行递归操作，用于产生整个代码树的patch
	-N 表示如果文件不存在则将其等价为空文件，这个用于产生有文件增加或删除的patch

	接下来，需要指定比较的对象，它们可以是文件，也可以时目录。旧版本列在前面，新版本列在后面。当然，文件或目录也可以从标准输入获得。此时，文件或目录名称用减号&quot;-&quot;表示。实例：

	cat build.xml | diff -y -W 100 - build-1.10.xml
	以每列100个字符的宽度并排对比输出build.xml和build-1.10.xml之间的差异到屏幕(标准输出)

	diff -c web.xml web2.xml &gt; web.xml.diff
	产生web2.xml相对于web.xml的修改的上下文格式补丁文件到web.xml.diff中去

	diff -crN src src_XFIRE &gt; xfire-patch.diff
	产生代码树src_XIRE相对于代码树src的上下文补丁文件到xfire-patch.diff中去，在src_XFIRE中新增的文件的内容也会被包含在补丁中。

	来自Linux内核patch的一个简短的引用可以这样实现：
　 diff -u ——recursive ——new-file v2.1.118//mm/swapfile.c /mm/swapfile. c
   --- v2.1.118/linux/mm/swapfile.c Wed Aug 26 11:37:45 1998
   +++ linux/mm/swapfile.c Wed Aug 26 16:01:57 1998 
   @@ -489,7 +489,7 @@
　　int swap_header_version;
　　int lock_map_size = PAGE_SIZE;
　　int nr_good_pages = 0; 
  - char tmp_lock_map = 0; 
  + unsigned long tmp_lock_map = 0;
　　应用来自本段中使用-p1开关拷贝的patch可以有效地减短patch定位的路径；patch会查找当前目录下一个名为/mm的子目录，接着应该会在这儿发现swapfile.c文件，然后等待打补丁。在这个过程中，以破折号（“-”号，译者注）开始的行会被一个以加号（“+”号，译者注）开始的行代替。一个典型的patch会包含对多个文件的更新，每个部分中都由对两个版本的文件运行diff -u命令的输出结果组成。

	(2).打补丁
	打补丁可以使用命令行工具patch。它的基本用法是：patch -pnum &lt; 补丁文件。
	打补丁时将工作目录改到需要打补丁源代码顶层目录，然后确定p后面的数字，该数字表示需要去掉的补丁文件中目录的层数，该数字和补丁创建时候工作目录和代码目录的相对位置有关，一般补丁的作者为在补丁文档中指明。如果没有指定，可以通过观察补丁文件中列出的文件完整路径和代码树中该文件所在相对路径得出。

	例子：
	cd src
	patch -p1 &lt; xfire-patch.diff

    (3).技巧
    如果你准备查看命令的输出，或者可能你希望保留*.orig文件直到你确定打过补丁的源程序编译已经通过，按照我的经验，直接运行patch（正如前面介绍的一样，patch位于内核源程序的最高目录）是很可靠的。为了避免对patch进行解压，在使用之前，可以使用这样一个技巧：
　　gzip -cd patchXX.gz | patch -p1
　　或者
　　bzip2 -dc patchXX.bz2 | patch -p1
　　在使用patch之后，可以使用find程序来检测被拒绝的文件：
　　find . -name *.rej
　　第一次使用这个命令，语法可能有些不清楚。点号（“.”）说明find应该查找当前目录并递规查找当前目录之下的所有子目录。记住，点号前后都应该有一个空格。通配符&quot;*&quot;号前面的反斜线把星号转义出来，以免shell会搞混，星号是有其它意义的。如果find找到了任何的*.rej文件，它就会把文件名打印到屏幕上。如果没有任何输出find就退出了，那么就差不多能确定patch正确发挥作用了。
　　find的另外一个工作是删除*.orig文件：
　　find . -name *.orig -print0 | xargs -0r rm -f


###############################################################################
###############################################################################
</rich_text><rich_text foreground="#ffff00000000" weight="heavy">patch</rich_text><rich_text weight="heavy"> [-bceEflnNRstTuvZ][-B &lt;备份字首字符串&gt;][-d &lt;工作目录&gt;][-D &lt;标示符号&gt;][-F &lt;监别列数&gt;][-g &lt;控制数值&gt;][-i &lt;修补文件&gt;][-o &lt;输出文件&gt;][-p &lt;剥离层级&gt;][-r &lt;拒绝文件&gt;][-V &lt;备份方式&gt;][-Y &lt;备份字首字符串&gt;][-z &lt;备份字尾字符串&gt;][--backup-if　　 -mismatch][--binary][--help][--nobackup-if-mismatch][--verbose][原始文件 &lt;修补文件&gt;] 或 path [-p &lt;剥离层级&gt;] &lt; [修补文件]</rich_text><rich_text>

</rich_text><rich_text weight="heavy">补充说明：</rich_text><rich_text>patch指令让用户利用设置修补文件的方式，修改，更新原始文件。倘若一次仅修改一个文件，可直接在指令列中下达指令依序执行。如果配合修补文件的方式则能一次修补大批文件，这也是Linux系统核心的升级方法之一。

</rich_text><rich_text weight="heavy">参　　数：</rich_text><rich_text>
　-b或--backup 　备份每一个原始文件。 
　-B&lt;备份字首字符串&gt;或--prefix=&lt;备份字首字符串&gt; 　设置文件备份时，附加在文件名称前面的字首字符串，该字符串可以是路径名称。 
　-c或--context 　把修补数据解译成关联性的差异。 
　-d&lt;工作目录&gt;或--directory=&lt;工作目录&gt; 　设置工作目录。 
　-D&lt;标示符号&gt;或--ifdef=&lt;标示符号&gt; 　用指定的符号把改变的地方标示出来。 
　-e或--ed 　把修补数据解译成ed指令可用的叙述文件。 
　-E或--remove-empty-files 　若修补过后输出的文件其内容是一片空白，则移除该文件。 
　-f或--force 　此参数的效果和指定&quot;-t&quot;参数类似，但会假设修补数据的版本为新　版本。 
　-F&lt;监别列数&gt;或--fuzz&lt;监别列数&gt; 　设置监别列数的最大值。 
　-g&lt;控制数值&gt;或--get=&lt;控制数值&gt; 　设置以RSC或SCCS控制修补作业。 
　-i&lt;修补文件&gt;或--input=&lt;修补文件&gt; 　读取指定的修补问家你。 
　-l或--ignore-whitespace 　忽略修补数据与输入数据的跳格，空格字符。 
　-n或--normal 　把修补数据解译成一般性的差异。 
　-N或--forward 　忽略修补的数据较原始文件的版本更旧，或该版本的修补数据已使　用过。 
　-o&lt;输出文件&gt;或--output=&lt;输出文件&gt; 　设置输出文件的名称，修补过的文件会以该名称存放。 
　-p&lt;剥离层级&gt;或--strip=&lt;剥离层级&gt; 　设置欲剥离几层路径(第几个斜杠(slash))名称。 

</rich_text><rich_text foreground="#00000000ffff">        例子：
              </rich_text><rich_text foreground="#a5a52a2a2a2a">/u/howard/src/blurfl/blurfl.c</rich_text><rich_text foreground="#00000000ffff">
                
          setting </rich_text><rich_text foreground="#ffff00000000">-p0</rich_text><rich_text foreground="#00000000ffff"> gives the entire file name unmodified, </rich_text><rich_text foreground="#ffff00000000">-p1</rich_text><rich_text foreground="#00000000ffff"> gives
             </rich_text><rich_text foreground="#a5a52a2a2a2a">u/howard/src/blurfl/blurfl.c</rich_text><rich_text foreground="#00000000ffff">

          without the leading slash, </rich_text><rich_text foreground="#ffff00000000">-p4</rich_text><rich_text foreground="#00000000ffff"> gives
             </rich_text><rich_text foreground="#a5a52a2a2a2a">blurfl/blurfl.c</rich_text><rich_text>

　-f&lt;拒绝文件&gt;或--reject-file=&lt;拒绝文件&gt; 　设置保存拒绝修补相关信息的文件名称，预设的文件名称为.rej。 
　-R或--reverse 　假设修补数据是由新旧文件交换位置而产生。 
　-s或--quiet或--silent 　不显示指令执行过程，除非发生错误。 
　-t或--batch 　自动略过错误，不询问任何问题。 
　-T或--set-time 　此参数的效果和指定&quot;-Z&quot;参数类似，但以本地时间为主。 
　-u或--unified 　把修补数据解译成一致化的差异。 
　-v或--version 　显示版本信息。 
　-V&lt;备份方式&gt;或--version-control=&lt;备份方式&gt; 　用&quot;-b&quot;参数备份目标文件后，备份文件的字尾会被加上一个备份字符串，这个字符串不仅可用&quot;-z&quot;参数变更，当使用&quot;-V&quot;参数指定不同备份方式时，也会产生不同字尾的备份字符串。
　-Y&lt;备份字首字符串&gt;或--basename-prefix=--&lt;备份字首字符串&gt; 　设置文件备份时，附加在文件基本名称开头的字首字符串。
　-z&lt;备份字尾字符串&gt;或--suffix=&lt;备份字尾字符串&gt; 　此参数的效果和指定&quot;-B&quot;参数类似，差别在于修补作业使用的路径与文件名若为src/linux/fs/super.c，加上&quot;backup/&quot;字符串后，文件super.c会备份于/src/linux/fs/backup目录里。 
　-Z或--set-utc 　把修补过的文件更改，存取时间设为UTC。 
　--backup-if-mismatch 　在修补数据不完全吻合，且没有刻意指定要备份文件时，才备份文件。 
　--binary 　以二进制模式读写数据，而不通过标准输出设备。 
　--help 　在线帮助。 
　--nobackup-if-mismatch 　在修补数据不完全吻合，且没有刻意指定要备份文件时，不要备份文件。 
　--verbose 　详细显示指令的执行过程。     

###############################################################################
</rich_text><rich_text scale="h1" weight="heavy">chroot和schroot的安装使用</rich_text><rich_text>
###############################################################################
</rich_text><rich_text link="webs https://help.ubuntu.com/community/DebootstrapChroot">https://help.ubuntu.com/community/DebootstrapChroot</rich_text><rich_text>
</rich_text><rich_text link="webs http://jacky.aiwaly.com/wp/schroot-chroot-for-any-users.html">http://jacky.aiwaly.com/wp/schroot-chro ... users.html</rich_text><rich_text>
</rich_text><rich_text link="webs https://help.ubuntu.com/community/BasicChroot">https://help.ubuntu.com/community/BasicChroot</rich_text><rich_text>
</rich_text><rich_text link="webs http://wiki.debian.org/Schroot">http://wiki.debian.org/Schroot</rich_text><rich_text>


</rich_text><rich_text scale="h2" weight="heavy">一、基本工具及配置、用法</rich_text><rich_text>
</rich_text><rich_text scale="h3" weight="heavy">1. 安装工具</rich_text><rich_text>
$ sudo apt-get install debootstrap schroot

</rich_text><rich_text scale="h3" weight="heavy">2. 提高安全性及避免用户配置混淆</rich_text><rich_text>
$ sudo editor /etc/schroot/mount-defaults
注释掉/home的挂载

</rich_text><rich_text scale="h3" weight="heavy">3. 进入系统的方法</rich_text><rich_text>
普通用户：schroot -c XXX
管理权限：sudo schroot -c XXX 或 schroot -c XXX -u root

</rich_text><rich_text scale="h3" weight="heavy">4. 另一种安装软件的方法</rich_text><rich_text>
$ sudo schroot -c XXX apt-get install YYY
例如：
$ sudo schroot -c lucid apt-get install nano
$ sudo schroot -c precise apt-get install nano

</rich_text><rich_text scale="h2" weight="heavy">二、安装32位 Ubuntu Precise</rich_text><rich_text>
</rich_text><rich_text scale="h3" weight="heavy">1. 编辑配置：sudo editor /etc/schroot/chroot.d/precise.conf,添加如下内容</rich_text><rich_text>
[precise]
description=Ubuntu Precise 32Bit
type=directory
directory=/srv/chroot/precise
users=loaden
groups=users
root-groups=root
personality=linux32

</rich_text><rich_text scale="h3" weight="heavy">2. 在/32目录安装32位系统</rich_text><rich_text>
$ sudo debootstrap --arch i386 precise /srv/chroot/precise </rich_text><rich_text link="webs http://mirrors.163.com/ubuntu/">http://mirrors.163.com/ubuntu/</rich_text><rich_text>
$ sudo chmod 777 /srv/chroot/precise/home
$ mkdir /srv/chroot/precise/home/loaden

</rich_text><rich_text scale="h3" weight="heavy">3. 执行：sudo schroot -c precise 进入系统</rich_text><rich_text>
a. 更新源
# echo &quot;deb </rich_text><rich_text link="webs http://mirrors.163.com/ubuntu">http://mirrors.163.com/ubuntu</rich_text><rich_text> precise main universe&quot; &gt; /etc/apt/sources.list
# apt-get update
b. 语言支持
# locale-gen en_US.UTF-8 zh_CN.UTF-8
c. 时区
# dpkg-reconfigure tzdata
d. 自动完成
# apt-get install bash-completion
e. 字体
# apt-get install ttf-wqy-*
f. 图形界面
# apt-get install libgtk2.0-0 libgtk-3-0 appmenu-gtk appmenu-gtk3
# echo &quot;export DISPLAY=:0.0&quot; &gt; /etc/profile.d/gui_support.sh

6. 以普通权限进入32位系统
a. 安装FoxReader
$ sudo dpkg -i FoxitReader_1.1.0_i386.deb
$ sudo apt-get install libcanberra-gtk-module
b. 安装glGo
$ sudo dpkg -i glGo-1.4.1.deb
$ sudo apt-get install libsm6 libjpeg62 libsdl-image1.2 libsdl-ttf2.0-0 libsdl-mixer1.2 libglu1-mesa libpython2.7 gnugo
$ sudo ln -s /usr/lib/libpython2.7.so.1.0 /usr/lib/libpython2.5.so.1.0


</rich_text><rich_text scale="h2" weight="heavy">二、安装32位 Ubuntu Lucid</rich_text><rich_text>
</rich_text><rich_text scale="h3" weight="heavy">1. 编辑配置：sudo editor /etc/schroot/chroot.d/lucid.conf,添加如下内容</rich_text><rich_text>
[lucid]
description=Ubuntu Lucid 32Bit
type=directory
directory=/srv/chroot/lucid
users=loaden
groups=users
root-groups=root
personality=linux32

</rich_text><rich_text scale="h3" weight="heavy">2. 在/32目录安装32位系统</rich_text><rich_text>
$ sudo debootstrap --arch i386 lucid /srv/chroot/lucid </rich_text><rich_text link="webs http://mirrors.163.com/ubuntu/">http://mirrors.163.com/ubuntu/</rich_text><rich_text>
$ sudo chmod 777 /srv/chroot/lucid/home
$ mkdir /srv/chroot/lucid/home/loaden
$ ln -s ~ /srv/chroot/lucid/home/loaden/.host

</rich_text><rich_text scale="h3" weight="heavy">3. 执行：sudo schroot -c lucid 进入系统</rich_text><rich_text>
a. 更新源
# echo &quot;deb </rich_text><rich_text link="webs http://mirrors.163.com/ubuntu">http://mirrors.163.com/ubuntu</rich_text><rich_text> lucid main universe&quot; &gt; /etc/apt/sources.list
# apt-get update
b. 语言支持
# locale-gen en_US.UTF-8 zh_CN.UTF-8
c. 时区
# dpkg-reconfigure tzdata
d. 自动完成
# apt-get install bash-completion
e. 字体
# apt-get install ttf-wqy-*
f. 图形界面
# apt-get install libgtk2.0-0
# echo &quot;export DISPLAY=:0.0&quot; &gt; /etc/profile.d/gui_support.sh

</rich_text><rich_text scale="h3" weight="heavy">4. 以普通权限进入32位系统</rich_text><rich_text>
a. 安装FoxReader
$ sudo dpkg -i FoxitReader_1.1.0_i386.deb
$ sudo apt-get install libcanberra-gtk-module
b. 安装glGo
$ sudo dpkg -i glGo-1.4.1.deb
$ sudo apt-get install libsm6 libjpeg62 libsdl-image1.2 libsdl-ttf2.0-0 libsdl-mixer1.2 libglu1-mesa libpython2.6 gnugo
$ sudo ln -s /usr/lib/libpython2.6.so.1.0 /usr/lib/libpython2.5.so.1.0           

==============================================================
iconv使用
==============================================================
常用参数
首先，我们要知道支持的字符编码有哪些，这个可以用-l参数得到（List known coded character sets）。
格式：iconv -l
其次，是怎样转换，如下所示：
格式：iconv -f from-encoding -t to-encoding inputfile
上面的调用方式，会把输出打印在屏幕上，如果要输出到文件，可以像下面这样
格式：iconv -f from-encoding -t to-encoding inputfile -o outputfile

</rich_text><rich_text scale="h3" weight="heavy">5. wc统计文件行数</rich_text><rich_text>
语法：wc [选项] 文件…
说明：该命令统计给定文件中的字节数、字数、行数。如果没有给出文件名，则从标准输入读取。wc同时也给出所有指定文件的总统计数。字是由空格字符区分开的最大字符串。
该命令各选项含义如下：
　　- c 统计字节数。
　　- l 统计行数。
　　- w 统计字数。
</rich_text><node name="mount用法" prog_lang="custom-colors" readonly="False" tags="" unique_id="77"><rich_text>
</rich_text><rich_text scale="h2" weight="heavy">1. mount</rich_text><rich_text>
功能：
加载指定的文件系 统；mount可将指定设备中指定的文件系统加载到 Linux目录下（也就是装载点）。可将经常使用的设备写入文件/etc/fastab,以使系 统在每次启动时自动加载。mount加载设备的信息记录在/etc/mtab文件中。使用umount命令卸载设备时，记录将被清除。
用法：
mount  [-afFhnrvVw]  [-L&lt;标签&gt;] [-o&lt;选项&gt;] [-t&lt;文件系统类型&gt;] [设备名] [加载点] 
参数：
-a  加载文件/etc/fstab中设置的所有设备。  
 -f 不实际加载设备。可与-v等参数同时使用以查看mount的执行过程。 
 -F 需与-a参数同时使用。所有在/etc/fstab中设置的设备会被同时加载，可加快执行速度。 
 -h 显示在线帮助信息。 
 -L&lt;标签&gt; 加载文件系统标签为&lt;标签&gt;的设备。 
 -n 不将加载信息记录在/etc/mtab文件中。 
 -o&lt;选项&gt; 指定加载文件系统时的选项。有些选项也可在/etc/fstab中使用。这些选项包括： 
 async 以非同步的方式执行文件系统的输入输出动作。 
 atime 每次存取都更新inode的存取时间，默认设置，取消选项为noatime。 
 auto 必须在/etc/fstab文件中指定此选项。执行-a参数时，会加载设置为auto的设备，取消选取为noauto。 
 defaults 使用默认的选项。默认选项为rw、suid、dev、exec、anto nouser与async。 
 dev 可读文件系统上的字符或块设备，取消选项为nodev。 
 exec 可执行二进制文件，取消选项为noexec。 
 noatime 每次存取时不更新inode的存取时间。 
 noauto 无法使用-a参数来加载。 
 nodev 不读文件系统上的字符或块设备。 
 noexec 无法执行二进制文件。 
 nosuid 关闭set-user-identifier(设置用户ID)与set-group-identifer(设置组ID)设置位。 
 nouser 使一位用户无法执行加载操作，默认设置。 
 remount 重新加载设备。通常用于改变设备的设置状态。 
 ro 以只读模式加载。 
 rw 以可读写模式加载。 
 suid  启动set-user-identifier(设置用户ID)与set-group-identifer(设置组ID)设置位，取消选项为nosuid。  
 sync 以同步方式执行文件系统的输入输出动作。 
 user 可以让一般用户加载设备。 
 
 -r 以只读方式加载设备。 
 -t&lt;文件系统类型&gt; 指定设备的文件系统类型。常用的选项说明有： 
 minix Linux最早使用的文件系统。 
 ext2 Linux目前的常用文件系统。 
 msdos MS-DOS 的 FAT。 
 vfat Win85/98 的 VFAT。 
 nfs 网络文件系统。 
 iso9660 CD-ROM光盘的标准文件系统。 
 ntfs Windows NT的文件系统。 
 hpfs OS/2文件系统。Windows NT 3.51之前版本的文件系统。 
 auto 自动检测文件系统。 
 -v 执行时显示详细的信息。 
 -V 显示版本信息。 
 -w 以可读写模式加载设备，默认设置。
示例：
fat32的 分区 
 mount -o  codepage=936,iocharset=cp936 /dev/hda7 /mnt/cdrom (mount -t vfat -o  iocharset=cp936 /dev/hda7 /mnt/cdrom)
 ntfs的分区 
 mount -o iocharset=cp936 /dev/hda7 /mnt/cdrom
 iso文件 
 mount -o loop /abc.iso /mnt/cdrom
 软盘 
 mount /dev/fd0 /mnt/floppy
 USB闪存 
U盘也是当作 SCSI设备对待，和USB接口的移动硬盘一样。插入U盘之前，应先用fdisk –l 或 more  /proc/partitions查看系统的硬盘和硬盘分区情况。  插入U盘后，再用fdisk –l 或 more  /proc/partitions查看系统的硬盘和硬盘分区情况。
系统多了一个 SCSI硬盘/dev/sdd和一个磁盘分区/dev/sdd1,/dev/sdd1就是我们要挂接的 U盘。  
建立一个目录用来作 挂接点(mount point)     
mkdir -p  /mnt/usb
mount -t  vfat  /dev/sdd1 /mnt/usb

</rich_text><rich_text scale="h2" weight="heavy">2. mount nfs目录的方法:</rich_text><rich_text>
mount -t nfs hostname(orIP):/directory /mount/point
具体例子:
Linux: mount -t nfs 192.168.0.1:/tmp /mnt/nfs
Solaris:mount -F nfs 192.168.0.1:/tmp /mnt/nfs
BSD: mount 192.168.0.1:/tmp /mnt/nfs

</rich_text><rich_text scale="h3" weight="heavy">mount nfs的其它可选参数:</rich_text><rich_text>
HARD mount 和SOFT MOUNT:
HARD: 
    NFS CLIENT会不断的尝试与SERVER的连接(在后台,不会给出任何提示信息,在LINUX 下有的版本仍然会给出一些提示),直到MOUNT上.
SOFT:
    会在前台尝试与SERVER的连接,是默认的连接方式.当收到错误信息后终止 mount尝试,并给出相关信息.
    例如:mount -F nfs -o hard 192.168.0.10:/nfs /nfs
    对于到底是使用hard还是soft的问题,这主要取决于你访问什么信息有关.例如你是想通过NFS协议来运行X  PROGRAM的话,你绝对不会希望由于一些意外的情况(如网络速度一下子变的很慢,插拔了一下网卡插头等)而使系统输出大量的错误信息,如果此时你用的 是HARD方式的话,系统就会等待,直到能够重新与NFS  SERVER建立连接传输信息.另外如果是非关键数据的话也可以使用SOFT方式,如FTP数据等,这样在远程机器暂时连接不上或关闭时就不会挂起你的会 话过程.
rsize和wsize:
    文件传输尺寸设定:V3没有限定传输尺寸,V2最多只能设定为8k,可以使用-rsize and -wsize 来进行设定.这两个参数的设定对于NFS的执行效能有较大的影响
bg:
    在执行mount时如果无法顺利mount上时,系统会将mount的操作转移到后台并继续尝试mount,直到mount成功为止.(通常在设定/etc/fstab文件时都应该使用bg,以避免可能的mount不上而影响启动速度)
fg:
    和bg正好相反,是默认的参数
nfsvers=n:
    设定要使用的 NFS版本,默认是使用2,这个选项的设定还要取决于server端是否支持NFS VER 3
mountport:
    设定mount的端口
port:
    根据server端export出的端口设定,例如如果server使用5555端口输出NFS,那客户端就需要使用这个参数进行同样的设定
timeo=n: 
    设置超时时间,当数据传输遇到问题时,会根据这个参数尝试进行重新传输.默认值是7/10秒(0.7秒).如果网络连接不是很稳定的话就要加大这个数值, 并且推荐使用HARD MOUNT方式,同时最好也加上INTR参数,这样你就可以终止任何挂起的文件访问.
intr: 
    允许通知中断一个NFS调用.当服务器没有应答需要放弃的时候有用处.
udp:
    使用udp作为nfs协议的传输协议(NFS V2只支持UDP)
tcp:
    使用tcp作为nfs的传输协议
namlen=n:
    设定远程服务器所允许的最长文件名.这个值的默认是255
acregmin=n:设定最小的在文件更新之前cache时间,默认是3
acregmax=n:设定最大的在文件更新之前cache时间,默认是60
acdirmin=n:设定最小的在目录更新之前cache时间,默认是30
acdirmax=n:设定最大的在目录更新之前cache时间,默认是60
actimeo=n:将acregmin?acregmax?acdirmin?acdirmax设定为同一个数值,默认是没有启用.
retry=n:设定当网络传输出现故障的时候,尝试重新连接多少时间后不再尝试.默认的数值是10000 minutes
noac:关闭cache机制.

同时使用多个参数的方法:
mount -t nfs -o timeo=3,udp,hard 192.168.0.30:/tmp /nfs

</rich_text><rich_text scale="h2" weight="heavy">3. mount --bind的妙用</rich_text><rich_text>
在固件开发过程中常常遇到这样的情况：为测试某个新功能，必需修改某个系统文件。而这个文件在只读文件系统上（总不能为一个小小的测试就重刷固件吧），或者是虽然文件可写，但是自己对这个改动没有把握，不愿意直接修改。这时候mount --bind就是你的好帮手。

假设我们要改的文件是/etc/hosts，可按下面的步骤操作：

1. 把新的hosts文件放在/tmp下。当然也可放在硬盘或U盘上。
2. mount --bind /tmp/hosts /etc/hosts

测试完成了执行 umount /etc/hosts 断开绑定。

如果我需要在/etc下面增加一个exports文件怎么办？原来没有这个文件，不能直接bind。我们有两个方法：

方法1：绑定整个/etc目录，绑定前先复制/etc
</rich_text><rich_text foreground="#000000"># cp -a /etc /tmp
# mount --bind /tmp/etc /etc</rich_text><rich_text>此时的/etc目录是可写的，所做修改不会应用到原来的/etc目录，可以放心测试。

方法2：挂载ramfs到/etc，同样要先复制/etc
</rich_text><rich_text foreground="#000000">挂载ramfs
# mkdir /tmp/etc
# mount -t ramfs none /tmp/etc

复制/etc，这里我们不能用cp -a，改用tar
# cd /etc
# tar cf - . |(cd /tmp/etc; tar xf -)
# cd /

覆盖/etc
# mount --move /tmp/etc /etc</rich_text><rich_text>测试完了记着 umount /etc 

       
 





 





 





 





 





 





 





 





 





 





 





 





 


   Device Boot Start End Blocks Id System    /dev/sda1 1 4 32098+ de Dell Utility    /dev/sda2 * 5 2554 20482875 7 HPFS/NTFS    /dev/sda3 2555 7904 42973875 83 Linux    /dev/sda4 7905 8924 8193150 f Win95 Ext'd (LBA)    /dev/sda5 7905 8924 8193118+ 82 Linux swap 
  插入 U 盘后，再用 fdisk –l 或 more /proc/partitions 查看系统的硬盘和硬盘分区情况。 
   [root at pldyrouter root]# fdisk -l 
   Disk /dev/sda: 73 dot 4 GB, 73407820800 bytes    255 heads, 63 sectors/track, 8924 cylinders    Units = cylinders of 16065 * 512 = 8225280 bytes 
   Device Boot Start End Blocks Id System    /dev/sda1 1 4 32098+ de Dell Utility    /dev/sda2 * 5 2554 20482875 7 HPFS/NTFS    /dev/sda3 2555 7904 42973875 83 Linux    /dev/sda4 7905 8924 8193150 f Win95 Ext'd (LBA)    /dev/sda5 7905 8924 8193118+ 82 Linux swap    Disk /dev/sdd: 131 MB, 131072000 bytes    9 heads, 32 sectors/track, 888 cylinders    Units = cylinders of 288 * 512 = 147456 bytes 



 


   Device Boot Start End Blocks Id System    /dev/sdd1 * 1 889 127983+ b Win95 FAT32    Partition 1 has different physical/logical endings: 
   phys=(1000, 8, 32) logical=(888, 7, 31) 
  系统多了一个 SCSI 硬盘 /dev/sdd 和一个磁盘分区 /dev/sdd1,/dev/sdd1 就是我们要挂接的 
U 盘。 
   #mkdir -p /mnt/usb 
  注：建立一个目录用来作挂接点 (mount point) 
   #mount -t vfat /dev/sdd1 /mnt/usb 
  注：现在可以通过 /mnt/usb 来访问 U 盘了 , 若汉字文件名显示为乱码或不显示，可以使
用下面的命令。 
   #mount -t vfat -o iocharset=cp936 /dev/sdd1 /mnt/usb 
    
挂接 Windows 文件共享  
   Windows 网络共享的核心是 SMB/CIFS ，在 linux 下要挂接 (mount)windows 的磁盘共享，就必须安装和使用 samba 软件包。现在流行的 linux 发行版绝大多数已经包含了 samba 软件包，如果安装 linux 系统时未安装 samba 请首先安装 samba 。当然也可以到 </rich_text><rich_text link="webs http://www.samba.org">www.samba.org</rich_text><rich_text>
网站下载 ......新的版本是 3.0.10版。  
  当 windows 系统共享设置好以后，就可以在 linux 客户端挂接 (mount) 了，具体操作如
下： 
   # mkdir –p /mnt/samba  



 


  注：建立一个目录用来作挂接点 (mount point) 
   # mount -t smbfs -o username=administrator,password=pldy123 //10.140.133.23/c$ /mnt/samba   注： administrator 和 pldy123 是 ip 地址为 10.140.133.23 windows 计算机的一个用户名和
密码， c$ 是这台计算机的一个磁盘共享 
  如此就可以在 linux 系统上通过 /mnt/samba 来访问 windows 系统磁盘上的文件了。以上操作在 redhat as server 3 、 redflag server 4.1 、 suse server 9 以及 windows NT 4.0 、 windows 
2000 、 windows xp 、 windows 2003 环境下测试通过。 
  挂接 UNIX 系统 NFS 文件共享  
  类似于 windows 的网络共享， UNIX(Linux) 系统也有自己的网络共享，那就是 NFS( 网络文件系统 ) ，下面我们就以 SUN Solaris2.8 和 REDHAT as server 3 为例简单介绍一下在 linux 
下如何 mount nfs 网络共享。 
  在 linux 客户端挂接 (mount)NFS 磁盘共享之前，必须先配置好 NFS 服务端。 
   1 、 Solaris 系统 NFS 服务端配置方法如下： 
    (1) 修改 /etc/dfs/dfstab, 增加共享目录        share -F nfs -o rw /export/home/sunky 
    (2) 启动 nfs 服务 
       # /etc/init.d/nfs.server start 
    (3)NFS 服务启动以后，也可以使用下面的命令增加新的共享 
       # share /export/home/sunky1        # share /export/home/sunky2 
   注： /export/home/sunky 和 /export/home/sunky1 是准备共享的目录 



 


   2 、 linux 系统 NFS 服务端配置方法如下： 
    (1) 修改 /etc/exports, 增加共享目录    /export/home/sunky 10.140.133.23(rw) 
   /export/home/sunky1 *(rw)    /export/home/sunky2 linux-client(rw)  
   注： /export/home/ 目录下的 sunky 、 sunky1 、 sunky2 是准备共享的目录， 10.140.133.23 、 * 、 linux- client 是被允许挂接此共享 linux 客户机的 IP 地址或主机名。如果要使用主机名 linux-client 必须在服务端主机 /etc/hosts 文件里增加 linux-client 主机 ip 定义。
格式如下： 
    10.140.133.23 linux-client     (2) 启动与停止 NFS 服务 
    /etc/rc.d/init.d/portmap start ( 在 REDHAT 中 PORTMAP 是默认启动的 )  
    /etc/rc.d/init.d/nfs start 启动 NFS 服务     /etc/rc.d/init.d/nfs stop 停止 NFS 服务 
   注：若修改 /etc/export 文件增加新的共享，应先停止 NFS 服务，再启动 NFS 服务方能
使新增加的共享起作用。使用命令 exportfs -rv 也可以达到同样的效果。    3 、 linux 客户端挂接 (mount) 其他 linux 系统或 UNIX 系统的 NFS 共享 
    # mkdir –p /mnt/nfs 
   注：建立一个目录用来作挂接点 (mount point) 
    #mount -t nfs -o rw 10.140.133.9:/export/home/sunky /mnt/nfs 



 


   注：这里我们假设 10.140.133.9 是 NFS 服务端的主机 IP 地址，当然这里也可以使用主机名，但必须在本机 /etc/hosts 文件里增加服务端 ip 定义。 /export/home/sunky 为服务端共享
的目录。 
  如此就可以在 linux 客户端通过 /mnt/nfs 来访问其它 linux 系统或 UNIX 系统以 NFS 方式共享出来的文件了。以上操作在 redhat as server 3 、 redflag server4.1 、 suse server 9 以及 
Solaris 7 、 Solaris 8 、 Solaris 9 for x86&amp;sparc环境下测试通过。 
 

</rich_text><rich_text scale="h2">mount</rich_text><rich_text>
功能：
加载指定的文件系 统；mount可将指定设备中指定的文件系统加载到 Linux目录下（也就是装载点）。可将经常使用的设备写入文件/etc/fastab,以使系 统在每次启动时自动加载。mount加载设备的信息记录在/etc/mtab文件中。使用umount命令卸载设备时，记录将被清除。
用法：
mount  [-afFhnrvVw]  [-L&lt;标签&gt;] [-o&lt;选项&gt;] [-t&lt;文件系统类型&gt;] [设备名] [加载点] 
参数：
-a  加载文件/etc/fstab中设置的所有设备。  
 -f 不实际加载设备。可与-v等参数同时使用以查看mount的执行过程。 
 -F 需与-a参数同时使用。所有在/etc/fstab中设置的设备会被同时加载，可加快执行速度。 
 -h 显示在线帮助信息。 
 -L&lt;标签&gt; 加载文件系统标签为&lt;标签&gt;的设备。 
 -n 不将加载信息记录在/etc/mtab文件中。 
 -o&lt;选项&gt; 指定加载文件系统时的选项。有些选项也可在/etc/fstab中使用。这些选项包括： 
 async 以非同步的方式执行文件系统的输入输出动作。 
 atime 每次存取都更新inode的存取时间，默认设置，取消选项为noatime。 
 auto 必须在/etc/fstab文件中指定此选项。执行-a参数时，会加载设置为auto的设备，取消选取为noauto。 
 defaults 使用默认的选项。默认选项为rw、suid、dev、exec、anto nouser与async。 
 dev 可读文件系统上的字符或块设备，取消选项为nodev。 
 exec 可执行二进制文件，取消选项为noexec。 
 noatime 每次存取时不更新inode的存取时间。 
 noauto 无法使用-a参数来加载。 
 nodev 不读文件系统上的字符或块设备。 
 noexec 无法执行二进制文件。 
 nosuid 关闭set-user-identifier(设置用户ID)与set-group-identifer(设置组ID)设置位。 
 nouser 使一位用户无法执行加载操作，默认设置。 
 remount 重新加载设备。通常用于改变设备的设置状态。 
 ro 以只读模式加载。 
 rw 以可读写模式加载。 
 suid  启动set-user-identifier(设置用户ID)与set-group-identifer(设置组ID)设置位，取消选项为nosuid。  
 sync 以同步方式执行文件系统的输入输出动作。 
 user 可以让一般用户加载设备。 
 
 -r 以只读方式加载设备。 
 -t&lt;文件系统类型&gt; 指定设备的文件系统类型。常用的选项说明有： 
 minix Linux最早使用的文件系统。 
 ext2 Linux目前的常用文件系统。 
 msdos MS-DOS 的 FAT。 
 vfat Win85/98 的 VFAT。 
 nfs 网络文件系统。 
 iso9660 CD-ROM光盘的标准文件系统。 
 ntfs Windows NT的文件系统。 
 hpfs OS/2文件系统。Windows NT 3.51之前版本的文件系统。 
 auto 自动检测文件系统。 
 -v 执行时显示详细的信息。 
 -V 显示版本信息。 
 -w 以可读写模式加载设备，默认设置。
示例：
fat32的 分区 
 mount -o  codepage=936,iocharset=cp936 /dev/hda7 /mnt/cdrom (mount -t vfat -o  iocharset=cp936 /dev/hda7 /mnt/cdrom)
 ntfs的分区 
 mount -o iocharset=cp936 /dev/hda7 /mnt/cdrom
 iso文件 
 mount -o loop /abc.iso /mnt/cdrom
 软盘 
 mount /dev/fd0 /mnt/floppy
 USB闪存 
U盘也是当作 SCSI设备对待，和USB接口的移动硬盘一样。插入U盘之前，应先用fdisk –l 或 more  /proc/partitions查看系统的硬盘和硬盘分区情况。  插入U盘后，再用fdisk –l 或 more  /proc/partitions查看系统的硬盘和硬盘分区情况。
系统多了一个 SCSI硬盘/dev/sdd和一个磁盘分区/dev/sdd1,/dev/sdd1就是我们要挂接的 U盘。  
建立一个目录用来作 挂接点(mount point)     
mkdir -p  /mnt/usb
mount -t  vfat  /dev/sdd1 /mnt/usb






 





 





 





 





 





 





 





 





 


   Device Boot Start End Blocks Id System    /dev/sda1 1 4 32098+ de Dell Utility    /dev/sda2 * 5 2554 20482875 7 HPFS/NTFS    /dev/sda3 2555 7904 42973875 83 Linux    /dev/sda4 7905 8924 8193150 f Win95 Ext'd (LBA)    /dev/sda5 7905 8924 8193118+ 82 Linux swap 
  插入 U 盘后，再用 fdisk –l 或 more /proc/partitions 查看系统的硬盘和硬盘分区情况。 
   [root at pldyrouter root]# fdisk -l 
   Disk /dev/sda: 73 dot 4 GB, 73407820800 bytes    255 heads, 63 sectors/track, 8924 cylinders    Units = cylinders of 16065 * 512 = 8225280 bytes 
   Device Boot Start End Blocks Id System    /dev/sda1 1 4 32098+ de Dell Utility    /dev/sda2 * 5 2554 20482875 7 HPFS/NTFS    /dev/sda3 2555 7904 42973875 83 Linux    /dev/sda4 7905 8924 8193150 f Win95 Ext'd (LBA)    /dev/sda5 7905 8924 8193118+ 82 Linux swap    Disk /dev/sdd: 131 MB, 131072000 bytes    9 heads, 32 sectors/track, 888 cylinders    Units = cylinders of 288 * 512 = 147456 bytes 



 


   Device Boot Start End Blocks Id System    /dev/sdd1 * 1 889 127983+ b Win95 FAT32    Partition 1 has different physical/logical endings: 
   phys=(1000, 8, 32) logical=(888, 7, 31) 
  系统多了一个 SCSI 硬盘 /dev/sdd 和一个磁盘分区 /dev/sdd1,/dev/sdd1 就是我们要挂接的 
U 盘。 
   #mkdir -p /mnt/usb 
  注：建立一个目录用来作挂接点 (mount point) 
   #mount -t vfat /dev/sdd1 /mnt/usb 
  注：现在可以通过 /mnt/usb 来访问 U 盘了 , 若汉字文件名显示为乱码或不显示，可以使
用下面的命令。 
   #mount -t vfat -o iocharset=cp936 /dev/sdd1 /mnt/usb 
    
挂接 Windows 文件共享  
   Windows 网络共享的核心是 SMB/CIFS ，在 linux 下要挂接 (mount)windows 的磁盘共享，就必须安装和使用 samba 软件包。现在流行的 linux 发行版绝大多数已经包含了 samba 软件包，如果安装 linux 系统时未安装 samba 请首先安装 samba 。当然也可以到 </rich_text><rich_text link="webs http://www.samba.org">www.samba.org</rich_text><rich_text>
网站下载 ......新的版本是 3.0.10版。  
  当 windows 系统共享设置好以后，就可以在 linux 客户端挂接 (mount) 了，具体操作如
下： 
   # mkdir –p /mnt/samba  



 


  注：建立一个目录用来作挂接点 (mount point) 
   # mount -t smbfs -o username=administrator,password=pldy123 //10.140.133.23/c$ /mnt/samba   注： administrator 和 pldy123 是 ip 地址为 10.140.133.23 windows 计算机的一个用户名和
密码， c$ 是这台计算机的一个磁盘共享 
  如此就可以在 linux 系统上通过 /mnt/samba 来访问 windows 系统磁盘上的文件了。以上操作在 redhat as server 3 、 redflag server 4.1 、 suse server 9 以及 windows NT 4.0 、 windows 
2000 、 windows xp 、 windows 2003 环境下测试通过。 
  挂接 UNIX 系统 NFS 文件共享  
  类似于 windows 的网络共享， UNIX(Linux) 系统也有自己的网络共享，那就是 NFS( 网络文件系统 ) ，下面我们就以 SUN Solaris2.8 和 REDHAT as server 3 为例简单介绍一下在 linux 
下如何 mount nfs 网络共享。 
  在 linux 客户端挂接 (mount)NFS 磁盘共享之前，必须先配置好 NFS 服务端。 
   1 、 Solaris 系统 NFS 服务端配置方法如下： 
    (1) 修改 /etc/dfs/dfstab, 增加共享目录        share -F nfs -o rw /export/home/sunky 
    (2) 启动 nfs 服务 
       # /etc/init.d/nfs.server start 
    (3)NFS 服务启动以后，也可以使用下面的命令增加新的共享 
       # share /export/home/sunky1        # share /export/home/sunky2 
   注： /export/home/sunky 和 /export/home/sunky1 是准备共享的目录 



 


   2 、 linux 系统 NFS 服务端配置方法如下： 
    (1) 修改 /etc/exports, 增加共享目录    /export/home/sunky 10.140.133.23(rw) 
   /export/home/sunky1 *(rw)    /export/home/sunky2 linux-client(rw)  
   注： /export/home/ 目录下的 sunky 、 sunky1 、 sunky2 是准备共享的目录， 10.140.133.23 、 * 、 linux- client 是被允许挂接此共享 linux 客户机的 IP 地址或主机名。如果要使用主机名 linux-client 必须在服务端主机 /etc/hosts 文件里增加 linux-client 主机 ip 定义。
格式如下： 
    10.140.133.23 linux-client     (2) 启动与停止 NFS 服务 
    /etc/rc.d/init.d/portmap start ( 在 REDHAT 中 PORTMAP 是默认启动的 )  
    /etc/rc.d/init.d/nfs start 启动 NFS 服务     /etc/rc.d/init.d/nfs stop 停止 NFS 服务 
   注：若修改 /etc/export 文件增加新的共享，应先停止 NFS 服务，再启动 NFS 服务方能
使新增加的共享起作用。使用命令 exportfs -rv 也可以达到同样的效果。    3 、 linux 客户端挂接 (mount) 其他 linux 系统或 UNIX 系统的 NFS 共享 
    # mkdir –p /mnt/nfs 
   注：建立一个目录用来作挂接点 (mount point) 
    #mount -t nfs -o rw 10.140.133.9:/export/home/sunky /mnt/nfs 



 


   注：这里我们假设 10.140.133.9 是 NFS 服务端的主机 IP 地址，当然这里也可以使用主机名，但必须在本机 /etc/hosts 文件里增加服务端 ip 定义。 /export/home/sunky 为服务端共享
的目录。 
  如此就可以在 linux 客户端通过 /mnt/nfs 来访问其它 linux 系统或 UNIX 系统以 NFS 方式共享出来的文件了。以上操作在 redhat as server 3 、 redflag server4.1 、 suse server 9 以及 
Solaris 7 、 Solaris 8 、 Solaris 9 for x86&amp;sparc环境下测试通过。 
 
</rich_text></node><node name="计划任务工具cron用法详解" prog_lang="custom-colors" readonly="False" tags="" unique_id="78"><rich_text>linux下大名鼎鼎的计划任务工具crontab的使用介绍baidu、google上多得让人眼花缭乱，本着“天下文章一大抄”的觉悟，加上本人日常工作中总结的使用经验，索性推出这篇笔记式文章，以供遗忘时翻阅之用。
cron是linux系统下一个自动执行指定任务的程序，即包含“时间”、“路径”、“自动执行脚本”等要素，例如我想通过自动执行脚本“newcopy.sh”在凌晨4点整将/usr/local/下的“new”目录复制到/home下的“superman”目录。
cron程序在安装系统后一般会自动随系统启动，无需每次人手启动，若无意中将其自启动取消了，可以通过ntsysv或chkconfig将其添加到系统自启动列表中，如下：

</rich_text><rich_text scale="h2" weight="heavy">一、cron服务介绍</rich_text><rich_text>
       cron把命令行保存在/etc/crontab文件里，每个系统用户如果设置了自己的cron，那都会在/var/spool/cron下面有对应用户名的crontab。无论编写/var/spool/cron目录内的文件还是/etc/crontab文件，都能让cron准确无误地执行安排的任务，区别是/var/spool/cron下各系统用户的crontab文件是对应</rich_text><rich_text underline="single">用户级别</rich_text><rich_text>的的任务配置，而/var/crontab文件则是对应</rich_text><rich_text underline="single">系统级别</rich_text><rich_text>的任务配置。cron服务器每分钟读取一次/var/crontab/cron目录内的所有文件和/etc/crontab文件。

</rich_text><rich_text scale="h2" weight="heavy">二、使用cron服务执行计划任务</rich_text><rich_text>
#service crond start/restart/stop
启动/重启/关闭cron服务

#crontab -l
浏览当前用户的crontab，即浏览已存在的计划任务列表

#crontab -e
编辑当前用户crontab，如之前从未编辑过crontab文件，那么crontab是一个空白文件，我们可以完全手工编写我们所需要的计划任务列表，下面详细介绍计划任务列表的写法。

以下是几个例子：
1)9 9 * * * /usr/local/bin/cvsb
2)3 3 * * 0 /usr/local/bin/qbbak
3)* */6 * * * /usr/local/bin/esbbak
4)20,30 * * * /usr/local/bin/esbak
5)* 23 * * 2-5 /usr/local/bin/esbbak

六个字段对应的含义如下：
  9         9        *        *        *
分钟     小时   日期   月份    星期

1)表示每天早上9点9分执行目录/usr/local/bin/中的cvsb文件
2)表示每周日凌晨3时3分执行目录/usr/local/bin中的qbbak文件
3)表示每6小时执行一次，执行时间从第一次执行起计算，当然也可以自定义执行时间，比如0 */6 * * *那程序就会在整点执行
4)表示在每小时20分和30分时执行
5)表示在星期二到星期五每天的23点执行

上面简单介绍了cron的一些基本用法，这个东东的时间组合可不是一般的强～可以复杂到你无法想象，我们只要掌握少许基本就可以满足日常需求了。

</rich_text><rich_text scale="h2" weight="heavy">三、cron进阶使用</rich_text><rich_text>
</rich_text><rich_text scale="h3" weight="heavy">1.避免cron产生垃圾文件</rich_text><rich_text>
细心的朋友可能会发现系统/var/spool/clientmqueue/目录下往往存有大量文件，原因是系统中有用户开启了cron，而cron中执行的程序有输出内容，输出内容会以邮件形式发给cron的用户，而sendmail（系统自带的邮件服务器）没有启动所以就产生了这些文件。

这时可以使用输出重定向，即在计划任务后加上&gt; /dev/null 2&gt;&amp;1
例：
9 9 * * * /usr/local/bin/cvsb &gt; /dev/null 2&gt;&amp;1

2&gt;&amp;1：把错误重定向到输出要送到的地方。
把命令的执行结果重定向到/dev/null，即把产生的错误抛弃。
   
</rich_text><rich_text scale="h3" weight="heavy">2.一种经常碰到的情况，需要执行的文件没问题，但通过cron就是死活不能正确执行，这时我们可以通过输出重定向将cron的执行过程输出到一个文件，
通过分析执行过程来寻找错误的原因</rich_text><rich_text>

例：
9 9 * * * /usr/local/bin/cvsb &gt; /var/log/crontab_log 2&gt;&amp;1
上例将cron的执行过程输出到一个文本文件crontab_log，这个文件可以随便手动建一个，放在哪都行，重定向目录写对就Ok。
</rich_text></node><node name="Ubuntu下管理启动服务" prog_lang="custom-colors" readonly="False" tags="" unique_id="1"><rich_text>方式一： 
查看服务列表代码  
service --status-all  

启动开机时的服务代码  
sudo update-rc.d -f myservice default   

停止开机时的服务代码  
sudo update-rc.d -f myservice remove   

方式二：  
安装代码  
sudo install sysv-rc-conf   

执行代码  
sudo sysv-rc-conf  </rich_text></node><node name="OpenGrok的安装及使用 " prog_lang="custom-colors" readonly="False" tags="" unique_id="91"><rich_text>Opengrok 用于管理多项目的代码非常方便。本文以Opengrok 0.12.1来讲解在RedHat Enterprise Linux上的部署
       http://opengrok.github.io/OpenGrok/    
   
  软件依赖准备:
       1 JAVA                           </rich_text><rich_text link="webs http://www.oracle.com/technetwork/java//">http://www.oracle.com/technetwork/java//</rich_text><rich_text>   
       2.Tomcat                      </rich_text><rich_text link="webs http://tomcat.apache.org/">http://tomcat.apache.org/</rich_text><rich_text>   
       3.Exuberant Ctags        </rich_text><rich_text link="webs http://ctags.sourceforge.net/">http://ctags.sourceforge.net/</rich_text><rich_text>   
  
</rich_text><rich_text scale="h2" weight="heavy">下载安装</rich_text><rich_text>
  1. 上Opengrok官网下载安装包 OpenGrok-0.12.1.tar.gz
  2. root 用户登录 linux server
  3. 将OpenGrok-0.12.1.tar.gz 通过FTP上传到linux server
  4. 解压tar包到安装目录即完成安装 ，一般安装在/opt/opengrok-0.12.1
  tar -xvf OpenGrok-0.12.1.tar.gz   
      
    
</rich_text><rich_text scale="h2" weight="heavy">OpenGrok使用</rich_text><rich_text>
利用OpenGrok 建立源代码索引前需要启动tomcat。OpenGrok的配置文件为 /opt/opengrok-0.12.1/etc/configuration.xml
      
</rich_text><rich_text scale="h3" weight="heavy">配置准备:</rich_text><rich_text scale="h3">  </rich_text><rich_text>
    </rich_text><rich_text weight="heavy">1. 配置必须的环境变量</rich_text><rich_text>
     export JAVA_HOME=/opt/java    
     export OPENGROK_TOMCAT_BASE=/opt/tomcat/    
     export OPENGROK_APP_SERVER=Tomcat    
     export OPENGROK_INSTANCE_BASE=/opt/opengrok-0.12.1    
     export LANG=zh_CN.gb2312  
     (可选，但中文编码与源代码不一致会产生乱码)    
         
    </rich_text><rich_text weight="heavy">2.  配置源代码目录</rich_text><rich_text>
     vi /opt/opengrok-0.12.1/bin/OpenGrok
     找到 SRC_ROOT 配置， 将值设为源代码目录
      
</rich_text><rich_text scale="h3" weight="heavy">建议索引:</rich_text><rich_text scale="h3">  </rich_text><rich_text>
    </rich_text><rich_text weight="heavy">1. 源码opengrok网站发布</rich_text><rich_text>
    ./opt/opengrok-0.12.1/bin/OpenGrok deploy
      
    </rich_text><rich_text weight="heavy">2. 索引源代码</rich_text><rich_text>       
    ./opt/opengrok-0.12.1/bin/OpenGrok index    
         
    完工～ 登录http://xxx.xxx.xxx.xxx:8080/source 即可查看源码
      </rich_text></node></node><node name="libevent事件处理框架分析" prog_lang="custom-colors" readonly="False" tags="" unique_id="38"><rich_text>libevent最大的特点就是封装了对以下三种事件的响应:IO事件,定时器事件,信号事件.这里就分析libevent如果做到这一点的,在libevent中还包括一些其他的功能(如缓冲区),但是我这里就重点讲解这一部分了.

事件原型,简单看一看用于封装事件的结构体定义:
</rich_text><rich_text foreground="#0000ff">struct</rich_text><rich_text foreground="#000000"> </rich_text><rich_text foreground="#0000ff">event</rich_text><rich_text foreground="#000000"> {
    TAILQ_ENTRY (</rich_text><rich_text foreground="#0000ff">event</rich_text><rich_text foreground="#000000">) ev_next;
    TAILQ_ENTRY (</rich_text><rich_text foreground="#0000ff">event</rich_text><rich_text foreground="#000000">) ev_active_next;
    TAILQ_ENTRY (</rich_text><rich_text foreground="#0000ff">event</rich_text><rich_text foreground="#000000">) ev_signal_next;
    unsigned </rich_text><rich_text foreground="#0000ff">int</rich_text><rich_text foreground="#000000"> min_heap_idx;    </rich_text><rich_text foreground="#008000">/* for managing timeouts */</rich_text><rich_text foreground="#000000">

    </rich_text><rich_text foreground="#0000ff">struct</rich_text><rich_text foreground="#000000"> event_base *ev_base;

    </rich_text><rich_text foreground="#0000ff">int</rich_text><rich_text foreground="#000000"> ev_fd;
    </rich_text><rich_text foreground="#0000ff">short</rich_text><rich_text foreground="#000000"> ev_events;
    </rich_text><rich_text foreground="#0000ff">short</rich_text><rich_text foreground="#000000"> ev_ncalls;
    </rich_text><rich_text foreground="#0000ff">short</rich_text><rich_text foreground="#000000"> *ev_pncalls;    </rich_text><rich_text foreground="#008000">/* Allows deletes in callback */</rich_text><rich_text foreground="#000000">

    </rich_text><rich_text foreground="#0000ff">struct</rich_text><rich_text foreground="#000000"> timeval ev_timeout;

    </rich_text><rich_text foreground="#0000ff">int</rich_text><rich_text foreground="#000000"> ev_pri;        </rich_text><rich_text foreground="#008000">/* smaller numbers are higher priority */</rich_text><rich_text foreground="#000000">

    </rich_text><rich_text foreground="#0000ff">void</rich_text><rich_text foreground="#000000"> (*ev_callback)(</rich_text><rich_text foreground="#0000ff">int</rich_text><rich_text foreground="#000000">, </rich_text><rich_text foreground="#0000ff">short</rich_text><rich_text foreground="#000000">, </rich_text><rich_text foreground="#0000ff">void</rich_text><rich_text foreground="#000000"> *arg);
    </rich_text><rich_text foreground="#0000ff">void</rich_text><rich_text foreground="#000000"> *ev_arg;

    </rich_text><rich_text foreground="#0000ff">int</rich_text><rich_text foreground="#000000"> ev_res;        </rich_text><rich_text foreground="#008000">/* result passed to event callback */</rich_text><rich_text foreground="#000000">
    </rich_text><rich_text foreground="#0000ff">int</rich_text><rich_text foreground="#000000"> ev_flags;
};
</rich_text><rich_text>其中的ev_callback就是回调函数,也就是说当所关注的事件发生时所要触发的函数是注册到这个函数指针中的.

1)IO事件:再简单不过了,对select/epoll/poll等之类的调用进行封装即可,所提供的接口无非这几种:
</rich_text><rich_text foreground="#0000ff">struct</rich_text><rich_text foreground="#000000"> eventop {
    </rich_text><rich_text foreground="#0000ff">const</rich_text><rich_text foreground="#000000"> </rich_text><rich_text foreground="#0000ff">char</rich_text><rich_text foreground="#000000"> *name;
    </rich_text><rich_text foreground="#0000ff">void</rich_text><rich_text foreground="#000000"> *(*init)(</rich_text><rich_text foreground="#0000ff">struct</rich_text><rich_text foreground="#000000"> event_base *);
    </rich_text><rich_text foreground="#0000ff">int</rich_text><rich_text foreground="#000000"> (*add)(</rich_text><rich_text foreground="#0000ff">void</rich_text><rich_text foreground="#000000"> *, </rich_text><rich_text foreground="#0000ff">struct</rich_text><rich_text foreground="#000000"> </rich_text><rich_text foreground="#0000ff">event</rich_text><rich_text foreground="#000000"> *);
    </rich_text><rich_text foreground="#0000ff">int</rich_text><rich_text foreground="#000000"> (*del)(</rich_text><rich_text foreground="#0000ff">void</rich_text><rich_text foreground="#000000"> *, </rich_text><rich_text foreground="#0000ff">struct</rich_text><rich_text foreground="#000000"> </rich_text><rich_text foreground="#0000ff">event</rich_text><rich_text foreground="#000000"> *);
    </rich_text><rich_text foreground="#0000ff">int</rich_text><rich_text foreground="#000000"> (*dispatch)(</rich_text><rich_text foreground="#0000ff">struct</rich_text><rich_text foreground="#000000"> event_base *, </rich_text><rich_text foreground="#0000ff">void</rich_text><rich_text foreground="#000000"> *, </rich_text><rich_text foreground="#0000ff">struct</rich_text><rich_text foreground="#000000"> timeval *);
    </rich_text><rich_text foreground="#0000ff">void</rich_text><rich_text foreground="#000000"> (*dealloc)(</rich_text><rich_text foreground="#0000ff">struct</rich_text><rich_text foreground="#000000"> event_base *, </rich_text><rich_text foreground="#0000ff">void</rich_text><rich_text foreground="#000000"> *);
    </rich_text><rich_text foreground="#008000">/* set if we need to reinitialize the event base */</rich_text><rich_text foreground="#000000">
    </rich_text><rich_text foreground="#0000ff">int</rich_text><rich_text foreground="#000000"> need_reinit;
};</rich_text><rich_text>在我看过的很多开源服务器源码(如lighttpd)中都有类似的封装,不是什么新鲜的东西.

2)定时器事件:libevent采用堆数据结构存放所要定时的事件的时间,大家知道堆可以用来实现优先队列,在这里,所有的定时器就放在这样的一个数据结构中了.

3)信号事件:所有的信号都注册回调函数为evsignal_handler(在signal.c中),这个函数的功能就是在某信号被触发的时候将该信号被触发的计数器加1,同时置一个标志位表示有信号被触发.

现在,把所有这些结合起来,看看libevent框架的主循环是如何工作的,用简单的伪码表示:
</rich_text><rich_text foreground="#000000">主循环
      更新当前时间

      将当前时间与存放时间的堆中的时间依次进行比较,由于是采用堆实现的,这里查找相当的快,于是所有可以被触发的定时器事件都从堆中被取出,同时取下的事件被放到一个活动事件的队列中

      调用封装IO操作的dispatch函数,在其中也将被触发的IO事件加入到那个存放活动事件的队列中

      在dispatch的函数中如果信号被触发的标志位被置位,说明有信号被触发,调用evsignal_process函数,这个函数的功能也是把所有被触发的事件放到活动事件的队列中

       好了,现在所有可以被触发的事件都在活动事件队列中了,依次遍历取出来调用它们注册的回调函数就成了.


</rich_text><rich_text>
上面就是libevent处理这三种事件的大体框架.

说一说我认为这个框架存在的缺点:
1) callback函数只能有一个,假设这样一个场景,我需要对某个连接socket同时监控它的可读/可写/超时事件,那么我需要针对同一个socket fd生成三个event对象.

2) 在主循环中,每次都要去查询存放时间的堆看看有没有定时器事件可以被触发,问题在于,很多时候,一个主循环很快就到了下一次,而时间过去的并不多,这次去检查时间是冗余的操作,当然了,由于libevent的定时器是精确到毫秒级别的,所以有这么做的必要,但是在一个真正的服务器中,我怀疑有多少需要精确到微秒级别的事件,所以呢,我觉得这个可以做一个改进,每次更新时间之后跟上一次更新的时间做一个比较,如果超过了一秒(或者把这个间隔改成可以由使用者配置的)再去检查堆上面的时间.
</rich_text></node><node name="memcached 源码阅读笔记" prog_lang="custom-colors" readonly="False" tags="" unique_id="37"><rich_text>阅读 memcached 最好有 libevent 基础, memcached 是基于 libevent 构建起来的. 通由 libevent 提供的事件驱动机制触发 memcached 中的 IO 事件.
个人认为, 阅读源码的起初最忌钻牛角尖, 如头文件里天花乱坠的结构体到底有什么用. 源文件里稀里哗啦的函数是做什么的. 刚开始并没必要事无巨细弄清楚头文件每个类型定义的具体用途; 很可能那些是不紧要的工具函数, 知道他的功能和用法就没他事了.
来看 memcached 内部做了什么事情. memcached 是用 c 语言实现, 必须有一个入口函数main(), memcached 的生命从这里开始.

</rich_text><rich_text scale="h3"> 初始化过程</rich_text><rich_text>
建立并初始化 main_base, 即主线程的事件中心, 这是 libevent 里面的概念, 可以把它理解为事件分发中心.
建立并初始化 memcached 内部容器数据结构.
建立并初始化空闲连接结构体数组.
建立并初始化线程结构数组, 指定每个线程的入口函数是worker_libevent(), 并创建工作线程. 从worder_libevent()的实现来看, 工作线程都会调用event_base_loop()进入自己的事件循环.
根据 memcached 配置, 开启以下两种服务模式中的一种:
1. 以 UNIX 域套接字的方式接受客户的请求
2. 以 TCP/UDP 套接字的方式接受客户的请求
memcached 有可配置的两种模式: UNIX 域套接字和 TCP/UDP, 允许客户端以两种方式向 memcached  发起请求. 客户端和服务器在同一个主机上的情况下可以用 UNIX 域套接字, 否则可以采用 TCP/UDP 的模式. 两种模式是不兼容的.  特别的, 如果是 UNIX 域套接字或者 TCP 模式, 需要建立监听套接字, 并在事件中心注册了读事件, 回调函数是event_handler(), 我们会看到所有的连接都会被注册回调函数是event_handler().
调用event_base_loop()开启 libevent 的事件循环. 到此, memcached 服务器的工作正式进入了工作. 如果遇到致命错误或者客户明令结束 memcached, 那么才会进入接下来的清理工作.

</rich_text><rich_text scale="h3"> UNIX 域套接字和 UDP/TCP 工作模式</rich_text><rich_text>
在初始化过程中介绍了这两种模式, memcached 这么做为的是让其能更加可配置. TCP/UDP 自不用说, UNIX 域套接字有独特的优势:
1. 在同一台主机上进行通信时，是不同主机间通信的两倍
2. UNIX 域套接口可以在同一台主机上，不同进程之间传递套接字描述符
3. UNIX 域套接字可以向服务器提供客户的凭证（用户id或者用户组id）
其他关于 UNIX 域套接字优缺点的请参看: </rich_text><rich_text link="webs https://pangea.stanford.edu/computing/UNIX/overview/advantages.php">https://pangea.stanford.edu/computing/UNIX/overview/advantages.php</rich_text><rich_text>

</rich_text><rich_text scale="h3"> 工作线程管理和线程调配方式</rich_text><rich_text>
在thread_init(),setup_thread()函数的实现中,  memcached 的意图是很清楚的. 每个线程都有自己独有的连接队列, 即 CQ, 注意这个连接队列中的对象并不是一个或者多个  memcached 命令, 它对应一个客户! 一旦一个客户交给了一个线程, 它的余生就属于这个线程了! 线程只要被唤醒就立即进入工作状态,  将自己 CQ 队列的任务所有完完成. 当然, 每一个工作线程都有自己的 libevent 事件中心.
很关键的线索是thread_init()的实现中, 每个工作线程都创建了读写管道, 所能给我们的提示是: 只要利用 libevent 在工作线程的事件中心注册读管道的读事件, 就可以按需唤醒线程, 完成工作, 很有意思, 而setup_thread()的工作正是读管道的读事件被注册到线程的事件中心, 回调函数是thread_libevent_process().thread_libevent_process()的工作就是从工作线程自己的 CQ 队列中取出任务执行, 而往工作线程工作队列中添加任务的是dispatch_conn_new(), 此函数一般由主线程调用. 下面是主线程和工作线程的工作流程:
</rich_text><rich_text justification="left"></rich_text><rich_text>
前几天在微博上, 看到 @高端小混混 的微博, 转发了:
@高端小混混
多任务并行处理的两种方式，一种是将所有的任务用队列存储起来，每个工作者依次去拿一个来处理，直到做完所有的&gt;任务为止。另一种是将任务平 均分给工作者，先做完任务的工作者就去别的工作者那里拿一些任务来做，同样直到所有任务做完为止。两种方式的结果如何？根据自己的场景写码验证。
memcached 所采用的模式就是这里所说的第二种! memcached 的线程分配模式是：一个主线程和多个工作线程。主线程负责初始化和将接收的请求分派给工作线程，工作线程负责接收客户的命令请求和回复客户。

</rich_text><rich_text scale="h3"> 存储容器</rich_text><rich_text>
memcached 是做缓存用的, 内部肯定有一个容器. 回到main()中, 调用assoc_init()初 始化了容器--hashtable, 采用头插法插入新数据, 因为头插法是最快的. memcached 只做了一级的索引, 即 hash;  接下来的就靠 memcmp() 在链表中找数据所在的位置. memcached 容器管理的接口主要在 item.h .c 中.
</rich_text><rich_text justification="left"></rich_text><rich_text>

</rich_text><rich_text scale="h3"> 连接管理</rich_text><rich_text>
每个连接都会建立一个连接结构体与之对应. main()中会调用conn_init()建立连接结构体数组. 连接结构体 struct conn 记录了连接套接字, 读取的数据, 将要写入的数据, libevent event 结构体以及所属的线程信息.
当有新的连接时, 主线程会被唤醒, 主线程选定一个工作线程 thread0, 在 thread0 的写管道中写入数据, 特别的如果是接受新的连接而不是接受新的数据, 写入管道的数据是字符 'c'. 工作线程因管道中有数据可读被唤醒,thread_libevent_process()被调用, 新连接套接字被注册了event_handler()回调函数, 这些工作在conn_new()中完成. 因此, 客户端有命令请求的时候(譬如发起 get key 命令), 工作线程都会被触发调用event_handler().
当出现致命错误或者客户命令结束服务(quit 命令), 关于此连接的结构体内部的数据会被释放(譬如曾经读取的数据), 但结构体本身不释放, 等待下一次使用. 如果有需要, 连接结构体数组会指数自增.

</rich_text><rich_text scale="h3"> 一个请求的工作流程</rich_text><rich_text>
memcached 服务一个客户的时候, 是怎么一个过程, 试着去调试模拟一下. 当一个客户向 memcached 发起请求时, 主线程会被唤醒, 接受请求. 接下来的工作在连接管理中有说到.
客户已经与 memcached 服务器建立了连接, 客户在终端(黑框框)敲击 get key + 回车键, 一个请求包就发出去了. 从连接管理中已经了解到所有连接套接字都会被注册回调函数为event_handler(), 因此event_handler()会被触发调用.
void event_handler(const int fd, const short which, void *arg) {
    conn *c;

    c = (conn *)arg;
    assert(c != NULL);

    c-&gt;which = which;

    /* sanity */
    if (fd != c-&gt;sfd) {
        if (settings.verbose &gt; 0)
            fprintf(stderr, &quot;Catastrophic: event fd doesn't match conn fd!\n&quot;);
        conn_close(c);
        return;
    }

    drive_machine(c);

    /* wait for next event */
    return;
}
event_handler()调用了drive_machine().drive_machine()是请求处理的开端, 特别的当有新的连接时,  listen socket 也是有请求的, 所以建立新的连接也会调用drive_machine(), 这在连接管理有提到过. 下面是drive_machine()函数的骨架:
// 请求的开端. 当有新的连接的时候 event_handler() 会调用此函数.
static void drive_machine(conn *c) {
    bool stop = false;
    int sfd, flags = 1;
    socklen_t addrlen;
    struct sockaddr_storage addr;
    int nreqs = settings.reqs_per_event;
    int res;
    const char *str;

    assert(c != NULL);

    while (!stop) {
        // while 能保证一个命令被执行完成或者异常中断(譬如 IO 操作次数超出了一定的限制)

        switch(c-&gt;state) {
        // 正在连接, 还没有 accept
        case conn_listening:

        // 等待新的命令请求
        case conn_waiting:

        // 读取数据
        case conn_read:

        // 尝试解析命令
        case conn_parse_cmd :

        // 新的命令请求, 只是负责转变 conn 的状态
        case conn_new_cmd:

        // 真正执行命令的地方
        case conn_nread:

        // 读取所有的数据, 抛弃!!! 一般出错的情况下会转换到此状态
        case conn_swallow:

        // 数据回复
        case conn_write:

        case conn_mwrite:

        // 连接结束. 一般出错或者客户显示结束服务的情况下回转换到此状态
        case conn_closing:
        }
    }
    return;
}
通过修改连接结构体状态 struct conn.state 执行相应的操作, 从而完成一个请求, 完成后 stop 会被设置为 true,  一个命令只有执行结束(无论结果如何)才会跳出这个循环. 我们看到 struct conn 有好多种状态, 一个正常执行的命令状态的转换是:
 conn_new_cmd-&gt;conn_waiting-&gt;conn_read-&gt;conn_parse_cmd-&gt;conn_nread-&gt;conn_mwrite-&gt;conn_close
这个过程任何一个环节出了问题都会导致状态转变为 conn_close. 带着刚开始的问题把从客户连接到一个命令执行结束的过程是怎么样的:
1. 客户connect()后, memcached 服务器主线程被唤醒, 接下来的调用链是event_handler()-&gt;drive_machine()被调用,此时主线程对应 conn 状态为 conn_listining,接受请求
dispatch_conn_new(sfd, conn_new_cmd, EV_READ | EV_PERSIST,DATA_BUFFER_SIZE, tcp_transport);

2. dispatch_conn_new()的工作是往工作线程工作队列中添加任务(前面已经提到过), 所以其中一个沉睡的工作线程会被唤醒,thread_libevent_process()会被工作线程调用, 注意这些机制都是由 libevent 提供的.

3. thread_libevent_process()调用conn_new()新建 struct conn 结构体, 且状态为 conn_new_cmd, 其对应的就是刚才accept()的连接套接字.conn_new()最关键的任务是将刚才接受的套接字在 libevent 中注册一个事件, 回调函数是event_handler(). 循环继续, 状态 conn_new_cmd 下的操作只是只是将 conn 的状态转换为 conn_waiting;
4. 循环继续, conn_waiting 状态下的操作只是将 conn 状态转换为 conn_read, 循环退出.
5. 此后, 如果客户端不请求服务, 那么主线程和工作线程都会沉睡, 注意这些机制都是由 libevent 提供的.
6. 客户敲击命令「get key」后, 工作线程会被唤醒,event_handler()被调用了. 看! 又被调用了.event_handler()-&gt;drive_machine(), 此时 conn 的状态为 conn_read. conn_read 下的操作就是读数据了, 如果读取成功, conn 状态被转换为 conn_parse_cmd.
7. 循环继续, conn_parse_cmd 状态下的操作就是尝试解析命令: 可能是较为简单的命令, 就直接回复, 状态转换为 conn_close, 循环接下去就结束了; 涉及存取操作的请求会导致 conn_parse_cmd 状态转换为 conn_nread.
8. 循环继续, conn_nread 状态下的操作是真正执行存取命令的地方. 里面的操作无非是在内存寻找数据项, 返回数据. 所以接下来的状态 conn_mwrite, 它的操作是为客户端回复数据.
9. 状态又回到了 conn_new_cmd 迎接新的请求, 直到客户命令结束服务或者发生致命错误.大概就是这么个过程.

</rich_text><rich_text scale="h3"> memcached 的分布式</rich_text><rich_text>
memcached 的服务器没有向其他 memcached 服务器收发数据的功能, 意即就算部署多个 memcached 服务器,  他们之间也没有任何的通信. memcached 所谓的分布式部署也是并非平时所说的分布式. 所说的「分布式」是通过创建多个 memcached  服务器节点, 在客户端添加缓存请求分发器来实现的. memcached 的更多的时候限制是来自网络 I/O, 所以应该尽量减少网络 I/O.
</rich_text><rich_text justification="left"></rich_text><rich_text>
我在 github 上分享了 memcached 的源码剖析注释: </rich_text><rich_text link="webs https://github.com/daoluan/decode-memcached">这里</rich_text><rich_text>

</rich_text><encoded_png char_offset="1821"></encoded_png><encoded_png char_offset="2297"></encoded_png><encoded_png char_offset="6235"></encoded_png></node><node name="Linux-do_exit" prog_lang="custom-colors" readonly="False" tags="" unique_id="62"><rich_text>Linux内核之do_exit 

do_exit(long code)

(1) __exit_mm(tsk): //释放存储空间
(2) sem_exit();          //释放用户空间的“信号量”
(3) __exit_files(tsk); //释放已经打开的文件
(4) __exit_fs(tsk);     //释放用于表示工作目录等结构
(5) exit_sighand(tsk);//释放信号处理表
(6) exit_thread();
(7) tsk-&gt;exit_code = code;
(8) exit_notify();         //通知父进程该“退出”消息，父进程将负责回收这个进程描述符
(9) schedule();

exit_notify

(1)forget_original_parent：因为当前进程要“去世”，那么首先得把它所有的子进程托付给另外一个进程。如果当前这个进程是个线程（有点混乱，确切地说当前这个task实质上表示的是一个线程），那么就托服给线程组的下一个线程。否则，就托付给init进程。
(2)current-&gt;state = TASK_ZOMBIE
(3)do_notify_parent：告知父进程其子进程结束的消息
        send_sig_info(..., tsk-&gt;p_pptr)：向父进程发送信号通知其自身结束的消息
         wake_up_parent(tsk-&gt;p_pptr)： 唤醒父进程使之进入可调度队列（状态变为TASK_RUNNING）

forget_original_parent源码

static inline void forget_original_parent(struct task_struct * father)
{
    struct task_struct * p, *reaper;
    read_lock(&amp;tasklist_lock);
    reaper = next_thread(father);   //这里等价于reaper=father.thread_group-&gt;next（循环链表）
    if (reaper == father)                  //等于的情况说明没有线程组(就自己一个任务)
        reaper = child_reaper;

    for_each_task(p) {
        if (p-&gt;p_opptr == father) {     //等于的情况说明是自己的子进程
            p-&gt;exit_signal = SIGCHLD;
            p-&gt;self_exec_id++;
            p-&gt;p_opptr = reaper;        //将其托付给reaper
            if (p-&gt;pdeath_signal) send_sig(p-&gt;pdeath_signal, p, 0); //告知子进程自己“去世”的消息
        }
    }
    read_unlock(&amp;tasklist_lock);
}

</rich_text></node><node name="/var/log/下各个日志文件 " prog_lang="custom-colors" readonly="False" tags="" unique_id="70"><rich_text>本文简单介绍ubuntu/var/log/下各个日志文件，方便出现错误的时候查询相应的log
 
/var/log/alternatives.log-更新替代信息都记录在这个文件中
/var/log/apport.log -应用程序崩溃记录
/var/log/apt/   -用apt-get安装卸载软件的信息
/var/log/auth.log  -登录认证log
/var/log/boot.log  -包含系统启动时的日志。
 /var/log/btmp    -记录所有失败启动信息
/var/log/Consolekit  - 记录控制台信息
/var/log/cpus     - 涉及所有打印信息的日志
/var/log/dist-upgrade  - dist-upgrade这种更新方式的信息
/var/log/dmesg    -包含内核缓冲信息（kernel ringbuffer）。在系统启动时，显示屏幕上的与硬件有关的信息
/var/log/dpkg.log   - 包括安装或dpkg命令清除软件包的日志。
/var/log/faillog    - 包含用户登录失败信息。此外，错误登录命令也会记录在本文件中。
/var/log/fontconfig.log -与字体配置有关的log。
/var/log/fsck     - 文件系统日志
/var/log/faillog   -包含用户登录失败信息。此外，错误登录命令也会记录在本文件中。
/var/log/hp/
/var/log/install/
/var/log/jokey.log
/var/log/kern.log –包含内核产生的日志，有助于在定制内核时解决问题。
/var/log/lastlog —记录所有用户的最近信息。这不是一个ASCII文件，因此需要用lastlog命令查看内容。
/var/log/faillog –包含用户登录失败信息。此外，错误登录命令也会记录在本文件中。
/var/log/lightdm/
/var/log/mail/ – 这个子目录包含邮件服务器的额外日志。
/var/log/mail.err    -类似于上面的
/var/log/news/
/var/log/pm-powersave.log
/var/log/samba/ –包含由samba存储的信息。
/var/log/syss.log
/var/log/speech-dispacher/
/var/log/udev
/var/log/ufw.log
/var/log/upstart/
/var/log/uattended-upgrades/
/var/log/wtmp —包含登录信息。使用wtmp可以找出谁正在登陆进入系统，谁使用命令显示这个文件或信息等。
/var/log/xorg.*.log— 来自X的日志信息。
</rich_text></node></cherrytree>